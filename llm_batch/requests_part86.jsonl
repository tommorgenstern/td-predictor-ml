{"custom_id": "requests#2e62df456ae82aedb12987a317d29b1a9123633e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 910 | Contributors (this commit): 26 | Commits (past 90d): 1 | Contributors (cumulative): 26 | DMM Complexity: 1.0\n\nDIFF:\n@@ -407,9 +407,6 @@ class HTTPAdapter(BaseAdapter):\n                     # Then, reraise so that we can handle the actual exception.\n                     low_conn.close()\n                     raise\n-                else:\n-                    # All is well, return the connection to the pool.\n-                    conn._put_conn(low_conn)\n \n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e3bdec5934a4bdd00405acbb714aec81980f6097", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 9381 | Contributors (this commit): 148 | Commits (past 90d): 17 | Contributors (cumulative): 148 | DMM Complexity: None\n\nDIFF:\n@@ -828,10 +828,10 @@ class Response(object):\n         http_error_msg = ''\n \n         if 400 <= self.status_code < 500:\n-            http_error_msg = '%s Client Error: %s' % (self.status_code, self.reason)\n+            http_error_msg = '%s Client Error: %s for url: %s' % (self.status_code, self.reason, self.url)\n \n         elif 500 <= self.status_code < 600:\n-            http_error_msg = '%s Server Error: %s' % (self.status_code, self.reason)\n+            http_error_msg = '%s Server Error: %s for url: %s' % (self.status_code, self.reason, self.url)\n \n         if http_error_msg:\n             raise HTTPError(http_error_msg, response=self)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#a560e094279c755b7a9bd5f3d29c303155ed8b27", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 5 | Churn Cumulative: 2236 | Contributors (this commit): 55 | Commits (past 90d): 1 | Contributors (cumulative): 55 | DMM Complexity: 0.0\n\nDIFF:\n@@ -67,7 +67,7 @@ def super_len(o):\n         return len(o.getvalue())\n \n \n-def get_netrc_auth(url):\n+def get_netrc_auth(url, ignore_errors=True):\n     \"\"\"Returns the Requests tuple auth for a given url from netrc.\"\"\"\n \n     try:\n@@ -106,7 +106,8 @@ def get_netrc_auth(url):\n         except (NetrcParseError, IOError):\n             # If there was a parsing error or a permissions issue reading the file,\n             # we'll just skip netrc auth\n-            pass\n+            if not ignore_errors:\n+                raise\n \n     # AppEngine hackiness.\n     except (ImportError, AttributeError):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#884cb7a7fbaea704427ed878dfbdeae3744c9e71", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 2242 | Contributors (this commit): 55 | Commits (past 90d): 2 | Contributors (cumulative): 55 | DMM Complexity: None\n\nDIFF:\n@@ -67,7 +67,7 @@ def super_len(o):\n         return len(o.getvalue())\n \n \n-def get_netrc_auth(url, ignore_errors=True):\n+def get_netrc_auth(url, raise_errors=False):\n     \"\"\"Returns the Requests tuple auth for a given url from netrc.\"\"\"\n \n     try:\n@@ -105,8 +105,8 @@ def get_netrc_auth(url, ignore_errors=True):\n                 return (_netrc[login_i], _netrc[2])\n         except (NetrcParseError, IOError):\n             # If there was a parsing error or a permissions issue reading the file,\n-            # we'll just skip netrc auth\n-            if not ignore_errors:\n+            # we'll just skip netrc auth unless explicitly asked to raise errors.\n+            if raise_errors:\n                 raise\n \n     # AppEngine hackiness.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e9a1e35f8989691afe99407d9b65a67684aa8bac", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 913 | Contributors (this commit): 26 | Commits (past 90d): 2 | Contributors (cumulative): 26 | DMM Complexity: None\n\nDIFF:\n@@ -35,6 +35,7 @@ from .auth import _basic_auth_str\n DEFAULT_POOLBLOCK = False\n DEFAULT_POOLSIZE = 10\n DEFAULT_RETRIES = 0\n+DEFAULT_POOL_TIMEOUT = None\n \n \n class BaseAdapter(object):\n@@ -375,7 +376,7 @@ class HTTPAdapter(BaseAdapter):\n                 if hasattr(conn, 'proxy_pool'):\n                     conn = conn.proxy_pool\n \n-                low_conn = conn._get_conn(timeout=timeout)\n+                low_conn = conn._get_conn(timeout=DEFAULT_POOL_TIMEOUT)\n \n                 try:\n                     low_conn.putrequest(request.method,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#147a305da8c7c5e1fa44d073f97c865f4e81bfd7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 15 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 15 | Churn Cumulative: 5063 | Contributors (this commit): 94 | Commits (past 90d): 5 | Contributors (cumulative): 94 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1224,6 +1224,7 @@ class TestCaseInsensitiveDict(unittest.TestCase):\n         del othercid['spam']\n         assert cid != othercid\n         assert cid == {'spam': 'blueval', 'eggs': 'redval'}\n+        assert cid.__eq__(object()) == NotImplemented\n \n     def test_setdefault(self):\n         cid = CaseInsensitiveDict({'Spam': 'blueval'})\n@@ -1261,6 +1262,20 @@ class TestCaseInsensitiveDict(unittest.TestCase):\n         assert frozenset(cid.keys()) == keyset\n         assert frozenset(cid) == keyset\n \n+    def test_copy(self):\n+        cid = CaseInsensitiveDict({\n+            'Accept': 'application/json',\n+            'user-Agent': 'requests',\n+        })\n+        assert cid == cid.copy()\n+\n+    def test_repr(self):\n+        cid = CaseInsensitiveDict({\n+            'Accept': 'application/json',\n+            'user-Agent': 'requests',\n+        })\n+        assert repr(cid) == \"{'Accept': 'application/json', 'user-Agent': 'requests'}\"\n+\n \n class UtilsTestCase(unittest.TestCase):\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#47e71d1774745543b743bdf570d9d8e7151355e6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 5065 | Contributors (this commit): 94 | Commits (past 90d): 6 | Contributors (cumulative): 94 | DMM Complexity: None\n\nDIFF:\n@@ -1224,7 +1224,7 @@ class TestCaseInsensitiveDict(unittest.TestCase):\n         del othercid['spam']\n         assert cid != othercid\n         assert cid == {'spam': 'blueval', 'eggs': 'redval'}\n-        assert cid.__eq__(object()) == NotImplemented\n+        assert cid != object()\n \n     def test_setdefault(self):\n         cid = CaseInsensitiveDict({'Spam': 'blueval'})\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3b325f1bc5df476c4c4e93c5a742d81e2c5bd950", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 5070 | Contributors (this commit): 94 | Commits (past 90d): 7 | Contributors (cumulative): 94 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1267,7 +1267,10 @@ class TestCaseInsensitiveDict(unittest.TestCase):\n             'Accept': 'application/json',\n             'user-Agent': 'requests',\n         })\n-        assert cid == cid.copy()\n+        cid_copy = cid.copy()\n+        assert cid == cid_copy\n+        cid['changed'] = True\n+        assert cid != cid_copy\n \n     def test_repr(self):\n         cid = CaseInsensitiveDict({\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#5ec7576f2311b5b881ff2426e05b6b35a9aa8bdb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 14 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 14 | Churn Cumulative: 5997 | Contributors (this commit): 108 | Commits (past 90d): 11 | Contributors (cumulative): 122 | DMM Complexity: 0.7777777777777778\n\nDIFF:\n@@ -19,6 +19,7 @@ from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n from .structures import CaseInsensitiveDict\n+from .packages.urllib3.exceptions import ClosedPoolError\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n from .packages.urllib3.exceptions import MaxRetryError\n@@ -421,6 +422,9 @@ class HTTPAdapter(BaseAdapter):\n \n             raise ConnectionError(e, request=request)\n \n+        except ClosedPoolError as e:\n+            raise ConnectionError(e, request=request)\n+\n         except _ProxyError as e:\n             raise ProxyError(e)\n \n\n@@ -1655,6 +1655,16 @@ def test_urllib3_retries():\n     with pytest.raises(RetryError):\n         s.get(httpbin('status/500'))\n \n+\n+def test_urllib3_pool_connection_closed():\n+    s = requests.Session()\n+    s.mount('http://', HTTPAdapter(pool_connections=0, pool_maxsize=0))\n+\n+    try:\n+        s.get(httpbin('status/200'))\n+    except ConnectionError as e:\n+        assert u\"HTTPConnectionPool(host='httpbin.org', port=80): Pool is closed.\" in str(e.message)\n+\n def test_vendor_aliases():\n     from requests.packages import urllib3\n     from requests.packages import chardet\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#b8a297baab501f5818a8041ca6dac15b1d29dafd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 7 | Churn Cumulative: 5087 | Contributors (this commit): 95 | Commits (past 90d): 9 | Contributors (cumulative): 95 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1272,13 +1272,6 @@ class TestCaseInsensitiveDict(unittest.TestCase):\n         cid['changed'] = True\n         assert cid != cid_copy\n \n-    def test_repr(self):\n-        cid = CaseInsensitiveDict({\n-            'Accept': 'application/json',\n-            'user-Agent': 'requests',\n-        })\n-        assert repr(cid) == \"{'Accept': 'application/json', 'user-Agent': 'requests'}\"\n-\n \n class UtilsTestCase(unittest.TestCase):\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#31817b66c6b793689c93a5b558384fb53d0576f7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 6/6 | Churn Δ: 2 | Churn Cumulative: 5089 | Contributors (this commit): 95 | Commits (past 90d): 10 | Contributors (cumulative): 95 | DMM Complexity: None\n\nDIFF:\n@@ -1683,7 +1683,7 @@ def test_urllib3_pool_connection_closed():\n     try:\n         s.get(httpbin('status/200'))\n     except ConnectionError as e:\n-        assert u\"HTTPConnectionPool(host='httpbin.org', port=80): Pool is closed.\" in str(e.message)\n+        assert u\"HTTPConnectionPool(host='httpbin.org', port=80): Pool is closed.\" in str(e)\n \n def test_vendor_aliases():\n     from requests.packages import urllib3\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#276202f51ee9967969eafc1880c4785c80d63d3b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): -7/0 | Churn Δ: 11 | Churn Cumulative: 8115 | Contributors (this commit): 128 | Commits (past 90d): 11 | Contributors (cumulative): 157 | DMM Complexity: 1.0\n\nDIFF:\n@@ -63,12 +63,10 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n     merged_setting.update(to_key_val_list(request_setting))\n \n     # Remove keys that are set to None.\n-    for (k, v) in request_setting.items():\n+    for (k, v) in merged_setting.items():\n         if v is None:\n             del merged_setting[k]\n \n-    merged_setting = dict((k, v) for (k, v) in merged_setting.items() if v is not None)\n-\n     return merged_setting\n \n \n\n@@ -125,6 +125,13 @@ class RequestsTestCase(unittest.TestCase):\n             \"http://example.com/path?key=value#fragment\", params={\"a\": \"b\"}).prepare()\n         assert request.url == \"http://example.com/path?key=value&a=b#fragment\"\n \n+    def test_params_original_order_is_preserved_by_default(self):\n+        param_ordered_dict = collections.OrderedDict((('z', 1), ('a', 1), ('k', 1), ('d', 1)))\n+        session = requests.Session()\n+        request = requests.Request('GET', 'http://example.com/', params=param_ordered_dict)\n+        prep = session.prepare_request(request)\n+        assert prep.url == 'http://example.com/?z=1&a=1&k=1&d=1'\n+\n     def test_mixed_case_scheme_acceptable(self):\n         s = requests.Session()\n         s.proxies = getproxies()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#75c1776bde6398489c1b6722cf4f612b0061bfc1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 6 | Churn Cumulative: 3025 | Contributors (this commit): 62 | Commits (past 90d): 2 | Contributors (cumulative): 62 | DMM Complexity: None\n\nDIFF:\n@@ -275,6 +275,12 @@ class Session(SessionRedirectMixin):\n       >>> s = requests.Session()\n       >>> s.get('http://httpbin.org/get')\n       200\n+\n+    Or as a context manager::\n+\n+      >>> with requests.Session() as s:\n+      >>>     s.get('http://httpbin.org/get')\n+      200\n     \"\"\"\n \n     __attrs__ = [\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#b6127ca9ca7adf7f5a55c4fe6602afa5744707d0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 4 | Churn Cumulative: 2246 | Contributors (this commit): 55 | Commits (past 90d): 3 | Contributors (cumulative): 55 | DMM Complexity: 0.0\n\nDIFF:\n@@ -499,7 +499,9 @@ def should_bypass_proxies(url):\n     if no_proxy:\n         # We need to check whether we match here. We need to see if we match\n         # the end of the netloc, both with and without the port.\n-        no_proxy = no_proxy.replace(' ', '').split(',')\n+        no_proxy = (\n+            host for host in no_proxy.replace(' ', '').split(',') if host\n+        )\n \n         ip = netloc.split(':')[0]\n         if is_ipv4_address(ip):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f40bd0f7074ccda6be66c77f39442770d7669af0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 6 | Files Changed: 3 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 12 | Churn Cumulative: 5102 | Contributors (this commit): 91 | Commits (past 90d): 8 | Contributors (cumulative): 124 | DMM Complexity: None\n\nDIFF:\n@@ -327,8 +327,8 @@ class HTTPAdapter(BaseAdapter):\n         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n         :param stream: (optional) Whether to stream the request content.\n         :param timeout: (optional) How long to wait for the server to send\n-            data before giving up, as a float, or a (`connect timeout, read\n-            timeout <user/advanced.html#timeouts>`_) tuple.\n+            data before giving up, as a float, or a :ref:`(connect timeout,\n+            read timeout) <timeouts>` tuple.\n         :type timeout: float or tuple\n         :param verify: (optional) Whether to verify SSL certificates.\n         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n\n@@ -27,8 +27,8 @@ def request(method, url, **kwargs):\n     :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': ('filename', fileobj)}``) for multipart encoding upload.\n     :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.\n     :param timeout: (optional) How long to wait for the server to send data\n-        before giving up, as a float, or a (`connect timeout, read timeout\n-        <user/advanced.html#timeouts>`_) tuple.\n+        before giving up, as a float, or a :ref:`(connect timeout, read\n+        timeout) <timeouts>` tuple.\n     :type timeout: float or tuple\n     :param allow_redirects: (optional) Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.\n     :type allow_redirects: bool\n\n@@ -424,8 +424,8 @@ class Session(SessionRedirectMixin):\n         :param auth: (optional) Auth tuple or callable to enable\n             Basic/Digest/Custom HTTP Auth.\n         :param timeout: (optional) How long to wait for the server to send\n-            data before giving up, as a float, or a (`connect timeout, read\n-            timeout <user/advanced.html#timeouts>`_) tuple.\n+            data before giving up, as a float, or a :ref:`(connect timeout,\n+            read timeout) <timeouts>` tuple.\n         :type timeout: float or tuple\n         :param allow_redirects: (optional) Set to True by default.\n         :type allow_redirects: bool\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4947cd01ae4ebcfb1ce97345d1e9232c331331da", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 9 | Churn Cumulative: 3038 | Contributors (this commit): 63 | Commits (past 90d): 4 | Contributors (cumulative): 63 | DMM Complexity: None\n\nDIFF:\n@@ -62,10 +62,11 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n     merged_setting = dict_class(to_key_val_list(session_setting))\n     merged_setting.update(to_key_val_list(request_setting))\n \n-    # Remove keys that are set to None.\n-    for (k, v) in merged_setting.items():\n-        if v is None:\n-            del merged_setting[k]\n+    # Remove keys that are set to None. Extract keys first to avoid altering\n+    # the dictionary during iteration.\n+    none_keys = [k for (k, v) in merged_setting.items() if v is None]\n+    for key in none_keys:\n+        del merged_setting[key]\n \n     return merged_setting\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9d88810d52a2f70bba96b6f0360daa99c0531969", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 922 | Contributors (this commit): 29 | Commits (past 90d): 5 | Contributors (cumulative): 29 | DMM Complexity: None\n\nDIFF:\n@@ -310,7 +310,6 @@ class HTTPAdapter(BaseAdapter):\n         :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.\n \n         :param proxies: The url of the proxy being used for this request.\n-        :param kwargs: Optional additional keyword arguments.\n         \"\"\"\n         headers = {}\n         username, password = get_auth_from_url(proxy)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#48fe34447de02bfe9827321fafe3277741d77c38", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 925 | Contributors (this commit): 30 | Commits (past 90d): 6 | Contributors (cumulative): 30 | DMM Complexity: 1.0\n\nDIFF:\n@@ -239,7 +239,8 @@ class HTTPAdapter(BaseAdapter):\n         :param proxies: (optional) A Requests-style dictionary of proxies used on this request.\n         \"\"\"\n         proxies = proxies or {}\n-        proxy = proxies.get(urlparse(url.lower()).scheme)\n+        u = urlparse(url.lower())\n+        proxy = proxies.get(u.scheme+'://'+u.hostname, proxies.get(u.scheme))\n \n         if proxy:\n             proxy = prepend_scheme_if_needed(proxy, 'http')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#8b03cd96cbdc79666ae49e1b0b63b53ddb4c6bdf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 3042 | Contributors (this commit): 64 | Commits (past 90d): 5 | Contributors (cumulative): 64 | DMM Complexity: None\n\nDIFF:\n@@ -410,8 +410,8 @@ class Session(SessionRedirectMixin):\n         :param url: URL for the new :class:`Request` object.\n         :param params: (optional) Dictionary or bytes to be sent in the query\n             string for the :class:`Request`.\n-        :param data: (optional) Dictionary or bytes to send in the body of the\n-            :class:`Request`.\n+        :param data: (optional) Dictionary, bytes, or file-like object to send\n+            in the body of the :class:`Request`.\n         :param json: (optional) json to send in the body of the\n             :class:`Request`.\n         :param headers: (optional) Dictionary of HTTP Headers to send with the\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#66567e037b5805dc81b80745bf2468a568aa04f3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 5102 | Contributors (this commit): 96 | Commits (past 90d): 8 | Contributors (cumulative): 96 | DMM Complexity: None\n\nDIFF:\n@@ -17,7 +17,9 @@ import pytest\n from requests.adapters import HTTPAdapter\n from requests.auth import HTTPDigestAuth, _basic_auth_str\n from requests.compat import (\n-    Morsel, cookielib, getproxies, str, urljoin, urlparse, is_py3, builtin_str)\n+    Morsel, cookielib, getproxies, str, urljoin, urlparse, is_py3,\n+    builtin_str, OrderedDict\n+    )\n from requests.cookies import cookiejar_from_dict, morsel_to_cookie\n from requests.exceptions import (ConnectionError, ConnectTimeout,\n                                  InvalidSchema, InvalidURL, MissingSchema,\n@@ -126,7 +128,7 @@ class RequestsTestCase(unittest.TestCase):\n         assert request.url == \"http://example.com/path?key=value&a=b#fragment\"\n \n     def test_params_original_order_is_preserved_by_default(self):\n-        param_ordered_dict = collections.OrderedDict((('z', 1), ('a', 1), ('k', 1), ('d', 1)))\n+        param_ordered_dict = OrderedDict((('z', 1), ('a', 1), ('k', 1), ('d', 1)))\n         session = requests.Session()\n         request = requests.Request('GET', 'http://example.com/', params=param_ordered_dict)\n         prep = session.prepare_request(request)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#22075f02d0f41ee8d6e7328361b59c3b2d54bdaf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 6 | Churn Cumulative: 931 | Contributors (this commit): 30 | Commits (past 90d): 7 | Contributors (cumulative): 30 | DMM Complexity: 1.0\n\nDIFF:\n@@ -239,8 +239,10 @@ class HTTPAdapter(BaseAdapter):\n         :param proxies: (optional) A Requests-style dictionary of proxies used on this request.\n         \"\"\"\n         proxies = proxies or {}\n-        u = urlparse(url.lower())\n-        proxy = proxies.get(u.scheme+'://'+u.hostname, proxies.get(u.scheme))\n+        urlparts = urlparse(url.lower())\n+        proxy = proxies.get(urlparts.scheme+'://'+urlparts.hostname)\n+        if proxy is None:\n+            proxy = proxies.get(urlparts.scheme)\n \n         if proxy:\n             proxy = prepend_scheme_if_needed(proxy, 'http')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d7a3aa618839e304c324e6092953131a1f43c647", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 8 | Churn Cumulative: 939 | Contributors (this commit): 30 | Commits (past 90d): 8 | Contributors (cumulative): 30 | DMM Complexity: 1.0\n\nDIFF:\n@@ -278,10 +278,12 @@ class HTTPAdapter(BaseAdapter):\n         :param proxies: A dictionary of schemes to proxy URLs.\n         \"\"\"\n         proxies = proxies or {}\n-        scheme = urlparse(request.url).scheme\n-        proxy = proxies.get(scheme)\n+        urlparts = urlparse(request.url.lower())\n+        proxy = proxies.get(urlparts.scheme+'://'+urlparts.hostname)\n+        if proxy is None:\n+            proxy = proxies.get(urlparts.scheme)\n \n-        if proxy and scheme != 'https':\n+        if proxy and urlparts.scheme != 'https':\n             url = urldefragauth(request.url)\n         else:\n             url = request.path_url\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#2c8721540ad70cadb3c71912b1ab8577f2f8fd53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 5 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 3052 | Contributors (this commit): 65 | Commits (past 90d): 6 | Contributors (cumulative): 65 | DMM Complexity: None\n\nDIFF:\n@@ -299,9 +299,9 @@ class Session(SessionRedirectMixin):\n         #: :class:`Request <Request>`.\n         self.auth = None\n \n-        #: Dictionary mapping protocol to the URL of the proxy (e.g.\n-        #: {'http': 'foo.bar:3128'}) to be used on each\n-        #: :class:`Request <Request>`.\n+        #: Dictionary mapping protocol or protocol and host to the URL of the proxy\n+        #: (e.g. {'http': 'foo.bar:3128', 'http://host.name': 'foo.bar:4012'}) to\n+        #: be used on each :class:`Request <Request>`.\n         self.proxies = {}\n \n         #: Event-handling hooks.\n@@ -428,8 +428,8 @@ class Session(SessionRedirectMixin):\n         :type timeout: float or tuple\n         :param allow_redirects: (optional) Set to True by default.\n         :type allow_redirects: bool\n-        :param proxies: (optional) Dictionary mapping protocol to the URL of\n-            the proxy.\n+        :param proxies: (optional) Dictionary mapping protocol or protocol and\n+            hostname to the URL of the proxy.\n         :param stream: (optional) whether to immediately download the response\n             content. Defaults to ``False``.\n         :param verify: (optional) if ``True``, the SSL cert will be verified.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#500f15da1fe54e3773be42f7770680d1f86b699f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 13 | Files Changed: 2 | Hunks: 4 | Methods Changed: 3 | Complexity Δ (Sum/Max): -3/1 | Churn Δ: 26 | Churn Cumulative: 3211 | Contributors (this commit): 79 | Commits (past 90d): 13 | Contributors (cumulative): 86 | DMM Complexity: 0.0\n\nDIFF:\n@@ -17,7 +17,8 @@ from .packages.urllib3.util import Timeout as TimeoutSauce\n from .packages.urllib3.util.retry import Retry\n from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n-                    prepend_scheme_if_needed, get_auth_from_url, urldefragauth)\n+                    prepend_scheme_if_needed, get_auth_from_url, urldefragauth,\n+                    select_proxy)\n from .structures import CaseInsensitiveDict\n from .packages.urllib3.exceptions import ConnectTimeoutError\n from .packages.urllib3.exceptions import HTTPError as _HTTPError\n@@ -238,11 +239,7 @@ class HTTPAdapter(BaseAdapter):\n         :param url: The URL to connect to.\n         :param proxies: (optional) A Requests-style dictionary of proxies used on this request.\n         \"\"\"\n-        proxies = proxies or {}\n-        urlparts = urlparse(url.lower())\n-        proxy = proxies.get(urlparts.scheme+'://'+urlparts.hostname)\n-        if proxy is None:\n-            proxy = proxies.get(urlparts.scheme)\n+        proxy = select_proxy(url, proxies)\n \n         if proxy:\n             proxy = prepend_scheme_if_needed(proxy, 'http')\n@@ -277,13 +274,8 @@ class HTTPAdapter(BaseAdapter):\n         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n         :param proxies: A dictionary of schemes to proxy URLs.\n         \"\"\"\n-        proxies = proxies or {}\n-        urlparts = urlparse(request.url.lower())\n-        proxy = proxies.get(urlparts.scheme+'://'+urlparts.hostname)\n-        if proxy is None:\n-            proxy = proxies.get(urlparts.scheme)\n-\n-        if proxy and urlparts.scheme != 'https':\n+        proxy = select_proxy(request.url, proxies)\n+        if proxy and not request.url.lower().startswith('https'):\n             url = urldefragauth(request.url)\n         else:\n             url = request.path_url\n\n@@ -537,6 +537,14 @@ def get_environ_proxies(url):\n     else:\n         return getproxies()\n \n+def select_proxy(url, proxies):\n+    \"\"\"Select a proxy, if applicable.\"\"\"\n+    proxies = proxies or {}\n+    urlparts = urlparse(url.lower())\n+    proxy = proxies.get(urlparts.scheme+'://'+urlparts.hostname)\n+    if proxy is None:\n+        proxy = proxies.get(urlparts.scheme)\n+    return proxy\n \n def default_user_agent(name=\"python-requests\"):\n     \"\"\"Return a string representing the default user agent.\"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c80121df91997535f4c27f9c44c7aca10ad39af6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 3219 | Contributors (this commit): 79 | Commits (past 90d): 15 | Contributors (cumulative): 86 | DMM Complexity: None\n\nDIFF:\n@@ -272,7 +272,7 @@ class HTTPAdapter(BaseAdapter):\n         :class:`HTTPAdapter <requests.adapters.HTTPAdapter>`.\n \n         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n-        :param proxies: A dictionary of schemes to proxy URLs.\n+        :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs.\n         \"\"\"\n         proxy = select_proxy(request.url, proxies)\n         if proxy and not request.url.lower().startswith('https'):\n\n@@ -538,7 +538,11 @@ def get_environ_proxies(url):\n         return getproxies()\n \n def select_proxy(url, proxies):\n-    \"\"\"Select a proxy, if applicable.\"\"\"\n+    \"\"\"Select a proxy for the url, if applicable.\n+\n+    :param url: The url being for the request\n+    :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs\n+    \"\"\"\n     proxies = proxies or {}\n     urlparts = urlparse(url.lower())\n     proxy = proxies.get(urlparts.scheme+'://'+urlparts.hostname)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#fb496e4e86cafd78fd510e6d1ecf539c0545bcae", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 9 | Churn Cumulative: 5111 | Contributors (this commit): 97 | Commits (past 90d): 9 | Contributors (cumulative): 97 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1325,6 +1325,15 @@ class UtilsTestCase(unittest.TestCase):\n             'http://localhost.localdomain:5000/v1.0/') == {}\n         assert get_environ_proxies('http://www.requests.com/') != {}\n \n+    def test_select_proxies(self):\n+        \"\"\"Make sure we can select per-host proxies correctly.\"\"\"\n+        from requests.utils import select_proxy\n+        proxies = {'http': 'http://http.proxy',\n+                   'http://some.host': 'http://some.host.proxy'}\n+        assert select_proxy('hTTp://u:p@Some.Host/path', proxies) == 'http://some.host.proxy'\n+        assert select_proxy('hTTp://u:p@Other.Host/path', proxies) == 'http://http.proxy'\n+        assert select_proxy('hTTps://Other.Host', proxies) is None\n+\n     def test_guess_filename_when_int(self):\n         from requests.utils import guess_filename\n         assert None is guess_filename(1)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f3d4480a33b367cf020b0ed447bca10797706094", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 962 | Contributors (this commit): 30 | Commits (past 90d): 11 | Contributors (cumulative): 30 | DMM Complexity: 1.0\n\nDIFF:\n@@ -275,7 +275,8 @@ class HTTPAdapter(BaseAdapter):\n         :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs.\n         \"\"\"\n         proxy = select_proxy(request.url, proxies)\n-        if proxy and not request.url.lower().startswith('https'):\n+        scheme = urlparse(request.url.lower()).scheme\n+        if proxy and scheme != 'https':\n             url = urldefragauth(request.url)\n         else:\n             url = request.path_url\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4c6540898c101a606e1a50e539f01a82163bdae0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 3226 | Contributors (this commit): 79 | Commits (past 90d): 18 | Contributors (cumulative): 86 | DMM Complexity: None\n\nDIFF:\n@@ -275,7 +275,7 @@ class HTTPAdapter(BaseAdapter):\n         :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs.\n         \"\"\"\n         proxy = select_proxy(request.url, proxies)\n-        scheme = urlparse(request.url.lower()).scheme\n+        scheme = urlparse(request.url).scheme\n         if proxy and scheme != 'https':\n             url = urldefragauth(request.url)\n         else:\n\n@@ -544,7 +544,7 @@ def select_proxy(url, proxies):\n     :param proxies: A dictionary of schemes or schemes and hosts to proxy URLs\n     \"\"\"\n     proxies = proxies or {}\n-    urlparts = urlparse(url.lower())\n+    urlparts = urlparse(url)\n     proxy = proxies.get(urlparts.scheme+'://'+urlparts.hostname)\n     if proxy is None:\n         proxy = proxies.get(urlparts.scheme)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#37037607b5f3da32ff1897caca3c38e210f04c37", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 11 | Churn Cumulative: 14503 | Contributors (this commit): 189 | Commits (past 90d): 12 | Contributors (cumulative): 247 | DMM Complexity: 1.0\n\nDIFF:\n@@ -414,7 +414,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         content_type = None\n         length = None\n \n-        if json is not None:\n+        if not data and json is not None:\n             content_type = 'application/json'\n             body = complexjson.dumps(json)\n \n@@ -443,7 +443,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n             if files:\n                 (body, content_type) = self._encode_files(files, data)\n             else:\n-                if data and json is None:\n+                if data:\n                     body = self._encode_params(data)\n                     if isinstance(data, basestring) or hasattr(data, 'read'):\n                         content_type = None\n\n@@ -1062,6 +1062,13 @@ class RequestsTestCase(unittest.TestCase):\n         assert 'application/json' in r.request.headers['Content-Type']\n         assert {'life': 42} == r.json()['json']\n \n+    def test_json_param_post_should_not_override_data_param(self):\n+        r = requests.Request(method='POST', url='http://httpbin.org/post',\n+                             data={'stuff'.encode('utf-8'): 'elixr'},\n+                             json={'music'.encode('utf-8'): 'flute'})\n+        prep = r.prepare()\n+        assert 'stuff=elixr' == prep.body\n+\n     def test_response_iter_lines(self):\n         r = requests.get(httpbin('stream/4'), stream=True)\n         assert r.status_code == 200\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7a0cd16c1a5be16f3df395ee12ed11d0ddde7837", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 14507 | Contributors (this commit): 189 | Commits (past 90d): 14 | Contributors (cumulative): 247 | DMM Complexity: None\n\nDIFF:\n@@ -414,7 +414,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         content_type = None\n         length = None\n \n-        if not data and json is not None:\n+        if data == {} and json is not None:\n             content_type = 'application/json'\n             body = complexjson.dumps(json)\n \n\n@@ -1065,7 +1065,7 @@ class RequestsTestCase(unittest.TestCase):\n     def test_json_param_post_should_not_override_data_param(self):\n         r = requests.Request(method='POST', url='http://httpbin.org/post',\n                              data={'stuff'.encode('utf-8'): 'elixr'},\n-                             json={'music'.encode('utf-8'): 'flute'})\n+                             json={'music': 'flute'})\n         prep = r.prepare()\n         assert 'stuff=elixr' == prep.body\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#1f48a4c9ea81d6b2128a7e1199be2dfbb81b643d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 5122 | Contributors (this commit): 98 | Commits (past 90d): 12 | Contributors (cumulative): 98 | DMM Complexity: None\n\nDIFF:\n@@ -1064,7 +1064,7 @@ class RequestsTestCase(unittest.TestCase):\n \n     def test_json_param_post_should_not_override_data_param(self):\n         r = requests.Request(method='POST', url='http://httpbin.org/post',\n-                             data={'stuff'.encode('utf-8'): 'elixr'},\n+                             data={'stuff': 'elixr'},\n                              json={'music': 'flute'})\n         prep = r.prepare()\n         assert 'stuff=elixr' == prep.body\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#96e8e8b92f177b3672dc5566a1e7cd010c872ccf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 125 | Contributors (this commit): 9 | Commits (past 90d): 1 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -82,7 +82,7 @@ _codes = {\n \n codes = LookupDict(name='status_codes')\n \n-for (code, titles) in list(_codes.items()):\n+for code, titles in _codes.items():\n     for title in titles:\n         setattr(codes, title, code)\n         if not title.startswith('\\\\'):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c5a41269d9795e7c63d72777b7ea360e380544d8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 11 | Files Changed: 1 | Hunks: 7 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 502 | Contributors (this commit): 13 | Commits (past 90d): 1 | Contributors (cumulative): 13 | DMM Complexity: 0.0\n\nDIFF:\n@@ -12,34 +12,26 @@ Available hooks:\n     The response generated from a Request.\n \n \"\"\"\n-\n+from collections import defaultdict\n \n HOOKS = ['response']\n \n \n def default_hooks():\n-    hooks = {}\n-    for event in HOOKS:\n-        hooks[event] = []\n-    return hooks\n+    return dict((event, []) for event in HOOKS)\n \n # TODO: response is the only one\n \n \n def dispatch_hook(key, hooks, hook_data, **kwargs):\n     \"\"\"Dispatches a hook dictionary on a given piece of data.\"\"\"\n-\n     hooks = hooks or dict()\n-\n-    if key in hooks:\n     hooks = hooks.get(key)\n-\n+    if hooks:\n         if hasattr(hooks, '__call__'):\n             hooks = [hooks]\n-\n         for hook in hooks:\n             _hook_data = hook(hook_data, **kwargs)\n             if _hook_data is not None:\n                 hook_data = _hook_data\n-\n     return hook_data\n\\ No newline at end of file\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#649aeaa489d66807a30b9e7ea508589f036ba883", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 505 | Contributors (this commit): 13 | Commits (past 90d): 2 | Contributors (cumulative): 13 | DMM Complexity: None\n\nDIFF:\n@@ -12,11 +12,8 @@ Available hooks:\n     The response generated from a Request.\n \n \"\"\"\n-from collections import defaultdict\n-\n HOOKS = ['response']\n \n-\n def default_hooks():\n     return dict((event, []) for event in HOOKS)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#bf38d5bf529c89be336cd380067faea83b9287f4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 9389 | Contributors (this commit): 150 | Commits (past 90d): 3 | Contributors (cumulative): 150 | DMM Complexity: None\n\nDIFF:\n@@ -192,7 +192,7 @@ class Request(RequestHooksMixin):\n     :param headers: dictionary of headers to send.\n     :param files: dictionary of {filename: fileobject} files to multipart upload.\n     :param data: the body to attach to the request. If a dictionary is provided, form-encoding will take place.\n-    :param json: json for the body to attach to the request (if data is not specified).\n+    :param json: json for the body to attach to the request (if files or data is not specified).\n     :param params: dictionary of URL parameters to append to the URL.\n     :param auth: Auth handler or (user, pass) tuple.\n     :param cookies: dictionary or CookieJar of cookies to attach to this request.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#63b3b9be55e0a836ec312dd2197366c260fd2eb0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 3055 | Contributors (this commit): 66 | Commits (past 90d): 7 | Contributors (cumulative): 66 | DMM Complexity: None\n\nDIFF:\n@@ -325,7 +325,8 @@ class Session(SessionRedirectMixin):\n         #: limit, a :class:`TooManyRedirects` exception is raised.\n         self.max_redirects = DEFAULT_REDIRECT_LIMIT\n \n-        #: Should we trust the environment?\n+        #: Trust environement settings for proxy configuration, default\n+        #: authentication and similar.\n         self.trust_env = True\n \n         #: A CookieJar containing all currently outstanding cookies set on this\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
