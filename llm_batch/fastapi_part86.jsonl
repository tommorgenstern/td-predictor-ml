{"custom_id": "fastapi#081901cc9900d03118ca752ac61cfe77d750539e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 102 | Lines Deleted: 916 | Files Changed: 11 | Hunks: 30 | Methods Changed: 52 | Complexity Δ (Sum/Max): -16/1 | Churn Δ: 1018 | Churn Cumulative: 3552 | Contributors (this commit): 7 | Commits (past 90d): 11 | Contributors (cumulative): 35 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,12 +1,27 @@\n+import importlib\n+\n+import pytest\n from dirty_equals import IsDict, IsOneOf\n from fastapi.testclient import TestClient\n \n-from docs_src.response_model.tutorial003_01 import app\n-\n-client = TestClient(app)\n+from ...utils import needs_py310\n \n \n-def test_post_user():\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial003_01\",\n+        pytest.param(\"tutorial003_01_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.response_model.{request.param}\")\n+\n+    client = TestClient(mod.app)\n+    return client\n+\n+\n+def test_post_user(client: TestClient):\n     response = client.post(\n         \"/user/\",\n         json={\n@@ -24,7 +39,7 @@ def test_post_user():\n     }\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n\n@@ -1,160 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict, IsOneOf\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.response_model.tutorial003_01_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_post_user(client: TestClient):\n-    response = client.post(\n-        \"/user/\",\n-        json={\n-            \"username\": \"foo\",\n-            \"password\": \"fighter\",\n-            \"email\": \"foo@example.com\",\n-            \"full_name\": \"Grave Dohl\",\n-        },\n-    )\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"username\": \"foo\",\n-        \"email\": \"foo@example.com\",\n-        \"full_name\": \"Grave Dohl\",\n-    }\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/user/\": {\n-                \"post\": {\n-                    \"summary\": \"Create User\",\n-                    \"operationId\": \"create_user_user__post\",\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/UserIn\"}\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\"$ref\": \"#/components/schemas/BaseUser\"}\n-                                }\n-                            },\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"BaseUser\": {\n-                    \"title\": \"BaseUser\",\n-                    \"required\": IsOneOf(\n-                        [\"username\", \"email\", \"full_name\"],\n-                        # TODO: remove when deprecating Pydantic v1\n-                        [\"username\", \"email\"],\n-                    ),\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"username\": {\"title\": \"Username\", \"type\": \"string\"},\n-                        \"email\": {\n-                            \"title\": \"Email\",\n-                            \"type\": \"string\",\n-                            \"format\": \"email\",\n-                        },\n-                        \"full_name\": IsDict(\n-                            {\n-                                \"title\": \"Full Name\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Full Name\", \"type\": \"string\"}\n-                        ),\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"UserIn\": {\n-                    \"title\": \"UserIn\",\n-                    \"required\": [\"username\", \"email\", \"password\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"username\": {\"title\": \"Username\", \"type\": \"string\"},\n-                        \"email\": {\n-                            \"title\": \"Email\",\n-                            \"type\": \"string\",\n-                            \"format\": \"email\",\n-                        },\n-                        \"full_name\": IsDict(\n-                            {\n-                                \"title\": \"Full Name\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Full Name\", \"type\": \"string\"}\n-                        ),\n-                        \"password\": {\"title\": \"Password\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,23 +1,38 @@\n+import importlib\n+\n+import pytest\n from fastapi.testclient import TestClient\n \n-from docs_src.response_model.tutorial003_05 import app\n-\n-client = TestClient(app)\n+from ...utils import needs_py310\n \n \n-def test_get_portal():\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial003_05\",\n+        pytest.param(\"tutorial003_05_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.response_model.{request.param}\")\n+\n+    client = TestClient(mod.app)\n+    return client\n+\n+\n+def test_get_portal(client: TestClient):\n     response = client.get(\"/portal\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\"message\": \"Here's your interdimensional portal.\"}\n \n \n-def test_get_redirect():\n+def test_get_redirect(client: TestClient):\n     response = client.get(\"/portal\", params={\"teleport\": True}, follow_redirects=False)\n     assert response.status_code == 307, response.text\n     assert response.headers[\"location\"] == \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n\n@@ -1,103 +0,0 @@\n-import pytest\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.response_model.tutorial003_05_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_get_portal(client: TestClient):\n-    response = client.get(\"/portal\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\"message\": \"Here's your interdimensional portal.\"}\n-\n-\n-@needs_py310\n-def test_get_redirect(client: TestClient):\n-    response = client.get(\"/portal\", params={\"teleport\": True}, follow_redirects=False)\n-    assert response.status_code == 307, response.text\n-    assert response.headers[\"location\"] == \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/portal\": {\n-                \"get\": {\n-                    \"summary\": \"Get Portal\",\n-                    \"operationId\": \"get_portal_portal_get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": False,\n-                            \"schema\": {\n-                                \"title\": \"Teleport\",\n-                                \"type\": \"boolean\",\n-                                \"default\": False,\n-                            },\n-                            \"name\": \"teleport\",\n-                            \"in\": \"query\",\n-                        }\n-                    ],\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,10 +1,25 @@\n+import importlib\n+\n import pytest\n from dirty_equals import IsDict, IsOneOf\n from fastapi.testclient import TestClient\n \n-from docs_src.response_model.tutorial004 import app\n+from ...utils import needs_py39, needs_py310\n \n-client = TestClient(app)\n+\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial004\",\n+        pytest.param(\"tutorial004_py39\", marks=needs_py39),\n+        pytest.param(\"tutorial004_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.response_model.{request.param}\")\n+\n+    client = TestClient(mod.app)\n+    return client\n \n \n @pytest.mark.parametrize(\n@@ -27,13 +42,13 @@ client = TestClient(app)\n         ),\n     ],\n )\n-def test_get(url, data):\n+def test_get(url, data, client: TestClient):\n     response = client.get(url)\n     assert response.status_code == 200, response.text\n     assert response.json() == data\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n\n@@ -1,147 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict, IsOneOf\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.response_model.tutorial004_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-@pytest.mark.parametrize(\n-    \"url,data\",\n-    [\n-        (\"/items/foo\", {\"name\": \"Foo\", \"price\": 50.2}),\n-        (\n-            \"/items/bar\",\n-            {\"name\": \"Bar\", \"description\": \"The bartenders\", \"price\": 62, \"tax\": 20.2},\n-        ),\n-        (\n-            \"/items/baz\",\n-            {\n-                \"name\": \"Baz\",\n-                \"description\": None,\n-                \"price\": 50.2,\n-                \"tax\": 10.5,\n-                \"tags\": [],\n-            },\n-        ),\n-    ],\n-)\n-def test_get(url, data, client: TestClient):\n-    response = client.get(url)\n-    assert response.status_code == 200, response.text\n-    assert response.json() == data\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                                }\n-                            },\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Item\",\n-                    \"operationId\": \"read_item_items__item_id__get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": IsOneOf(\n-                        [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n-                        # TODO: remove when deprecating Pydantic v1\n-                        [\"name\", \"price\"],\n-                    ),\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,147 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict, IsOneOf\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py39\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.response_model.tutorial004_py39 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py39\n-@pytest.mark.parametrize(\n-    \"url,data\",\n-    [\n-        (\"/items/foo\", {\"name\": \"Foo\", \"price\": 50.2}),\n-        (\n-            \"/items/bar\",\n-            {\"name\": \"Bar\", \"description\": \"The bartenders\", \"price\": 62, \"tax\": 20.2},\n-        ),\n-        (\n-            \"/items/baz\",\n-            {\n-                \"name\": \"Baz\",\n-                \"description\": None,\n-                \"price\": 50.2,\n-                \"tax\": 10.5,\n-                \"tags\": [],\n-            },\n-        ),\n-    ],\n-)\n-def test_get(url, data, client: TestClient):\n-    response = client.get(url)\n-    assert response.status_code == 200, response.text\n-    assert response.json() == data\n-\n-\n-@needs_py39\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                                }\n-                            },\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Item\",\n-                    \"operationId\": \"read_item_items__item_id__get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": IsOneOf(\n-                        [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n-                        # TODO: remove when deprecating Pydantic v1\n-                        [\"name\", \"price\"],\n-                    ),\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,18 +1,33 @@\n+import importlib\n+\n+import pytest\n from dirty_equals import IsDict, IsOneOf\n from fastapi.testclient import TestClient\n \n-from docs_src.response_model.tutorial005 import app\n-\n-client = TestClient(app)\n+from ...utils import needs_py310\n \n \n-def test_read_item_name():\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial005\",\n+        pytest.param(\"tutorial005_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.response_model.{request.param}\")\n+\n+    client = TestClient(mod.app)\n+    return client\n+\n+\n+def test_read_item_name(client: TestClient):\n     response = client.get(\"/items/bar/name\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\"name\": \"Bar\", \"description\": \"The Bar fighters\"}\n \n \n-def test_read_item_public_data():\n+def test_read_item_public_data(client: TestClient):\n     response = client.get(\"/items/bar/public\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n@@ -22,7 +37,7 @@ def test_read_item_public_data():\n     }\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n\n@@ -1,166 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict, IsOneOf\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.response_model.tutorial005_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_read_item_name(client: TestClient):\n-    response = client.get(\"/items/bar/name\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\"name\": \"Bar\", \"description\": \"The Bar fighters\"}\n-\n-\n-@needs_py310\n-def test_read_item_public_data(client: TestClient):\n-    response = client.get(\"/items/bar/public\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"name\": \"Bar\",\n-        \"description\": \"The Bar fighters\",\n-        \"price\": 62,\n-    }\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}/name\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                                }\n-                            },\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Item Name\",\n-                    \"operationId\": \"read_item_name_items__item_id__name_get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                }\n-            },\n-            \"/items/{item_id}/public\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                                }\n-                            },\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Item Public Data\",\n-                    \"operationId\": \"read_item_public_data_items__item_id__public_get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                }\n-            },\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": IsOneOf(\n-                        [\"name\", \"description\", \"price\", \"tax\"],\n-                        # TODO: remove when deprecating Pydantic v1\n-                        [\"name\", \"price\"],\n-                    ),\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,18 +1,33 @@\n+import importlib\n+\n+import pytest\n from dirty_equals import IsDict, IsOneOf\n from fastapi.testclient import TestClient\n \n-from docs_src.response_model.tutorial006 import app\n-\n-client = TestClient(app)\n+from ...utils import needs_py310\n \n \n-def test_read_item_name():\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial006\",\n+        pytest.param(\"tutorial006_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.response_model.{request.param}\")\n+\n+    client = TestClient(mod.app)\n+    return client\n+\n+\n+def test_read_item_name(client: TestClient):\n     response = client.get(\"/items/bar/name\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\"name\": \"Bar\", \"description\": \"The Bar fighters\"}\n \n \n-def test_read_item_public_data():\n+def test_read_item_public_data(client: TestClient):\n     response = client.get(\"/items/bar/public\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n@@ -22,7 +37,7 @@ def test_read_item_public_data():\n     }\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n\n@@ -1,166 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict, IsOneOf\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.response_model.tutorial006_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_read_item_name(client: TestClient):\n-    response = client.get(\"/items/bar/name\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\"name\": \"Bar\", \"description\": \"The Bar fighters\"}\n-\n-\n-@needs_py310\n-def test_read_item_public_data(client: TestClient):\n-    response = client.get(\"/items/bar/public\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"name\": \"Bar\",\n-        \"description\": \"The Bar fighters\",\n-        \"price\": 62,\n-    }\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}/name\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                                }\n-                            },\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Item Name\",\n-                    \"operationId\": \"read_item_name_items__item_id__name_get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                }\n-            },\n-            \"/items/{item_id}/public\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                                }\n-                            },\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Item Public Data\",\n-                    \"operationId\": \"read_item_public_data_items__item_id__public_get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                }\n-            },\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": IsOneOf(\n-                        [\"name\", \"description\", \"price\", \"tax\"],\n-                        # TODO: remove when deprecating Pydantic v1\n-                        [\"name\", \"price\"],\n-                    ),\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#3e12918325fcde4cd749ac4c7957fa95ecbc584b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 66 | Lines Deleted: 1659 | Files Changed: 14 | Hunks: 26 | Methods Changed: 40 | Complexity Δ (Sum/Max): -28/1 | Churn Δ: 1725 | Churn Cumulative: 4345 | Contributors (this commit): 4 | Commits (past 90d): 15 | Contributors (cumulative): 30 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,14 +1,22 @@\n+import importlib\n+\n import pytest\n from fastapi.testclient import TestClient\n \n-from ...utils import needs_pydanticv2\n+from ...utils import needs_py310, needs_pydanticv2\n \n \n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial001 import app\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial001\",\n+        pytest.param(\"tutorial001_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.schema_extra_example.{request.param}\")\n \n-    client = TestClient(app)\n+    client = TestClient(mod.app)\n     return client\n \n \n\n@@ -1,14 +1,22 @@\n+import importlib\n+\n import pytest\n from fastapi.testclient import TestClient\n \n-from ...utils import needs_pydanticv1\n+from ...utils import needs_py310, needs_pydanticv1\n \n \n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial001_pv1 import app\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial001_pv1\",\n+        pytest.param(\"tutorial001_pv1_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.schema_extra_example.{request.param}\")\n \n-    client = TestClient(app)\n+    client = TestClient(mod.app)\n     return client\n \n \n\n@@ -1,129 +0,0 @@\n-import pytest\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310, needs_pydanticv1\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial001_pv1_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-@needs_pydanticv1\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py310\n-@needs_pydanticv1\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    # insert_assert(response.json())\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"type\": \"integer\", \"title\": \"Item Id\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                            \"type\": \"array\",\n-                            \"title\": \"Detail\",\n-                        }\n-                    },\n-                    \"type\": \"object\",\n-                    \"title\": \"HTTPValidationError\",\n-                },\n-                \"Item\": {\n-                    \"properties\": {\n-                        \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n-                        \"description\": {\"type\": \"string\", \"title\": \"Description\"},\n-                        \"price\": {\"type\": \"number\", \"title\": \"Price\"},\n-                        \"tax\": {\"type\": \"number\", \"title\": \"Tax\"},\n-                    },\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"title\": \"Item\",\n-                    \"examples\": [\n-                        {\n-                            \"name\": \"Foo\",\n-                            \"description\": \"A very nice Item\",\n-                            \"price\": 35.4,\n-                            \"tax\": 3.2,\n-                        }\n-                    ],\n-                },\n-                \"ValidationError\": {\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                            \"type\": \"array\",\n-                            \"title\": \"Location\",\n-                        },\n-                        \"msg\": {\"type\": \"string\", \"title\": \"Message\"},\n-                        \"type\": {\"type\": \"string\", \"title\": \"Error Type\"},\n-                    },\n-                    \"type\": \"object\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"title\": \"ValidationError\",\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,135 +0,0 @@\n-import pytest\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310, needs_pydanticv2\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial001_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-@needs_pydanticv2\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py310\n-@needs_pydanticv2\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    # insert_assert(response.json())\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                            \"required\": True,\n-                            \"schema\": {\"type\": \"integer\", \"title\": \"Item Id\"},\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"required\": True,\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                            }\n-                        },\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                            \"type\": \"array\",\n-                            \"title\": \"Detail\",\n-                        }\n-                    },\n-                    \"type\": \"object\",\n-                    \"title\": \"HTTPValidationError\",\n-                },\n-                \"Item\": {\n-                    \"properties\": {\n-                        \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n-                        \"description\": {\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Description\",\n-                        },\n-                        \"price\": {\"type\": \"number\", \"title\": \"Price\"},\n-                        \"tax\": {\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Tax\",\n-                        },\n-                    },\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"title\": \"Item\",\n-                    \"examples\": [\n-                        {\n-                            \"description\": \"A very nice Item\",\n-                            \"name\": \"Foo\",\n-                            \"price\": 35.4,\n-                            \"tax\": 3.2,\n-                        }\n-                    ],\n-                },\n-                \"ValidationError\": {\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                            \"type\": \"array\",\n-                            \"title\": \"Location\",\n-                        },\n-                        \"msg\": {\"type\": \"string\", \"title\": \"Message\"},\n-                        \"type\": {\"type\": \"string\", \"title\": \"Error Type\"},\n-                    },\n-                    \"type\": \"object\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"title\": \"ValidationError\",\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,13 +1,30 @@\n+import importlib\n+\n+import pytest\n from dirty_equals import IsDict\n from fastapi.testclient import TestClient\n \n-from docs_src.schema_extra_example.tutorial004 import app\n-\n-client = TestClient(app)\n+from ...utils import needs_py39, needs_py310\n \n \n-# Test required and embedded body parameters with no bodies sent\n-def test_post_body_example():\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial004\",\n+        pytest.param(\"tutorial004_py310\", marks=needs_py310),\n+        \"tutorial004_an\",\n+        pytest.param(\"tutorial004_an_py39\", marks=needs_py39),\n+        pytest.param(\"tutorial004_an_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.schema_extra_example.{request.param}\")\n+\n+    client = TestClient(mod.app)\n+    return client\n+\n+\n+def test_post_body_example(client: TestClient):\n     response = client.put(\n         \"/items/5\",\n         json={\n@@ -20,7 +37,7 @@ def test_post_body_example():\n     assert response.status_code == 200\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n\n@@ -1,168 +0,0 @@\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from docs_src.schema_extra_example.tutorial004_an import app\n-\n-client = TestClient(app)\n-\n-\n-# Test required and embedded body parameters with no bodies sent\n-def test_post_body_example():\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-def test_openapi_schema():\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,177 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial004_an_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-# Test required and embedded body parameters with no bodies sent\n-@needs_py310\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,177 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py39\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial004_an_py39 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-# Test required and embedded body parameters with no bodies sent\n-@needs_py39\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py39\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,177 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial004_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-# Test required and embedded body parameters with no bodies sent\n-@needs_py310\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                        \"examples\": [\n-                                            {\n-                                                \"name\": \"Foo\",\n-                                                \"description\": \"A very nice Item\",\n-                                                \"price\": 35.4,\n-                                                \"tax\": 3.2,\n-                                            },\n-                                            {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                            {\n-                                                \"name\": \"Baz\",\n-                                                \"price\": \"thirty five point four\",\n-                                            },\n-                                        ],\n-                                    }\n-                                )\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,13 +1,26 @@\n+import importlib\n+\n import pytest\n from dirty_equals import IsDict\n from fastapi.testclient import TestClient\n \n+from ...utils import needs_py39, needs_py310\n \n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial005 import app\n \n-    client = TestClient(app)\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial005\",\n+        pytest.param(\"tutorial005_py310\", marks=needs_py310),\n+        \"tutorial005_an\",\n+        pytest.param(\"tutorial005_an_py39\", marks=needs_py39),\n+        pytest.param(\"tutorial005_an_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.schema_extra_example.{request.param}\")\n+\n+    client = TestClient(mod.app)\n     return client\n \n \n\n@@ -1,166 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial005_an import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-def test_openapi_schema(client: TestClient) -> None:\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict({\"$ref\": \"#/components/schemas/Item\"})\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                    }\n-                                ),\n-                                \"examples\": {\n-                                    \"normal\": {\n-                                        \"summary\": \"A normal example\",\n-                                        \"description\": \"A **normal** item works correctly.\",\n-                                        \"value\": {\n-                                            \"name\": \"Foo\",\n-                                            \"description\": \"A very nice Item\",\n-                                            \"price\": 35.4,\n-                                            \"tax\": 3.2,\n-                                        },\n-                                    },\n-                                    \"converted\": {\n-                                        \"summary\": \"An example with converted data\",\n-                                        \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                        \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                    },\n-                                    \"invalid\": {\n-                                        \"summary\": \"Invalid data is rejected with an error\",\n-                                        \"value\": {\n-                                            \"name\": \"Baz\",\n-                                            \"price\": \"thirty five point four\",\n-                                        },\n-                                    },\n-                                },\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,170 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial005_an_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient) -> None:\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict({\"$ref\": \"#/components/schemas/Item\"})\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                    }\n-                                ),\n-                                \"examples\": {\n-                                    \"normal\": {\n-                                        \"summary\": \"A normal example\",\n-                                        \"description\": \"A **normal** item works correctly.\",\n-                                        \"value\": {\n-                                            \"name\": \"Foo\",\n-                                            \"description\": \"A very nice Item\",\n-                                            \"price\": 35.4,\n-                                            \"tax\": 3.2,\n-                                        },\n-                                    },\n-                                    \"converted\": {\n-                                        \"summary\": \"An example with converted data\",\n-                                        \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                        \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                    },\n-                                    \"invalid\": {\n-                                        \"summary\": \"Invalid data is rejected with an error\",\n-                                        \"value\": {\n-                                            \"name\": \"Baz\",\n-                                            \"price\": \"thirty five point four\",\n-                                        },\n-                                    },\n-                                },\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,170 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py39\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial005_an_py39 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py39\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py39\n-def test_openapi_schema(client: TestClient) -> None:\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict({\"$ref\": \"#/components/schemas/Item\"})\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                    }\n-                                ),\n-                                \"examples\": {\n-                                    \"normal\": {\n-                                        \"summary\": \"A normal example\",\n-                                        \"description\": \"A **normal** item works correctly.\",\n-                                        \"value\": {\n-                                            \"name\": \"Foo\",\n-                                            \"description\": \"A very nice Item\",\n-                                            \"price\": 35.4,\n-                                            \"tax\": 3.2,\n-                                        },\n-                                    },\n-                                    \"converted\": {\n-                                        \"summary\": \"An example with converted data\",\n-                                        \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                        \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                    },\n-                                    \"invalid\": {\n-                                        \"summary\": \"Invalid data is rejected with an error\",\n-                                        \"value\": {\n-                                            \"name\": \"Baz\",\n-                                            \"price\": \"thirty five point four\",\n-                                        },\n-                                    },\n-                                },\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,170 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.schema_extra_example.tutorial005_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_post_body_example(client: TestClient):\n-    response = client.put(\n-        \"/items/5\",\n-        json={\n-            \"name\": \"Foo\",\n-            \"description\": \"A very nice Item\",\n-            \"price\": 35.4,\n-            \"tax\": 3.2,\n-        },\n-    )\n-    assert response.status_code == 200\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient) -> None:\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"summary\": \"Update Item\",\n-                    \"operationId\": \"update_item_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"integer\"},\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict({\"$ref\": \"#/components/schemas/Item\"})\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"allOf\": [\n-                                            {\"$ref\": \"#/components/schemas/Item\"}\n-                                        ],\n-                                        \"title\": \"Item\",\n-                                    }\n-                                ),\n-                                \"examples\": {\n-                                    \"normal\": {\n-                                        \"summary\": \"A normal example\",\n-                                        \"description\": \"A **normal** item works correctly.\",\n-                                        \"value\": {\n-                                            \"name\": \"Foo\",\n-                                            \"description\": \"A very nice Item\",\n-                                            \"price\": 35.4,\n-                                            \"tax\": 3.2,\n-                                        },\n-                                    },\n-                                    \"converted\": {\n-                                        \"summary\": \"An example with converted data\",\n-                                        \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                        \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                    },\n-                                    \"invalid\": {\n-                                        \"summary\": \"Invalid data is rejected with an error\",\n-                                        \"value\": {\n-                                            \"name\": \"Baz\",\n-                                            \"price\": \"thirty five point four\",\n-                                        },\n-                                    },\n-                                },\n-                            }\n-                        },\n-                        \"required\": True,\n-                    },\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-                \"Item\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"price\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": IsDict(\n-                            {\n-                                \"title\": \"Description\",\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Description\", \"type\": \"string\"}\n-                        ),\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": IsDict(\n-                            {\n-                                \"title\": \"Tax\",\n-                                \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\"title\": \"Tax\", \"type\": \"number\"}\n-                        ),\n-                    },\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
