{"custom_id": "fastapi#983f1d34dbc9443fcd12159647aabdeabc5032a7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 425 | Contributors (this commit): 2 | Commits (past 90d): 7 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.98.0\"\n+__version__ = \"0.99.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#4d83f984cc42831e3883285e9bedc4d69f4c1ac2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 115 | Files Changed: 10 | Hunks: 50 | Methods Changed: 10 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 120 | Churn Cumulative: 1509 | Contributors (this commit): 3 | Commits (past 90d): 25 | Contributors (cumulative): 13 | DMM Complexity: 0.0\n\nDIFF:\n@@ -20,30 +20,19 @@ async def update_item(\n     item: Item = Body(\n         examples=[\n             {\n-                \"summary\": \"A normal example\",\n-                \"description\": \"A **normal** item works correctly.\",\n-                \"value\": {\n                 \"name\": \"Foo\",\n                 \"description\": \"A very nice Item\",\n                 \"price\": 35.4,\n                 \"tax\": 3.2,\n             },\n-            },\n             {\n-                \"summary\": \"An example with converted data\",\n-                \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                \"value\": {\n                 \"name\": \"Bar\",\n                 \"price\": \"35.4\",\n             },\n-            },\n             {\n-                \"summary\": \"Invalid data is rejected with an error\",\n-                \"value\": {\n                 \"name\": \"Baz\",\n                 \"price\": \"thirty five point four\",\n             },\n-            },\n         ],\n     ),\n ):\n\n@@ -23,30 +23,19 @@ async def update_item(\n         Body(\n             examples=[\n                 {\n-                    \"summary\": \"A normal example\",\n-                    \"description\": \"A **normal** item works correctly.\",\n-                    \"value\": {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n                 },\n-                },\n                 {\n-                    \"summary\": \"An example with converted data\",\n-                    \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                    \"value\": {\n                     \"name\": \"Bar\",\n                     \"price\": \"35.4\",\n                 },\n-                },\n                 {\n-                    \"summary\": \"Invalid data is rejected with an error\",\n-                    \"value\": {\n                     \"name\": \"Baz\",\n                     \"price\": \"thirty five point four\",\n                 },\n-                },\n             ],\n         ),\n     ],\n\n@@ -22,30 +22,19 @@ async def update_item(\n         Body(\n             examples=[\n                 {\n-                    \"summary\": \"A normal example\",\n-                    \"description\": \"A **normal** item works correctly.\",\n-                    \"value\": {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n                 },\n-                },\n                 {\n-                    \"summary\": \"An example with converted data\",\n-                    \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                    \"value\": {\n                     \"name\": \"Bar\",\n                     \"price\": \"35.4\",\n                 },\n-                },\n                 {\n-                    \"summary\": \"Invalid data is rejected with an error\",\n-                    \"value\": {\n                     \"name\": \"Baz\",\n                     \"price\": \"thirty five point four\",\n                 },\n-                },\n             ],\n         ),\n     ],\n\n@@ -22,30 +22,19 @@ async def update_item(\n         Body(\n             examples=[\n                 {\n-                    \"summary\": \"A normal example\",\n-                    \"description\": \"A **normal** item works correctly.\",\n-                    \"value\": {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n                 },\n-                },\n                 {\n-                    \"summary\": \"An example with converted data\",\n-                    \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                    \"value\": {\n                     \"name\": \"Bar\",\n                     \"price\": \"35.4\",\n                 },\n-                },\n                 {\n-                    \"summary\": \"Invalid data is rejected with an error\",\n-                    \"value\": {\n                     \"name\": \"Baz\",\n                     \"price\": \"thirty five point four\",\n                 },\n-                },\n             ],\n         ),\n     ],\n\n@@ -18,30 +18,19 @@ async def update_item(\n     item: Item = Body(\n         examples=[\n             {\n-                \"summary\": \"A normal example\",\n-                \"description\": \"A **normal** item works correctly.\",\n-                \"value\": {\n                 \"name\": \"Foo\",\n                 \"description\": \"A very nice Item\",\n                 \"price\": 35.4,\n                 \"tax\": 3.2,\n             },\n-            },\n             {\n-                \"summary\": \"An example with converted data\",\n-                \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                \"value\": {\n                 \"name\": \"Bar\",\n                 \"price\": \"35.4\",\n             },\n-            },\n             {\n-                \"summary\": \"Invalid data is rejected with an error\",\n-                \"value\": {\n                 \"name\": \"Baz\",\n                 \"price\": \"thirty five point four\",\n             },\n-            },\n         ],\n     ),\n ):\n\n@@ -46,27 +46,16 @@ def test_openapi_schema():\n                                     \"title\": \"Item\",\n                                     \"examples\": [\n                                         {\n-                                            \"summary\": \"A normal example\",\n-                                            \"description\": \"A **normal** item works correctly.\",\n-                                            \"value\": {\n                                             \"name\": \"Foo\",\n                                             \"description\": \"A very nice Item\",\n                                             \"price\": 35.4,\n                                             \"tax\": 3.2,\n                                         },\n-                                        },\n+                                        {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         {\n-                                            \"summary\": \"An example with converted data\",\n-                                            \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                            \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                        },\n-                                        {\n-                                            \"summary\": \"Invalid data is rejected with an error\",\n-                                            \"value\": {\n                                             \"name\": \"Baz\",\n                                             \"price\": \"thirty five point four\",\n                                         },\n-                                        },\n                                     ],\n                                 }\n                             }\n\n@@ -46,27 +46,16 @@ def test_openapi_schema():\n                                     \"title\": \"Item\",\n                                     \"examples\": [\n                                         {\n-                                            \"summary\": \"A normal example\",\n-                                            \"description\": \"A **normal** item works correctly.\",\n-                                            \"value\": {\n                                             \"name\": \"Foo\",\n                                             \"description\": \"A very nice Item\",\n                                             \"price\": 35.4,\n                                             \"tax\": 3.2,\n                                         },\n-                                        },\n+                                        {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         {\n-                                            \"summary\": \"An example with converted data\",\n-                                            \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                            \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                        },\n-                                        {\n-                                            \"summary\": \"Invalid data is rejected with an error\",\n-                                            \"value\": {\n                                             \"name\": \"Baz\",\n                                             \"price\": \"thirty five point four\",\n                                         },\n-                                        },\n                                     ],\n                                 }\n                             }\n\n@@ -55,27 +55,16 @@ def test_openapi_schema(client: TestClient):\n                                     \"title\": \"Item\",\n                                     \"examples\": [\n                                         {\n-                                            \"summary\": \"A normal example\",\n-                                            \"description\": \"A **normal** item works correctly.\",\n-                                            \"value\": {\n                                             \"name\": \"Foo\",\n                                             \"description\": \"A very nice Item\",\n                                             \"price\": 35.4,\n                                             \"tax\": 3.2,\n                                         },\n-                                        },\n+                                        {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         {\n-                                            \"summary\": \"An example with converted data\",\n-                                            \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                            \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                        },\n-                                        {\n-                                            \"summary\": \"Invalid data is rejected with an error\",\n-                                            \"value\": {\n                                             \"name\": \"Baz\",\n                                             \"price\": \"thirty five point four\",\n                                         },\n-                                        },\n                                     ],\n                                 }\n                             }\n\n@@ -55,27 +55,16 @@ def test_openapi_schema(client: TestClient):\n                                     \"title\": \"Item\",\n                                     \"examples\": [\n                                         {\n-                                            \"summary\": \"A normal example\",\n-                                            \"description\": \"A **normal** item works correctly.\",\n-                                            \"value\": {\n                                             \"name\": \"Foo\",\n                                             \"description\": \"A very nice Item\",\n                                             \"price\": 35.4,\n                                             \"tax\": 3.2,\n                                         },\n-                                        },\n+                                        {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         {\n-                                            \"summary\": \"An example with converted data\",\n-                                            \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                            \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                        },\n-                                        {\n-                                            \"summary\": \"Invalid data is rejected with an error\",\n-                                            \"value\": {\n                                             \"name\": \"Baz\",\n                                             \"price\": \"thirty five point four\",\n                                         },\n-                                        },\n                                     ],\n                                 }\n                             }\n\n@@ -55,27 +55,16 @@ def test_openapi_schema(client: TestClient):\n                                     \"title\": \"Item\",\n                                     \"examples\": [\n                                         {\n-                                            \"summary\": \"A normal example\",\n-                                            \"description\": \"A **normal** item works correctly.\",\n-                                            \"value\": {\n                                             \"name\": \"Foo\",\n                                             \"description\": \"A very nice Item\",\n                                             \"price\": 35.4,\n                                             \"tax\": 3.2,\n                                         },\n-                                        },\n+                                        {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         {\n-                                            \"summary\": \"An example with converted data\",\n-                                            \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n-                                            \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n-                                        },\n-                                        {\n-                                            \"summary\": \"Invalid data is rejected with an error\",\n-                                            \"value\": {\n                                             \"name\": \"Baz\",\n                                             \"price\": \"thirty five point four\",\n                                         },\n-                                        },\n                                     ],\n                                 }\n                             }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#dd4e78ca7b09abdf0d4646fe4697316c021a8b2e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 427 | Contributors (this commit): 2 | Commits (past 90d): 8 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.99.0\"\n+__version__ = \"0.99.1\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#f8356d9fffcc728062cc4dbfc905882969bd5123", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 431 | Contributors (this commit): 2 | Commits (past 90d): 10 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.100.0-beta3\"\n+__version__ = \"0.100.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#fe91def5153683bffcf58ab9513e952d75d842be", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 867 | Contributors (this commit): 2 | Commits (past 90d): 1 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -352,7 +352,6 @@ class SponsorsResponse(BaseModel):\n \n class Settings(BaseSettings):\n     input_token: SecretStr\n-    input_standard_token: SecretStr\n     github_repository: str\n     httpx_timeout: int = 30\n \n@@ -609,7 +608,7 @@ if __name__ == \"__main__\":\n     logging.basicConfig(level=logging.INFO)\n     settings = Settings()\n     logging.info(f\"Using config: {settings.json()}\")\n-    g = Github(settings.input_standard_token.get_secret_value())\n+    g = Github(settings.input_token.get_secret_value())\n     repo = g.get_repo(settings.github_repository)\n     question_commentors, question_last_month_commentors, question_authors = get_experts(\n         settings=settings\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#6c99e90a6b808a1d819ecc45bcf25751dd30b22b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 7 | Files Changed: 2 | Hunks: 5 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 1276 | Contributors (this commit): 20 | Commits (past 90d): 5 | Contributors (cumulative): 22 | DMM Complexity: None\n\nDIFF:\n@@ -56,7 +56,6 @@ if PYDANTIC_V2:\n     from pydantic.json_schema import GenerateJsonSchema as GenerateJsonSchema\n     from pydantic.json_schema import JsonSchemaValue as JsonSchemaValue\n     from pydantic_core import CoreSchema as CoreSchema\n-    from pydantic_core import MultiHostUrl as MultiHostUrl\n     from pydantic_core import PydanticUndefined, PydanticUndefinedType\n     from pydantic_core import Url as Url\n     from pydantic_core.core_schema import (\n@@ -294,9 +293,6 @@ else:\n     from pydantic.fields import (  # type: ignore[no-redef, attr-defined]\n         UndefinedType as UndefinedType,  # noqa: F401\n     )\n-    from pydantic.networks import (  # type: ignore[no-redef]\n-        MultiHostDsn as MultiHostUrl,  # noqa: F401\n-    )\n     from pydantic.schema import (\n         field_schema,\n         get_flat_models_from_fields,\n\n@@ -20,10 +20,10 @@ from uuid import UUID\n from fastapi.types import IncEx\n from pydantic import BaseModel\n from pydantic.color import Color\n-from pydantic.networks import NameEmail\n+from pydantic.networks import AnyUrl, NameEmail\n from pydantic.types import SecretBytes, SecretStr\n \n-from ._compat import PYDANTIC_V2, MultiHostUrl, Url, _model_dump\n+from ._compat import PYDANTIC_V2, Url, _model_dump\n \n \n # Taken from Pydantic v1 as is\n@@ -80,7 +80,7 @@ ENCODERS_BY_TYPE: Dict[Type[Any], Callable[[Any], Any]] = {\n     set: list,\n     UUID: str,\n     Url: str,\n-    MultiHostUrl: str,\n+    AnyUrl: str,\n }\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#8d2723664801c32e6174cd87812fb92e850cfa4b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 433 | Contributors (this commit): 2 | Commits (past 90d): 10 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.100.0\"\n+__version__ = \"0.100.1\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#37818f553ddb21b7adaaf16d18b95f9710065ad4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 432 | Contributors (this commit): 12 | Commits (past 90d): 3 | Contributors (cumulative): 12 | DMM Complexity: 1.0\n\nDIFF:\n@@ -247,8 +247,9 @@ def test_encode_model_with_pure_path():\n             class Config:\n                 arbitrary_types_allowed = True\n \n-    obj = ModelWithPath(path=PurePath(\"/foo\", \"bar\"))\n-    assert jsonable_encoder(obj) == {\"path\": \"/foo/bar\"}\n+    test_path = PurePath(\"/foo\", \"bar\")\n+    obj = ModelWithPath(path=test_path)\n+    assert jsonable_encoder(obj) == {\"path\": str(test_path)}\n \n \n def test_encode_model_with_pure_posix_path():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#1e6bfa1f3931b841f3c2e173a5e673e854130a8d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 7 | Methods Changed: 5 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 881 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -9,7 +9,8 @@ from typing import Any, Container, DefaultDict, Dict, List, Set, Union\n import httpx\n import yaml\n from github import Github\n-from pydantic import BaseModel, BaseSettings, SecretStr\n+from pydantic import BaseModel, SecretStr\n+from pydantic_settings import BaseSettings\n \n github_graphql_url = \"https://api.github.com/graphql\"\n questions_category_id = \"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMyMDAxNDM0\"\n@@ -382,6 +383,7 @@ def get_graphql_response(\n     data = response.json()\n     if \"errors\" in data:\n         logging.error(f\"Errors in response, after: {after}, category_id: {category_id}\")\n+        logging.error(data[\"errors\"])\n         logging.error(response.text)\n         raise RuntimeError(response.text)\n     return data\n@@ -389,7 +391,7 @@ def get_graphql_response(\n \n def get_graphql_issue_edges(*, settings: Settings, after: Union[str, None] = None):\n     data = get_graphql_response(settings=settings, query=issues_query, after=after)\n-    graphql_response = IssuesResponse.parse_obj(data)\n+    graphql_response = IssuesResponse.model_validate(data)\n     return graphql_response.data.repository.issues.edges\n \n \n@@ -404,19 +406,19 @@ def get_graphql_question_discussion_edges(\n         after=after,\n         category_id=questions_category_id,\n     )\n-    graphql_response = DiscussionsResponse.parse_obj(data)\n+    graphql_response = DiscussionsResponse.model_validate(data)\n     return graphql_response.data.repository.discussions.edges\n \n \n def get_graphql_pr_edges(*, settings: Settings, after: Union[str, None] = None):\n     data = get_graphql_response(settings=settings, query=prs_query, after=after)\n-    graphql_response = PRsResponse.parse_obj(data)\n+    graphql_response = PRsResponse.model_validate(data)\n     return graphql_response.data.repository.pullRequests.edges\n \n \n def get_graphql_sponsor_edges(*, settings: Settings, after: Union[str, None] = None):\n     data = get_graphql_response(settings=settings, query=sponsors_query, after=after)\n-    graphql_response = SponsorsResponse.parse_obj(data)\n+    graphql_response = SponsorsResponse.model_validate(data)\n     return graphql_response.data.user.sponsorshipsAsMaintainer.edges\n \n \n@@ -607,7 +609,7 @@ def get_top_users(\n if __name__ == \"__main__\":\n     logging.basicConfig(level=logging.INFO)\n     settings = Settings()\n-    logging.info(f\"Using config: {settings.json()}\")\n+    logging.info(f\"Using config: {settings.model_dump_json()}\")\n     g = Github(settings.input_token.get_secret_value())\n     repo = g.get_repo(settings.github_repository)\n     question_commentors, question_last_month_commentors, question_authors = get_experts(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#25694f5ae100741c9f7ee0d409e298609e71366e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 33 | Lines Deleted: 5 | Files Changed: 2 | Hunks: 7 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 38 | Churn Cumulative: 669 | Contributors (this commit): 5 | Commits (past 90d): 6 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,7 +1,7 @@\n from typing import Optional\n \n import pytest\n-from dirty_equals import IsDict\n+from dirty_equals import HasRepr, IsDict\n from fastapi import Depends, FastAPI\n from fastapi.exceptions import ResponseValidationError\n from fastapi.testclient import TestClient\n@@ -66,7 +66,7 @@ def test_validator_is_cloned(client: TestClient):\n                 \"loc\": (\"response\", \"name\"),\n                 \"msg\": \"Value error, name must end in A\",\n                 \"input\": \"modelX\",\n-                \"ctx\": {\"error\": \"name must end in A\"},\n+                \"ctx\": {\"error\": HasRepr(\"ValueError('name must end in A')\")},\n                 \"url\": match_pydantic_error_url(\"value_error\"),\n             }\n         )\n\n@@ -51,7 +51,7 @@ def test_jsonable_encoder_requiring_error():\n                     \"loc\": [\"body\", 0, \"age\"],\n                     \"msg\": \"Input should be greater than 0\",\n                     \"input\": -1.0,\n-                    \"ctx\": {\"gt\": 0.0},\n+                    \"ctx\": {\"gt\": \"0\"},\n                     \"url\": match_pydantic_error_url(\"greater_than\"),\n                 }\n             ]\n@@ -84,9 +84,23 @@ def test_put_incorrect_body_multiple():\n                     \"input\": {\"age\": \"five\"},\n                     \"url\": match_pydantic_error_url(\"missing\"),\n                 },\n+                {\n+                    \"ctx\": {\"class\": \"Decimal\"},\n+                    \"input\": \"five\",\n+                    \"loc\": [\"body\", 0, \"age\", \"is-instance[Decimal]\"],\n+                    \"msg\": \"Input should be an instance of Decimal\",\n+                    \"type\": \"is_instance_of\",\n+                    \"url\": match_pydantic_error_url(\"is_instance_of\"),\n+                },\n                 {\n                     \"type\": \"decimal_parsing\",\n-                    \"loc\": [\"body\", 0, \"age\"],\n+                    \"loc\": [\n+                        \"body\",\n+                        0,\n+                        \"age\",\n+                        \"function-after[to_decimal(), \"\n+                        \"union[int,constrained-str,function-plain[str()]]]\",\n+                    ],\n                     \"msg\": \"Input should be a valid decimal\",\n                     \"input\": \"five\",\n                 },\n@@ -97,9 +111,23 @@ def test_put_incorrect_body_multiple():\n                     \"input\": {\"age\": \"six\"},\n                     \"url\": match_pydantic_error_url(\"missing\"),\n                 },\n+                {\n+                    \"ctx\": {\"class\": \"Decimal\"},\n+                    \"input\": \"six\",\n+                    \"loc\": [\"body\", 1, \"age\", \"is-instance[Decimal]\"],\n+                    \"msg\": \"Input should be an instance of Decimal\",\n+                    \"type\": \"is_instance_of\",\n+                    \"url\": match_pydantic_error_url(\"is_instance_of\"),\n+                },\n                 {\n                     \"type\": \"decimal_parsing\",\n-                    \"loc\": [\"body\", 1, \"age\"],\n+                    \"loc\": [\n+                        \"body\",\n+                        1,\n+                        \"age\",\n+                        \"function-after[to_decimal(), \"\n+                        \"union[int,constrained-str,function-plain[str()]]]\",\n+                    ],\n                     \"msg\": \"Input should be a valid decimal\",\n                     \"input\": \"six\",\n                 },\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#8adbafc0760c9fd0d97da748545b3a5f92dbb0ea", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 435 | Contributors (this commit): 2 | Commits (past 90d): 11 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.100.1\"\n+__version__ = \"0.101.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#5e59acd35bd00018462b6401bf78e52c91b48f70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 5072 | Contributors (this commit): 42 | Commits (past 90d): 7 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -19,7 +19,7 @@ async def contextmanager_in_threadpool(\n ) -> AsyncGenerator[_T, None]:\n     # blocking __exit__ from running waiting on a free thread\n     # can create race conditions/deadlocks if the context manager itself\n-    # has it's own internal pool (e.g. a database connection pool)\n+    # has its own internal pool (e.g. a database connection pool)\n     # to avoid this we let __exit__ run without a capacity limit\n     # since we're creating a new limiter for each call, any non-zero limit\n     # works (1 is arbitrary)\n\n@@ -83,7 +83,7 @@ def _prepare_response_content(\n         if read_with_orm_mode:\n             # Let from_orm extract the data from this model instead of converting\n             # it now to a dict.\n-            # Otherwise there's no way to extract lazy data that requires attribute\n+            # Otherwise, there's no way to extract lazy data that requires attribute\n             # access instead of dict iteration, e.g. lazy relationships.\n             return res\n         return _model_dump(\n@@ -456,7 +456,7 @@ class APIRoute(routing.Route):\n             # that doesn't have the hashed_password. But because it's a subclass, it\n             # would pass the validation and be returned as is.\n             # By being a new field, no inheritance will be passed as is. A new model\n-            # will be always created.\n+            # will always be created.\n             # TODO: remove when deprecating Pydantic v1\n             self.secure_cloned_response_field: Optional[\n                 ModelField\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#bdd991244d4ff1393725996ac15425857e643c6f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 1230 | Contributors (this commit): 8 | Commits (past 90d): 3 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -69,7 +69,7 @@ class Param(FieldInfo):\n         self.deprecated = deprecated\n         if example is not _Unset:\n             warnings.warn(\n-                \"`example` has been depreacated, please use `examples` instead\",\n+                \"`example` has been deprecated, please use `examples` instead\",\n                 category=DeprecationWarning,\n                 stacklevel=4,\n             )\n@@ -98,7 +98,7 @@ class Param(FieldInfo):\n             kwargs[\"examples\"] = examples\n         if regex is not None:\n             warnings.warn(\n-                \"`regex` has been depreacated, please use `pattern` instead\",\n+                \"`regex` has been deprecated, please use `pattern` instead\",\n                 category=DeprecationWarning,\n                 stacklevel=4,\n             )\n@@ -512,7 +512,7 @@ class Body(FieldInfo):\n         self.deprecated = deprecated\n         if example is not _Unset:\n             warnings.warn(\n-                \"`example` has been depreacated, please use `examples` instead\",\n+                \"`example` has been deprecated, please use `examples` instead\",\n                 category=DeprecationWarning,\n                 stacklevel=4,\n             )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#5e8f7f13d704734b8d75b3a0645360e4f77a6a24", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 6 | Files Changed: 2 | Hunks: 13 | Methods Changed: 7 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 24 | Churn Cumulative: 1797 | Contributors (this commit): 8 | Commits (past 90d): 6 | Contributors (cumulative): 10 | DMM Complexity: 1.0\n\nDIFF:\n@@ -47,3 +47,9 @@ class ResponseValidationError(ValidationException):\n     def __init__(self, errors: Sequence[Any], *, body: Any = None) -> None:\n         super().__init__(errors)\n         self.body = body\n+\n+    def __str__(self) -> str:\n+        message = f\"{len(self._errors)} validation errors:\\n\"\n+        for err in self._errors:\n+            message += f\"  {err}\\n\"\n+        return message\n\n@@ -277,13 +277,15 @@ def test_response_model_no_annotation_return_exact_dict():\n \n \n def test_response_model_no_annotation_return_invalid_dict():\n-    with pytest.raises(ResponseValidationError):\n+    with pytest.raises(ResponseValidationError) as excinfo:\n         client.get(\"/response_model-no_annotation-return_invalid_dict\")\n+    assert \"missing\" in str(excinfo.value)\n \n \n def test_response_model_no_annotation_return_invalid_model():\n-    with pytest.raises(ResponseValidationError):\n+    with pytest.raises(ResponseValidationError) as excinfo:\n         client.get(\"/response_model-no_annotation-return_invalid_model\")\n+    assert \"missing\" in str(excinfo.value)\n \n \n def test_response_model_no_annotation_return_dict_with_extra_data():\n@@ -313,13 +315,15 @@ def test_no_response_model_annotation_return_exact_dict():\n \n \n def test_no_response_model_annotation_return_invalid_dict():\n-    with pytest.raises(ResponseValidationError):\n+    with pytest.raises(ResponseValidationError) as excinfo:\n         client.get(\"/no_response_model-annotation-return_invalid_dict\")\n+    assert \"missing\" in str(excinfo.value)\n \n \n def test_no_response_model_annotation_return_invalid_model():\n-    with pytest.raises(ResponseValidationError):\n+    with pytest.raises(ResponseValidationError) as excinfo:\n         client.get(\"/no_response_model-annotation-return_invalid_model\")\n+    assert \"missing\" in str(excinfo.value)\n \n \n def test_no_response_model_annotation_return_dict_with_extra_data():\n@@ -395,13 +399,15 @@ def test_response_model_model1_annotation_model2_return_exact_dict():\n \n \n def test_response_model_model1_annotation_model2_return_invalid_dict():\n-    with pytest.raises(ResponseValidationError):\n+    with pytest.raises(ResponseValidationError) as excinfo:\n         client.get(\"/response_model_model1-annotation_model2-return_invalid_dict\")\n+    assert \"missing\" in str(excinfo.value)\n \n \n def test_response_model_model1_annotation_model2_return_invalid_model():\n-    with pytest.raises(ResponseValidationError):\n+    with pytest.raises(ResponseValidationError) as excinfo:\n         client.get(\"/response_model_model1-annotation_model2-return_invalid_model\")\n+    assert \"missing\" in str(excinfo.value)\n \n \n def test_response_model_model1_annotation_model2_return_dict_with_extra_data():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#63e7edb2951b36b494176e2f6a22819fcd3feb17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 437 | Contributors (this commit): 2 | Commits (past 90d): 12 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.101.0\"\n+__version__ = \"0.101.1\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#7a06de2bb9de12727fe544b602f9d74f7a1b0bae", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 42 | Lines Deleted: 66 | Files Changed: 9 | Hunks: 42 | Methods Changed: 10 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 108 | Churn Cumulative: 4027 | Contributors (this commit): 8 | Commits (past 90d): 36 | Contributors (cumulative): 26 | DMM Complexity: 0.0\n\nDIFF:\n@@ -51,7 +51,7 @@ def test_jsonable_encoder_requiring_error():\n                     \"loc\": [\"body\", 0, \"age\"],\n                     \"msg\": \"Input should be greater than 0\",\n                     \"input\": -1.0,\n-                    \"ctx\": {\"gt\": \"0\"},\n+                    \"ctx\": {\"gt\": 0},\n                     \"url\": match_pydantic_error_url(\"greater_than\"),\n                 }\n             ]\n@@ -84,25 +84,12 @@ def test_put_incorrect_body_multiple():\n                     \"input\": {\"age\": \"five\"},\n                     \"url\": match_pydantic_error_url(\"missing\"),\n                 },\n-                {\n-                    \"ctx\": {\"class\": \"Decimal\"},\n-                    \"input\": \"five\",\n-                    \"loc\": [\"body\", 0, \"age\", \"is-instance[Decimal]\"],\n-                    \"msg\": \"Input should be an instance of Decimal\",\n-                    \"type\": \"is_instance_of\",\n-                    \"url\": match_pydantic_error_url(\"is_instance_of\"),\n-                },\n                 {\n                     \"type\": \"decimal_parsing\",\n-                    \"loc\": [\n-                        \"body\",\n-                        0,\n-                        \"age\",\n-                        \"function-after[to_decimal(), \"\n-                        \"union[int,constrained-str,function-plain[str()]]]\",\n-                    ],\n+                    \"loc\": [\"body\", 0, \"age\"],\n                     \"msg\": \"Input should be a valid decimal\",\n                     \"input\": \"five\",\n+                    \"url\": match_pydantic_error_url(\"decimal_parsing\"),\n                 },\n                 {\n                     \"type\": \"missing\",\n@@ -111,25 +98,12 @@ def test_put_incorrect_body_multiple():\n                     \"input\": {\"age\": \"six\"},\n                     \"url\": match_pydantic_error_url(\"missing\"),\n                 },\n-                {\n-                    \"ctx\": {\"class\": \"Decimal\"},\n-                    \"input\": \"six\",\n-                    \"loc\": [\"body\", 1, \"age\", \"is-instance[Decimal]\"],\n-                    \"msg\": \"Input should be an instance of Decimal\",\n-                    \"type\": \"is_instance_of\",\n-                    \"url\": match_pydantic_error_url(\"is_instance_of\"),\n-                },\n                 {\n                     \"type\": \"decimal_parsing\",\n-                    \"loc\": [\n-                        \"body\",\n-                        1,\n-                        \"age\",\n-                        \"function-after[to_decimal(), \"\n-                        \"union[int,constrained-str,function-plain[str()]]]\",\n-                    ],\n+                    \"loc\": [\"body\", 1, \"age\"],\n                     \"msg\": \"Input should be a valid decimal\",\n                     \"input\": \"six\",\n+                    \"url\": match_pydantic_error_url(\"decimal_parsing\"),\n                 },\n             ]\n         }\n\n@@ -53,7 +53,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -87,7 +87,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -116,7 +116,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/ItemInput\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -126,7 +126,7 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"type\": \"object\",\n                     \"properties\": {\n@@ -151,7 +151,7 @@ def test_openapi_schema(client: TestClient):\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"type\": \"object\",\n                     \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n\n@@ -56,7 +56,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -90,7 +90,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -119,7 +119,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/ItemInput\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -129,7 +129,7 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"type\": \"object\",\n                     \"properties\": {\n@@ -154,7 +154,7 @@ def test_openapi_schema(client: TestClient):\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"type\": \"object\",\n                     \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n\n@@ -56,7 +56,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -90,7 +90,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -119,7 +119,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/ItemInput\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -129,7 +129,7 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"type\": \"object\",\n                     \"properties\": {\n@@ -154,7 +154,7 @@ def test_openapi_schema(client: TestClient):\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"type\": \"object\",\n                     \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n\n@@ -79,7 +79,9 @@ def test_openapi_schema():\n                                 \"schema\": {\n                                     \"title\": \"Items\",\n                                     \"type\": \"array\",\n-                                    \"items\": {\"$ref\": \"#/components/schemas/ItemInput\"},\n+                                    \"items\": {\n+                                        \"$ref\": \"#/components/schemas/Item-Input\"\n+                                    },\n                                 }\n                             }\n                         },\n@@ -141,7 +143,7 @@ def test_openapi_schema():\n                         \"items\": {\n                             \"title\": \"Items\",\n                             \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ItemOutput\"},\n+                            \"items\": {\"$ref\": \"#/components/schemas/Item-Output\"},\n                         },\n                     },\n                 },\n@@ -156,7 +158,7 @@ def test_openapi_schema():\n                         }\n                     },\n                 },\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\"],\n                     \"type\": \"object\",\n@@ -168,7 +170,7 @@ def test_openapi_schema():\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"description\"],\n                     \"type\": \"object\",\n\n@@ -35,7 +35,7 @@ def test_openapi_schema():\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -57,7 +57,7 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/ItemInput\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -67,7 +67,7 @@ def test_openapi_schema():\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -91,7 +91,7 @@ def test_openapi_schema():\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n                     \"type\": \"object\",\n\n@@ -35,7 +35,7 @@ def test_openapi_schema():\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -57,7 +57,7 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/ItemInput\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -67,7 +67,7 @@ def test_openapi_schema():\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -91,7 +91,7 @@ def test_openapi_schema():\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n                     \"type\": \"object\",\n\n@@ -42,7 +42,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -64,7 +64,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/ItemInput\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -74,7 +74,7 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -98,7 +98,7 @@ def test_openapi_schema(client: TestClient):\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n                     \"type\": \"object\",\n\n@@ -42,7 +42,7 @@ def test_openapi_schema(client: TestClient):\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/ItemOutput\"\n+                                        \"$ref\": \"#/components/schemas/Item-Output\"\n                                     }\n                                 }\n                             },\n@@ -64,7 +64,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/ItemInput\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -74,7 +74,7 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"ItemInput\": {\n+                \"Item-Input\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -98,7 +98,7 @@ def test_openapi_schema(client: TestClient):\n                         },\n                     },\n                 },\n-                \"ItemOutput\": {\n+                \"Item-Output\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n                     \"type\": \"object\",\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
