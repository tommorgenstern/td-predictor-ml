{"custom_id": "keras#5040aa386d8d404bc26eddfca332c1b503ab304b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 56 | Contributors (this commit): 3 | Commits (past 90d): 4 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -1,5 +1,5 @@\n from __future__ import absolute_import\n-import cPickle\n+from six.moves import cPickle\n import gzip\n from .data_utils import get_file\n import random\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#2be651dc39a88316e9a6e389eb96af4792a8b228", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 8 | Files Changed: 2 | Hunks: 9 | Methods Changed: 8 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 19 | Churn Cumulative: 2272 | Contributors (this commit): 20 | Commits (past 90d): 77 | Contributors (cumulative): 24 | DMM Complexity: 0.6666666666666666\n\nDIFF:\n@@ -168,7 +168,7 @@ class Graph(Layer):\n         self.inputs[name] = layer\n         self.input_config.append({'name': name, 'ndim': ndim, 'dtype': dtype})\n \n-    def add_node(self, layer, name, input=None, inputs=[], merge_mode='concat', create_output=False):\n+    def add_node(self, layer, name, input=None, inputs=[], merge_mode='concat', concat_axis=-1, create_output=False):\n         if hasattr(layer, 'set_name'):\n             layer.set_name(name)\n         if name in self.namespace:\n@@ -189,7 +189,7 @@ class Graph(Layer):\n                     to_merge.append(self.inputs[n])\n                 else:\n                     raise Exception('Unknown identifier: ' + n)\n-            merge = Merge(to_merge, mode=merge_mode)\n+            merge = Merge(to_merge, mode=merge_mode, concat_axis=concat_axis)\n             layer.set_previous(merge)\n \n         self.namespace.add(name)\n@@ -208,7 +208,7 @@ class Graph(Layer):\n         if create_output:\n             self.add_output(name, input=name)\n \n-    def add_output(self, name, input=None, inputs=[], merge_mode='concat'):\n+    def add_output(self, name, input=None, inputs=[], merge_mode='concat', concat_axis=-1):\n         if name in self.output_order:\n             raise Exception('Duplicate output identifier: ' + name)\n         if input:\n@@ -224,14 +224,15 @@ class Graph(Layer):\n                 if n not in self.nodes:\n                     raise Exception('Unknown identifier: ' + n)\n                 to_merge.append(self.nodes[n])\n-            merge = Merge(to_merge, mode=merge_mode)\n+            merge = Merge(to_merge, mode=merge_mode, concat_axis=concat_axis)\n             self.outputs[name] = merge\n \n         self.output_order.append(name)\n         self.output_config.append({'name': name,\n                                    'input': input,\n                                    'inputs': inputs,\n-                                   'merge_mode': merge_mode})\n+                                   'merge_mode': merge_mode,\n+                                   'concat_axis': concat_axis})\n \n     def get_config(self):\n         return {\"name\": self.__class__.__name__,\n\n@@ -161,13 +161,14 @@ class Masking(MaskedLayer):\n \n \n class Merge(Layer):\n-    def __init__(self, layers, mode='sum'):\n+    def __init__(self, layers, mode='sum', concat_axis=-1):\n         ''' Merge the output of a list of layers or containers into a single tensor.\n             mode: {'sum', 'mul', 'concat'}\n         '''\n         if len(layers) < 2:\n             raise Exception(\"Please specify two or more input layers (or containers) to merge\")\n         self.mode = mode\n+        self.concat_axis = concat_axis\n         self.layers = layers\n         self.params = []\n         self.regularizers = []\n@@ -194,7 +195,7 @@ class Merge(Layer):\n             return s\n         elif self.mode == 'concat':\n             inputs = [self.layers[i].get_output(train) for i in range(len(self.layers))]\n-            return T.concatenate(inputs, axis=-1)\n+            return T.concatenate(inputs, axis=self.concat_axis)\n         elif self.mode == 'mul':\n             s = self.layers[0].get_output(train)\n             for i in range(1, len(self.layers)):\n@@ -239,7 +240,8 @@ class Merge(Layer):\n     def get_config(self):\n         return {\"name\": self.__class__.__name__,\n                 \"layers\": [l.get_config() for l in self.layers],\n-                \"mode\": self.mode}\n+                \"mode\": self.mode,\n+                \"concat_axis\": self.concat_axis}\n \n \n class Dropout(MaskedLayer):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f3eeb982d0e4858a333246430833b1087d446f5a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 699 | Contributors (this commit): 10 | Commits (past 90d): 28 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -3,6 +3,7 @@ from __future__ import absolute_import\n \n import theano\n import theano.tensor as T\n+if theano.config.device[:3] == 'gpu':\n     from theano.sandbox.cuda import dnn\n \n from .. import activations, initializations, regularizers, constraints\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#4e1ec93c2f0fcf432e74e3bcbf8eba89ac843cec", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 7 | Files Changed: 2 | Hunks: 7 | Methods Changed: 6 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 25 | Churn Cumulative: 322 | Contributors (this commit): 4 | Commits (past 90d): 9 | Contributors (cumulative): 5 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,5 +1,5 @@\n from ..layers.core import Layer\n-from ..utils.theano_utils import shared_zeros, shared_ones, ndim_tensor\n+from ..utils.theano_utils import shared_zeros, shared_ones, ndim_tensor, floatX\n from .. import initializations\n \n import theano.tensor as T\n@@ -29,12 +29,20 @@ class BatchNormalization(Layer):\n         self.beta = shared_zeros(self.input_shape)\n \n         self.params = [self.gamma, self.beta]\n+        self.running_mean = shared_zeros(self.input_shape)\n+        self.running_std = shared_ones((self.input_shape))\n         if weights is not None:\n             self.set_weights(weights)\n \n+    def get_weights(self):\n+        return super(BatchNormalization, self).get_weights() + [self.running_mean.get_value(), self.running_std.get_value()]\n+\n+    def set_weights(self, weights):\n+        self.running_mean.set_value(floatX(weights[-2]))\n+        self.running_std.set_value(floatX(weights[-1]))\n+        super(BatchNormalization, self).set_weights(weights[:-2])\n+\n     def init_updates(self):\n-        self.running_mean = shared_zeros(self.input_shape)\n-        self.running_std = shared_ones((self.input_shape))\n         X = self.get_input(train=True)\n         m = X.mean(axis=0)\n         std = T.mean((X - m) ** 2 + self.epsilon, axis=0) ** 0.5\n\n@@ -68,7 +68,7 @@ class TestBatchNormalization(unittest.TestCase):\n         Test weight initialization\n         \"\"\"\n \n-        norm_m1 = normalization.BatchNormalization((10,), mode=1, weights=[np.ones(10), np.ones(10)])\n+        norm_m1 = normalization.BatchNormalization((10,), mode=1, weights=[np.ones(10), np.ones(10), np.zeros(10), np.zeros(10)])\n         norm_m1.init_updates()\n \n         for inp in [self.input_1, self.input_2, self.input_3]:\n@@ -83,9 +83,6 @@ class TestBatchNormalization(unittest.TestCase):\n         assert_allclose(norm_m1.gamma.eval(), np.ones(10))\n         assert_allclose(norm_m1.beta.eval(), np.ones(10))\n \n-        # Weights must be an iterable of gamma AND beta.\n-        self.assertRaises(Exception, normalization.BatchNormalization((10,)), weights=np.ones(10))\n-\n     def test_config(self):\n         norm = normalization.BatchNormalization((10, 10), mode=1, epsilon=0.1)\n         conf = norm.get_config()\n@@ -94,6 +91,12 @@ class TestBatchNormalization(unittest.TestCase):\n \n         self.assertDictEqual(conf, conf_target)\n \n+    def test_save_weights(self):\n+        norm = normalization.BatchNormalization((10, 10), mode=1, epsilon=0.1)\n+        weights = norm.get_weights()\n+        assert(len(weights) == 4)\n+        norm.set_weights(weights)\n+\n \n if __name__ == '__main__':\n     unittest.main()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#83e285fd00b3dba52c3a829010ac6d9f6e6610bc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 13 | Churn Cumulative: 792 | Contributors (this commit): 12 | Commits (past 90d): 37 | Contributors (cumulative): 14 | DMM Complexity: 1.0\n\nDIFF:\n@@ -3,13 +3,14 @@ from __future__ import absolute_import\n \n import theano\n import theano.tensor as T\n-if theano.config.device[:3] == 'gpu':\n-    from theano.sandbox.cuda import dnn\n \n from .. import activations, initializations, regularizers, constraints\n-from ..utils.theano_utils import shared_zeros\n+from ..utils.theano_utils import shared_zeros, on_gpu\n from ..layers.core import Layer\n \n+if on_gpu():\n+    from theano.sandbox.cuda import dnn\n+\n \n class Convolution1D(Layer):\n     def __init__(self, input_dim, nb_filter, filter_length,\n@@ -150,7 +151,7 @@ class Convolution2D(Layer):\n     def get_output(self, train):\n         X = self.get_input(train)\n         border_mode = self.border_mode\n-        if dnn.dnn_available() and theano.config.device[:3] == 'gpu':\n+        if on_gpu() and dnn.dnn_available():\n             if border_mode == 'same':\n                 assert(self.subsample == (1, 1))\n                 pad_x = (self.nb_row - self.subsample[0]) // 2\n\n@@ -38,3 +38,7 @@ def ndim_tensor(ndim):\n     elif ndim == 4:\n         return T.tensor4()\n     return T.matrix()\n+\n+\n+def on_gpu():\n+    return theano.config.device[:3] == 'gpu'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#c6825eb34391f13d7d4d64569a31cb7995fb2d5b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 540 | Contributors (this commit): 6 | Commits (past 90d): 23 | Contributors (cumulative): 6 | DMM Complexity: 0.0\n\nDIFF:\n@@ -168,7 +168,8 @@ class Graph(Layer):\n         self.inputs[name] = layer\n         self.input_config.append({'name': name, 'ndim': ndim, 'dtype': dtype})\n \n-    def add_node(self, layer, name, input=None, inputs=[], merge_mode='concat', concat_axis=-1, create_output=False):\n+    def add_node(self, layer, name, input=None, inputs=[],\n+                 merge_mode='concat', concat_axis=-1, create_output=False):\n         if hasattr(layer, 'set_name'):\n             layer.set_name(name)\n         if name in self.namespace:\n@@ -197,7 +198,9 @@ class Graph(Layer):\n         self.node_config.append({'name': name,\n                                  'input': input,\n                                  'inputs': inputs,\n-                                 'merge_mode': merge_mode})\n+                                 'merge_mode': merge_mode,\n+                                 'concat_axis': concat_axis,\n+                                 'create_output': create_output})\n         layer.init_updates()\n         params, regularizers, constraints, updates = layer.get_params()\n         self.params += params\n@@ -208,7 +211,8 @@ class Graph(Layer):\n         if create_output:\n             self.add_output(name, input=name)\n \n-    def add_output(self, name, input=None, inputs=[], merge_mode='concat', concat_axis=-1):\n+    def add_output(self, name, input=None, inputs=[],\n+                   merge_mode='concat', concat_axis=-1):\n         if name in self.output_order:\n             raise Exception('Duplicate output identifier: ' + name)\n         if input:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#289804c67ca1329f7992a00a751d80394f85f93e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 713 | Contributors (this commit): 10 | Commits (past 90d): 30 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -3,6 +3,7 @@ from __future__ import absolute_import\n \n import theano\n import theano.tensor as T\n+from theano.tensor.signal import downsample\n \n from .. import activations, initializations, regularizers, constraints\n from ..utils.theano_utils import shared_zeros, on_gpu\n@@ -212,7 +213,7 @@ class MaxPooling1D(Layer):\n     def get_output(self, train):\n         X = self.get_input(train)\n         X = T.reshape(X, (X.shape[0], X.shape[1], X.shape[2], 1)).dimshuffle(0, 2, 1, 3)\n-        output = T.signal.downsample.max_pool_2d(X, ds=self.poolsize, st=self.st, ignore_border=self.ignore_border)\n+        output = downsample.max_pool_2d(X, ds=self.poolsize, st=self.st, ignore_border=self.ignore_border)\n         output = output.dimshuffle(0, 2, 1, 3)\n         return T.reshape(output, (output.shape[0], output.shape[1], output.shape[2]))\n \n@@ -233,7 +234,7 @@ class MaxPooling2D(Layer):\n \n     def get_output(self, train):\n         X = self.get_input(train)\n-        output = T.signal.downsample.max_pool_2d(X, ds=self.poolsize, st=self.stride, ignore_border=self.ignore_border)\n+        output = downsample.max_pool_2d(X, ds=self.poolsize, st=self.stride, ignore_border=self.ignore_border)\n         return output\n \n     def get_config(self):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#c5b3959b4214cfe324573b0b1ed0c3d79a1ed1a2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 187 | Contributors (this commit): 1 | Commits (past 90d): 7 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -101,7 +101,7 @@ class TestRegularizers(unittest.TestCase):\n         model.add(TimeDistributedDense(X_train.shape[-1], y_train.shape[-1]))\n         model.compile(loss='hinge', optimizer='rmsprop')\n         history = model.fit(X_train, y_train, nb_epoch=12, batch_size=16, validation_data=(X_test, y_test), verbose=2)\n-        self.assertTrue(history.history['val_loss'][-1] < 0.75)\n+        self.assertTrue(history.history['val_loss'][-1] < 0.8)\n \n     def test_img_clf(self):\n         print('image classification data:')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#65b794957f367beff41137df1fce6c355bc49d6d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 197 | Contributors (this commit): 4 | Commits (past 90d): 9 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -5,7 +5,7 @@ import theano\n import copy\n \n from ..layers.advanced_activations import LeakyReLU, PReLU\n-from ..layers.core import Dense, Merge, Dropout, Activation, Reshape, Flatten, RepeatVector, Layer, AutoEncoder\n+from ..layers.core import Dense, Merge, Dropout, Activation, Reshape, Flatten, RepeatVector, Layer, AutoEncoder, Masking\n from ..layers.core import ActivityRegularization, TimeDistributedDense, AutoEncoder, MaxoutDense\n from ..layers.convolutional import Convolution1D, Convolution2D, MaxPooling1D, MaxPooling2D, ZeroPadding2D\n from ..layers.embeddings import Embedding, WordContextProduct\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#cd82deb152f7903f338be66f0b9bdb51c689b716", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 653 | Contributors (this commit): 10 | Commits (past 90d): 18 | Contributors (cumulative): 10 | DMM Complexity: 1.0\n\nDIFF:\n@@ -55,6 +55,7 @@ class SGD(Optimizer):\n         self.iterations = shared_scalar(0)\n         self.lr = shared_scalar(lr)\n         self.momentum = shared_scalar(momentum)\n+        self.decay = shared_scalar(decay)\n \n     def get_updates(self, params, constraints, loss):\n         grads = self.get_gradients(loss, params)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#a582b184c9918cdf556c9892b70481deccded61d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 89 | Contributors (this commit): 5 | Commits (past 90d): 8 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n@@ -10,5 +10,8 @@ setup(name='Keras',\n       url='https://github.com/fchollet/keras',\n       download_url='https://github.com/fchollet/keras/tarball/0.1.2',\n       license='MIT',\n-      install_requires=['theano', 'pyyaml', 'h5py'],\n+      install_requires=['theano', 'pyyaml'],\n+      extras_require = {\n+          'h5py': ['h5py'],\n+      },\n       packages=find_packages())\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#a5653c245acfe0fe59b1e7901102c5ddc687c1c7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 23 | Contributors (this commit): 3 | Commits (past 90d): 2 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -104,7 +104,7 @@ def img_to_array(img):\n \n def load_img(path, grayscale=False):\n     from PIL import Image\n-    img = Image.open(open(path))\n+    img = Image.open(path)\n     if grayscale:\n         img = img.convert('L')\n     else: # Assure 3 channel even when loaded image is grayscale\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#1a953feaf79046299813ab2e2e7788c32f82ccc9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 35 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 9/9 | Churn Δ: 37 | Churn Cumulative: 1779 | Contributors (this commit): 19 | Commits (past 90d): 55 | Contributors (cumulative): 19 | DMM Complexity: 0.9130434782608695\n\nDIFF:\n@@ -159,11 +159,42 @@ class Masking(MaskedLayer):\n         return {\"name\": self.__class__.__name__,\n                 \"mask_value\": self.mask_value}\n \n+class TimeDistributedMerge(Layer):\n+    def __init__(self, mode='sum'):\n+        '''\n+        Sum/multiply/avearge over a time distributed layer's outputs.\n+        mode: {'sum', 'mul', 'ave'}\n+        Tensor input dimensions:   (nb_sample, shared_dimension, input_dim)\n+        Tensor output dimensions:  (nb_sample, output_dim)\n+        '''\n+        self.mode = mode\n+        self.params = []\n+        self.regularizers = []\n+        self.constraints = []\n+        self.updates = []\n+\n+    def get_output(self, train=False):\n+        X = self.get_input(train)\n+        if self.mode == 'sum' or self.mode == 'ave':\n+            s = theano.tensor.sum(X, axis=1)\n+            if self.mode == 'ave':\n+                s /= X.shape[1]\n+            return s\n+        elif self.mode == 'mul':\n+            s = theano.tensor.mul(X, axis=1)\n+            return s\n+        else:\n+            raise Exception('Unknown merge mode')\n+\n+    def get_config(self):\n+        return {\"name\": self.__class__.__name__,\n+                \"mode\": self.mode}\n+\n \n class Merge(Layer):\n     def __init__(self, layers, mode='sum'):\n         ''' Merge the output of a list of layers or containers into a single tensor.\n-            mode: {'sum', 'mul', 'concat'}\n+            mode: {'sum', 'mul', 'concat', 'ave'}\n         '''\n         if len(layers) < 2:\n             raise Exception(\"Please specify two or more input layers (or containers) to merge\")\n@@ -187,10 +218,12 @@ class Merge(Layer):\n         return self.params, self.regularizers, self.constraints, self.updates\n \n     def get_output(self, train=False):\n-        if self.mode == 'sum':\n+        if self.mode == 'sum' or self.mode == 'ave':\n             s = self.layers[0].get_output(train)\n             for i in range(1, len(self.layers)):\n                 s += self.layers[i].get_output(train)\n+            if self.mode == 'ave':\n+                s /= len(self.layers)\n             return s\n         elif self.mode == 'concat':\n             inputs = [self.layers[i].get_output(train) for i in range(len(self.layers))]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#5c3db2fea62b452e0563cf7dee8f7711752a56fa", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -7/0 | Churn Δ: 3 | Churn Cumulative: 1782 | Contributors (this commit): 20 | Commits (past 90d): 56 | Contributors (cumulative): 20 | DMM Complexity: 0.0\n\nDIFF:\n@@ -196,6 +196,9 @@ class Merge(Layer):\n         elif self.mode == 'concat':\n             inputs = [self.layers[i].get_output(train) for i in range(len(self.layers))]\n             return T.concatenate(inputs, axis=self.concat_axis)\n+        elif self.mode == 'join':\n+            inputs = [self.layers[i].get_output(train) for i in range(len(self.layers))]\n+            return inputs\n         elif self.mode == 'mul':\n             s = self.layers[0].get_output(train)\n             for i in range(1, len(self.layers)):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f026bb2f5a190f3df7086a1e6a2aad55da0ec710", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 41 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 11/11 | Churn Δ: 41 | Churn Cumulative: 41 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: 0.0\n\nDIFF:\n@@ -0,0 +1,41 @@\n+# https://github.com/fchollet/keras/blob/0.1.2/keras/utils/dot_utils.py\n+# use https://github.com/erocarrera/pydot\n+import pydot\n+\n+\n+def plot(model, to_file='model.png'):\n+\n+    graph = pydot.Dot(graph_type='digraph')\n+    if type(model) == Sequential:\n+        previous_node = None\n+        written_nodes = []\n+        n = 1\n+        for node in model.get_config()['layers']:\n+            # append number in case layers have same name to differentiate\n+            if (node['name'] + str(n)) in written_nodes:\n+                n += 1\n+            current_node = pydot.Node(node['name'] + str(n))\n+            written_nodes.append(node['name'] + str(n))\n+            graph.add_node(current_node)\n+            if previous_node:\n+                graph.add_edge(pydot.Edge(previous_node, current_node))\n+            previous_node = current_node\n+        graph.write_png(to_file)\n+\n+    elif type(model) == Graph:\n+        # don't need to append number for names since all nodes labeled\n+        for input_node in model.input_config:\n+            graph.add_node(pydot.Node(input_node['name']))\n+\n+        # intermediate and output nodes have input defined\n+        for layer_config in [model.node_config, model.output_config]:\n+            for node in layer_config:\n+                graph.add_node(pydot.Node(node['name']))\n+                # possible to have multiple 'inputs' vs 1 'input'\n+                if node['inputs']:\n+                    for e in node['inputs']:\n+                        graph.add_edge(pydot.Edge(e, node['name']))\n+                else:\n+                    graph.add_edge(pydot.Edge(node['input'], node['name']))\n+\n+        graph.write_png(to_file)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#6bb9eecd0cd65748774ef06f74dac6cb47959f4b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 45 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n-# https://github.com/fchollet/keras/blob/0.1.2/keras/utils/dot_utils.py\n-# use https://github.com/erocarrera/pydot\n import pydot\n+# old pydot will not work with python3, must use one\n+# that works with python3 such as pydot2 or pydot\n \n \n def plot(model, to_file='model.png'):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#51818e5b7b38d444543fe33ad54c15cb93b30fbc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 822 | Contributors (this commit): 9 | Commits (past 90d): 19 | Contributors (cumulative): 9 | DMM Complexity: 1.0\n\nDIFF:\n@@ -99,10 +99,11 @@ class Callback(object):\n class BaseLogger(Callback):\n     def on_train_begin(self, logs={}):\n         self.verbose = self.params['verbose']\n+        self.nb_epoch = self.params['nb_epoch']\n \n     def on_epoch_begin(self, epoch, logs={}):\n         if self.verbose:\n-            print('Epoch %d' % epoch)\n+            print('Epoch %d out of %d' % (epoch, self.nb_epoch))\n             self.progbar = Progbar(target=self.params['nb_sample'],\n                                    verbose=self.verbose)\n         self.seen = 0\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#80c0c762fdf7e57d921e0158ea34714773e43ba6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 56 | Lines Deleted: 0 | Files Changed: 4 | Hunks: 5 | Methods Changed: 4 | Complexity Δ (Sum/Max): 6/4 | Churn Δ: 56 | Churn Cumulative: 2927 | Contributors (this commit): 24 | Commits (past 90d): 94 | Contributors (cumulative): 33 | DMM Complexity: 1.0\n\nDIFF:\n@@ -80,6 +80,8 @@ class Sequential(Layer):\n         return {\"name\": self.__class__.__name__,\n                 \"layers\": [layer.get_config() for layer in self.layers]}\n \n+    def count_params(self):\n+        return sum([layer.count_params() for layer in self.layers])\n \n class Graph(Layer):\n     '''\n@@ -246,3 +248,6 @@ class Graph(Layer):\n                 \"input_order\": self.input_order,\n                 \"output_order\": self.output_order,\n                 \"nodes\": dict([(c[\"name\"], self.nodes[c[\"name\"]].get_config()) for c in self.node_config])}\n+\n+    def count_params(self):\n+        return sum([layer.count_params() for layer in self.nodes.values()])\n\n@@ -110,6 +110,8 @@ class Layer(object):\n         for i in range(len(self.params)):\n             self.params[i].name = '%s_p%d' % (name, i)\n \n+    def count_params(self):\n+        return sum([np.prod(p.shape.eval()) for p in self.params])\n \n class MaskedLayer(Layer):\n     '''\n\n@@ -209,6 +209,34 @@ class TestGraph(unittest.TestCase):\n         print(loss)\n         assert(loss < 2.5)\n \n+    def test_count_params(self):\n+        print('test count params')\n+\n+        nb_units = 100\n+        nb_classes = 2\n+\n+        graph = Graph()\n+        graph.add_input(name='input1', ndim=2)\n+        graph.add_input(name='input2', ndim=2)\n+        graph.add_node(Dense(nb_units, nb_units),\n+                name='dense1', input='input1')\n+        graph.add_node(Dense(nb_units, nb_classes),\n+                name='dense2', input='input2')\n+        graph.add_node(Dense(nb_units, nb_classes),\n+                name='dense3', input='dense1')\n+        graph.add_output(name='output', inputs=['dense2', 'dense3'],\n+                merge_mode='sum')\n+\n+        n = nb_units * nb_units + nb_units\n+        n += nb_units * nb_classes + nb_classes\n+        n += nb_units * nb_classes + nb_classes\n+\n+        self.assertEqual(n, graph.count_params())\n+\n+        graph.compile('rmsprop', {'output': 'binary_crossentropy'})\n+\n+        self.assertEqual(n, graph.count_params())\n+\n \n if __name__ == '__main__':\n     print('Test graph model')\n\n@@ -276,6 +276,27 @@ class TestSequential(unittest.TestCase):\n         print(nloss)\n         assert(loss == nloss)\n \n+    def test_count_params(self):\n+        print('test count params')\n+        nb_units = 100\n+        nb_classes = 2\n+\n+        n = nb_units * nb_units + nb_units\n+        n += nb_units * nb_units + nb_units\n+        n += nb_units * nb_classes + nb_classes\n+\n+        model = Sequential()\n+        model.add(Dense(nb_units, nb_units))\n+        model.add(Dense(nb_units, nb_units))\n+        model.add(Dense(nb_units, nb_classes))\n+        model.add(Activation('softmax'))\n+\n+        self.assertEqual(n, model.count_params())\n+\n+        model.compile('sgd', 'binary_crossentropy')\n+\n+        self.assertEqual(n, model.count_params())\n+\n \n if __name__ == '__main__':\n     print('Test Sequential model')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#b9403cb2621a048a885e30f5a9527a14f061a0a6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 3 | Churn Cumulative: 78 | Contributors (this commit): 7 | Commits (past 90d): 5 | Contributors (cumulative): 7 | DMM Complexity: 0.0\n\nDIFF:\n@@ -107,7 +107,10 @@ class Progbar(object):\n             else:\n                 info += ' - %ds' % (now - self.start)\n             for k in self.unique_values:\n+                if type(self.sum_values[k]) is list:\n                     info += ' - %s: %.4f' % (k, self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n+                else:\n+                    info += ' - %s: %s' % (k, self.sum_values[k])\n                 \n             self.total_width += len(info)\n             if prev_total_width > self.total_width:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#9827db2c85a72561a5f897e20a88b11ed2876990", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 824 | Contributors (this commit): 9 | Commits (past 90d): 17 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -103,7 +103,7 @@ class BaseLogger(Callback):\n \n     def on_epoch_begin(self, epoch, logs={}):\n         if self.verbose:\n-            print('Epoch %d out of %d' % (epoch, self.nb_epoch))\n+            print('Epoch %d/%d' % (epoch + 1, self.nb_epoch + 1))\n             self.progbar = Progbar(target=self.params['nb_sample'],\n                                    verbose=self.verbose)\n         self.seen = 0\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#eee20b4614b9bf312388c23764ce7a63e58ddf2a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 826 | Contributors (this commit): 9 | Commits (past 90d): 18 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -103,7 +103,7 @@ class BaseLogger(Callback):\n \n     def on_epoch_begin(self, epoch, logs={}):\n         if self.verbose:\n-            print('Epoch %d/%d' % (epoch + 1, self.nb_epoch + 1))\n+            print('Epoch %d/%d' % (epoch + 1, self.nb_epoch))\n             self.progbar = Progbar(target=self.params['nb_sample'],\n                                    verbose=self.verbose)\n         self.seen = 0\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#a6521de3e3620219f2ae563ba713b9b4eed66667", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 715 | Contributors (this commit): 10 | Commits (past 90d): 28 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -30,7 +30,7 @@ class Convolution1D(Layer):\n         self.subsample_length = subsample_length\n         self.init = initializations.get(init)\n         self.activation = activations.get(activation)\n-        self.subsample = (1, subsample_length)\n+        self.subsample = (subsample_length, 1)\n         self.border_mode = border_mode\n \n         self.input = T.tensor3()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#8bfafd6d7f814bcd0e77f6f34c17c2c9a003a02b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 1790 | Contributors (this commit): 21 | Commits (past 90d): 48 | Contributors (cumulative): 21 | DMM Complexity: 0.0\n\nDIFF:\n@@ -5,6 +5,8 @@ import theano\n import theano.tensor as T\n import numpy as np\n \n+from collections import OrderedDict\n+\n from .. import activations, initializations, regularizers, constraints\n from ..utils.theano_utils import shared_zeros, floatX\n from ..utils.generic_utils import make_tuple\n@@ -197,7 +199,9 @@ class Merge(Layer):\n             inputs = [self.layers[i].get_output(train) for i in range(len(self.layers))]\n             return T.concatenate(inputs, axis=self.concat_axis)\n         elif self.mode == 'join':\n-            inputs = [self.layers[i].get_output(train) for i in range(len(self.layers))]\n+            inputs = OrderedDict()\n+            for i in range(len(self.layers)):\n+                inputs[self.layers[i].get_output(train).name] = self.layers[i].get_output(train)\n             return inputs\n         elif self.mode == 'mul':\n             s = self.layers[0].get_output(train)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#cba5cfa5978f6f8443642c51f13e6404e7aceec4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 4 | Churn Cumulative: 166 | Contributors (this commit): 4 | Commits (past 90d): 6 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -104,6 +104,10 @@ class TestConfigParams(unittest.TestCase):\n         layer = core.TimeDistributedDense(10, 10)\n         self._runner(layer)\n \n+    def test_time_dist_merge(self):\n+        layer = core.TimeDistributedMerge()\n+        self._runner(layer)\n+\n     def test_autoencoder(self):\n         layer_1 = core.Layer()\n         layer_2 = core.Layer()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#36578f856927cd76c8ef32b75afff9a0967f4638", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 870 | Contributors (this commit): 8 | Commits (past 90d): 11 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -24,7 +24,8 @@ class Recurrent(MaskedLayer):\n \n         # mask is (nb_samples, time)\n         mask = T.shape_padright(mask)  # (nb_samples, time, 1)\n-        mask = T.addbroadcast(mask, -1)  # (time, nb_samples, 1) matrix.\n+        mask = T.addbroadcast(mask, -1)  # the new dimension (the '1') is made broadcastable\n+        # see http://deeplearning.net/software/theano/library/tensor/basic.html#broadcasting-in-theano-vs-numpy\n         mask = mask.dimshuffle(1, 0, 2)  # (time, nb_samples, 1)\n \n         if pad > 0:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#cccc1182257328ba45873b94f67fb0da39525bd1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 3 | Churn Cumulative: 1793 | Contributors (this commit): 21 | Commits (past 90d): 39 | Contributors (cumulative): 21 | DMM Complexity: 0.0\n\nDIFF:\n@@ -203,6 +203,9 @@ class Merge(Layer):\n         elif self.mode == 'join':\n             inputs = OrderedDict()\n             for i in range(len(self.layers)):\n+                if X.name is None:\n+                    raise ValueError('merge_mode=`join` only works with named inputs')\n+                else:\n                     inputs[self.layers[i].get_output(train).name] = self.layers[i].get_output(train)\n             return inputs\n         elif self.mode == 'mul':\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#dd6697738b28e6b46d1df81ef548b02fb4b1b728", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 1798 | Contributors (this commit): 21 | Commits (past 90d): 40 | Contributors (cumulative): 21 | DMM Complexity: 0.0\n\nDIFF:\n@@ -203,10 +203,11 @@ class Merge(Layer):\n         elif self.mode == 'join':\n             inputs = OrderedDict()\n             for i in range(len(self.layers)):\n+                X = self.layers[i].get_output(train)\n                 if X.name is None:\n-                    raise ValueError('merge_mode=`join` only works with named inputs')\n+                    raise ValueError(\"merge_mode='join' only works with named inputs\")\n                 else:\n-                    inputs[self.layers[i].get_output(train).name] = self.layers[i].get_output(train)\n+                    inputs[X.name] = self.layers[i].get_output(train)\n             return inputs\n         elif self.mode == 'mul':\n             s = self.layers[0].get_output(train)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#d5cd2687ede558b6c9e83f3d38e61d5b9ec1b77d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 326 | Contributors (this commit): 4 | Commits (past 90d): 5 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -158,7 +158,7 @@ norm_weights = np_utils.normalize(weights)\n \n word_index = tokenizer.word_index\n reverse_word_index = dict([(v, k) for k, v in list(word_index.items())])\n-word_index = tokenizer.word_index\n+\n \n \n def embed_word(w):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#69afdd7ec40f23b056bafa73a82535a41e29e764", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 5/5 | Churn Δ: 9 | Churn Cumulative: 662 | Contributors (this commit): 10 | Commits (past 90d): 15 | Contributors (cumulative): 10 | DMM Complexity: 0.0\n\nDIFF:\n@@ -13,6 +13,12 @@ def clip_norm(g, c, n):\n     return g\n \n \n+def clip_value(g, c):\n+    if c > 0:\n+        g = T.switch(T.ge(g, c), c, g)\n+    return g\n+\n+\n def kl_divergence(p, p_hat):\n     return p_hat - p + p * T.log(p / p_hat)\n \n@@ -41,6 +47,9 @@ class Optimizer(object):\n             norm = T.sqrt(sum([T.sum(g ** 2) for g in grads]))\n             grads = [clip_norm(g, self.clipnorm, norm) for g in grads]\n \n+        if hasattr(self, 'clipvalue') and self.clipvalue > 0:\n+            grads = [clip_value(g, self.clipvalue) for g in grads]\n+\n         return grads\n \n     def get_config(self):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#b6d8e9dd4e52f7d8bb58a3d9b341261a2fab84b0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 8 | Churn Cumulative: 670 | Contributors (this commit): 10 | Commits (past 90d): 16 | Contributors (cumulative): 10 | DMM Complexity: 0.0\n\nDIFF:\n@@ -13,12 +13,6 @@ def clip_norm(g, c, n):\n     return g\n \n \n-def clip_value(g, c):\n-    if c > 0:\n-        g = T.switch(T.ge(g, c), c, g)\n-    return g\n-\n-\n def kl_divergence(p, p_hat):\n     return p_hat - p + p * T.log(p / p_hat)\n \n@@ -48,7 +42,7 @@ class Optimizer(object):\n             grads = [clip_norm(g, self.clipnorm, norm) for g in grads]\n \n         if hasattr(self, 'clipvalue') and self.clipvalue > 0:\n-            grads = [clip_value(g, self.clipvalue) for g in grads]\n+            grads = [T.clip(g, self.clipvalue, -self.clipvalue) for g in grads]\n \n         return grads\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#7a2e8ce8a2970fe42d7c0e7db5024d4bc812d71a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 6/6 | Churn Δ: 10 | Churn Cumulative: 207 | Contributors (this commit): 9 | Commits (past 90d): 12 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -17,7 +17,7 @@ def softplus(x):\n \n \n def relu(x):\n-    return (x + abs(x)) / 2.0\n+    return T.nnet.relu(X)\n \n \n def tanh(x):\n\n@@ -12,7 +12,7 @@ class LeakyReLU(MaskedLayer):\n \n     def get_output(self, train):\n         X = self.get_input(train)\n-        return ((X + abs(X)) / 2.0) + self.alpha * ((X - abs(X)) / 2.0)\n+        return T.nnet.relu(X, self.alpha)\n \n     def get_config(self):\n         return {\"name\": self.__class__.__name__,\n@@ -37,8 +37,8 @@ class PReLU(MaskedLayer):\n \n     def get_output(self, train):\n         X = self.get_input(train)\n-        pos = ((X + abs(X)) / 2.0)\n-        neg = self.alphas * ((X - abs(X)) / 2.0)\n+        pos = T.nnet.relu(X)\n+        neg = self.alphas * (X - abs(X)) * 0.5\n         return pos + neg\n \n     def get_config(self):\n@@ -78,6 +78,7 @@ class ParametricSoftplus(MaskedLayer):\n                 \"alpha_init\": self.alpha_init,\n                 \"beta_init\": self.beta_init}\n \n+\n class ThresholdedLinear(MaskedLayer):\n     '''\n         Thresholded Linear Activation\n@@ -98,6 +99,7 @@ class ThresholdedLinear(MaskedLayer):\n         return {\"name\": self.__class__.__name__,\n                 \"theta\": self.theta}\n \n+\n class ThresholdedReLu(MaskedLayer):\n     '''\n         Thresholded Rectified Activation\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#b0f2446370dae108ac49566e5d3e7951255663fe", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 50 | Contributors (this commit): 5 | Commits (past 90d): 3 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n@@ -17,7 +17,7 @@ def softplus(x):\n \n \n def relu(x):\n-    return T.nnet.relu(X)\n+    return T.nnet.relu(x)\n \n \n def tanh(x):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#46a2fb6fd8e52b02df78f1416cc9fbd4b3156604", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 672 | Contributors (this commit): 10 | Commits (past 90d): 17 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -42,7 +42,7 @@ class Optimizer(object):\n             grads = [clip_norm(g, self.clipnorm, norm) for g in grads]\n \n         if hasattr(self, 'clipvalue') and self.clipvalue > 0:\n-            grads = [T.clip(g, self.clipvalue, -self.clipvalue) for g in grads]\n+            grads = [T.clip(g, -self.clipvalue, self.clipvalue) for g in grads]\n \n         return grads\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#56ae624f1238c293e2633677aa721bf548ac0186", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 5 | Files Changed: 1 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 9 | Churn Cumulative: 2906 | Contributors (this commit): 22 | Commits (past 90d): 49 | Contributors (cumulative): 22 | DMM Complexity: 1.0\n\nDIFF:\n@@ -200,9 +200,8 @@ class Model(object):\n                 try:\n                     ins_batch = slice_X(ins, batch_ids)\n                 except TypeError as err:\n-                    print('TypeError while preparing batch. \\\n+                    raise Exception('TypeError while preparing batch. \\\n                         If using HDF5 input data, pass shuffle=\"batch\".\\n')\n-                    raise\n \n                 batch_logs = {}\n                 batch_logs['batch'] = batch_index\n@@ -643,8 +642,9 @@ class Graph(Model, containers.Graph):\n             validation_split=0., validation_data=None, shuffle=True, class_weight={}, sample_weight={}):\n         X = [data[name] for name in self.input_order]\n         y = [standardize_y(data[name]) for name in self.output_order]\n-        sample_weight_list = [standardize_weights(data[name],\n-                                                  sample_weight=sample_weight.get(name)) for name in self.output_order]\n+\n+        sample_weight_list = [standardize_weights(y[i],\n+                                                  sample_weight=sample_weight.get(self.output_order[i])) for i in range(len(self.output_order))]\n         class_weight_list = [class_weight.get(name) for name in self.output_order]\n \n         val_f = None\n@@ -671,7 +671,6 @@ class Graph(Model, containers.Graph):\n                                                   sample_weight=sample_weight_list[i],\n                                                   class_weight=class_weight_list[i]) for i in range(len(self.output_order))]\n         ins = X + y + sample_weight_list\n-\n         history = self._fit(f, ins, out_labels=out_labels, batch_size=batch_size, nb_epoch=nb_epoch,\n                             verbose=verbose, callbacks=callbacks,\n                             val_f=val_f, val_ins=val_ins,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
