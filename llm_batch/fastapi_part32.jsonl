{"custom_id": "fastapi#73260971b5a1499c92e70aa11a96c406497a1f14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 316 | Lines Deleted: 38 | Files Changed: 13 | Hunks: 82 | Methods Changed: 29 | Complexity Δ (Sum/Max): 18/10 | Churn Δ: 354 | Churn Cumulative: 8886 | Contributors (this commit): 24 | Commits (past 90d): 40 | Contributors (cumulative): 67 | DMM Complexity: 0.0\n\nDIFF:\n@@ -0,0 +1,53 @@\n+from fastapi import APIRouter, FastAPI\n+from pydantic import BaseModel, HttpUrl\n+from starlette.responses import JSONResponse\n+\n+app = FastAPI()\n+\n+\n+class Invoice(BaseModel):\n+    id: str\n+    title: str = None\n+    customer: str\n+    total: float\n+\n+\n+class InvoiceEvent(BaseModel):\n+    description: str\n+    paid: bool\n+\n+\n+class InvoiceEventReceived(BaseModel):\n+    ok: bool\n+\n+\n+invoices_callback_router = APIRouter(default_response_class=JSONResponse)\n+\n+\n+@invoices_callback_router.post(\n+    \"{$callback_url}/invoices/{$request.body.id}\",\n+    response_model=InvoiceEventReceived,\n+)\n+def invoice_notification(body: InvoiceEvent):\n+    pass\n+\n+\n+@app.post(\"/invoices/\", callbacks=invoices_callback_router.routes)\n+def create_invoice(invoice: Invoice, callback_url: HttpUrl = None):\n+    \"\"\"\n+    Create an invoice.\n+\n+    This will (let's imagine) let the API user (some external developer) create an\n+    invoice.\n+\n+    And this path operation will:\n+\n+    * Send the invoice to the client.\n+    * Collect the money from the client.\n+    * Send a notification back to the API user (the external developer), as a callback.\n+        * At this point is that the API will somehow send a POST request to the\n+            external API with the notification of the invoice event\n+            (e.g. \"payment successful\").\n+    \"\"\"\n+    # Send the invoice, collect the money, send the notification (the callback)\n+    return {\"msg\": \"Invoice received\"}\n\n@@ -303,6 +303,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -327,6 +328,7 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def put(\n@@ -351,6 +353,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -375,6 +378,7 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def post(\n@@ -399,6 +403,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -423,6 +428,7 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def delete(\n@@ -447,6 +453,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -471,6 +478,7 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def options(\n@@ -495,6 +503,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -519,6 +528,7 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def head(\n@@ -543,6 +553,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -567,6 +578,7 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def patch(\n@@ -591,6 +603,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -615,6 +628,7 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def trace(\n@@ -639,6 +653,7 @@ class FastAPI(Starlette):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[routing.APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -663,4 +678,5 @@ class FastAPI(Starlette):\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n\n@@ -187,6 +187,14 @@ def get_openapi_path(\n                 )\n                 if request_body_oai:\n                     operation[\"requestBody\"] = request_body_oai\n+            if route.callbacks:\n+                callbacks = {}\n+                for callback in route.callbacks:\n+                    cb_path, cb_security_schemes, cb_definitions, = get_openapi_path(\n+                        route=callback, model_name_map=model_name_map\n+                    )\n+                    callbacks[callback.name] = {callback.path: cb_path}\n+                operation[\"callbacks\"] = callbacks\n             if route.responses:\n                 for (additional_status_code, response) in route.responses.items():\n                     assert isinstance(\n\n@@ -218,6 +218,7 @@ class APIRoute(routing.Route):\n         include_in_schema: bool = True,\n         response_class: Optional[Type[Response]] = None,\n         dependency_overrides_provider: Any = None,\n+        callbacks: Optional[List[\"APIRoute\"]] = None,\n     ) -> None:\n         self.path = path\n         self.endpoint = endpoint\n@@ -338,6 +339,7 @@ class APIRoute(routing.Route):\n             )\n         self.body_field = get_body_field(dependant=self.dependant, name=self.unique_id)\n         self.dependency_overrides_provider = dependency_overrides_provider\n+        self.callbacks = callbacks\n         self.app = request_response(self.get_route_handler())\n \n     def get_route_handler(self) -> Callable:\n@@ -363,12 +365,14 @@ class APIRouter(routing.Router):\n         default: ASGIApp = None,\n         dependency_overrides_provider: Any = None,\n         route_class: Type[APIRoute] = APIRoute,\n+        default_response_class: Type[Response] = None,\n     ) -> None:\n         super().__init__(\n             routes=routes, redirect_slashes=redirect_slashes, default=default\n         )\n         self.dependency_overrides_provider = dependency_overrides_provider\n         self.route_class = route_class\n+        self.default_response_class = default_response_class\n \n     def add_api_route(\n         self,\n@@ -395,6 +399,7 @@ class APIRouter(routing.Router):\n         response_class: Type[Response] = None,\n         name: str = None,\n         route_class_override: Optional[Type[APIRoute]] = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> None:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -420,9 +425,10 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n             dependency_overrides_provider=self.dependency_overrides_provider,\n+            callbacks=callbacks,\n         )\n         self.routes.append(route)\n \n@@ -449,6 +455,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -475,8 +482,9 @@ class APIRouter(routing.Router):\n                     response_model_exclude_unset or response_model_skip_defaults\n                 ),\n                 include_in_schema=include_in_schema,\n-                response_class=response_class,\n+                response_class=response_class or self.default_response_class,\n                 name=name,\n+                callbacks=callbacks,\n             )\n             return func\n \n@@ -586,6 +594,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -609,8 +618,9 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def put(\n@@ -635,6 +645,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -658,8 +669,9 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def post(\n@@ -684,6 +696,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -707,8 +720,9 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def delete(\n@@ -733,6 +747,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -756,8 +771,9 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def options(\n@@ -782,6 +798,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -805,8 +822,9 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def head(\n@@ -831,6 +849,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -854,8 +873,9 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def patch(\n@@ -880,6 +900,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -903,8 +924,9 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n \n     def trace(\n@@ -929,6 +951,7 @@ class APIRouter(routing.Router):\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n+        callbacks: List[APIRoute] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -952,6 +975,7 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n             include_in_schema=include_in_schema,\n-            response_class=response_class,\n+            response_class=response_class or self.default_response_class,\n             name=name,\n+            callbacks=callbacks,\n         )\n\n@@ -46,6 +46,7 @@ def warning_response_model_skip_defaults_deprecated() -> None:\n def get_flat_models_from_routes(routes: Sequence[BaseRoute]) -> Set[Type[BaseModel]]:\n     body_fields_from_routes: List[ModelField] = []\n     responses_from_routes: List[ModelField] = []\n+    callback_flat_models: Set[Type[BaseModel]] = set()\n     for route in routes:\n         if getattr(route, \"include_in_schema\", None) and isinstance(\n             route, routing.APIRoute\n@@ -59,7 +60,9 @@ def get_flat_models_from_routes(routes: Sequence[BaseRoute]) -> Set[Type[BaseMod\n                 responses_from_routes.append(route.response_field)\n             if route.response_fields:\n                 responses_from_routes.extend(route.response_fields.values())\n-    flat_models = get_flat_models_from_fields(\n+            if route.callbacks:\n+                callback_flat_models |= get_flat_models_from_routes(route.callbacks)\n+    flat_models = callback_flat_models | get_flat_models_from_fields(\n         body_fields_from_routes + responses_from_routes, known_models=set()\n     )\n     return flat_models\n@@ -153,6 +156,6 @@ def create_cloned_field(field: ModelField) -> ModelField:\n \n def generate_operation_id_for_path(*, name: str, path: str, method: str) -> str:\n     operation_id = name + path\n-    operation_id = operation_id.replace(\"{\", \"_\").replace(\"}\", \"_\").replace(\"/\", \"_\")\n+    operation_id = re.sub(\"[^0-9a-zA-Z_]\", \"_\", operation_id)\n     operation_id = operation_id + \"_\" + method.lower()\n     return operation_id\n\n@@ -244,7 +244,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Required Id\",\n-                \"operationId\": \"get_path_param_required_id_path_param-required__item_id__get\",\n+                \"operationId\": \"get_path_param_required_id_path_param_required__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -274,7 +274,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Min Length\",\n-                \"operationId\": \"get_path_param_min_length_path_param-minlength__item_id__get\",\n+                \"operationId\": \"get_path_param_min_length_path_param_minlength__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -308,7 +308,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Max Length\",\n-                \"operationId\": \"get_path_param_max_length_path_param-maxlength__item_id__get\",\n+                \"operationId\": \"get_path_param_max_length_path_param_maxlength__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -342,7 +342,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Min Max Length\",\n-                \"operationId\": \"get_path_param_min_max_length_path_param-min_maxlength__item_id__get\",\n+                \"operationId\": \"get_path_param_min_max_length_path_param_min_maxlength__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -377,7 +377,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Gt\",\n-                \"operationId\": \"get_path_param_gt_path_param-gt__item_id__get\",\n+                \"operationId\": \"get_path_param_gt_path_param_gt__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -411,7 +411,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Gt0\",\n-                \"operationId\": \"get_path_param_gt0_path_param-gt0__item_id__get\",\n+                \"operationId\": \"get_path_param_gt0_path_param_gt0__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -445,7 +445,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Ge\",\n-                \"operationId\": \"get_path_param_ge_path_param-ge__item_id__get\",\n+                \"operationId\": \"get_path_param_ge_path_param_ge__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -479,7 +479,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Lt\",\n-                \"operationId\": \"get_path_param_lt_path_param-lt__item_id__get\",\n+                \"operationId\": \"get_path_param_lt_path_param_lt__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -513,7 +513,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Lt0\",\n-                \"operationId\": \"get_path_param_lt0_path_param-lt0__item_id__get\",\n+                \"operationId\": \"get_path_param_lt0_path_param_lt0__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -547,7 +547,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Le\",\n-                \"operationId\": \"get_path_param_le_path_param-le__item_id__get\",\n+                \"operationId\": \"get_path_param_le_path_param_le__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -581,7 +581,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Lt Gt\",\n-                \"operationId\": \"get_path_param_lt_gt_path_param-lt-gt__item_id__get\",\n+                \"operationId\": \"get_path_param_lt_gt_path_param_lt_gt__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -616,7 +616,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Le Ge\",\n-                \"operationId\": \"get_path_param_le_ge_path_param-le-ge__item_id__get\",\n+                \"operationId\": \"get_path_param_le_ge_path_param_le_ge__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -651,7 +651,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Lt Int\",\n-                \"operationId\": \"get_path_param_lt_int_path_param-lt-int__item_id__get\",\n+                \"operationId\": \"get_path_param_lt_int_path_param_lt_int__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -685,7 +685,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Gt Int\",\n-                \"operationId\": \"get_path_param_gt_int_path_param-gt-int__item_id__get\",\n+                \"operationId\": \"get_path_param_gt_int_path_param_gt_int__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -719,7 +719,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Le Int\",\n-                \"operationId\": \"get_path_param_le_int_path_param-le-int__item_id__get\",\n+                \"operationId\": \"get_path_param_le_int_path_param_le_int__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -753,7 +753,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Ge Int\",\n-                \"operationId\": \"get_path_param_ge_int_path_param-ge-int__item_id__get\",\n+                \"operationId\": \"get_path_param_ge_int_path_param_ge_int__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -787,7 +787,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Lt Gt Int\",\n-                \"operationId\": \"get_path_param_lt_gt_int_path_param-lt-gt-int__item_id__get\",\n+                \"operationId\": \"get_path_param_lt_gt_int_path_param_lt_gt_int__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -822,7 +822,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Path Param Le Ge Int\",\n-                \"operationId\": \"get_path_param_le_ge_int_path_param-le-ge-int__item_id__get\",\n+                \"operationId\": \"get_path_param_le_ge_int_path_param_le_ge_int__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -1037,7 +1037,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Query Param Required\",\n-                \"operationId\": \"get_query_param_required_query_param-required_get\",\n+                \"operationId\": \"get_query_param_required_query_param_required_get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n@@ -1067,7 +1067,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Query Param Required Type\",\n-                \"operationId\": \"get_query_param_required_type_query_param-required_int_get\",\n+                \"operationId\": \"get_query_param_required_type_query_param_required_int_get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n\n@@ -259,7 +259,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Get Not Decorated\",\n-                \"operationId\": \"get_not_decorated_items-not-decorated__item_id__get\",\n+                \"operationId\": \"get_not_decorated_items_not_decorated__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n\n@@ -80,7 +80,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Create Item\",\n-                \"operationId\": \"create_item_starlette-items__item_id__get\",\n+                \"operationId\": \"create_item_starlette_items__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n\n@@ -27,7 +27,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Create Index Weights\",\n-                \"operationId\": \"create_index_weights_index-weights__post\",\n+                \"operationId\": \"create_index_weights_index_weights__post\",\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/json\": {\n\n@@ -16,7 +16,7 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"title\": \"Response Read Keyword Weights Keyword-Weights  Get\",\n+                                    \"title\": \"Response Read Keyword Weights Keyword Weights  Get\",\n                                     \"type\": \"object\",\n                                     \"additionalProperties\": {\"type\": \"number\"},\n                                 }\n@@ -25,7 +25,7 @@ openapi_schema = {\n                     }\n                 },\n                 \"summary\": \"Read Keyword Weights\",\n-                \"operationId\": \"read_keyword_weights_keyword-weights__get\",\n+                \"operationId\": \"read_keyword_weights_keyword_weights__get\",\n             }\n         }\n     },\n\n@@ -27,7 +27,7 @@ openapi_schema = {\n                     },\n                 },\n                 \"summary\": \"Read Item Header\",\n-                \"operationId\": \"read_item_header_items-header__item_id__get\",\n+                \"operationId\": \"read_item_header_items_header__item_id__get\",\n                 \"parameters\": [\n                     {\n                         \"required\": True,\n\n\n@@ -0,0 +1,174 @@\n+from starlette.testclient import TestClient\n+\n+from openapi_callbacks.tutorial001 import app, invoice_notification\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/invoices/\": {\n+            \"post\": {\n+                \"summary\": \"Create Invoice\",\n+                \"description\": 'Create an invoice.\\n\\nThis will (let\\'s imagine) let the API user (some external developer) create an\\ninvoice.\\n\\nAnd this path operation will:\\n\\n* Send the invoice to the client.\\n* Collect the money from the client.\\n* Send a notification back to the API user (the external developer), as a callback.\\n    * At this point is that the API will somehow send a POST request to the\\n        external API with the notification of the invoice event\\n        (e.g. \"payment successful\").',\n+                \"operationId\": \"create_invoice_invoices__post\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": False,\n+                        \"schema\": {\n+                            \"title\": \"Callback Url\",\n+                            \"maxLength\": 2083,\n+                            \"minLength\": 1,\n+                            \"type\": \"string\",\n+                            \"format\": \"uri\",\n+                        },\n+                        \"name\": \"callback_url\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\"$ref\": \"#/components/schemas/Invoice\"}\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"callbacks\": {\n+                    \"invoice_notification\": {\n+                        \"{$callback_url}/invoices/{$request.body.id}\": {\n+                            \"post\": {\n+                                \"summary\": \"Invoice Notification\",\n+                                \"operationId\": \"invoice_notification__callback_url__invoices___request_body_id__post\",\n+                                \"requestBody\": {\n+                                    \"required\": True,\n+                                    \"content\": {\n+                                        \"application/json\": {\n+                                            \"schema\": {\n+                                                \"$ref\": \"#/components/schemas/InvoiceEvent\"\n+                                            }\n+                                        }\n+                                    },\n+                                },\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/InvoiceEventReceived\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    }\n+                },\n+            }\n+        }\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"Invoice\": {\n+                \"title\": \"Invoice\",\n+                \"required\": [\"id\", \"customer\", \"total\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"id\": {\"title\": \"Id\", \"type\": \"string\"},\n+                    \"title\": {\"title\": \"Title\", \"type\": \"string\"},\n+                    \"customer\": {\"title\": \"Customer\", \"type\": \"string\"},\n+                    \"total\": {\"title\": \"Total\", \"type\": \"number\"},\n+                },\n+            },\n+            \"InvoiceEvent\": {\n+                \"title\": \"InvoiceEvent\",\n+                \"required\": [\"description\", \"paid\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"description\": {\"title\": \"Description\", \"type\": \"string\"},\n+                    \"paid\": {\"title\": \"Paid\", \"type\": \"boolean\"},\n+                },\n+            },\n+            \"InvoiceEventReceived\": {\n+                \"title\": \"InvoiceEventReceived\",\n+                \"required\": [\"ok\"],\n+                \"type\": \"object\",\n+                \"properties\": {\"ok\": {\"title\": \"Ok\", \"type\": \"boolean\"}},\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi():\n+    with client:\n+        response = client.get(\"/openapi.json\")\n+\n+        assert response.json() == openapi_schema\n+\n+\n+def test_get():\n+    response = client.post(\n+        \"/invoices/\", json={\"id\": \"fooinvoice\", \"customer\": \"John\", \"total\": 5.3}\n+    )\n+    assert response.status_code == 200\n+    assert response.json() == {\"msg\": \"Invoice received\"}\n+\n+\n+def test_dummy_callback():\n+    # Just for coverage\n+    invoice_notification({})\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#c7c69586ae05d10ef08b9130150409b972baba75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 201 | Contributors (this commit): 1 | Commits (past 90d): 8 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.44.1\"\n+__version__ = \"0.45.0\"\n \n from starlette.background import BackgroundTasks\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#04c8502cc70e1f1a9c8f73533ef650370932182a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 633 | Lines Deleted: 3 | Files Changed: 11 | Hunks: 11 | Methods Changed: 26 | Complexity Δ (Sum/Max): 35/13 | Churn Δ: 636 | Churn Cumulative: 776 | Contributors (this commit): 2 | Commits (past 90d): 11 | Contributors (cumulative): 12 | DMM Complexity: 1.0\n\nDIFF:\n\n\n@@ -0,0 +1,30 @@\n+from . import models, schemas\n+\n+\n+def get_user(user_id: int):\n+    return models.User.filter(models.User.id == user_id).first()\n+\n+\n+def get_user_by_email(email: str):\n+    return models.User.filter(models.User.email == email).first()\n+\n+\n+def get_users(skip: int = 0, limit: int = 100):\n+    return list(models.User.select().offset(skip).limit(limit))\n+\n+\n+def create_user(user: schemas.UserCreate):\n+    fake_hashed_password = user.password + \"notreallyhashed\"\n+    db_user = models.User(email=user.email, hashed_password=fake_hashed_password)\n+    db_user.save()\n+    return db_user\n+\n+\n+def get_items(skip: int = 0, limit: int = 100):\n+    return list(models.Item.select().offset(skip).limit(limit))\n+\n+\n+def create_user_item(item: schemas.ItemCreate, user_id: int):\n+    db_item = models.Item(**item.dict(), owner_id=user_id)\n+    db_item.save()\n+    return db_item\n\n@@ -0,0 +1,26 @@\n+from contextvars import ContextVar\n+\n+import peewee\n+\n+DATABASE_NAME = \"test.db\"\n+\n+\n+class PeeweeConnectionState(peewee._ConnectionState):\n+    def __init__(self, **kwargs):\n+        super().__setattr__(\"_state\", {})\n+        self._state[\"closed\"] = ContextVar(\"closed\", default=True)\n+        self._state[\"conn\"] = ContextVar(\"conn\", default=None)\n+        self._state[\"ctx\"] = ContextVar(\"ctx\", default=[])\n+        self._state[\"transactions\"] = ContextVar(\"transactions\", default=[])\n+        super().__init__(**kwargs)\n+\n+    def __setattr__(self, name, value):\n+        self._state[name].set(value)\n+\n+    def __getattr__(self, name):\n+        return self._state[name].get()\n+\n+\n+db = peewee.SqliteDatabase(DATABASE_NAME, check_same_thread=False)\n+\n+db._state = PeeweeConnectionState()\n\n@@ -0,0 +1,70 @@\n+import time\n+from typing import List\n+\n+from fastapi import Depends, FastAPI, HTTPException\n+\n+from . import crud, database, models, schemas\n+\n+database.db.connect()\n+database.db.create_tables([models.User, models.Item])\n+database.db.close()\n+\n+app = FastAPI()\n+\n+\n+# Dependency\n+def get_db():\n+    try:\n+        database.db.connect()\n+        yield\n+    finally:\n+        if not database.db.is_closed():\n+            database.db.close()\n+\n+\n+@app.post(\"/users/\", response_model=schemas.User, dependencies=[Depends(get_db)])\n+def create_user(user: schemas.UserCreate):\n+    db_user = crud.get_user_by_email(email=user.email)\n+    if db_user:\n+        raise HTTPException(status_code=400, detail=\"Email already registered\")\n+    return crud.create_user(user=user)\n+\n+\n+@app.get(\"/users/\", response_model=List[schemas.User], dependencies=[Depends(get_db)])\n+def read_users(skip: int = 0, limit: int = 100):\n+    users = crud.get_users(skip=skip, limit=limit)\n+    return users\n+\n+\n+@app.get(\n+    \"/users/{user_id}\", response_model=schemas.User, dependencies=[Depends(get_db)]\n+)\n+def read_user(user_id: int):\n+    db_user = crud.get_user(user_id=user_id)\n+    if db_user is None:\n+        raise HTTPException(status_code=404, detail=\"User not found\")\n+    return db_user\n+\n+\n+@app.post(\n+    \"/users/{user_id}/items/\",\n+    response_model=schemas.Item,\n+    dependencies=[Depends(get_db)],\n+)\n+def create_item_for_user(user_id: int, item: schemas.ItemCreate):\n+    return crud.create_user_item(item=item, user_id=user_id)\n+\n+\n+@app.get(\"/items/\", response_model=List[schemas.Item], dependencies=[Depends(get_db)])\n+def read_items(skip: int = 0, limit: int = 100):\n+    items = crud.get_items(skip=skip, limit=limit)\n+    return items\n+\n+\n+@app.get(\n+    \"/slowusers/\", response_model=List[schemas.User], dependencies=[Depends(get_db)]\n+)\n+def read_slow_users(skip: int = 0, limit: int = 100):\n+    time.sleep(15)  # Fake long processing request\n+    users = crud.get_users(skip=skip, limit=limit)\n+    return users\n\n@@ -0,0 +1,21 @@\n+import peewee\n+\n+from .database import db\n+\n+\n+class User(peewee.Model):\n+    email = peewee.CharField(unique=True, index=True)\n+    hashed_password = peewee.CharField()\n+    is_active = peewee.BooleanField(default=True)\n+\n+    class Meta:\n+        database = db\n+\n+\n+class Item(peewee.Model):\n+    title = peewee.CharField(index=True)\n+    description = peewee.CharField(index=True)\n+    owner = peewee.ForeignKeyField(User, backref=\"items\")\n+\n+    class Meta:\n+        database = db\n\n@@ -0,0 +1,49 @@\n+from typing import Any, List\n+\n+import peewee\n+from pydantic import BaseModel\n+from pydantic.utils import GetterDict\n+\n+\n+class PeeweeGetterDict(GetterDict):\n+    def get(self, key: Any, default: Any = None):\n+        res = getattr(self._obj, key, default)\n+        if isinstance(res, peewee.ModelSelect):\n+            return list(res)\n+        return res\n+\n+\n+class ItemBase(BaseModel):\n+    title: str\n+    description: str = None\n+\n+\n+class ItemCreate(ItemBase):\n+    pass\n+\n+\n+class Item(ItemBase):\n+    id: int\n+    owner_id: int\n+\n+    class Config:\n+        orm_mode = True\n+        getter_dict = PeeweeGetterDict\n+\n+\n+class UserBase(BaseModel):\n+    email: str\n+\n+\n+class UserCreate(UserBase):\n+    password: str\n+\n+\n+class User(UserBase):\n+    id: int\n+    is_active: bool\n+    items: List[Item] = []\n+\n+    class Config:\n+        orm_mode = True\n+        getter_dict = PeeweeGetterDict\n\n\n@@ -0,0 +1,430 @@\n+import time\n+from pathlib import Path\n+from unittest.mock import MagicMock\n+\n+import pytest\n+from starlette.testclient import TestClient\n+\n+from ...utils import skip_py36\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/users/\": {\n+            \"get\": {\n+                \"summary\": \"Read Users\",\n+                \"operationId\": \"read_users_users__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": False,\n+                        \"schema\": {\"title\": \"Skip\", \"type\": \"integer\", \"default\": 0},\n+                        \"name\": \"skip\",\n+                        \"in\": \"query\",\n+                    },\n+                    {\n+                        \"required\": False,\n+                        \"schema\": {\"title\": \"Limit\", \"type\": \"integer\", \"default\": 100},\n+                        \"name\": \"limit\",\n+                        \"in\": \"query\",\n+                    },\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"title\": \"Response Read Users Users  Get\",\n+                                    \"type\": \"array\",\n+                                    \"items\": {\"$ref\": \"#/components/schemas/User\"},\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            },\n+            \"post\": {\n+                \"summary\": \"Create User\",\n+                \"operationId\": \"create_user_users__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\"$ref\": \"#/components/schemas/UserCreate\"}\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/User\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        \"/users/{user_id}\": {\n+            \"get\": {\n+                \"summary\": \"Read User\",\n+                \"operationId\": \"read_user_users__user_id__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"User Id\", \"type\": \"integer\"},\n+                        \"name\": \"user_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/User\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/users/{user_id}/items/\": {\n+            \"post\": {\n+                \"summary\": \"Create Item For User\",\n+                \"operationId\": \"create_item_for_user_users__user_id__items__post\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"User Id\", \"type\": \"integer\"},\n+                        \"name\": \"user_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\"$ref\": \"#/components/schemas/ItemCreate\"}\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/items/\": {\n+            \"get\": {\n+                \"summary\": \"Read Items\",\n+                \"operationId\": \"read_items_items__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": False,\n+                        \"schema\": {\"title\": \"Skip\", \"type\": \"integer\", \"default\": 0},\n+                        \"name\": \"skip\",\n+                        \"in\": \"query\",\n+                    },\n+                    {\n+                        \"required\": False,\n+                        \"schema\": {\"title\": \"Limit\", \"type\": \"integer\", \"default\": 100},\n+                        \"name\": \"limit\",\n+                        \"in\": \"query\",\n+                    },\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"title\": \"Response Read Items Items  Get\",\n+                                    \"type\": \"array\",\n+                                    \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/slowusers/\": {\n+            \"get\": {\n+                \"summary\": \"Read Slow Users\",\n+                \"operationId\": \"read_slow_users_slowusers__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": False,\n+                        \"schema\": {\"title\": \"Skip\", \"type\": \"integer\", \"default\": 0},\n+                        \"name\": \"skip\",\n+                        \"in\": \"query\",\n+                    },\n+                    {\n+                        \"required\": False,\n+                        \"schema\": {\"title\": \"Limit\", \"type\": \"integer\", \"default\": 100},\n+                        \"name\": \"limit\",\n+                        \"in\": \"query\",\n+                    },\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"title\": \"Response Read Slow Users Slowusers  Get\",\n+                                    \"type\": \"array\",\n+                                    \"items\": {\"$ref\": \"#/components/schemas/User\"},\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"Item\": {\n+                \"title\": \"Item\",\n+                \"required\": [\"title\", \"id\", \"owner_id\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"title\": {\"title\": \"Title\", \"type\": \"string\"},\n+                    \"description\": {\"title\": \"Description\", \"type\": \"string\"},\n+                    \"id\": {\"title\": \"Id\", \"type\": \"integer\"},\n+                    \"owner_id\": {\"title\": \"Owner Id\", \"type\": \"integer\"},\n+                },\n+            },\n+            \"ItemCreate\": {\n+                \"title\": \"ItemCreate\",\n+                \"required\": [\"title\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"title\": {\"title\": \"Title\", \"type\": \"string\"},\n+                    \"description\": {\"title\": \"Description\", \"type\": \"string\"},\n+                },\n+            },\n+            \"User\": {\n+                \"title\": \"User\",\n+                \"required\": [\"email\", \"id\", \"is_active\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"email\": {\"title\": \"Email\", \"type\": \"string\"},\n+                    \"id\": {\"title\": \"Id\", \"type\": \"integer\"},\n+                    \"is_active\": {\"title\": \"Is Active\", \"type\": \"boolean\"},\n+                    \"items\": {\n+                        \"title\": \"Items\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n+                        \"default\": [],\n+                    },\n+                },\n+            },\n+            \"UserCreate\": {\n+                \"title\": \"UserCreate\",\n+                \"required\": [\"email\", \"password\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"email\": {\"title\": \"Email\", \"type\": \"string\"},\n+                    \"password\": {\"title\": \"Password\", \"type\": \"string\"},\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+@pytest.fixture(scope=\"module\")\n+def client():\n+    # Import while creating the client to create the DB after starting the test session\n+    from sql_databases_peewee.sql_app.main import app\n+\n+    test_db = Path(\"./test.db\")\n+    with TestClient(app) as c:\n+        yield c\n+    test_db.unlink()\n+\n+\n+@skip_py36\n+def test_openapi_schema(client):\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+@skip_py36\n+def test_create_user(client):\n+    test_user = {\"email\": \"johndoe@example.com\", \"password\": \"secret\"}\n+    response = client.post(\"/users/\", json=test_user)\n+    assert response.status_code == 200\n+    data = response.json()\n+    assert test_user[\"email\"] == data[\"email\"]\n+    assert \"id\" in data\n+    response = client.post(\"/users/\", json=test_user)\n+    assert response.status_code == 400\n+\n+\n+@skip_py36\n+def test_get_user(client):\n+    response = client.get(\"/users/1\")\n+    assert response.status_code == 200\n+    data = response.json()\n+    assert \"email\" in data\n+    assert \"id\" in data\n+\n+\n+@skip_py36\n+def test_inexistent_user(client):\n+    response = client.get(\"/users/999\")\n+    assert response.status_code == 404\n+\n+\n+@skip_py36\n+def test_get_users(client):\n+    response = client.get(\"/users/\")\n+    assert response.status_code == 200\n+    data = response.json()\n+    assert \"email\" in data[0]\n+    assert \"id\" in data[0]\n+\n+\n+time.sleep = MagicMock()\n+\n+\n+@skip_py36\n+def test_get_slowusers(client):\n+    response = client.get(\"/slowusers/\")\n+    assert response.status_code == 200\n+    data = response.json()\n+    assert \"email\" in data[0]\n+    assert \"id\" in data[0]\n+\n+\n+@skip_py36\n+def test_create_item(client):\n+    item = {\"title\": \"Foo\", \"description\": \"Something that fights\"}\n+    response = client.post(\"/users/1/items/\", json=item)\n+    assert response.status_code == 200\n+    item_data = response.json()\n+    assert item[\"title\"] == item_data[\"title\"]\n+    assert item[\"description\"] == item_data[\"description\"]\n+    assert \"id\" in item_data\n+    assert \"owner_id\" in item_data\n+    response = client.get(\"/users/1\")\n+    assert response.status_code == 200\n+    user_data = response.json()\n+    item_to_check = [it for it in user_data[\"items\"] if it[\"id\"] == item_data[\"id\"]][0]\n+    assert item_to_check[\"title\"] == item[\"title\"]\n+    assert item_to_check[\"description\"] == item[\"description\"]\n+    response = client.get(\"/users/1\")\n+    assert response.status_code == 200\n+    user_data = response.json()\n+    item_to_check = [it for it in user_data[\"items\"] if it[\"id\"] == item_data[\"id\"]][0]\n+    assert item_to_check[\"title\"] == item[\"title\"]\n+    assert item_to_check[\"description\"] == item[\"description\"]\n+\n+\n+@skip_py36\n+def test_read_items(client):\n+    response = client.get(\"/items/\")\n+    assert response.status_code == 200\n+    data = response.json()\n+    assert data\n+    first_item = data[0]\n+    assert \"title\" in first_item\n+    assert \"description\" in first_item\n\n@@ -1,17 +1,16 @@\n-import sys\n from typing import Optional, Union\n \n-import pytest\n from fastapi import FastAPI\n from pydantic import BaseModel\n from starlette.testclient import TestClient\n \n+from .utils import skip_py36\n+\n # In Python 3.6:\n # u = Union[ExtendedItem, Item] == __main__.Item\n \n # But in Python 3.7:\n # u = Union[ExtendedItem, Item] == typing.Union[__main__.ExtendedItem, __main__.Item]\n-skip_py36 = pytest.mark.skipif(sys.version_info < (3, 7), reason=\"skip python3.6\")\n \n app = FastAPI()\n \n\n@@ -0,0 +1,5 @@\n+import sys\n+\n+import pytest\n+\n+skip_py36 = pytest.mark.skipif(sys.version_info < (3, 7), reason=\"skip python3.6\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
