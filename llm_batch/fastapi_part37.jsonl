{"custom_id": "fastapi#90afc72e64b0e294f21bb823bdafb62d3352d5d0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 239 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 3 | Methods Changed: 12 | Complexity Δ (Sum/Max): 13/11 | Churn Δ: 240 | Churn Cumulative: 1818 | Contributors (this commit): 12 | Commits (past 90d): 5 | Contributors (cumulative): 13 | DMM Complexity: 0.9433962264150944\n\nDIFF:\n@@ -704,8 +704,14 @@ def get_body_field(*, dependant: Dependant, name: str) -> Optional[ModelField]:\n     first_param = flat_dependant.body_params[0]\n     field_info = get_field_info(first_param)\n     embed = getattr(field_info, \"embed\", None)\n-    if len(flat_dependant.body_params) == 1 and not embed:\n+    body_param_names_set = set([param.name for param in flat_dependant.body_params])\n+    if len(body_param_names_set) == 1 and not embed:\n         return get_schema_compatible_field(field=first_param)\n+    # If one field requires to embed, all have to be embedded\n+    # in case a sub-dependency is evaluated with a single unique body field\n+    # That is combined (embedded) with other body fields\n+    for param in flat_dependant.body_params:\n+        setattr(get_field_info(param), \"embed\", True)\n     model_name = \"Body_\" + name\n     BodyModel = create_model(model_name)\n     for f in flat_dependant.body_params:\n\n@@ -0,0 +1,232 @@\n+from typing import List\n+\n+from fastapi import Depends, FastAPI\n+from fastapi.testclient import TestClient\n+from pydantic import BaseModel\n+\n+app = FastAPI()\n+\n+client = TestClient(app)\n+\n+\n+class Item(BaseModel):\n+    data: str\n+\n+\n+def duplicate_dependency(item: Item):\n+    return item\n+\n+\n+def dependency(item2: Item):\n+    return item2\n+\n+\n+def sub_duplicate_dependency(\n+    item: Item, sub_item: Item = Depends(duplicate_dependency)\n+):\n+    return [item, sub_item]\n+\n+\n+@app.post(\"/with-duplicates\")\n+async def with_duplicates(item: Item, item2: Item = Depends(duplicate_dependency)):\n+    return [item, item2]\n+\n+\n+@app.post(\"/no-duplicates\")\n+async def no_duplicates(item: Item, item2: Item = Depends(dependency)):\n+    return [item, item2]\n+\n+\n+@app.post(\"/with-duplicates-sub\")\n+async def no_duplicates_sub(\n+    item: Item, sub_items: List[Item] = Depends(sub_duplicate_dependency)\n+):\n+    return [item, sub_items]\n+\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/with-duplicates\": {\n+            \"post\": {\n+                \"summary\": \"With Duplicates\",\n+                \"operationId\": \"with_duplicates_with_duplicates_post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/no-duplicates\": {\n+            \"post\": {\n+                \"summary\": \"No Duplicates\",\n+                \"operationId\": \"no_duplicates_no_duplicates_post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_no_duplicates_no_duplicates_post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/with-duplicates-sub\": {\n+            \"post\": {\n+                \"summary\": \"No Duplicates Sub\",\n+                \"operationId\": \"no_duplicates_sub_with_duplicates_sub_post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Body_no_duplicates_no_duplicates_post\": {\n+                \"title\": \"Body_no_duplicates_no_duplicates_post\",\n+                \"required\": [\"item\", \"item2\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"item\": {\"$ref\": \"#/components/schemas/Item\"},\n+                    \"item2\": {\"$ref\": \"#/components/schemas/Item\"},\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"Item\": {\n+                \"title\": \"Item\",\n+                \"required\": [\"data\"],\n+                \"type\": \"object\",\n+                \"properties\": {\"data\": {\"title\": \"Data\", \"type\": \"string\"}},\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+def test_no_duplicates_invalid():\n+    response = client.post(\"/no-duplicates\", json={\"item\": {\"data\": \"myitem\"}})\n+    assert response.status_code == 422\n+    assert response.json() == {\n+        \"detail\": [\n+            {\n+                \"loc\": [\"body\", \"item2\"],\n+                \"msg\": \"field required\",\n+                \"type\": \"value_error.missing\",\n+            }\n+        ]\n+    }\n+\n+\n+def test_no_duplicates():\n+    response = client.post(\n+        \"/no-duplicates\",\n+        json={\"item\": {\"data\": \"myitem\"}, \"item2\": {\"data\": \"myitem2\"}},\n+    )\n+    assert response.status_code == 200\n+    assert response.json() == [{\"data\": \"myitem\"}, {\"data\": \"myitem2\"}]\n+\n+\n+def test_duplicates():\n+    response = client.post(\"/with-duplicates\", json={\"data\": \"myitem\"})\n+    assert response.status_code == 200\n+    assert response.json() == [{\"data\": \"myitem\"}, {\"data\": \"myitem\"}]\n+\n+\n+def test_sub_duplicates():\n+    response = client.post(\"/with-duplicates-sub\", json={\"data\": \"myitem\"})\n+    assert response.status_code == 200\n+    assert response.json() == [\n+        {\"data\": \"myitem\"},\n+        [{\"data\": \"myitem\"}, {\"data\": \"myitem\"}],\n+    ]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#6e1cd45a46ed4940e37bc3c47d27b9788349ba10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 233 | Contributors (this commit): 1 | Commits (past 90d): 14 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.53.1\"\n+__version__ = \"0.53.2\"\n \n from starlette import status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#d4d5b21b2e70cdd7e36aedc2e41d7c29b430492b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 143 | Lines Deleted: 1 | Files Changed: 18 | Hunks: 10 | Methods Changed: 9 | Complexity Δ (Sum/Max): 13/3 | Churn Δ: 144 | Churn Cumulative: 144 | Contributors (this commit): 1 | Commits (past 90d): 18 | Contributors (cumulative): 18 | DMM Complexity: 1.0\n\nDIFF:\n\n\n\n\n@@ -0,0 +1,10 @@\n+from pydantic import BaseSettings\n+\n+\n+class Settings(BaseSettings):\n+    app_name: str = \"Awesome API\"\n+    admin_email: str\n+    items_per_user: int = 50\n+\n+\n+settings = Settings()\n\n@@ -0,0 +1,14 @@\n+from fastapi import FastAPI\n+\n+from . import config\n+\n+app = FastAPI()\n+\n+\n+@app.get(\"/info\")\n+async def info():\n+    return {\n+        \"app_name\": config.settings.app_name,\n+        \"admin_email\": config.settings.admin_email,\n+        \"items_per_user\": config.settings.items_per_user,\n+    }\n\n\n@@ -0,0 +1,10 @@\n+from pydantic import BaseSettings\n+\n+\n+class Settings(BaseSettings):\n+    app_name: str = \"Awesome API\"\n+    admin_email: str\n+    items_per_user: int = 50\n+\n+\n+settings: Settings = None\n\n@@ -0,0 +1,21 @@\n+from fastapi import Depends, FastAPI\n+\n+from . import config\n+\n+app = FastAPI()\n+\n+\n+def get_settings():\n+    if config.settings:\n+        return config.settings\n+    config.settings = config.Settings()\n+    return config.settings\n+\n+\n+@app.get(\"/info\")\n+async def info(settings: config.Settings = Depends(get_settings)):\n+    return {\n+        \"app_name\": settings.app_name,\n+        \"admin_email\": settings.admin_email,\n+        \"items_per_user\": settings.items_per_user,\n+    }\n\n@@ -0,0 +1,23 @@\n+from fastapi.testclient import TestClient\n+\n+from . import config, main\n+\n+client = TestClient(main.app)\n+\n+\n+def get_settings_override():\n+    return config.Settings(admin_email=\"testing_admin@example.com\")\n+\n+\n+main.app.dependency_overrides[main.get_settings] = get_settings_override\n+\n+\n+def test_app():\n+\n+    response = client.get(\"/info\")\n+    data = response.json()\n+    assert data == {\n+        \"app_name\": \"Awesome API\",\n+        \"admin_email\": \"testing_admin@example.com\",\n+        \"items_per_user\": 50,\n+    }\n\n\n@@ -0,0 +1,13 @@\n+from pydantic import BaseSettings\n+\n+\n+class Settings(BaseSettings):\n+    app_name: str = \"Awesome API\"\n+    admin_email: str\n+    items_per_user: int = 50\n+\n+    class Config:\n+        env_file = \".env\"\n+\n+\n+settings: Settings = None\n\n@@ -0,0 +1,21 @@\n+from fastapi import Depends, FastAPI\n+\n+from . import config\n+\n+app = FastAPI()\n+\n+\n+def get_settings():\n+    if config.settings:\n+        return config.settings\n+    config.settings = config.Settings()\n+    return config.settings\n+\n+\n+@app.get(\"/info\")\n+async def info(settings: config.Settings = Depends(get_settings)):\n+    return {\n+        \"app_name\": settings.app_name,\n+        \"admin_email\": settings.admin_email,\n+        \"items_per_user\": settings.items_per_user,\n+    }\n\n@@ -0,0 +1,21 @@\n+from fastapi import FastAPI\n+from pydantic import BaseSettings\n+\n+\n+class Settings(BaseSettings):\n+    app_name: str = \"Awesome API\"\n+    admin_email: str\n+    items_per_user: int = 50\n+\n+\n+settings = Settings()\n+app = FastAPI()\n+\n+\n+@app.get(\"/info\")\n+async def info():\n+    return {\n+        \"app_name\": settings.app_name,\n+        \"admin_email\": settings.admin_email,\n+        \"items_per_user\": settings.items_per_user,\n+    }\n\n\n@@ -1,6 +1,6 @@\n from fastapi.testclient import TestClient\n \n-from application_configuration.tutorial001 import app\n+from metadata.tutorial001 import app\n \n client = TestClient(app)\n \n\n\n@@ -0,0 +1,9 @@\n+from fastapi.testclient import TestClient\n+\n+from settings.app02 import main, test_main\n+\n+client = TestClient(main.app)\n+\n+\n+def test_setting_override():\n+    test_main.test_app()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#b76334f544368b82d3463c9205fe82d63ddb0ee1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 14 | Files Changed: 4 | Hunks: 8 | Methods Changed: 2 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 22 | Churn Cumulative: 87 | Contributors (this commit): 2 | Commits (past 90d): 8 | Contributors (cumulative): 8 | DMM Complexity: 0.0\n\nDIFF:\n@@ -5,6 +5,3 @@ class Settings(BaseSettings):\n     app_name: str = \"Awesome API\"\n     admin_email: str\n     items_per_user: int = 50\n-\n-\n-settings: Settings = None\n\n@@ -1,3 +1,5 @@\n+from functools import lru_cache\n+\n from fastapi import Depends, FastAPI\n \n from . import config\n@@ -5,11 +7,9 @@ from . import config\n app = FastAPI()\n \n \n+@lru_cache()\n def get_settings():\n-    if config.settings:\n-        return config.settings\n-    config.settings = config.Settings()\n-    return config.settings\n+    return config.Settings()\n \n \n @app.get(\"/info\")\n\n@@ -8,6 +8,3 @@ class Settings(BaseSettings):\n \n     class Config:\n         env_file = \".env\"\n-\n-\n-settings: Settings = None\n\n@@ -1,3 +1,5 @@\n+from functools import lru_cache\n+\n from fastapi import Depends, FastAPI\n \n from . import config\n@@ -5,11 +7,9 @@ from . import config\n app = FastAPI()\n \n \n+@lru_cache()\n def get_settings():\n-    if config.settings:\n-        return config.settings\n-    config.settings = config.Settings()\n-    return config.settings\n+    return config.Settings()\n \n \n @app.get(\"/info\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#d96223460bed36e117fb7292e032ee85c01567de", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 63 | Lines Deleted: 3 | Files Changed: 6 | Hunks: 5 | Methods Changed: 5 | Complexity Δ (Sum/Max): 5/3 | Churn Δ: 66 | Churn Cumulative: 846 | Contributors (this commit): 3 | Commits (past 90d): 9 | Contributors (cumulative): 11 | DMM Complexity: 1.0\n\nDIFF:\n@@ -2,7 +2,7 @@ from sqlalchemy import create_engine\n from sqlalchemy.ext.declarative import declarative_base\n from sqlalchemy.orm import sessionmaker\n \n-SQLALCHEMY_DATABASE_URL = \"sqlite:///./test.db\"\n+SQLALCHEMY_DATABASE_URL = \"sqlite:///./sql_app.db\"\n # SQLALCHEMY_DATABASE_URL = \"postgresql://user:password@postgresserver/db\"\n \n engine = create_engine(\n\n\n@@ -0,0 +1,47 @@\n+from fastapi.testclient import TestClient\n+from sqlalchemy import create_engine\n+from sqlalchemy.orm import sessionmaker\n+\n+from ..database import Base\n+from ..main import app, get_db\n+\n+SQLALCHEMY_DATABASE_URL = \"sqlite:///./test.db\"\n+\n+engine = create_engine(\n+    SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False}\n+)\n+TestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n+\n+\n+Base.metadata.create_all(bind=engine)\n+\n+\n+def override_get_db():\n+    try:\n+        db = TestingSessionLocal()\n+        yield db\n+    finally:\n+        db.close()\n+\n+\n+app.dependency_overrides[get_db] = override_get_db\n+\n+client = TestClient(app)\n+\n+\n+def test_create_user():\n+    response = client.post(\n+        \"/users/\",\n+        json={\"email\": \"deadpool@example.com\", \"password\": \"chimichangas4life\"},\n+    )\n+    assert response.status_code == 200\n+    data = response.json()\n+    assert data[\"email\"] == \"deadpool@example.com\"\n+    assert \"id\" in data\n+    user_id = data[\"id\"]\n+\n+    response = client.get(f\"/users/{user_id}\")\n+    assert response.status_code == 200\n+    data = response.json()\n+    assert data[\"email\"] == \"deadpool@example.com\"\n+    assert data[\"id\"] == user_id\n\n@@ -286,7 +286,7 @@ def client():\n     # Import while creating the client to create the DB after starting the test session\n     from sql_databases.sql_app.main import app\n \n-    test_db = Path(\"./test.db\")\n+    test_db = Path(\"./sql_app.db\")\n     with TestClient(app) as c:\n         yield c\n     test_db.unlink()\n\n@@ -286,7 +286,7 @@ def client():\n     # Import while creating the client to create the DB after starting the test session\n     from sql_databases.sql_app.alt_main import app\n \n-    test_db = Path(\"./test.db\")\n+    test_db = Path(\"./sql_app.db\")\n     with TestClient(app) as c:\n         yield c\n     test_db.unlink()\n\n@@ -0,0 +1,13 @@\n+from pathlib import Path\n+\n+\n+def test_testing_dbs():\n+    # Import while creating the client to create the DB after starting the test session\n+    from sql_databases.sql_app.tests.test_sql_app import test_create_user\n+\n+    test_db = Path(\"./test.db\")\n+    app_db = Path(\"./sql_app.db\")\n+    test_create_user()\n+    test_db.unlink()\n+    if app_db.is_file():  # pragma: nocover\n+        app_db.unlink()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#3397d4d69a9c2d64c1219fcbf291ea5697a4abb8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 223 | Lines Deleted: 16 | Files Changed: 6 | Hunks: 70 | Methods Changed: 39 | Complexity Δ (Sum/Max): 10/8 | Churn Δ: 239 | Churn Cumulative: 7252 | Contributors (this commit): 31 | Commits (past 90d): 23 | Contributors (cumulative): 64 | DMM Complexity: 0.25477707006369427\n\nDIFF:\n@@ -171,6 +171,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -197,6 +199,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -222,6 +226,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -250,6 +256,8 @@ class FastAPI(Starlette):\n                 response_model_exclude_unset=bool(\n                     response_model_exclude_unset or response_model_skip_defaults\n                 ),\n+                response_model_exclude_defaults=response_model_exclude_defaults,\n+                response_model_exclude_none=response_model_exclude_none,\n                 include_in_schema=include_in_schema,\n                 response_class=response_class or self.default_response_class,\n                 name=name,\n@@ -309,6 +317,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -334,6 +344,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -359,6 +371,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -384,6 +398,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -409,6 +425,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -434,6 +452,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -459,6 +479,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -484,6 +506,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -509,6 +533,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -534,6 +560,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -559,6 +587,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -584,6 +614,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -609,6 +641,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -634,6 +668,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -659,6 +695,8 @@ class FastAPI(Starlette):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -684,6 +722,8 @@ class FastAPI(Starlette):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n\n@@ -34,7 +34,8 @@ def jsonable_encoder(\n     by_alias: bool = True,\n     skip_defaults: bool = None,\n     exclude_unset: bool = False,\n-    include_none: bool = True,\n+    exclude_defaults: bool = False,\n+    exclude_none: bool = False,\n     custom_encoder: dict = {},\n     sqlalchemy_safe: bool = True,\n ) -> Any:\n@@ -58,8 +59,12 @@ def jsonable_encoder(\n                 exclude=exclude,\n                 by_alias=by_alias,\n                 exclude_unset=bool(exclude_unset or skip_defaults),\n+                exclude_none=exclude_none,\n+                exclude_defaults=exclude_defaults,\n             )\n         else:  # pragma: nocover\n+            if exclude_defaults:\n+                raise ValueError(\"Cannot use exclude_defaults\")\n             obj_dict = obj.dict(\n                 include=include,\n                 exclude=exclude,\n@@ -68,7 +73,8 @@ def jsonable_encoder(\n             )\n         return jsonable_encoder(\n             obj_dict,\n-            include_none=include_none,\n+            exclude_none=exclude_none,\n+            exclude_defaults=exclude_defaults,\n             custom_encoder=encoder,\n             sqlalchemy_safe=sqlalchemy_safe,\n         )\n@@ -87,14 +93,14 @@ def jsonable_encoder(\n                     or (not isinstance(key, str))\n                     or (not key.startswith(\"_sa\"))\n                 )\n-                and (value is not None or include_none)\n+                and (value is not None or not exclude_none)\n                 and ((include and key in include) or key not in exclude)\n             ):\n                 encoded_key = jsonable_encoder(\n                     key,\n                     by_alias=by_alias,\n                     exclude_unset=exclude_unset,\n-                    include_none=include_none,\n+                    exclude_none=exclude_none,\n                     custom_encoder=custom_encoder,\n                     sqlalchemy_safe=sqlalchemy_safe,\n                 )\n@@ -102,7 +108,7 @@ def jsonable_encoder(\n                     value,\n                     by_alias=by_alias,\n                     exclude_unset=exclude_unset,\n-                    include_none=include_none,\n+                    exclude_none=exclude_none,\n                     custom_encoder=custom_encoder,\n                     sqlalchemy_safe=sqlalchemy_safe,\n                 )\n@@ -118,7 +124,8 @@ def jsonable_encoder(\n                     exclude=exclude,\n                     by_alias=by_alias,\n                     exclude_unset=exclude_unset,\n-                    include_none=include_none,\n+                    exclude_defaults=exclude_defaults,\n+                    exclude_none=exclude_none,\n                     custom_encoder=custom_encoder,\n                     sqlalchemy_safe=sqlalchemy_safe,\n                 )\n@@ -153,7 +160,8 @@ def jsonable_encoder(\n         data,\n         by_alias=by_alias,\n         exclude_unset=exclude_unset,\n-        include_none=include_none,\n+        exclude_defaults=exclude_defaults,\n+        exclude_none=exclude_none,\n         custom_encoder=custom_encoder,\n         sqlalchemy_safe=sqlalchemy_safe,\n     )\n\n@@ -81,7 +81,7 @@ def get_openapi_security_definitions(flat_dependant: Dependant) -> Tuple[Dict, L\n         security_definition = jsonable_encoder(\n             security_requirement.security_scheme.model,\n             by_alias=True,\n-            include_none=False,\n+            exclude_none=True,\n         )\n         security_name = security_requirement.security_scheme.scheme_name\n         security_definitions[security_name] = security_definition\n@@ -310,4 +310,4 @@ def get_openapi(\n     if components:\n         output[\"components\"] = components\n     output[\"paths\"] = paths\n-    return jsonable_encoder(OpenAPI(**output), by_alias=True, include_none=False)\n+    return jsonable_encoder(OpenAPI(**output), by_alias=True, exclude_none=True)\n\n@@ -49,22 +49,43 @@ except ImportError:  # pragma: nocover\n \n \n def _prepare_response_content(\n-    res: Any, *, by_alias: bool = True, exclude_unset: bool\n+    res: Any,\n+    *,\n+    by_alias: bool = True,\n+    exclude_unset: bool,\n+    exclude_defaults: bool = False,\n+    exclude_none: bool = False,\n ) -> Any:\n     if isinstance(res, BaseModel):\n         if PYDANTIC_1:\n-            return res.dict(by_alias=by_alias, exclude_unset=exclude_unset)\n+            return res.dict(\n+                by_alias=by_alias,\n+                exclude_unset=exclude_unset,\n+                exclude_defaults=exclude_defaults,\n+                exclude_none=exclude_none,\n+            )\n         else:\n             return res.dict(\n-                by_alias=by_alias, skip_defaults=exclude_unset\n+                by_alias=by_alias, skip_defaults=exclude_unset,\n             )  # pragma: nocover\n     elif isinstance(res, list):\n         return [\n-            _prepare_response_content(item, exclude_unset=exclude_unset) for item in res\n+            _prepare_response_content(\n+                item,\n+                exclude_unset=exclude_unset,\n+                exclude_defaults=exclude_defaults,\n+                exclude_none=exclude_none,\n+            )\n+            for item in res\n         ]\n     elif isinstance(res, dict):\n         return {\n-            k: _prepare_response_content(v, exclude_unset=exclude_unset)\n+            k: _prepare_response_content(\n+                v,\n+                exclude_unset=exclude_unset,\n+                exclude_defaults=exclude_defaults,\n+                exclude_none=exclude_none,\n+            )\n             for k, v in res.items()\n         }\n     return res\n@@ -78,12 +99,18 @@ async def serialize_response(\n     exclude: Union[SetIntStr, DictIntStrAny] = set(),\n     by_alias: bool = True,\n     exclude_unset: bool = False,\n+    exclude_defaults: bool = False,\n+    exclude_none: bool = False,\n     is_coroutine: bool = True,\n ) -> Any:\n     if field:\n         errors = []\n         response_content = _prepare_response_content(\n-            response_content, by_alias=by_alias, exclude_unset=exclude_unset\n+            response_content,\n+            by_alias=by_alias,\n+            exclude_unset=exclude_unset,\n+            exclude_defaults=exclude_defaults,\n+            exclude_none=exclude_none,\n         )\n         if is_coroutine:\n             value, errors_ = field.validate(response_content, {}, loc=(\"response\",))\n@@ -103,6 +130,8 @@ async def serialize_response(\n             exclude=exclude,\n             by_alias=by_alias,\n             exclude_unset=exclude_unset,\n+            exclude_defaults=exclude_defaults,\n+            exclude_none=exclude_none,\n         )\n     else:\n         return jsonable_encoder(response_content)\n@@ -131,6 +160,8 @@ def get_request_handler(\n     response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n     response_model_by_alias: bool = True,\n     response_model_exclude_unset: bool = False,\n+    response_model_exclude_defaults: bool = False,\n+    response_model_exclude_none: bool = False,\n     dependency_overrides_provider: Any = None,\n ) -> Callable:\n     assert dependant.call is not None, \"dependant.call must be a function\"\n@@ -177,6 +208,8 @@ def get_request_handler(\n                 exclude=response_model_exclude,\n                 by_alias=response_model_by_alias,\n                 exclude_unset=response_model_exclude_unset,\n+                exclude_defaults=response_model_exclude_defaults,\n+                exclude_none=response_model_exclude_none,\n                 is_coroutine=is_coroutine,\n             )\n             response = response_class(\n@@ -255,6 +288,8 @@ class APIRoute(routing.Route):\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Optional[Type[Response]] = None,\n         dependency_overrides_provider: Any = None,\n@@ -326,6 +361,8 @@ class APIRoute(routing.Route):\n         self.response_model_exclude = response_model_exclude\n         self.response_model_by_alias = response_model_by_alias\n         self.response_model_exclude_unset = response_model_exclude_unset\n+        self.response_model_exclude_defaults = response_model_exclude_defaults\n+        self.response_model_exclude_none = response_model_exclude_none\n         self.include_in_schema = include_in_schema\n         self.response_class = response_class\n \n@@ -352,6 +389,8 @@ class APIRoute(routing.Route):\n             response_model_exclude=self.response_model_exclude,\n             response_model_by_alias=self.response_model_by_alias,\n             response_model_exclude_unset=self.response_model_exclude_unset,\n+            response_model_exclude_defaults=self.response_model_exclude_defaults,\n+            response_model_exclude_none=self.response_model_exclude_none,\n             dependency_overrides_provider=self.dependency_overrides_provider,\n         )\n \n@@ -400,6 +439,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -429,6 +470,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -457,6 +500,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -486,6 +531,8 @@ class APIRouter(routing.Router):\n                 response_model_exclude_unset=bool(\n                     response_model_exclude_unset or response_model_skip_defaults\n                 ),\n+                response_model_exclude_defaults=response_model_exclude_defaults,\n+                response_model_exclude_none=response_model_exclude_none,\n                 include_in_schema=include_in_schema,\n                 response_class=response_class or self.default_response_class,\n                 name=name,\n@@ -560,6 +607,8 @@ class APIRouter(routing.Router):\n                     response_model_exclude=route.response_model_exclude,\n                     response_model_by_alias=route.response_model_by_alias,\n                     response_model_exclude_unset=route.response_model_exclude_unset,\n+                    response_model_exclude_defaults=route.response_model_exclude_defaults,\n+                    response_model_exclude_none=route.response_model_exclude_none,\n                     include_in_schema=route.include_in_schema,\n                     response_class=route.response_class or default_response_class,\n                     name=route.name,\n@@ -606,6 +655,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -632,6 +683,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -657,6 +710,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -683,6 +738,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -708,6 +765,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -734,6 +793,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -759,6 +820,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -785,6 +848,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -810,6 +875,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -836,6 +903,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -861,6 +930,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -887,6 +958,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -912,6 +985,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -938,6 +1013,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n@@ -963,6 +1040,8 @@ class APIRouter(routing.Router):\n         response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = None,\n         response_model_exclude_unset: bool = False,\n+        response_model_exclude_defaults: bool = False,\n+        response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = None,\n         name: str = None,\n@@ -989,6 +1068,8 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=bool(\n                 response_model_exclude_unset or response_model_skip_defaults\n             ),\n+            response_model_exclude_defaults=response_model_exclude_defaults,\n+            response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n             response_class=response_class or self.default_response_class,\n             name=name,\n\n@@ -70,6 +70,12 @@ class ModelWithAlias(BaseModel):\n     foo: str = Field(..., alias=\"Foo\")\n \n \n+class ModelWithDefault(BaseModel):\n+    foo: str = ...\n+    bar: str = \"bar\"\n+    bla: str = \"bla\"\n+\n+\n @pytest.fixture(\n     name=\"model_with_path\", params=[PurePath, PurePosixPath, PureWindowsPath]\n )\n@@ -121,6 +127,16 @@ def test_encode_model_with_alias():\n     assert jsonable_encoder(model) == {\"Foo\": \"Bar\"}\n \n \n+def test_encode_model_with_default():\n+    model = ModelWithDefault(foo=\"foo\", bar=\"bar\")\n+    assert jsonable_encoder(model) == {\"foo\": \"foo\", \"bar\": \"bar\", \"bla\": \"bla\"}\n+    assert jsonable_encoder(model, exclude_unset=True) == {\"foo\": \"foo\", \"bar\": \"bar\"}\n+    assert jsonable_encoder(model, exclude_defaults=True) == {\"foo\": \"foo\"}\n+    assert jsonable_encoder(model, exclude_unset=True, exclude_defaults=True) == {\n+        \"foo\": \"foo\"\n+    }\n+\n+\n def test_custom_encoders():\n     class safe_datetime(datetime):\n         pass\n\n@@ -18,11 +18,53 @@ class Model(BaseModel):\n \n class ModelSubclass(Model):\n     y: int\n+    z: int = 0\n+    w: int = None\n+\n+\n+class ModelDefaults(BaseModel):\n+    w: Optional[str] = None\n+    x: Optional[str] = None\n+    y: str = \"y\"\n+    z: str = \"z\"\n \n \n @app.get(\"/\", response_model=Model, response_model_exclude_unset=True)\n def get() -> ModelSubclass:\n-    return ModelSubclass(sub={}, y=1)\n+    return ModelSubclass(sub={}, y=1, z=0)\n+\n+\n+@app.get(\n+    \"/exclude_unset\", response_model=ModelDefaults, response_model_exclude_unset=True\n+)\n+def get() -> ModelDefaults:\n+    return ModelDefaults(x=None, y=\"y\")\n+\n+\n+@app.get(\n+    \"/exclude_defaults\",\n+    response_model=ModelDefaults,\n+    response_model_exclude_defaults=True,\n+)\n+def get() -> ModelDefaults:\n+    return ModelDefaults(x=None, y=\"y\")\n+\n+\n+@app.get(\n+    \"/exclude_none\", response_model=ModelDefaults, response_model_exclude_none=True\n+)\n+def get() -> ModelDefaults:\n+    return ModelDefaults(x=None, y=\"y\")\n+\n+\n+@app.get(\n+    \"/exclude_unset_none\",\n+    response_model=ModelDefaults,\n+    response_model_exclude_unset=True,\n+    response_model_exclude_none=True,\n+)\n+def get() -> ModelDefaults:\n+    return ModelDefaults(x=None, y=\"y\")\n \n \n client = TestClient(app)\n@@ -31,3 +73,23 @@ client = TestClient(app)\n def test_return_defaults():\n     response = client.get(\"/\")\n     assert response.json() == {\"sub\": {}}\n+\n+\n+def test_return_exclude_unset():\n+    response = client.get(\"/exclude_unset\")\n+    assert response.json() == {\"x\": None, \"y\": \"y\"}\n+\n+\n+def test_return_exclude_defaults():\n+    response = client.get(\"/exclude_defaults\")\n+    assert response.json() == {}\n+\n+\n+def test_return_exclude_none():\n+    response = client.get(\"/exclude_none\")\n+    assert response.json() == {\"y\": \"y\", \"z\": \"z\"}\n+\n+\n+def test_return_exclude_unset_none():\n+    response = client.get(\"/exclude_unset_none\")\n+    assert response.json() == {\"y\": \"y\"}\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
