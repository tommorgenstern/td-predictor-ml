{"custom_id": "requests#21c2146be451a623012ca561c8322f970e7eeb4a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 8 | Churn Cumulative: 4667 | Contributors (this commit): 47 | Commits (past 90d): 83 | Contributors (cumulative): 47 | DMM Complexity: 0.0\n\nDIFF:\n@@ -102,6 +102,14 @@ class Request(object):\n         # Dictionary mapping protocol to the URL of the proxy (e.g. {'http': 'foo.bar:3128'})\n         self.proxies = dict(proxies or [])\n \n+        # If no proxies are given, allow configuration by environment variables\n+        # HTTP_PROXY and HTTPS_PROXY.\n+        if not self.proxies:\n+          if 'HTTP_PROXY' in os.environ:\n+            self.proxies['http'] = os.environ['HTTP_PROXY']\n+          if 'HTTPS_PROXY' in os.environ:\n+            self.proxies['https'] = os.environ['HTTPS_PROXY']\n+\n         self.data, self._enc_data = self._encode_params(data)\n         self.params, self._enc_params = self._encode_params(params)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#fba77fc65f40ba10428346c0d01fe6c5d55ddbce", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/1 | Churn Δ: 8 | Churn Cumulative: 4849 | Contributors (this commit): 48 | Commits (past 90d): 99 | Contributors (cumulative): 52 | DMM Complexity: 0.6666666666666666\n\nDIFF:\n@@ -675,6 +675,9 @@ class Response(object):\n             while 1:\n                 #XXX correct line size? (httplib has 64kb, seems insane)\n                 pending_bytes = fp.readline(40).strip()\n+                if pending_bytes == '':\n+                    # No content, like a HEAD request. Break out.\n+                    break\n                 pending_bytes = int(pending_bytes, 16)\n                 if pending_bytes == 0:\n                     break\n\n@@ -797,7 +797,10 @@ class RequestsTestSuite(TestSetup, unittest.TestCase):\n         r = requests.get(httpbin('status', '404'))\n         r.text\n \n-\n+    def test_chunked_head_redirect(self):\n+        u = \"http://t.co/NFrx0zLG\"\n+        r = requests.head(u, allow_redirects=True)\n+        self.assertEqual(r.status_code, 200)\n \n if __name__ == '__main__':\n     unittest.main()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#0e65dff008f8d18fd6545d4b3e1656e048f3306d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 2 | Churn Cumulative: 4672 | Contributors (this commit): 47 | Commits (past 90d): 85 | Contributors (cumulative): 47 | DMM Complexity: 1.0\n\nDIFF:\n@@ -227,8 +227,6 @@ class Request(object):\n                 # Facilitate non-RFC2616-compliant 'location' headers\n                 # (e.g. '/path/to/resource' instead of 'http://domain.tld/path/to/resource')\n                 if not urlparse(url).netloc:\n-                    if not isinstance(url, unicode):\n-                        url = url.decode('utf-8', 'ignore')\n                     url = urljoin(r.url, url)\n \n                 # http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.4\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#bd0e00280460b28d3bf715d64888605750d9e735", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 5 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/1 | Churn Δ: 11 | Churn Cumulative: 198 | Contributors (this commit): 5 | Commits (past 90d): 19 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -797,10 +797,5 @@ class RequestsTestSuite(TestSetup, unittest.TestCase):\n         r = requests.get(httpbin('status', '404'))\n         r.text\n \n-    def test_chunked_head_redirect(self):\n-        u = \"http://t.co/NFrx0zLG\"\n-        r = requests.head(u, allow_redirects=True)\n-        self.assertEqual(r.status_code, 200)\n-\n if __name__ == '__main__':\n     unittest.main()\n\n@@ -53,6 +53,12 @@ class RequestsTestSuite(unittest.TestCase):\n         url = u'http://blip.fm/~1abvfu'\n         requests.get(url)\n \n+\n+    def test_chunked_head_redirect(self):\n+        url = \"http://t.co/NFrx0zLG\"\n+        r = requests.head(url, allow_redirects=True)\n+        self.assertEqual(r.status_code, 200)\n+\n if __name__ == '__main__':\n     unittest.main()\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e15ae8f9a757447807932f29c0b6af687e1d6a85", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 475 | Contributors (this commit): 5 | Commits (past 90d): 33 | Contributors (cumulative): 6 | DMM Complexity: None\n\nDIFF:\n@@ -15,8 +15,8 @@ requests\n \"\"\"\n \n __title__ = 'requests'\n-__version__ = '0.10.7'\n-__build__ = 0x001007\n+__version__ = '0.10.8'\n+__build__ = 0x001008\n __author__ = 'Kenneth Reitz'\n __license__ = 'ISC'\n __copyright__ = 'Copyright 2012 Kenneth Reitz'\n\n@@ -18,6 +18,7 @@ Configurations:\n :pool_maxsize: The maximium size of an HTTP connection pool.\n :pool_connections: The number of active HTTP connection pools to use.\n :encode_uri: If true, URIs will automatically be percent-encoded.\n+:trust_env: If true, the surrouding environment will be trusted (environ, netrc).\n \"\"\"\n \n SCHEMAS = ['http', 'https']\n@@ -42,5 +43,6 @@ defaults['danger_mode'] = False\n defaults['safe_mode'] = False\n defaults['keep_alive'] = True\n defaults['encode_uri'] = True\n+defaults['trust_env'] = True\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#77e5443f71f29f30c997dc0e6645ee57f40ef4eb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 6/6 | Churn Δ: 8 | Churn Cumulative: 4680 | Contributors (this commit): 47 | Commits (past 90d): 86 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -104,7 +104,7 @@ class Request(object):\n \n         # If no proxies are given, allow configuration by environment variables\n         # HTTP_PROXY and HTTPS_PROXY.\n-        if not self.proxies:\n+        if not self.proxies and self.config.get('trust_env'):\n           if 'HTTP_PROXY' in os.environ:\n             self.proxies['http'] = os.environ['HTTP_PROXY']\n           if 'HTTPS_PROXY' in os.environ:\n@@ -446,7 +446,7 @@ class Request(object):\n             self.headers['Content-Type'] = content_type\n \n         # Use .netrc auth if none was provided.\n-        if not self.auth:\n+        if not self.auth and self.config.get('trust_env'):\n             self.auth = get_netrc_auth(url)\n \n         if self.auth:\n@@ -487,11 +487,11 @@ class Request(object):\n                 cert_loc = self.verify\n \n             # Look for configuration.\n-            if not cert_loc:\n+            if not cert_loc and self.config.get('trust_env'):\n                 cert_loc = os.environ.get('REQUESTS_CA_BUNDLE')\n \n             # Curl compatiblity.\n-            if not cert_loc:\n+            if not cert_loc and self.config.get('trust_env'):\n                 cert_loc = os.environ.get('CURL_CA_BUNDLE')\n \n             # Use the awesome certifi list.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4aad69594de6b3deb81dfa2b036585c1244fee3c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 6 | Churn Cumulative: 4686 | Contributors (this commit): 47 | Commits (past 90d): 87 | Contributors (cumulative): 47 | DMM Complexity: 0.0\n\nDIFF:\n@@ -704,7 +704,7 @@ class Response(object):\n \n         return gen\n \n-    def iter_lines(self, decode_unicode=None):\n+    def iter_lines(self, chunk_size=10 * 1024, decode_unicode=None):\n         \"\"\"Iterates over the response data, one line at a time.  This\n         avoids reading the content at once into memory for large\n         responses.\n@@ -712,7 +712,9 @@ class Response(object):\n \n         pending = None\n \n-        for chunk in self.iter_content(chunk_size=10 * 1024, decode_unicode=decode_unicode):\n+        for chunk in self.iter_content(\n+            chunk_size=chunk_size,\n+            decode_unicode=decode_unicode):\n \n             if pending is not None:\n                 chunk = pending + chunk\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9451ae2e98708ea0664b1317ed84e49e6c1f259f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 5 | Churn Cumulative: 4691 | Contributors (this commit): 47 | Commits (past 90d): 88 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -707,7 +707,7 @@ class Response(object):\n \n         return gen\n \n-    def iter_lines(self, chunk_size=10 * 1024, decode_unicode=None):\n+    def iter_lines(self, chunk_size=10 * 1024, decode_unicode=True):\n         \"\"\"Iterates over the response data, one line at a time.  This\n         avoids reading the content at once into memory for large\n         responses.\n@@ -723,8 +723,7 @@ class Response(object):\n                 chunk = pending + chunk\n             lines = chunk.splitlines()\n \n-            # An incomplete line.\n-            if lines[-1].endswith(chunk[-1]):\n+            if lines[-1][-1] == chunk[-1]:\n                 pending = lines.pop()\n             else:\n                 pending = None\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#253cba373bc393526a15da38aa364ac10631e53c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 8 | Files Changed: 1 | Hunks: 3 | Methods Changed: 4 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 20 | Churn Cumulative: 4711 | Contributors (this commit): 47 | Commits (past 90d): 89 | Contributors (cumulative): 47 | DMM Complexity: 1.0\n\nDIFF:\n@@ -707,7 +707,7 @@ class Response(object):\n \n         return gen\n \n-    def iter_lines(self, chunk_size=10 * 1024, decode_unicode=True):\n+    def iter_lines(self, chunk_size=10 * 1024, decode_unicode=None):\n         \"\"\"Iterates over the response data, one line at a time.  This\n         avoids reading the content at once into memory for large\n         responses.\n@@ -756,6 +756,16 @@ class Response(object):\n         self._content_consumed = True\n         return self._content\n \n+    def _detected_encoding(self):\n+        try:\n+            detected = chardet.detect(self.content) or {}\n+            return detected.get('encoding')\n+\n+        # Trust that chardet isn't available or something went terribly wrong.\n+        except Exception:\n+            pass\n+\n+\n     @property\n     def text(self):\n         \"\"\"Content of the response, in unicode.\n@@ -770,13 +780,7 @@ class Response(object):\n \n         # Fallback to auto-detected encoding if chardet is available.\n         if self.encoding is None:\n-            try:\n-                detected = chardet.detect(self.content) or {}\n-                encoding = detected.get('encoding')\n-\n-            # Trust that chardet isn't available or something went terribly wrong.\n-            except Exception:\n-                pass\n+            encoding = self._detected_encoding()\n \n         # Decode unicode from given encoding.\n         try:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9f55f503b1c5a2b5146792613eb17ba4cad47b68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 55 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 7 | Methods Changed: 8 | Complexity Δ (Sum/Max): 5/5 | Churn Δ: 59 | Churn Cumulative: 4784 | Contributors (this commit): 47 | Commits (past 90d): 94 | Contributors (cumulative): 49 | DMM Complexity: 0.9523809523809523\n\nDIFF:\n@@ -235,7 +235,10 @@ class Request(object):\n                 # Facilitate non-RFC2616-compliant 'location' headers\n                 # (e.g. '/path/to/resource' instead of 'http://domain.tld/path/to/resource')\n                 if not urlparse(url).netloc:\n-                    url = urljoin(r.url, url)\n+                    url = urljoin(r.url,\n+                                  # Compliant with RFC3986, we percent\n+                                  # encode the url.\n+                                  requote_uri(url))\n \n                 # http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.4\n                 if r.status_code is codes.see_other:\n@@ -681,7 +684,7 @@ class Response(object):\n             while 1:\n                 #XXX correct line size? (httplib has 64kb, seems insane)\n                 pending_bytes = fp.readline(40).strip()\n-                if pending_bytes == '':\n+                if not len(pending_bytes):\n                     # No content, like a HEAD request. Break out.\n                     break\n                 pending_bytes = int(pending_bytes, 16)\n\n@@ -8,6 +8,7 @@ sys.path.insert(0, os.path.abspath('..'))\n import unittest\n \n import requests\n+from requests.compat import is_py2, is_py3\n \n try:\n     import omnijson as json\n@@ -45,12 +46,23 @@ class RequestsTestSuite(unittest.TestCase):\n \n \n     def test_binary_post(self):\n-        utf8_string = (u'Smörgås').encode('utf-8')\n+        '''We need to be careful how we build the utf-8 string since\n+        unicode literals are a syntax error in python3\n+        '''\n+\n+        if is_py2:\n+            # Blasphemy!\n+            utf8_string = eval(\"u'Smörgås'.encode('utf-8')\")\n+        elif is_py3:\n+            utf8_string = 'Smörgås'.encode('utf-8')\n+        else:\n+            raise EnvironmentError('Flesh out this test for your environment.')\n         requests.post('http://www.google.com/', data=utf8_string)\n \n \n+\n     def test_unicode_error(self):\n-        url = u'http://blip.fm/~1abvfu'\n+        url = 'http://blip.fm/~1abvfu'\n         requests.get(url)\n \n \n@@ -59,6 +71,42 @@ class RequestsTestSuite(unittest.TestCase):\n         r = requests.head(url, allow_redirects=True)\n         self.assertEqual(r.status_code, 200)\n \n+    def test_unicode_redirect(self):\n+        '''This url redirects to a location that has a nonstandard\n+        character in it, that breaks requests in python2.7\n+\n+        After some research, the cause was identified as an unintended\n+        sideeffect of overriding of str with unicode.\n+\n+        In the case that the redirected url is actually a malformed\n+        \"bytes\" object, i.e. a string with character c where\n+            ord(c) > 127,\n+        then unicode(url) breaks.\n+        '''\n+        r = requests.get('http://www.marketwire.com/mw/release.' +\n+                         'do?id=1628202&sourceType=3')\n+        assert r.ok\n+\n+    def test_unicode_url_outright(self):\n+        '''This url visits in my browser'''\n+        r = requests.get('http://www.marketwire.com/press-release/' +\n+                         'jp-morgan-behauptet-sich-der-spitze-euro' +\n+                         'p%C3%A4ischer-anleihe-analysten-laut-umf' +\n+                         'rageergebnissen-1628202.htm')\n+        assert r.ok\n+\n+    def test_redirect_encoding(self):\n+        '''This url redirects to\n+        http://www.dealipedia.com/deal_view_investment.php?r=20012'''\n+\n+        r = requests.get('http://feedproxy.google.com/~r/Dealipedia' +\n+                         'News/~3/BQtUJRJeZlo/deal_view_investment.' +\n+                         'php')\n+        assert r.ok\n+\n+\n+\n+\n if __name__ == '__main__':\n     unittest.main()\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#0a1e527aec37b7c419a9bb976e3fcf3514570448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 4 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 4803 | Contributors (this commit): 47 | Commits (past 90d): 95 | Contributors (cumulative): 53 | DMM Complexity: 0.0\n\nDIFF:\n@@ -14,6 +14,7 @@ class RequestException(RuntimeError):\n \n class HTTPError(RequestException):\n     \"\"\"An HTTP error occurred.\"\"\"\n+    response = None\n \n class ConnectionError(RequestException):\n     \"\"\"A Connection error occurred.\"\"\"\n\n@@ -800,10 +800,17 @@ class Response(object):\n             raise self.error\n \n         if (self.status_code >= 300) and (self.status_code < 400) and not allow_redirects:\n-            raise HTTPError('%s Redirection' % self.status_code)\n+            http_error = HTTPError('%s Redirection' % self.status_code)\n+            http_error.response = self\n+            raise http_error\n \n         elif (self.status_code >= 400) and (self.status_code < 500):\n-            raise HTTPError('%s Client Error' % self.status_code)\n+            http_error = HTTPError('%s Client Error' % self.status_code)\n+            http_error.response = self\n+            raise http_error\n+\n \n         elif (self.status_code >= 500) and (self.status_code < 600):\n-            raise HTTPError('%s Server Error' % self.status_code)\n+            http_error = HTTPError('%s Server Error' % self.status_code)\n+            http_error.response = self\n+            raise http_error\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d078b69aefc24ec6fc52fcaf4334c2573e5168fc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 5 | Churn Cumulative: 1151 | Contributors (this commit): 17 | Commits (past 90d): 28 | Contributors (cumulative): 17 | DMM Complexity: 1.0\n\nDIFF:\n@@ -14,6 +14,7 @@ import codecs\n import os\n import random\n import re\n+import traceback\n import zlib\n from netrc import netrc, NetrcParseError\n \n@@ -61,11 +62,15 @@ def dict_from_string(s):\n \n     cookies = dict()\n \n+    try:\n         c = SimpleCookie()\n         c.load(s)\n \n         for k, v in list(c.items()):\n             cookies.update({k: v.value})\n+    # This stuff is not to be trusted.\n+    except Exception:\n+        pass\n \n     return cookies\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#bc5cc0dc92ae0b6edc356c90637a0d64e1d5042b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 3 | Churn Cumulative: 4734 | Contributors (this commit): 47 | Commits (past 90d): 92 | Contributors (cumulative): 47 | DMM Complexity: 1.0\n\nDIFF:\n@@ -788,6 +788,9 @@ class Response(object):\n         # Decode unicode from given encoding.\n         try:\n             content = str(self.content, encoding, errors='replace')\n+        except LookupError:\n+            # try blindly encoding\n+            content = str(self.content, errors='replace')\n         except (UnicodeError, TypeError):\n             pass\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#83a9f2c7407347a4e1e148e2a1bea4b47e1543c0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 4739 | Contributors (this commit): 47 | Commits (past 90d): 91 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -789,7 +789,10 @@ class Response(object):\n         try:\n             content = str(self.content, encoding, errors='replace')\n         except LookupError:\n-            # try blindly encoding\n+            # A LookupError is raised if the encoding was not found which could\n+            # indicate a misspelling or similar mistake.\n+            #\n+            # So we try blindly encoding.\n             content = str(self.content, errors='replace')\n         except (UnicodeError, TypeError):\n             pass\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#84d9a1b577b69bcf5af18c232990b5a9c7d4dec3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 9 | Churn Cumulative: 772 | Contributors (this commit): 8 | Commits (past 90d): 10 | Contributors (cumulative): 8 | DMM Complexity: 1.0\n\nDIFF:\n@@ -16,6 +16,15 @@ from .utils import header_expand\n from .packages.urllib3.poolmanager import PoolManager\n \n \n+def dict_to_sequence(d):\n+    \"\"\"Returns an internal sequence dictionary update.\"\"\"\n+\n+    if hasattr(d, 'items'):\n+        d = d.items()\n+\n+    return d\n+\n+\n def merge_kwargs(local_kwarg, default_kwarg):\n     \"\"\"Merges kwarg dictionaries.\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#0dd6c4020535bbd45f25580dae5037b77cc1b707", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 13 | Churn Cumulative: 1936 | Contributors (this commit): 21 | Commits (past 90d): 39 | Contributors (cumulative): 25 | DMM Complexity: 1.0\n\nDIFF:\n@@ -31,6 +31,9 @@ def merge_kwargs(local_kwarg, default_kwarg):\n     If a local key in the dictionary is set to None, it will be removed.\n     \"\"\"\n \n+\n+\n+\n     if default_kwarg is None:\n         return local_kwarg\n \n\n@@ -14,7 +14,6 @@ import codecs\n import os\n import random\n import re\n-import traceback\n import zlib\n from netrc import netrc, NetrcParseError\n \n@@ -26,6 +25,15 @@ from .compat import basestring, bytes, str\n NETRC_FILES = ('.netrc', '_netrc')\n \n \n+def dict_to_sequence(d):\n+    \"\"\"Returns an internal sequence dictionary update.\"\"\"\n+\n+    if hasattr(d, 'items'):\n+        d = d.items()\n+\n+    return d\n+\n+\n def get_netrc_auth(url):\n     \"\"\"Returns the Requests tuple auth for a given url from netrc.\"\"\"\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#29309201b66c19445719600297edbac74c1a4264", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 12 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 12 | Churn Cumulative: 787 | Contributors (this commit): 8 | Commits (past 90d): 12 | Contributors (cumulative): 8 | DMM Complexity: 0.0\n\nDIFF:\n@@ -16,24 +16,12 @@ from .utils import header_expand\n from .packages.urllib3.poolmanager import PoolManager\n \n \n-def dict_to_sequence(d):\n-    \"\"\"Returns an internal sequence dictionary update.\"\"\"\n-\n-    if hasattr(d, 'items'):\n-        d = d.items()\n-\n-    return d\n-\n-\n def merge_kwargs(local_kwarg, default_kwarg):\n     \"\"\"Merges kwarg dictionaries.\n \n     If a local key in the dictionary is set to None, it will be removed.\n     \"\"\"\n \n-\n-\n-\n     if default_kwarg is None:\n         return local_kwarg\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#eae641485bf46081f0f36726716f27034e814d50", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 316 | Contributors (this commit): 4 | Commits (past 90d): 10 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -11,7 +11,7 @@ import time\n import hashlib\n \n from base64 import b64encode\n-from .compat import urlparse, str, bytes\n+from .compat import urlparse, str\n from .utils import randombytes, parse_dict_header\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#8f8062723ae75b25c6f7b1dead7a52e611734302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 1 | Churn Cumulative: 1162 | Contributors (this commit): 18 | Commits (past 90d): 29 | Contributors (cumulative): 18 | DMM Complexity: None\n\nDIFF:\n@@ -14,7 +14,6 @@ import codecs\n import os\n import random\n import re\n-import traceback\n import zlib\n from netrc import netrc, NetrcParseError\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#82e69de44f222f9af0ef0888ae78995298efbd92", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 23 | Lines Deleted: 3 | Files Changed: 3 | Hunks: 8 | Methods Changed: 7 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 26 | Churn Cumulative: 6545 | Contributors (this commit): 53 | Commits (past 90d): 112 | Contributors (cumulative): 73 | DMM Complexity: 0.0\n\nDIFF:\n@@ -33,6 +33,8 @@ def request(method, url, **kwargs):\n     :param config: (optional) A configuration dictionary.\n     :param verify: (optional) if ``True``, the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n     :param prefetch: (optional) if ``True``, the response content will be immediately downloaded.\n+    :param key_file: (optional) ssl client key file.\n+    :param cert_file: (optional) ssl client cert file.\n     \"\"\"\n \n     s = kwargs.pop('session') if 'session' in kwargs else sessions.session()\n\n@@ -63,7 +63,9 @@ class Request(object):\n         config=None,\n         _poolmanager=None,\n         verify=None,\n-        session=None):\n+        session=None,\n+        key_file=None,\n+        cert_file=None):\n \n         #: Dictionary of configurations for this request.\n         self.config = dict(config or [])\n@@ -143,6 +145,10 @@ class Request(object):\n         #: SSL Verification.\n         self.verify = verify\n \n+        #: SSL Certificate\n+        self.key_file = key_file\n+        self.cert_file = cert_file\n+\n         if headers:\n             headers = CaseInsensitiveDict(self.headers)\n         else:\n@@ -507,6 +513,10 @@ class Request(object):\n             conn.cert_reqs = 'CERT_NONE'\n             conn.ca_certs = None\n \n+        if self.key_file and self.cert_file:\n+            conn.key_file = self.key_file\n+            conn.cert_file = self.cert_file\n+\n         if not self.sent or anyway:\n \n             if self.cookies:\n\n@@ -77,7 +77,9 @@ class Session(object):\n         params=None,\n         config=None,\n         prefetch=False,\n-        verify=True):\n+        verify=True,\n+        key_file=None,\n+        cert_file=None):\n \n         self.headers = headers or {}\n         self.cookies = cookies or {}\n@@ -89,6 +91,8 @@ class Session(object):\n         self.config = config or {}\n         self.prefetch = prefetch\n         self.verify = verify\n+        self.key_file = key_file\n+        self.cert_file = cert_file\n \n         for (k, v) in list(defaults.items()):\n             self.config.setdefault(k, v)\n@@ -131,7 +135,9 @@ class Session(object):\n         return_response=True,\n         config=None,\n         prefetch=False,\n-        verify=None):\n+        verify=None,\n+        key_file=None,\n+        cert_file=None):\n \n         \"\"\"Constructs and sends a :class:`Request <Request>`.\n         Returns :class:`Response <Response>` object.\n@@ -188,6 +194,8 @@ class Session(object):\n             proxies=proxies,\n             config=config,\n             verify=verify,\n+            key_file=key_file,\n+            cert_file=cert_file,\n             _poolmanager=self.poolmanager\n         )\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#fc618aa78a63d372e160a42f1589dbb738ab16a2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 17 | Lines Deleted: 19 | Files Changed: 3 | Hunks: 11 | Methods Changed: 8 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 36 | Churn Cumulative: 6581 | Contributors (this commit): 53 | Commits (past 90d): 115 | Contributors (cumulative): 73 | DMM Complexity: 1.0\n\nDIFF:\n@@ -33,8 +33,7 @@ def request(method, url, **kwargs):\n     :param config: (optional) A configuration dictionary.\n     :param verify: (optional) if ``True``, the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n     :param prefetch: (optional) if ``True``, the response content will be immediately downloaded.\n-    :param key_file: (optional) ssl client key file.\n-    :param cert_file: (optional) ssl client cert file.\n+    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.\n     \"\"\"\n \n     s = kwargs.pop('session') if 'session' in kwargs else sessions.session()\n\n@@ -64,8 +64,7 @@ class Request(object):\n         _poolmanager=None,\n         verify=None,\n         session=None,\n-        key_file=None,\n-        cert_file=None):\n+        cert=None):\n \n         #: Dictionary of configurations for this request.\n         self.config = dict(config or [])\n@@ -146,8 +145,7 @@ class Request(object):\n         self.verify = verify\n \n         #: SSL Certificate\n-        self.key_file = key_file\n-        self.cert_file = cert_file\n+        self.cert = cert\n \n         if headers:\n             headers = CaseInsensitiveDict(self.headers)\n@@ -273,7 +271,8 @@ class Request(object):\n                     _poolmanager=self._poolmanager,\n                     proxies=self.proxies,\n                     verify=self.verify,\n-                    session=self.session\n+                    session=self.session,\n+                    cert=self.cert\n                 )\n \n                 request.send()\n@@ -513,9 +512,12 @@ class Request(object):\n             conn.cert_reqs = 'CERT_NONE'\n             conn.ca_certs = None\n \n-        if self.key_file and self.cert_file:\n-            conn.key_file = self.key_file\n-            conn.cert_file = self.cert_file\n+        if self.cert:\n+            if type(self.cert) is tuple:\n+                conn.cert_file = self.cert[0]\n+                conn.key_file = self.cert[1]\n+            else:\n+                conn.cert_file = self.cert\n \n         if not self.sent or anyway:\n \n\n@@ -64,7 +64,7 @@ class Session(object):\n \n     __attrs__ = [\n         'headers', 'cookies', 'auth', 'timeout', 'proxies', 'hooks',\n-        'params', 'config', 'verify']\n+        'params', 'config', 'verify', 'cert']\n \n \n     def __init__(self,\n@@ -78,8 +78,7 @@ class Session(object):\n         config=None,\n         prefetch=False,\n         verify=True,\n-        key_file=None,\n-        cert_file=None):\n+        cert=None):\n \n         self.headers = headers or {}\n         self.cookies = cookies or {}\n@@ -91,8 +90,7 @@ class Session(object):\n         self.config = config or {}\n         self.prefetch = prefetch\n         self.verify = verify\n-        self.key_file = key_file\n-        self.cert_file = cert_file\n+        self.cert = cert\n \n         for (k, v) in list(defaults.items()):\n             self.config.setdefault(k, v)\n@@ -136,8 +134,7 @@ class Session(object):\n         config=None,\n         prefetch=False,\n         verify=None,\n-        key_file=None,\n-        cert_file=None):\n+        cert=None):\n \n         \"\"\"Constructs and sends a :class:`Request <Request>`.\n         Returns :class:`Response <Response>` object.\n@@ -157,6 +154,7 @@ class Session(object):\n         :param config: (optional) A configuration dictionary.\n         :param prefetch: (optional) if ``True``, the response content will be immediately downloaded.\n         :param verify: (optional) if ``True``, the SSL cert will be verified. A CA_BUNDLE path can also be provided.\n+        :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.\n         \"\"\"\n \n         method = str(method).upper()\n@@ -194,8 +192,7 @@ class Session(object):\n             proxies=proxies,\n             config=config,\n             verify=verify,\n-            key_file=key_file,\n-            cert_file=cert_file,\n+            cert=cert,\n             _poolmanager=self.poolmanager\n         )\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4677ba5cd9ba5a1aed98b9b60d3e1431a0ca2cb9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 4 | Churn Cumulative: 4773 | Contributors (this commit): 48 | Commits (past 90d): 93 | Contributors (cumulative): 48 | DMM Complexity: None\n\nDIFF:\n@@ -512,8 +512,8 @@ class Request(object):\n             conn.cert_reqs = 'CERT_NONE'\n             conn.ca_certs = None\n \n-        if self.cert:\n-            if type(self.cert) is tuple:\n+        if self.cert and self.verify:\n+            if len(self.cert) == 2:\n                 conn.cert_file = self.cert[0]\n                 conn.key_file = self.cert[1]\n             else:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#0c0bab3ad0bdf15204aa2b0f426304a6dd655da0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 321 | Contributors (this commit): 3 | Commits (past 90d): 22 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -15,8 +15,8 @@ requests\n \"\"\"\n \n __title__ = 'requests'\n-__version__ = '0.10.8'\n-__build__ = 0x001008\n+__version__ = '0.11.0'\n+__build__ = 0x001100\n __author__ = 'Kenneth Reitz'\n __license__ = 'ISC'\n __copyright__ = 'Copyright 2012 Kenneth Reitz'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#ee861f42873ed3b19dd382c3d6fb9e0d5a7521cf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 791 | Contributors (this commit): 3 | Commits (past 90d): 7 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -255,7 +255,7 @@ class CookieError(Exception):\n #\n _RFC2965Forbidden = \"[]:{}=\"\n _LegalChars       = ( string.ascii_letters + string.digits + \n-                      \"!#$%&'*+-.^_`|~_\" + _RFC2965Forbidden )\n+                      \"!#$%&'*+-.^_`|~_@\" + _RFC2965Forbidden )\n _Translator       = {\n     '\\000' : '\\\\000',  '\\001' : '\\\\001',  '\\002' : '\\\\002',\n     '\\003' : '\\\\003',  '\\004' : '\\\\004',  '\\005' : '\\\\005',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d6827a37d00f3fcdac56e5dd978400e9ec1a7371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 8 | Churn Cumulative: 480 | Contributors (this commit): 11 | Commits (past 90d): 10 | Contributors (cumulative): 13 | DMM Complexity: 1.0\n\nDIFF:\n@@ -17,7 +17,7 @@ except ImportError:\n     raise RuntimeError('Gevent is required for requests.async.')\n \n # Monkey-patch.\n-curious_george.patch_all(thread=False)\n+curious_george.patch_all(thread=False, select=False)\n \n from . import api\n \n\n@@ -8,6 +8,9 @@ sys.path.insert(0, os.path.abspath('..'))\n import sys\n import unittest\n \n+import select\n+has_poll = hasattr(select, \"poll\")\n+\n from requests import async\n import envoy\n \n@@ -57,6 +60,9 @@ class RequestsTestSuiteUsingAsyncApi(RequestsTestSuite):\n         async.map\n         async.send\n \n+    def test_select_poll(self):\n+        \"\"\"Test to make sure we don't overwrite the poll\"\"\"\n+        self.assertEqual(hasattr(select, \"poll\"), has_poll)\n \n if __name__ == '__main__':\n     unittest.main()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7b68c124d549853a1045cbeb5a16461799279780", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 7 | Methods Changed: 7 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 1012 | Contributors (this commit): 17 | Commits (past 90d): 10 | Contributors (cumulative): 17 | DMM Complexity: None\n\nDIFF:\n@@ -45,7 +45,7 @@ def get(url, **kwargs):\n     \"\"\"Sends a GET request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n-    :param **kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n     \"\"\"\n \n     kwargs.setdefault('allow_redirects', True)\n@@ -56,7 +56,7 @@ def options(url, **kwargs):\n     \"\"\"Sends a OPTIONS request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n-    :param **kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n     \"\"\"\n \n     kwargs.setdefault('allow_redirects', True)\n@@ -67,7 +67,7 @@ def head(url, **kwargs):\n     \"\"\"Sends a HEAD request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n-    :param **kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n     \"\"\"\n \n     kwargs.setdefault('allow_redirects', False)\n@@ -79,7 +79,7 @@ def post(url, data=None, **kwargs):\n \n     :param url: URL for the new :class:`Request` object.\n     :param data: (optional) Dictionary or bytes to send in the body of the :class:`Request`.\n-    :param **kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n     \"\"\"\n \n     return request('post', url, data=data, **kwargs)\n@@ -90,7 +90,7 @@ def put(url, data=None, **kwargs):\n \n     :param url: URL for the new :class:`Request` object.\n     :param data: (optional) Dictionary or bytes to send in the body of the :class:`Request`.\n-    :param **kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n     \"\"\"\n \n     return request('put', url, data=data, **kwargs)\n@@ -101,7 +101,7 @@ def patch(url, data=None, **kwargs):\n \n     :param url: URL for the new :class:`Request` object.\n     :param data: (optional) Dictionary or bytes to send in the body of the :class:`Request`.\n-    :param **kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n     \"\"\"\n \n     return request('patch', url,  data=data, **kwargs)\n@@ -111,7 +111,7 @@ def delete(url, **kwargs):\n     \"\"\"Sends a DELETE request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n-    :param **kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n     \"\"\"\n \n     return request('delete', url, **kwargs)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#44277441d6bc55254a54d827fcae9cb025371465", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 7 | Methods Changed: 7 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 14 | Churn Cumulative: 828 | Contributors (this commit): 10 | Commits (past 90d): 15 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -218,7 +218,7 @@ class Session(object):\n         \"\"\"Sends a GET request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param **kwargs: Optional arguments that ``request`` takes.\n+        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         kwargs.setdefault('allow_redirects', True)\n@@ -229,7 +229,7 @@ class Session(object):\n         \"\"\"Sends a OPTIONS request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param **kwargs: Optional arguments that ``request`` takes.\n+        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         kwargs.setdefault('allow_redirects', True)\n@@ -240,7 +240,7 @@ class Session(object):\n         \"\"\"Sends a HEAD request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param **kwargs: Optional arguments that ``request`` takes.\n+        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         kwargs.setdefault('allow_redirects', False)\n@@ -252,7 +252,7 @@ class Session(object):\n \n         :param url: URL for the new :class:`Request` object.\n         :param data: (optional) Dictionary or bytes to send in the body of the :class:`Request`.\n-        :param **kwargs: Optional arguments that ``request`` takes.\n+        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('post', url, data=data, **kwargs)\n@@ -263,7 +263,7 @@ class Session(object):\n \n         :param url: URL for the new :class:`Request` object.\n         :param data: (optional) Dictionary or bytes to send in the body of the :class:`Request`.\n-        :param **kwargs: Optional arguments that ``request`` takes.\n+        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('put', url, data=data, **kwargs)\n@@ -274,7 +274,7 @@ class Session(object):\n \n         :param url: URL for the new :class:`Request` object.\n         :param data: (optional) Dictionary or bytes to send in the body of the :class:`Request`.\n-        :param **kwargs: Optional arguments that ``request`` takes.\n+        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('patch', url,  data=data, **kwargs)\n@@ -284,7 +284,7 @@ class Session(object):\n         \"\"\"Sends a DELETE request. Returns :class:`Response` object.\n \n         :param url: URL for the new :class:`Request` object.\n-        :param **kwargs: Optional arguments that ``request`` takes.\n+        :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n         \"\"\"\n \n         return self.request('delete', url, **kwargs)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3c2f52d6813f181fc53b01f67ca25ef1fae0f321", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 2 | Churn Cumulative: 4775 | Contributors (this commit): 49 | Commits (past 90d): 93 | Contributors (cumulative): 49 | DMM Complexity: None\n\nDIFF:\n@@ -660,7 +660,7 @@ class Response(object):\n     def ok(self):\n         try:\n             self.raise_for_status()\n-        except HTTPError:\n+        except RequestException:\n             return False\n         return True\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#76bf523a1f5d20de70e7ff5ddf2a681bea8987f8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 33 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): -8/0 | Churn Δ: 34 | Churn Cumulative: 4809 | Contributors (this commit): 49 | Commits (past 90d): 94 | Contributors (cumulative): 49 | DMM Complexity: 0.8275862068965517\n\nDIFF:\n@@ -683,39 +683,7 @@ class Response(object):\n                 yield chunk\n             self._content_consumed = True\n \n-        def generate_chunked():\n-            resp = self.raw._original_response\n-            fp = resp.fp\n-            if resp.chunk_left is not None:\n-                pending_bytes = resp.chunk_left\n-                while pending_bytes:\n-                    chunk = fp.read(min(chunk_size, pending_bytes))\n-                    pending_bytes -= len(chunk)\n-                    yield chunk\n-                fp.read(2)  # throw away crlf\n-            while 1:\n-                #XXX correct line size? (httplib has 64kb, seems insane)\n-                pending_bytes = fp.readline(40).strip()\n-                if not len(pending_bytes):\n-                    # No content, like a HEAD request. Break out.\n-                    break\n-                pending_bytes = int(pending_bytes, 16)\n-                if pending_bytes == 0:\n-                    break\n-                while pending_bytes:\n-                    chunk = fp.read(min(chunk_size, pending_bytes))\n-                    pending_bytes -= len(chunk)\n-                    yield chunk\n-                fp.read(2)  # throw away crlf\n-            self._content_consumed = True\n-            fp.close()\n-\n-        if getattr(getattr(self.raw, '_original_response', None), 'chunked', False):\n-            gen = generate_chunked()\n-        else:\n-            gen = generate()\n-\n-        gen = stream_untransfer(gen, self)\n+        gen = stream_untransfer(generate(), self)\n \n         if decode_unicode:\n             gen = stream_decode_response_unicode(gen, self)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
