{"custom_id": "flask#b08e35e4ab525c207144e42af1b678a78abe09cb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 39 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 4 | Methods Changed: 3 | Complexity Δ (Sum/Max): 8/7 | Churn Δ: 40 | Churn Cumulative: 212 | Contributors (this commit): 3 | Commits (past 90d): 9 | Contributors (cumulative): 4 | DMM Complexity: 0.2608695652173913\n\nDIFF:\n@@ -10,6 +10,7 @@ from __future__ import absolute_import\n \n import logging\n import sys\n+import warnings\n \n from werkzeug.local import LocalProxy\n \n@@ -56,6 +57,20 @@ default_handler.setFormatter(\n )\n \n \n+def _has_config(logger):\n+    \"\"\"Decide if a logger has direct configuration applied by checking\n+    its properties against the defaults.\n+\n+    :param logger: The :class:`~logging.Logger` to inspect.\n+    \"\"\"\n+    return (\n+        logger.level != logging.NOTSET\n+        or logger.handlers\n+        or logger.filters\n+        or not logger.propagate\n+    )\n+\n+\n def create_logger(app):\n     \"\"\"Get the the Flask apps's logger and configure it if needed.\n \n@@ -71,7 +86,21 @@ def create_logger(app):\n     \"\"\"\n     logger = logging.getLogger(app.name)\n \n-    if app.debug and logger.level == logging.NOTSET:\n+    # 1.1.0 changes name of logger, warn if config is detected for old\n+    # name and not new name\n+    for old_name in (\"flask.app\", \"flask\"):\n+        old_logger = logging.getLogger(old_name)\n+\n+        if _has_config(old_logger) and not _has_config(logger):\n+            warnings.warn(\n+                \"'app.logger' is named '{name}' for this application,\"\n+                \" but configuration was found for '{old_name}', which\"\n+                \" no longer has an effect. The logging configuration\"\n+                \" should be moved to '{name}'.\".format(name=app.name, old_name=old_name)\n+            )\n+            break\n+\n+    if app.debug and not logger.level:\n         logger.setLevel(logging.DEBUG)\n \n     if not has_level_handler(logger):\n\n@@ -104,3 +104,12 @@ def test_log_view_exception(app, client):\n     err = stream.getvalue()\n     assert \"Exception on / [GET]\" in err\n     assert \"Exception: test\" in err\n+\n+\n+def test_warn_old_config(app, request):\n+    old_logger = logging.getLogger(\"flask.app\")\n+    old_logger.setLevel(logging.DEBUG)\n+    request.addfinalizer(lambda: old_logger.setLevel(logging.NOTSET))\n+\n+    with pytest.warns(UserWarning):\n+        assert app.logger.getEffectiveLevel() == logging.WARNING\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#975f9792697c1a74bca3cfff201d1e0415bece6a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 3129 | Contributors (this commit): 45 | Commits (past 90d): 11 | Contributors (cumulative): 45 | DMM Complexity: None\n\nDIFF:\n@@ -600,7 +600,7 @@ def load_dotenv(path=None):\n             click.secho(\n                 ' * Tip: There are .env files present.'\n                 ' Do \"pip install python-dotenv\" to use them.',\n-                fg='yellow')\n+                fg='yellow', err=True)\n         return\n \n     if path is not None:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#626b5cc166e6151dfe0e86b514b2d9a1f55752a8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 1128 | Contributors (this commit): 36 | Commits (past 90d): 12 | Contributors (cumulative): 42 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD-3-Clause\n \"\"\"\n \n-__version__ = '1.0.4.dev'\n+__version__ = '1.0.4'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n@@ -40,6 +40,7 @@ setup(\n         \"Programming Language :: Python :: 3.4\",\n         \"Programming Language :: Python :: 3.5\",\n         \"Programming Language :: Python :: 3.6\",\n+        \"Programming Language :: Python :: 3.7\",\n         \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n         \"Topic :: Internet :: WWW/HTTP :: WSGI :: Application\",\n         \"Topic :: Software Development :: Libraries :: Application Frameworks\",\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1b4ace9ba5e77679bf9d8e409283654f7589907e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 97 | Contributors (this commit): 1 | Commits (past 90d): 3 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -56,4 +56,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.0.dev\"\n+__version__ = \"1.1.0\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1617202d91e46a4c2584656969f90aa5d5db7fed", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 44 | Lines Deleted: 1 | Files Changed: 3 | Hunks: 4 | Methods Changed: 6 | Complexity Δ (Sum/Max): 6/5 | Churn Δ: 45 | Churn Cumulative: 281 | Contributors (this commit): 5 | Commits (past 90d): 8 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -17,6 +17,7 @@ from werkzeug.exceptions import abort\n from werkzeug.utils import redirect\n \n from . import json\n+from ._compat import json_available\n from .app import Flask\n from .app import Request\n from .app import Response\n@@ -56,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.0\"\n+__version__ = \"1.1.1.dev\"\n\n@@ -113,3 +113,33 @@ except ImportError:\n     # https://www.python.org/dev/peps/pep-0519/#backwards-compatibility\n     def fspath(path):\n         return path.__fspath__() if hasattr(path, \"__fspath__\") else path\n+\n+\n+class _DeprecatedBool(object):\n+    def __init__(self, name, version, value):\n+        self.message = \"'{}' is deprecated and will be removed in version {}.\".format(\n+            name, version\n+        )\n+        self.value = value\n+\n+    def _warn(self):\n+        import warnings\n+\n+        warnings.warn(self.message, DeprecationWarning, stacklevel=2)\n+\n+    def __eq__(self, other):\n+        self._warn()\n+        return other == self.value\n+\n+    def __ne__(self, other):\n+        self._warn()\n+        return other != self.value\n+\n+    def __bool__(self):\n+        self._warn()\n+        return self.value\n+\n+    __nonzero__ = __bool__\n+\n+\n+json_available = _DeprecatedBool(\"flask.json_available\", \"2.0.0\", True)\n\n@@ -0,0 +1,12 @@\n+import pytest\n+\n+from flask import json_available\n+\n+\n+def test_json_available():\n+    with pytest.deprecated_call() as rec:\n+        assert json_available\n+        assert json_available == True  # noqa E712\n+        assert json_available != False  # noqa E712\n+\n+    assert len(rec.list) == 3\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ffc68840f821fb0a4c41a7b2b4eaad6d71f539b7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 872 | Contributors (this commit): 29 | Commits (past 90d): 13 | Contributors (cumulative): 30 | DMM Complexity: None\n\nDIFF:\n@@ -15,7 +15,7 @@ setup(\n     version=version,\n     url=\"https://palletsprojects.com/p/flask/\",\n     project_urls={\n-        \"Documentation\": \"http://flask.palletsprojects.com/\",\n+        \"Documentation\": \"https://flask.palletsprojects.com/\",\n         \"Code\": \"https://github.com/pallets/flask\",\n         \"Issue tracker\": \"https://github.com/pallets/flask/issues\",\n     },\n\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.1.dev\"\n+__version__ = \"1.1.1\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a0a49e1c9ea9b0e850e9039c1b7000adbaf7370b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 11 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 11 | Churn Cumulative: 185 | Contributors (this commit): 2 | Commits (past 90d): 7 | Contributors (cumulative): 2 | DMM Complexity: 0.0\n\nDIFF:\n@@ -23,7 +23,6 @@ from werkzeug.exceptions import BadRequestKeyError\n from werkzeug.exceptions import default_exceptions\n from werkzeug.exceptions import HTTPException\n from werkzeug.exceptions import InternalServerError\n-from werkzeug.exceptions import MethodNotAllowed\n from werkzeug.routing import BuildError\n from werkzeug.routing import Map\n from werkzeug.routing import RequestRedirect\n@@ -2000,17 +1999,7 @@ class Flask(_PackageBoundObject):\n         .. versionadded:: 0.7\n         \"\"\"\n         adapter = _request_ctx_stack.top.url_adapter\n-        if hasattr(adapter, \"allowed_methods\"):\n         methods = adapter.allowed_methods()\n-        else:\n-            # fallback for Werkzeug < 0.7\n-            methods = []\n-            try:\n-                adapter.match(method=\"--\")\n-            except MethodNotAllowed as e:\n-                methods = e.valid_methods\n-            except HTTPException:\n-                pass\n         rv = self.response_class()\n         rv.allow.update(methods)\n         return rv\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#2a8ebc4411deacb6eeac5d4cb6f9568d61ac6a12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 1765 | Contributors (this commit): 16 | Commits (past 90d): 3 | Contributors (cumulative): 16 | DMM Complexity: None\n\nDIFF:\n@@ -1,3 +1,5 @@\n+import packaging\n+\n from pallets_sphinx_themes import get_version\n from pallets_sphinx_themes import ProjectLink\n \n@@ -74,7 +76,7 @@ def github_link(name, rawtext, text, lineno, inliner, options=None, content=None\n     else:\n         words = None\n \n-    if release.endswith(\"dev\"):\n+    if packaging.version.parse(release).is_devrelease:\n         url = \"{0}master/{1}\".format(base_url, text)\n     else:\n         url = \"{0}{1}/{2}\".format(base_url, release, text)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b3b38285a424487e5c400bf23e2554f112a099c1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 1766 | Contributors (this commit): 16 | Commits (past 90d): 4 | Contributors (cumulative): 16 | DMM Complexity: None\n\nDIFF:\n@@ -1,5 +1,4 @@\n import packaging\n-\n from pallets_sphinx_themes import get_version\n from pallets_sphinx_themes import ProjectLink\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#353d891561659a754ee92bb5e6576e82be58934a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 41 | Contributors (this commit): 2 | Commits (past 90d): 5 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -72,7 +72,7 @@ def _has_config(logger):\n \n \n def create_logger(app):\n-    \"\"\"Get the the Flask apps's logger and configure it if needed.\n+    \"\"\"Get the Flask app's logger and configure it if needed.\n \n     The logger name will be the same as\n     :attr:`app.import_name <flask.Flask.name>`.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#553b26f8579a21a2d3644cb3bc5cb2ed8cedabc5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 35 | Contributors (this commit): 3 | Commits (past 90d): 5 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -61,7 +61,7 @@ class _AppCtxGlobals(object):\n \n         :param name: Name of attribute to pop.\n         :param default: Value to return if the attribute is not present,\n-            instead of raise a ``KeyError``.\n+            instead of raising a ``KeyError``.\n \n         .. versionadded:: 0.11\n         \"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#4ed20657c61c3e64aba4652e1f053bae65ebc821", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 48 | Lines Deleted: 122 | Files Changed: 1 | Hunks: 21 | Methods Changed: 7 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 170 | Churn Cumulative: 1936 | Contributors (this commit): 16 | Commits (past 90d): 3 | Contributors (cumulative): 16 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,163 +1,91 @@\n-# -*- coding: utf-8 -*-\n-from __future__ import print_function\n-\n-import inspect\n-import re\n-\n-from pallets_sphinx_themes import ProjectLink, get_version\n+import packaging.version\n+from pallets_sphinx_themes import get_version\n+from pallets_sphinx_themes import ProjectLink\n \n # Project --------------------------------------------------------------\n \n-project = 'Flask'\n-copyright = '2010 Pallets Team'\n-author = 'Pallets Team'\n-release, version = get_version('Flask')\n+project = \"Flask\"\n+copyright = \"2010 Pallets\"\n+author = \"Pallets\"\n+release, version = get_version(\"Flask\")\n \n # General --------------------------------------------------------------\n \n-master_doc = 'index'\n-\n+master_doc = \"index\"\n extensions = [\n-    'sphinx.ext.autodoc',\n-    'sphinx.ext.intersphinx',\n-    'sphinxcontrib.log_cabinet',\n+    \"sphinx.ext.autodoc\",\n+    \"sphinx.ext.intersphinx\",\n+    \"sphinxcontrib.log_cabinet\",\n+    \"pallets_sphinx_themes\",\n+    \"sphinx_issues\",\n ]\n-\n intersphinx_mapping = {\n-    'python': ('https://docs.python.org/3/', None),\n-    'werkzeug': ('http://werkzeug.pocoo.org/docs/', None),\n-    'click': ('http://click.pocoo.org/', None),\n-    'jinja': ('http://jinja.pocoo.org/docs/', None),\n-    'itsdangerous': ('https://pythonhosted.org/itsdangerous', None),\n-    'sqlalchemy': ('https://docs.sqlalchemy.org/en/latest/', None),\n-    'wtforms': ('https://wtforms.readthedocs.io/en/latest/', None),\n-    'blinker': ('https://pythonhosted.org/blinker/', None),\n+    \"python\": (\"https://docs.python.org/3/\", None),\n+    \"werkzeug\": (\"https://werkzeug.palletsprojects.com/\", None),\n+    \"click\": (\"https://click.palletsprojects.com/\", None),\n+    \"jinja\": (\"http://jinja.pocoo.org/docs/\", None),\n+    \"itsdangerous\": (\"https://itsdangerous.palletsprojects.com/\", None),\n+    \"sqlalchemy\": (\"https://docs.sqlalchemy.org/\", None),\n+    \"wtforms\": (\"https://wtforms.readthedocs.io/en/stable/\", None),\n+    \"blinker\": (\"https://pythonhosted.org/blinker/\", None),\n }\n+issues_github_path = \"pallets/flask\"\n \n # HTML -----------------------------------------------------------------\n \n-html_theme = 'flask'\n+html_theme = \"flask\"\n+html_theme_options = {\"index_sidebar_logo\": False}\n html_context = {\n-    'project_links': [\n-        ProjectLink('Donate to Pallets', 'https://psfmember.org/civicrm/contribute/transact?reset=1&id=20'),\n-        ProjectLink('Flask Website', 'https://palletsprojects.com/p/flask/'),\n-        ProjectLink('PyPI releases', 'https://pypi.org/project/Flask/'),\n-        ProjectLink('Source Code', 'https://github.com/pallets/flask/'),\n-        ProjectLink(\n-            'Issue Tracker', 'https://github.com/pallets/flask/issues/'),\n-    ],\n-    'canonical_url': 'http://flask.pocoo.org/docs/{}/'.format(version),\n-    'carbon_ads_args': 'zoneid=1673&serve=C6AILKT&placement=pocooorg',\n-}\n-html_sidebars = {\n-    'index': [\n-        'project.html',\n-        'versions.html',\n-        'carbon_ads.html',\n-        'searchbox.html',\n-    ],\n-    '**': [\n-        'localtoc.html',\n-        'relations.html',\n-        'versions.html',\n-        'carbon_ads.html',\n-        'searchbox.html',\n+    \"project_links\": [\n+        ProjectLink(\"Donate to Pallets\", \"https://palletsprojects.com/donate\"),\n+        ProjectLink(\"Flask Website\", \"https://palletsprojects.com/p/flask/\"),\n+        ProjectLink(\"PyPI releases\", \"https://pypi.org/project/Flask/\"),\n+        ProjectLink(\"Source Code\", \"https://github.com/pallets/flask/\"),\n+        ProjectLink(\"Issue Tracker\", \"https://github.com/pallets/flask/issues/\"),\n     ]\n }\n-html_static_path = ['_static']\n-html_favicon = '_static/flask-favicon.ico'\n-html_logo = '_static/flask.png'\n-html_additional_pages = {\n-    '404': '404.html',\n+html_sidebars = {\n+    \"index\": [\"project.html\", \"localtoc.html\", \"searchbox.html\"],\n+    \"**\": [\"localtoc.html\", \"relations.html\", \"searchbox.html\"],\n }\n+singlehtml_sidebars = {\"index\": [\"project.html\", \"localtoc.html\"]}\n+html_static_path = [\"_static\"]\n+html_favicon = \"_static/flask-icon.png\"\n+html_logo = \"_static/flask-icon.png\"\n+html_title = \"Flask Documentation ({})\".format(version)\n html_show_sourcelink = False\n \n # LaTeX ----------------------------------------------------------------\n \n latex_documents = [\n-    (master_doc, 'Flask.tex', 'Flask Documentation', 'Pallets Team', 'manual'),\n+    (master_doc, \"Flask-{}.tex\".format(version), html_title, author, \"manual\")\n ]\n-latex_use_modindex = False\n-latex_elements = {\n-    'papersize': 'a4paper',\n-    'pointsize': '12pt',\n-    'fontpkg': r'\\usepackage{mathpazo}',\n-    'preamble': r'\\usepackage{flaskstyle}',\n-}\n-latex_use_parts = True\n-latex_additional_files = ['flaskstyle.sty', 'logo.pdf']\n-\n-# linkcheck ------------------------------------------------------------\n-\n-linkcheck_anchors = False\n \n # Local Extensions -----------------------------------------------------\n \n-def unwrap_decorators():\n-    import sphinx.util.inspect as inspect\n-    import functools\n \n-    old_getargspec = inspect.getargspec\n-    def getargspec(x):\n-        return old_getargspec(getattr(x, '_original_function', x))\n-    inspect.getargspec = getargspec\n-\n-    old_update_wrapper = functools.update_wrapper\n-    def update_wrapper(wrapper, wrapped, *a, **kw):\n-        rv = old_update_wrapper(wrapper, wrapped, *a, **kw)\n-        rv._original_function = wrapped\n-        return rv\n-    functools.update_wrapper = update_wrapper\n-\n-\n-unwrap_decorators()\n-del unwrap_decorators\n-\n-\n-_internal_mark_re = re.compile(r'^\\s*:internal:\\s*$(?m)', re.M)\n-\n-\n-def skip_internal(app, what, name, obj, skip, options):\n-    docstring = inspect.getdoc(obj) or ''\n-\n-    if skip or _internal_mark_re.search(docstring) is not None:\n-        return True\n-\n-\n-def cut_module_meta(app, what, name, obj, options, lines):\n-    \"\"\"Remove metadata from autodoc output.\"\"\"\n-    if what != 'module':\n-        return\n-\n-    lines[:] = [\n-        line for line in lines\n-        if not line.startswith((':copyright:', ':license:'))\n-    ]\n-\n-\n-def github_link(\n-    name, rawtext, text, lineno, inliner, options=None, content=None\n-):\n+def github_link(name, rawtext, text, lineno, inliner, options=None, content=None):\n     app = inliner.document.settings.env.app\n     release = app.config.release\n-    base_url = 'https://github.com/pallets/flask/tree/'\n+    base_url = \"https://github.com/pallets/flask/tree/\"\n \n-    if text.endswith('>'):\n-        words, text = text[:-1].rsplit('<', 1)\n+    if text.endswith(\">\"):\n+        words, text = text[:-1].rsplit(\"<\", 1)\n         words = words.strip()\n     else:\n         words = None\n \n-    if release.endswith('dev'):\n-        url = '{0}master/{1}'.format(base_url, text)\n+    if packaging.version.parse(release).is_devrelease:\n+        url = \"{0}master/{1}\".format(base_url, text)\n     else:\n-        url = '{0}{1}/{2}'.format(base_url, release, text)\n+        url = \"{0}{1}/{2}\".format(base_url, release, text)\n \n     if words is None:\n         words = url\n \n     from docutils.nodes import reference\n     from docutils.parsers.rst.roles import set_classes\n+\n     options = options or {}\n     set_classes(options)\n     node = reference(rawtext, words, refuri=url, **options)\n@@ -165,6 +93,4 @@ def github_link(\n \n \n def setup(app):\n-    app.connect('autodoc-skip-member', skip_internal)\n-    app.connect('autodoc-process-docstring', cut_module_meta)\n-    app.add_role('gh', github_link)\n+    app.add_role(\"gh\", github_link)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0c0b31a789f8bfeadcbcf49d1fb38a00624b3065", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 64 | Lines Deleted: 5 | Files Changed: 2 | Hunks: 7 | Methods Changed: 9 | Complexity Δ (Sum/Max): 13/12 | Churn Δ: 69 | Churn Cumulative: 530 | Contributors (this commit): 13 | Commits (past 90d): 2 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -173,6 +173,13 @@ class SessionInterface(object):\n         \"\"\"\n         return isinstance(obj, self.null_session_class)\n \n+    def get_cookie_name(self, app):\n+        \"\"\"Returns the name of the session cookie.\n+\n+        Uses ``app.session_cookie_name`` which is set to ``SESSION_COOKIE_NAME``\n+        \"\"\"\n+        return app.session_cookie_name\n+\n     def get_cookie_domain(self, app):\n         \"\"\"Returns the domain that should be set for the session cookie.\n \n@@ -340,7 +347,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         s = self.get_signing_serializer(app)\n         if s is None:\n             return None\n-        val = request.cookies.get(app.session_cookie_name)\n+        val = request.cookies.get(self.get_cookie_name(app))\n         if not val:\n             return self.session_class()\n         max_age = total_seconds(app.permanent_session_lifetime)\n@@ -351,6 +358,7 @@ class SecureCookieSessionInterface(SessionInterface):\n             return self.session_class()\n \n     def save_session(self, app, session, response):\n+        name = self.get_cookie_name(app)\n         domain = self.get_cookie_domain(app)\n         path = self.get_cookie_path(app)\n \n@@ -358,9 +366,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         # If the session is empty, return without setting the cookie.\n         if not session:\n             if session.modified:\n-                response.delete_cookie(\n-                    app.session_cookie_name, domain=domain, path=path\n-                )\n+                response.delete_cookie(name, domain=domain, path=path)\n \n             return\n \n@@ -377,7 +383,7 @@ class SecureCookieSessionInterface(SessionInterface):\n         expires = self.get_expiration_time(app, session)\n         val = self.get_signing_serializer(app).dumps(dict(session))\n         response.set_cookie(\n-            app.session_cookie_name,\n+            name,\n             val,\n             expires=expires,\n             httponly=httponly,\n\n@@ -11,6 +11,7 @@\n import pytest\n \n import flask\n+from flask.sessions import SecureCookieSessionInterface\n from flask.sessions import SessionInterface\n \n try:\n@@ -229,6 +230,58 @@ def test_session_error_pops_context():\n     assert not flask.current_app\n \n \n+def test_session_dynamic_cookie_name():\n+\n+    # This session interface will use a cookie with a different name if the\n+    # requested url ends with the string \"dynamic_cookie\"\n+    class PathAwareSessionInterface(SecureCookieSessionInterface):\n+        def get_cookie_name(self, app):\n+            if flask.request.url.endswith(\"dynamic_cookie\"):\n+                return \"dynamic_cookie_name\"\n+            else:\n+                return super(PathAwareSessionInterface, self).get_cookie_name(app)\n+\n+    class CustomFlask(flask.Flask):\n+        session_interface = PathAwareSessionInterface()\n+\n+    app = CustomFlask(__name__)\n+    app.secret_key = \"secret_key\"\n+\n+    @app.route(\"/set\", methods=[\"POST\"])\n+    def set():\n+        flask.session[\"value\"] = flask.request.form[\"value\"]\n+        return \"value set\"\n+\n+    @app.route(\"/get\")\n+    def get():\n+        v = flask.session.get(\"value\", \"None\")\n+        return v\n+\n+    @app.route(\"/set_dynamic_cookie\", methods=[\"POST\"])\n+    def set_dynamic_cookie():\n+        flask.session[\"value\"] = flask.request.form[\"value\"]\n+        return \"value set\"\n+\n+    @app.route(\"/get_dynamic_cookie\")\n+    def get_dynamic_cookie():\n+        v = flask.session.get(\"value\", \"None\")\n+        return v\n+\n+    test_client = app.test_client()\n+\n+    # first set the cookie in both /set urls but each with a different value\n+    assert test_client.post(\"/set\", data={\"value\": \"42\"}).data == b\"value set\"\n+    assert (\n+        test_client.post(\"/set_dynamic_cookie\", data={\"value\": \"616\"}).data\n+        == b\"value set\"\n+    )\n+\n+    # now check that the relevant values come back - meaning that different\n+    # cookies are being used for the urls that end with \"dynamic cookie\"\n+    assert test_client.get(\"/get\").data == b\"42\"\n+    assert test_client.get(\"/get_dynamic_cookie\").data == b\"616\"\n+\n+\n def test_bad_environ_raises_bad_request():\n     app = flask.Flask(__name__)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#829aa65e642baf2f90bc29f940c8cbf180848dbc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 43 | Lines Deleted: 17 | Files Changed: 2 | Hunks: 10 | Methods Changed: 7 | Complexity Δ (Sum/Max): -1/1 | Churn Δ: 60 | Churn Cumulative: 1061 | Contributors (this commit): 9 | Commits (past 90d): 2 | Contributors (cumulative): 11 | DMM Complexity: 1.0\n\nDIFF:\n@@ -11,6 +11,7 @@\n import errno\n import os\n import types\n+import warnings\n \n from werkzeug.utils import import_string\n \n@@ -176,6 +177,34 @@ class Config(dict):\n             if key.isupper():\n                 self[key] = getattr(obj, key)\n \n+    def from_file(self, filename, load, silent=False):\n+        \"\"\"Update the values in the config from a file that is loaded using\n+        the *load* argument. This method passes the loaded Mapping\n+        to the :meth:`from_mapping` function.\n+\n+        :param filename: the filename of the JSON file.  This can either be an\n+                         absolute filename or a filename relative to the\n+                         root path.\n+        :param load: a callable that takes a file handle and returns a mapping\n+                     from the file.\n+        :type load: Callable[[Reader], Mapping]. Where Reader is a Protocol\n+                    that implements a read method.\n+        :param silent: set to ``True`` if you want silent failure for missing\n+                       files.\n+\n+        .. versionadded:: 1.2\n+        \"\"\"\n+        filename = os.path.join(self.root_path, filename)\n+        try:\n+            with open(filename) as file_:\n+                obj = load(file_)\n+        except IOError as e:\n+            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n+                return False\n+            e.strerror = \"Unable to load configuration file (%s)\" % e.strerror\n+            raise\n+        return self.from_mapping(obj)\n+\n     def from_json(self, filename, silent=False):\n         \"\"\"Updates the values in the config from a JSON file. This function\n         behaves as if the JSON object was a dictionary and passed to the\n@@ -189,17 +218,13 @@ class Config(dict):\n \n         .. versionadded:: 0.11\n         \"\"\"\n-        filename = os.path.join(self.root_path, filename)\n-\n-        try:\n-            with open(filename) as json_file:\n-                obj = json.loads(json_file.read())\n-        except IOError as e:\n-            if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n-                return False\n-            e.strerror = \"Unable to load configuration file (%s)\" % e.strerror\n-            raise\n-        return self.from_mapping(obj)\n+        warnings.warn(\n+            DeprecationWarning(\n+                '\"from_json\" is deprecated and will be removed in 2.0. Use'\n+                ' \"from_file(filename, load=json.load)\" instead.'\n+            )\n+        )\n+        return self.from_file(filename, json.load, silent=silent)\n \n     def from_mapping(self, *mapping, **kwargs):\n         \"\"\"Updates the config like :meth:`update` ignoring items with non-upper\n\n@@ -6,6 +6,7 @@\n     :copyright: 2010 Pallets\n     :license: BSD-3-Clause\n \"\"\"\n+import json\n import os\n import textwrap\n from datetime import timedelta\n@@ -27,7 +28,7 @@ def common_object_test(app):\n     assert \"TestConfig\" not in app.config\n \n \n-def test_config_from_file():\n+def test_config_from_pyfile():\n     app = flask.Flask(__name__)\n     app.config.from_pyfile(__file__.rsplit(\".\", 1)[0] + \".py\")\n     common_object_test(app)\n@@ -39,10 +40,10 @@ def test_config_from_object():\n     common_object_test(app)\n \n \n-def test_config_from_json():\n+def test_config_from_file():\n     app = flask.Flask(__name__)\n     current_dir = os.path.dirname(os.path.abspath(__file__))\n-    app.config.from_json(os.path.join(current_dir, \"static\", \"config.json\"))\n+    app.config.from_file(os.path.join(current_dir, \"static\", \"config.json\"), json.load)\n     common_object_test(app)\n \n \n@@ -116,16 +117,16 @@ def test_config_missing():\n     assert not app.config.from_pyfile(\"missing.cfg\", silent=True)\n \n \n-def test_config_missing_json():\n+def test_config_missing_file():\n     app = flask.Flask(__name__)\n     with pytest.raises(IOError) as e:\n-        app.config.from_json(\"missing.json\")\n+        app.config.from_file(\"missing.json\", load=json.load)\n     msg = str(e.value)\n     assert msg.startswith(\n         \"[Errno 2] Unable to load configuration file (No such file or directory):\"\n     )\n     assert msg.endswith(\"missing.json'\")\n-    assert not app.config.from_json(\"missing.json\", silent=True)\n+    assert not app.config.from_file(\"missing.json\", load=json.load, silent=True)\n \n \n def test_custom_config_class():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#aac0f585b944cc65a1b570c1cc26d840f03e2f72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 35 | Lines Deleted: 28 | Files Changed: 1 | Hunks: 11 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 63 | Churn Cumulative: 117 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -15,7 +15,6 @@ import warnings\n \n from werkzeug.utils import import_string\n \n-from . import json\n from ._compat import iteritems\n from ._compat import string_types\n \n@@ -178,53 +177,61 @@ class Config(dict):\n                 self[key] = getattr(obj, key)\n \n     def from_file(self, filename, load, silent=False):\n-        \"\"\"Update the values in the config from a file that is loaded using\n-        the *load* argument. This method passes the loaded Mapping\n-        to the :meth:`from_mapping` function.\n+        \"\"\"Update the values in the config from a file that is loaded\n+        using the ``load`` parameter. The loaded data is passed to the\n+        :meth:`from_mapping` method.\n \n-        :param filename: the filename of the JSON file.  This can either be an\n-                         absolute filename or a filename relative to the\n-                         root path.\n-        :param load: a callable that takes a file handle and returns a mapping\n-                     from the file.\n-        :type load: Callable[[Reader], Mapping]. Where Reader is a Protocol\n-                    that implements a read method.\n-        :param silent: set to ``True`` if you want silent failure for missing\n-                       files.\n+        .. code-block:: python\n+\n+            import toml\n+            app.config.from_file(\"config.toml\", load=toml.load)\n+\n+        :param filename: The path to the data file. This can be an\n+            absolute path or relative to the config root path.\n+        :param load: A callable that takes a file handle and returns a\n+            mapping of loaded data from the file.\n+        :type load: ``Callable[[Reader], Mapping]`` where ``Reader``\n+            implements a ``read`` method.\n+        :param silent: Ignore the file if it doesn't exist.\n \n         .. versionadded:: 1.2\n         \"\"\"\n         filename = os.path.join(self.root_path, filename)\n+\n         try:\n-            with open(filename) as file_:\n-                obj = load(file_)\n+            with open(filename) as f:\n+                obj = load(f)\n         except IOError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):\n                 return False\n+\n             e.strerror = \"Unable to load configuration file (%s)\" % e.strerror\n             raise\n+\n         return self.from_mapping(obj)\n \n     def from_json(self, filename, silent=False):\n-        \"\"\"Updates the values in the config from a JSON file. This function\n-        behaves as if the JSON object was a dictionary and passed to the\n-        :meth:`from_mapping` function.\n+        \"\"\"Update the values in the config from a JSON file. The loaded\n+        data is passed to the :meth:`from_mapping` method.\n \n-        :param filename: the filename of the JSON file.  This can either be an\n-                         absolute filename or a filename relative to the\n-                         root path.\n-        :param silent: set to ``True`` if you want silent failure for missing\n-                       files.\n+        :param filename: The path to the JSON file. This can be an\n+            absolute path or relative to the config root path.\n+        :param silent: Ignore the file if it doesn't exist.\n+\n+        .. deprecated:: 1.2\n+            Use :meth:`from_file` with :meth:`json.load` instead.\n \n         .. versionadded:: 0.11\n         \"\"\"\n         warnings.warn(\n-            DeprecationWarning(\n-                '\"from_json\" is deprecated and will be removed in 2.0. Use'\n-                ' \"from_file(filename, load=json.load)\" instead.'\n+            \"'from_json' is deprecated and will be removed in 2.0.\"\n+            \" Use 'from_file(filename, load=json.load)' instead.\",\n+            DeprecationWarning,\n+            stacklevel=2,\n         )\n-        )\n-        return self.from_file(filename, json.load, silent=silent)\n+        from .json import load\n+\n+        return self.from_file(filename, load, silent=silent)\n \n     def from_mapping(self, *mapping, **kwargs):\n         \"\"\"Updates the config like :meth:`update` ignoring items with non-upper\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#c367a86cc5be70da4928b276d0218f98df6e854d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 10 | Churn Cumulative: 2847 | Contributors (this commit): 36 | Commits (past 90d): 1 | Contributors (cumulative): 36 | DMM Complexity: 1.0\n\nDIFF:\n@@ -11,6 +11,7 @@\n import datetime\n import io\n import os\n+import sys\n import uuid\n \n import pytest\n@@ -780,12 +781,17 @@ class TestSendfile(object):\n         assert rv.data.strip() == b\"Hello Subdomain\"\n         rv.close()\n \n-    def test_send_from_directory_bad_request(self, app, req_ctx):\n+    def test_send_from_directory_null_character(self, app, req_ctx):\n         app.root_path = os.path.join(\n             os.path.dirname(__file__), \"test_apps\", \"subdomaintestmodule\"\n         )\n \n-        with pytest.raises(BadRequest):\n+        if sys.version_info >= (3, 8):\n+            exception = NotFound\n+        else:\n+            exception = BadRequest\n+\n+        with pytest.raises(exception):\n             flask.send_from_directory(\"static\", \"bad\\x00\")\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1feb69d595575fabb569f8481c85c3568075d7ad", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 119 | Contributors (this commit): 3 | Commits (past 90d): 3 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -194,7 +194,7 @@ class Config(dict):\n             implements a ``read`` method.\n         :param silent: Ignore the file if it doesn't exist.\n \n-        .. versionadded:: 1.2\n+        .. versionadded:: 2.0\n         \"\"\"\n         filename = os.path.join(self.root_path, filename)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#240a11052bb2ef1ba0bbcc5d503601a175926f75", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 9 | Churn Cumulative: 37 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -296,11 +296,15 @@ class DispatchingApp(object):\n     of the Werkzeug debugger means that it shows up in the browser.\n     \"\"\"\n \n-    def __init__(self, loader, use_eager_loading=False):\n+    def __init__(self, loader, use_eager_loading=None):\n         self.loader = loader\n         self._app = None\n         self._lock = Lock()\n         self._bg_loading_exc_info = None\n+\n+        if use_eager_loading is None:\n+            use_eager_loading = os.environ.get(\"WERKZEUG_RUN_MAIN\") != \"true\"\n+\n         if use_eager_loading:\n             self._load_unlocked()\n         else:\n@@ -841,9 +845,6 @@ def run_command(\n     if debugger is None:\n         debugger = debug\n \n-    if eager_loading is None:\n-        eager_loading = not reload\n-\n     show_server_banner(get_env(), debug, info.app_import_path, eager_loading)\n     app = DispatchingApp(info.load_app, use_eager_loading=eager_loading)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a671e47921f6b3f1e6c24f34f23b83ed13fe63b6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 39 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -806,7 +806,7 @@ class SeparatedPathType(click.Path):\n     \"is active if debug is enabled.\",\n )\n @click.option(\n-    \"--eager-loading/--lazy-loader\",\n+    \"--eager-loading/--lazy-loading\",\n     default=None,\n     help=\"Enable or disable eager loading. By default eager \"\n     \"loading is enabled if the reloader is disabled.\",\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#33d9f9fa08e5a007d7ff1bb1f92c8d593b3c380a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 773 | Contributors (this commit): 30 | Commits (past 90d): 1 | Contributors (cumulative): 30 | DMM Complexity: None\n\nDIFF:\n@@ -40,6 +40,9 @@ setup(\n         \"Programming Language :: Python :: 3.5\",\n         \"Programming Language :: Python :: 3.6\",\n         \"Programming Language :: Python :: 3.7\",\n+        \"Programming Language :: Python :: 3.8\",\n+        \"Programming Language :: Python :: Implementation :: CPython\",\n+        \"Programming Language :: Python :: Implementation :: PyPy\",\n         \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n         \"Topic :: Internet :: WWW/HTTP :: WSGI :: Application\",\n         \"Topic :: Software Development :: Libraries :: Application Frameworks\",\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#980168d08498c00a14ab0f687ffac8cc50edb326", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 100 | Lines Deleted: 95 | Files Changed: 2 | Hunks: 28 | Methods Changed: 12 | Complexity Δ (Sum/Max): 9/8 | Churn Δ: 195 | Churn Cumulative: 3084 | Contributors (this commit): 36 | Commits (past 90d): 3 | Contributors (cumulative): 37 | DMM Complexity: 0.0\n\nDIFF:\n@@ -489,6 +489,11 @@ def send_file(\n     guessing requires a `filename` or an `attachment_filename` to be\n     provided.\n \n+    When passing a file-like object instead of a filename, only binary\n+    mode is supported (``open(filename, \"rb\")``, :class:`~io.BytesIO`,\n+    etc.). Text mode files and :class:`~io.StringIO` will raise a\n+    :exc:`ValueError`.\n+\n     ETags will also be attached automatically if a `filename` is provided. You\n     can turn this off by setting `add_etags=False`.\n \n@@ -499,53 +504,56 @@ def send_file(\n     Please never pass filenames to this function from user sources;\n     you should use :func:`send_from_directory` instead.\n \n-    .. versionadded:: 0.2\n+    .. versionchanged:: 2.0\n+        Passing a file-like object that inherits from\n+        :class:`~io.TextIOBase` will raise a :exc:`ValueError` rather\n+        than sending an empty file.\n \n-    .. versionadded:: 0.5\n-       The `add_etags`, `cache_timeout` and `conditional` parameters were\n-       added.  The default behavior is now to attach etags.\n+    .. versionchanged:: 1.1\n+        ``filename`` may be a :class:`~os.PathLike` object.\n \n-    .. versionchanged:: 0.7\n-       mimetype guessing and etag support for file objects was\n-       deprecated because it was unreliable.  Pass a filename if you are\n-       able to, otherwise attach an etag yourself.  This functionality\n-       will be removed in Flask 1.0\n+    .. versionchanged:: 1.1\n+        Passing a :class:`~io.BytesIO` object supports range requests.\n \n-    .. versionchanged:: 0.9\n-       cache_timeout pulls its default from application config, when None.\n-\n-    .. versionchanged:: 0.12\n-       The filename is no longer automatically inferred from file objects. If\n-       you want to use automatic mimetype and etag support, pass a filepath via\n-       `filename_or_fp` or `attachment_filename`.\n-\n-    .. versionchanged:: 0.12\n-       The `attachment_filename` is preferred over `filename` for MIME-type\n-       detection.\n+    .. versionchanged:: 1.0.3\n+        Filenames are encoded with ASCII instead of Latin-1 for broader\n+        compatibility with WSGI servers.\n \n     .. versionchanged:: 1.0\n         UTF-8 filenames, as specified in `RFC 2231`_, are supported.\n \n     .. _RFC 2231: https://tools.ietf.org/html/rfc2231#section-4\n \n-    .. versionchanged:: 1.0.3\n-        Filenames are encoded with ASCII instead of Latin-1 for broader\n-        compatibility with WSGI servers.\n+    .. versionchanged:: 0.12\n+       The filename is no longer automatically inferred from file\n+       objects. If you want to use automatic MIME and etag support, pass\n+       a filename via ``filename_or_fp`` or ``attachment_filename``.\n \n-    .. versionchanged:: 1.1\n-        Filename may be a :class:`~os.PathLike` object.\n+    .. versionchanged:: 0.12\n+       ``attachment_filename`` is preferred over ``filename`` for MIME\n+       detection.\n \n-    .. versionadded:: 1.1\n-        Partial content supports :class:`~io.BytesIO`.\n+    .. versionchanged:: 0.9\n+       ``cache_timeout`` defaults to\n+       :meth:`Flask.get_send_file_max_age`.\n \n-    :param filename_or_fp: the filename of the file to send.\n-                           This is relative to the :attr:`~Flask.root_path`\n-                           if a relative path is specified.\n-                           Alternatively a file object might be provided in\n-                           which case ``X-Sendfile`` might not work and fall\n-                           back to the traditional method.  Make sure that the\n-                           file pointer is positioned at the start of data to\n-                           send before calling :func:`send_file`.\n+    .. versionchanged:: 0.7\n+       MIME guessing and etag support for file-like objects was\n+       deprecated because it was unreliable. Pass a filename if you are\n+       able to, otherwise attach an etag yourself. This functionality\n+       will be removed in Flask 1.0.\n+\n+    .. versionadded:: 0.5\n+       The ``add_etags``, ``cache_timeout`` and ``conditional``\n+       parameters were added. The default behavior is to add etags.\n+\n+    .. versionadded:: 0.2\n+\n+    :param filename_or_fp: The filename of the file to send, relative to\n+        :attr:`~Flask.root_path` if a relative path is specified.\n+        Alternatively, a file-like object opened in binary mode. Make\n+        sure the file pointer is seeked to the start of the data.\n+        ``X-Sendfile`` will only be used with filenames.\n     :param mimetype: the mimetype of the file if provided. If a file path is\n                      given, auto detection happens as fallback, otherwise an\n                      error will be raised.\n@@ -620,25 +628,29 @@ def send_file(\n     if current_app.use_x_sendfile and filename:\n         if file is not None:\n             file.close()\n+\n         headers[\"X-Sendfile\"] = filename\n         fsize = os.path.getsize(filename)\n-        headers[\"Content-Length\"] = fsize\n         data = None\n     else:\n         if file is None:\n             file = open(filename, \"rb\")\n             mtime = os.path.getmtime(filename)\n             fsize = os.path.getsize(filename)\n-            headers[\"Content-Length\"] = fsize\n         elif isinstance(file, io.BytesIO):\n             try:\n                 fsize = file.getbuffer().nbytes\n             except AttributeError:\n                 # Python 2 doesn't have getbuffer\n                 fsize = len(file.getvalue())\n-            headers[\"Content-Length\"] = fsize\n+        elif isinstance(file, io.TextIOBase):\n+            raise ValueError(\"Files must be opened in binary mode or use BytesIO.\")\n+\n         data = wrap_file(request.environ, file)\n \n+    if fsize is not None:\n+        headers[\"Content-Length\"] = fsize\n+\n     rv = current_app.response_class(\n         data, mimetype=mimetype, headers=headers, direct_passthrough=True\n     )\n\n@@ -24,6 +24,7 @@ from werkzeug.http import parse_options_header\n \n import flask\n from flask import json\n+from flask._compat import PY2\n from flask._compat import StringIO\n from flask._compat import text_type\n from flask.helpers import get_debug_flag\n@@ -446,6 +447,14 @@ class TestJSON(object):\n             assert lines == sorted_by_str\n \n \n+class PyStringIO(object):\n+    def __init__(self, *args, **kwargs):\n+        self._io = io.BytesIO(*args, **kwargs)\n+\n+    def __getattr__(self, name):\n+        return getattr(self._io, name)\n+\n+\n class TestSendfile(object):\n     def test_send_file_regular(self, app, req_ctx):\n         rv = flask.send_file(\"static/index.html\")\n@@ -473,7 +482,7 @@ class TestSendfile(object):\n         @app.route(\"/\")\n         def index():\n             return flask.send_file(\n-                StringIO(\"party like it's\"),\n+                io.BytesIO(b\"party like it's\"),\n                 last_modified=last_modified,\n                 mimetype=\"text/plain\",\n             )\n@@ -483,65 +492,53 @@ class TestSendfile(object):\n \n     def test_send_file_object_without_mimetype(self, app, req_ctx):\n         with pytest.raises(ValueError) as excinfo:\n-            flask.send_file(StringIO(\"LOL\"))\n+            flask.send_file(io.BytesIO(b\"LOL\"))\n         assert \"Unable to infer MIME-type\" in str(excinfo.value)\n         assert \"no filename is available\" in str(excinfo.value)\n \n-        flask.send_file(StringIO(\"LOL\"), attachment_filename=\"filename\")\n-\n-    def test_send_file_object(self, app, req_ctx):\n-        with open(os.path.join(app.root_path, \"static/index.html\"), mode=\"rb\") as f:\n-            rv = flask.send_file(f, mimetype=\"text/html\")\n-            rv.direct_passthrough = False\n-            with app.open_resource(\"static/index.html\") as f:\n-                assert rv.data == f.read()\n-            assert rv.mimetype == \"text/html\"\n-            rv.close()\n+        flask.send_file(io.BytesIO(b\"LOL\"), attachment_filename=\"filename\")\n \n+    @pytest.mark.parametrize(\n+        \"opener\",\n+        [\n+            lambda app: open(os.path.join(app.static_folder, \"index.html\"), \"rb\"),\n+            lambda app: io.BytesIO(b\"Test\"),\n+            pytest.param(\n+                lambda app: StringIO(\"Test\"),\n+                marks=pytest.mark.skipif(not PY2, reason=\"Python 2 only\"),\n+            ),\n+            lambda app: PyStringIO(b\"Test\"),\n+        ],\n+    )\n+    @pytest.mark.usefixtures(\"req_ctx\")\n+    def test_send_file_object(self, app, opener):\n+        file = opener(app)\n         app.use_x_sendfile = True\n-\n-        with open(os.path.join(app.root_path, \"static/index.html\")) as f:\n-            rv = flask.send_file(f, mimetype=\"text/html\")\n-            assert rv.mimetype == \"text/html\"\n+        rv = flask.send_file(file, mimetype=\"text/plain\")\n+        rv.direct_passthrough = False\n+        assert rv.data\n+        assert rv.mimetype == \"text/plain\"\n         assert \"x-sendfile\" not in rv.headers\n         rv.close()\n \n-        app.use_x_sendfile = False\n-        f = StringIO(\"Test\")\n-        rv = flask.send_file(f, mimetype=\"application/octet-stream\")\n-        rv.direct_passthrough = False\n-        assert rv.data == b\"Test\"\n-        assert rv.mimetype == \"application/octet-stream\"\n-        rv.close()\n+    @pytest.mark.parametrize(\n+        \"opener\",\n+        [\n+            lambda app: io.StringIO(u\"Test\"),\n+            pytest.param(\n+                lambda app: open(os.path.join(app.static_folder, \"index.html\")),\n+                marks=pytest.mark.skipif(PY2, reason=\"Python 3 only\"),\n+            ),\n+        ],\n+    )\n+    @pytest.mark.usefixtures(\"req_ctx\")\n+    def test_send_file_text_fails(self, app, opener):\n+        file = opener(app)\n \n-        class PyStringIO(object):\n-            def __init__(self, *args, **kwargs):\n-                self._io = StringIO(*args, **kwargs)\n+        with pytest.raises(ValueError):\n+            flask.send_file(file, mimetype=\"text/plain\")\n \n-            def __getattr__(self, name):\n-                return getattr(self._io, name)\n-\n-        f = PyStringIO(\"Test\")\n-        f.name = \"test.txt\"\n-        rv = flask.send_file(f, attachment_filename=f.name)\n-        rv.direct_passthrough = False\n-        assert rv.data == b\"Test\"\n-        assert rv.mimetype == \"text/plain\"\n-        rv.close()\n-\n-        f = StringIO(\"Test\")\n-        rv = flask.send_file(f, mimetype=\"text/plain\")\n-        rv.direct_passthrough = False\n-        assert rv.data == b\"Test\"\n-        assert rv.mimetype == \"text/plain\"\n-        rv.close()\n-\n-        app.use_x_sendfile = True\n-\n-        f = StringIO(\"Test\")\n-        rv = flask.send_file(f, mimetype=\"text/html\")\n-        assert \"x-sendfile\" not in rv.headers\n-        rv.close()\n+        file.close()\n \n     def test_send_file_pathlike(self, app, req_ctx):\n         rv = flask.send_file(FakePath(\"static/index.html\"))\n@@ -630,10 +627,6 @@ class TestSendfile(object):\n         assert rv.data == b\"somethingsomething\"[4:16]\n         rv.close()\n \n-    @pytest.mark.skipif(\n-        not callable(getattr(Range, \"to_content_range_header\", None)),\n-        reason=\"not implemented within werkzeug\",\n-    )\n     def test_send_file_range_request_xsendfile_invalid(self, app, client):\n         # https://github.com/pallets/flask/issues/2526\n         app.use_x_sendfile = True\n@@ -649,7 +642,7 @@ class TestSendfile(object):\n     def test_attachment(self, app, req_ctx):\n         app = flask.Flask(__name__)\n         with app.test_request_context():\n-            with open(os.path.join(app.root_path, \"static/index.html\")) as f:\n+            with open(os.path.join(app.root_path, \"static/index.html\"), \"rb\") as f:\n                 rv = flask.send_file(\n                     f, as_attachment=True, attachment_filename=\"index.html\"\n                 )\n@@ -657,7 +650,7 @@ class TestSendfile(object):\n                 assert value == \"attachment\"\n                 rv.close()\n \n-        with open(os.path.join(app.root_path, \"static/index.html\")) as f:\n+        with open(os.path.join(app.root_path, \"static/index.html\"), \"rb\") as f:\n             rv = flask.send_file(\n                 f, as_attachment=True, attachment_filename=\"index.html\"\n             )\n@@ -674,7 +667,7 @@ class TestSendfile(object):\n         rv.close()\n \n         rv = flask.send_file(\n-            StringIO(\"Test\"),\n+            io.BytesIO(b\"Test\"),\n             as_attachment=True,\n             attachment_filename=\"index.txt\",\n             add_etags=False,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
