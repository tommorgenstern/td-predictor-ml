{"custom_id": "fastapi#7b63bc555170fe1eccee65c4029f1337ad75eb21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 784 | Lines Deleted: 71 | Files Changed: 14 | Hunks: 65 | Methods Changed: 52 | Complexity Δ (Sum/Max): 22/4 | Churn Δ: 855 | Churn Cumulative: 5621 | Contributors (this commit): 10 | Commits (past 90d): 53 | Contributors (cumulative): 31 | DMM Complexity: 0.9125\n\nDIFF:\n@@ -0,0 +1,34 @@\n+from typing import List\n+\n+from fastapi import FastAPI\n+from fastapi.encoders import jsonable_encoder\n+from pydantic import BaseModel\n+\n+app = FastAPI()\n+\n+\n+class Item(BaseModel):\n+    name: str = None\n+    description: str = None\n+    price: float = None\n+    tax: float = 10.5\n+    tags: List[str] = []\n+\n+\n+items = {\n+    \"foo\": {\"name\": \"Foo\", \"price\": 50.2},\n+    \"bar\": {\"name\": \"Bar\", \"description\": \"The bartenders\", \"price\": 62, \"tax\": 20.2},\n+    \"baz\": {\"name\": \"Baz\", \"description\": None, \"price\": 50.2, \"tax\": 10.5, \"tags\": []},\n+}\n+\n+\n+@app.get(\"/items/{item_id}\", response_model=Item)\n+async def read_item(item_id: str):\n+    return items[item_id]\n+\n+\n+@app.put(\"/items/{item_id}\", response_model=Item)\n+async def update_item(item_id: str, item: Item):\n+    update_item_encoded = jsonable_encoder(item)\n+    items[item_id] = update_item_encoded\n+    return update_item_encoded\n\n@@ -0,0 +1,37 @@\n+from typing import List\n+\n+from fastapi import FastAPI\n+from fastapi.encoders import jsonable_encoder\n+from pydantic import BaseModel\n+\n+app = FastAPI()\n+\n+\n+class Item(BaseModel):\n+    name: str = None\n+    description: str = None\n+    price: float = None\n+    tax: float = 10.5\n+    tags: List[str] = []\n+\n+\n+items = {\n+    \"foo\": {\"name\": \"Foo\", \"price\": 50.2},\n+    \"bar\": {\"name\": \"Bar\", \"description\": \"The bartenders\", \"price\": 62, \"tax\": 20.2},\n+    \"baz\": {\"name\": \"Baz\", \"description\": None, \"price\": 50.2, \"tax\": 10.5, \"tags\": []},\n+}\n+\n+\n+@app.get(\"/items/{item_id}\", response_model=Item)\n+async def read_item(item_id: str):\n+    return items[item_id]\n+\n+\n+@app.patch(\"/items/{item_id}\", response_model=Item)\n+async def update_item(item_id: str, item: Item):\n+    stored_item_data = items[item_id]\n+    stored_item_model = Item(**stored_item_data)\n+    update_data = item.dict(skip_defaults=True)\n+    updated_item = stored_item_model.copy(update=update_data)\n+    items[item_id] = jsonable_encoder(updated_item)\n+    return updated_item\n\n@@ -22,15 +22,5 @@ items = {\n \n \n @app.get(\"/items/{item_id}\", response_model=Item, response_model_skip_defaults=True)\n-def read_item(item_id: str):\n+async def read_item(item_id: str):\n     return items[item_id]\n-\n-\n-@app.patch(\"/items/{item_id}\", response_model=Item, response_model_skip_defaults=True)\n-async def update_item(item_id: str, item: Item):\n-    stored_item_data = items[item_id]\n-    stored_item_model = Item(**stored_item_data)\n-    update_data = item.dict(skip_defaults=True)\n-    updated_item = stored_item_model.copy(update=update_data)\n-    items[item_id] = updated_item\n-    return updated_item\n\n@@ -0,0 +1,37 @@\n+from fastapi import FastAPI\n+from pydantic import BaseModel\n+\n+app = FastAPI()\n+\n+\n+class Item(BaseModel):\n+    name: str\n+    description: str = None\n+    price: float\n+    tax: float = 10.5\n+\n+\n+items = {\n+    \"foo\": {\"name\": \"Foo\", \"price\": 50.2},\n+    \"bar\": {\"name\": \"Bar\", \"description\": \"The Bar fighters\", \"price\": 62, \"tax\": 20.2},\n+    \"baz\": {\n+        \"name\": \"Baz\",\n+        \"description\": \"There goes my baz\",\n+        \"price\": 50.2,\n+        \"tax\": 10.5,\n+    },\n+}\n+\n+\n+@app.get(\n+    \"/items/{item_id}/name\",\n+    response_model=Item,\n+    response_model_include={\"name\", \"description\"},\n+)\n+async def read_item_name(item_id: str):\n+    return items[item_id]\n+\n+\n+@app.get(\"/items/{item_id}/public\", response_model=Item, response_model_exclude={\"tax\"})\n+async def read_item_public_data(item_id: str):\n+    return items[item_id]\n\n@@ -0,0 +1,37 @@\n+from fastapi import FastAPI\n+from pydantic import BaseModel\n+\n+app = FastAPI()\n+\n+\n+class Item(BaseModel):\n+    name: str\n+    description: str = None\n+    price: float\n+    tax: float = 10.5\n+\n+\n+items = {\n+    \"foo\": {\"name\": \"Foo\", \"price\": 50.2},\n+    \"bar\": {\"name\": \"Bar\", \"description\": \"The Bar fighters\", \"price\": 62, \"tax\": 20.2},\n+    \"baz\": {\n+        \"name\": \"Baz\",\n+        \"description\": \"There goes my baz\",\n+        \"price\": 50.2,\n+        \"tax\": 10.5,\n+    },\n+}\n+\n+\n+@app.get(\n+    \"/items/{item_id}/name\",\n+    response_model=Item,\n+    response_model_include=[\"name\", \"description\"],\n+)\n+async def read_item_name(item_id: str):\n+    return items[item_id]\n+\n+\n+@app.get(\"/items/{item_id}/public\", response_model=Item, response_model_exclude=[\"tax\"])\n+async def read_item_public_data(item_id: str):\n+    return items[item_id]\n\n@@ -1,4 +1,4 @@\n-from typing import Any, Callable, Dict, List, Optional, Type, Union\n+from typing import Any, Callable, Dict, List, Optional, Set, Type, Union\n \n from fastapi import routing\n from fastapi.openapi.docs import (\n@@ -138,6 +138,9 @@ class FastAPI(Starlette):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -157,6 +160,9 @@ class FastAPI(Starlette):\n             deprecated=deprecated,\n             methods=methods,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -178,6 +184,9 @@ class FastAPI(Starlette):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -198,6 +207,9 @@ class FastAPI(Starlette):\n                 deprecated=deprecated,\n                 methods=methods,\n                 operation_id=operation_id,\n+                response_model_include=response_model_include,\n+                response_model_exclude=response_model_exclude,\n+                response_model_by_alias=response_model_by_alias,\n                 response_model_skip_defaults=response_model_skip_defaults,\n                 include_in_schema=include_in_schema,\n                 response_class=response_class,\n@@ -250,6 +262,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -267,6 +282,9 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -287,6 +305,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -304,6 +325,9 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -324,6 +348,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -341,6 +368,9 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -361,6 +391,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -377,6 +410,9 @@ class FastAPI(Starlette):\n             response_description=response_description,\n             responses=responses or {},\n             deprecated=deprecated,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             operation_id=operation_id,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n@@ -398,6 +434,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -415,6 +454,9 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -435,6 +477,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -452,6 +497,9 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -472,6 +520,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -489,6 +540,9 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -509,6 +563,9 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -526,6 +583,9 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n\n@@ -16,6 +16,10 @@ def jsonable_encoder(\n     custom_encoder: dict = {},\n     sqlalchemy_safe: bool = True,\n ) -> Any:\n+    if include is not None and not isinstance(include, set):\n+        include = set(include)\n+    if exclude is not None and not isinstance(exclude, set):\n+        exclude = set(exclude)\n     if isinstance(obj, BaseModel):\n         encoder = getattr(obj.Config, \"json_encoders\", custom_encoder)\n         return jsonable_encoder(\n\n@@ -2,7 +2,7 @@ import asyncio\n import inspect\n import logging\n import re\n-from typing import Any, Callable, Dict, List, Optional, Type, Union\n+from typing import Any, Callable, Dict, List, Optional, Set, Type, Union\n \n from fastapi import params\n from fastapi.dependencies.models import Dependant\n@@ -33,10 +33,22 @@ from starlette.websockets import WebSocket\n \n \n def serialize_response(\n-    *, field: Field = None, response: Response, skip_defaults: bool = False\n+    *,\n+    field: Field = None,\n+    response: Response,\n+    include: Set[str] = None,\n+    exclude: Set[str] = set(),\n+    by_alias: bool = True,\n+    skip_defaults: bool = False,\n ) -> Any:\n \n-    encoded = jsonable_encoder(response, skip_defaults=skip_defaults)\n+    encoded = jsonable_encoder(\n+        response,\n+        include=include,\n+        exclude=exclude,\n+        by_alias=by_alias,\n+        skip_defaults=skip_defaults,\n+    )\n     if field:\n         errors = []\n         value, errors_ = field.validate(encoded, {}, loc=(\"response\",))\n@@ -46,7 +58,13 @@ def serialize_response(\n             errors.extend(errors_)\n         if errors:\n             raise ValidationError(errors)\n-        return jsonable_encoder(value, skip_defaults=skip_defaults)\n+        return jsonable_encoder(\n+            value,\n+            include=include,\n+            exclude=exclude,\n+            by_alias=by_alias,\n+            skip_defaults=skip_defaults,\n+        )\n     else:\n         return encoded\n \n@@ -57,7 +75,10 @@ def get_app(\n     status_code: int = 200,\n     response_class: Type[Response] = JSONResponse,\n     response_field: Field = None,\n-    skip_defaults: bool = False,\n+    response_model_include: Set[str] = None,\n+    response_model_exclude: Set[str] = set(),\n+    response_model_by_alias: bool = True,\n+    response_model_skip_defaults: bool = False,\n ) -> Callable:\n     assert dependant.call is not None, \"dependant.call must be a function\"\n     is_coroutine = asyncio.iscoroutinefunction(dependant.call)\n@@ -97,7 +118,12 @@ def get_app(\n                     raw_response.background = background_tasks\n                 return raw_response\n             response_data = serialize_response(\n-                field=response_field, response=raw_response, skip_defaults=skip_defaults\n+                field=response_field,\n+                response=raw_response,\n+                include=response_model_include,\n+                exclude=response_model_exclude,\n+                by_alias=response_model_by_alias,\n+                skip_defaults=response_model_skip_defaults,\n             )\n             return response_class(\n                 content=response_data,\n@@ -155,6 +181,9 @@ class APIRoute(routing.Route):\n         name: str = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -215,6 +244,9 @@ class APIRoute(routing.Route):\n             methods = [\"GET\"]\n         self.methods = methods\n         self.operation_id = operation_id\n+        self.response_model_include = response_model_include\n+        self.response_model_exclude = response_model_exclude\n+        self.response_model_by_alias = response_model_by_alias\n         self.response_model_skip_defaults = response_model_skip_defaults\n         self.include_in_schema = include_in_schema\n         self.response_class = response_class\n@@ -236,7 +268,10 @@ class APIRoute(routing.Route):\n                 status_code=self.status_code,\n                 response_class=self.response_class,\n                 response_field=self.response_field,\n-                skip_defaults=self.response_model_skip_defaults,\n+                response_model_include=self.response_model_include,\n+                response_model_exclude=self.response_model_exclude,\n+                response_model_by_alias=self.response_model_by_alias,\n+                response_model_skip_defaults=self.response_model_skip_defaults,\n             )\n         )\n \n@@ -258,6 +293,9 @@ class APIRouter(routing.Router):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -277,6 +315,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=methods,\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -299,6 +340,9 @@ class APIRouter(routing.Router):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -319,6 +363,9 @@ class APIRouter(routing.Router):\n                 deprecated=deprecated,\n                 methods=methods,\n                 operation_id=operation_id,\n+                response_model_include=response_model_include,\n+                response_model_exclude=response_model_exclude,\n+                response_model_by_alias=response_model_by_alias,\n                 response_model_skip_defaults=response_model_skip_defaults,\n                 include_in_schema=include_in_schema,\n                 response_class=response_class,\n@@ -374,6 +421,9 @@ class APIRouter(routing.Router):\n                     deprecated=route.deprecated,\n                     methods=route.methods,\n                     operation_id=route.operation_id,\n+                    response_model_include=route.response_model_include,\n+                    response_model_exclude=route.response_model_exclude,\n+                    response_model_by_alias=route.response_model_by_alias,\n                     response_model_skip_defaults=route.response_model_skip_defaults,\n                     include_in_schema=route.include_in_schema,\n                     response_class=route.response_class,\n@@ -410,6 +460,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -429,6 +482,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"GET\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -449,6 +505,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -467,6 +526,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"PUT\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -487,6 +549,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -505,6 +570,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"POST\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -525,6 +593,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -543,6 +614,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"DELETE\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -563,6 +637,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -581,6 +658,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"OPTIONS\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -601,6 +681,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -619,6 +702,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"HEAD\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -639,6 +725,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -657,6 +746,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"PATCH\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n@@ -677,6 +769,9 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_include: Set[str] = None,\n+        response_model_exclude: Set[str] = set(),\n+        response_model_by_alias: bool = True,\n         response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n@@ -695,6 +790,9 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"TRACE\"],\n             operation_id=operation_id,\n+            response_model_include=response_model_include,\n+            response_model_exclude=response_model_exclude,\n+            response_model_by_alias=response_model_by_alias,\n             response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n\n@@ -0,0 +1,22 @@\n+import inspect\n+\n+from fastapi import APIRouter, FastAPI\n+\n+method_names = [\"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\"]\n+\n+\n+def test_signatures_consistency():\n+    base_sig = inspect.signature(APIRouter.get)\n+    for method_name in method_names:\n+        router_method = getattr(APIRouter, method_name)\n+        app_method = getattr(FastAPI, method_name)\n+        router_sig = inspect.signature(router_method)\n+        app_sig = inspect.signature(app_method)\n+        param: inspect.Parameter\n+        for key, param in base_sig.parameters.items():\n+            router_param: inspect.Parameter = router_sig.parameters[key]\n+            app_param: inspect.Parameter = app_sig.parameters[key]\n+            assert param.annotation == router_param.annotation\n+            assert param.annotation == app_param.annotation\n+            assert param.default == router_param.default\n+            assert param.default == app_param.default\n\n\n@@ -0,0 +1,162 @@\n+from starlette.testclient import TestClient\n+\n+from body_updates.tutorial001 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/{item_id}\": {\n+            \"get\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Read Item\",\n+                \"operationId\": \"read_item_items__item_id__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+            },\n+            \"put\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Update Item\",\n+                \"operationId\": \"update_item_items__item_id__put\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+            },\n+        }\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Item\": {\n+                \"title\": \"Item\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n+                    \"description\": {\"title\": \"Description\", \"type\": \"string\"},\n+                    \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n+                    \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n+                    \"tags\": {\n+                        \"title\": \"Tags\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                        \"default\": [],\n+                    },\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+def test_get():\n+    response = client.get(\"/items/baz\")\n+    assert response.status_code == 200\n+    assert response.json() == {\n+        \"name\": \"Baz\",\n+        \"description\": None,\n+        \"price\": 50.2,\n+        \"tax\": 10.5,\n+        \"tags\": [],\n+    }\n+\n+\n+def test_put():\n+    response = client.put(\n+        \"/items/bar\", json={\"name\": \"Barz\", \"price\": 3, \"description\": None}\n+    )\n+    assert response.json() == {\n+        \"name\": \"Barz\",\n+        \"description\": None,\n+        \"price\": 3,\n+        \"tax\": 10.5,\n+        \"tags\": [],\n+    }\n\n@@ -41,47 +41,7 @@ openapi_schema = {\n                         \"in\": \"path\",\n                     }\n                 ],\n-            },\n-            \"patch\": {\n-                \"responses\": {\n-                    \"200\": {\n-                        \"description\": \"Successful Response\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n             }\n-                        },\n-                    },\n-                    \"422\": {\n-                        \"description\": \"Validation Error\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                }\n-                            }\n-                        },\n-                    },\n-                },\n-                \"summary\": \"Update Item\",\n-                \"operationId\": \"update_item_items__item_id__patch\",\n-                \"parameters\": [\n-                    {\n-                        \"required\": True,\n-                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n-                        \"name\": \"item_id\",\n-                        \"in\": \"path\",\n-                    }\n-                ],\n-                \"requestBody\": {\n-                    \"content\": {\n-                        \"application/json\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n-                        }\n-                    },\n-                    \"required\": True,\n-                },\n-            },\n         }\n     },\n     \"components\": {\n@@ -163,15 +123,3 @@ def test_get(url, data):\n     response = client.get(url)\n     assert response.status_code == 200\n     assert response.json() == data\n-\n-\n-def test_patch():\n-    response = client.patch(\n-        \"/items/bar\", json={\"name\": \"Barz\", \"price\": 3, \"description\": None}\n-    )\n-    assert response.json() == {\n-        \"name\": \"Barz\",\n-        \"description\": None,\n-        \"price\": 3,\n-        \"tax\": 20.2,\n-    }\n\n@@ -0,0 +1,142 @@\n+from starlette.testclient import TestClient\n+\n+from response_model.tutorial005 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/{item_id}/name\": {\n+            \"get\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Read Item Name\",\n+                \"operationId\": \"read_item_name_items__item_id__name_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+            }\n+        },\n+        \"/items/{item_id}/public\": {\n+            \"get\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Read Item Public Data\",\n+                \"operationId\": \"read_item_public_data_items__item_id__public_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Item\": {\n+                \"title\": \"Item\",\n+                \"required\": [\"name\", \"price\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n+                    \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n+                    \"description\": {\"title\": \"Description\", \"type\": \"string\"},\n+                    \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+def test_read_item_name():\n+    response = client.get(\"/items/bar/name\")\n+    assert response.status_code == 200\n+    assert response.json() == {\"name\": \"Bar\", \"description\": \"The Bar fighters\"}\n+\n+\n+def test_read_item_public_data():\n+    response = client.get(\"/items/bar/public\")\n+    assert response.status_code == 200\n+    assert response.json() == {\n+        \"name\": \"Bar\",\n+        \"description\": \"The Bar fighters\",\n+        \"price\": 62,\n+    }\n\n@@ -0,0 +1,142 @@\n+from starlette.testclient import TestClient\n+\n+from response_model.tutorial006 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/{item_id}/name\": {\n+            \"get\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Read Item Name\",\n+                \"operationId\": \"read_item_name_items__item_id__name_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+            }\n+        },\n+        \"/items/{item_id}/public\": {\n+            \"get\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Read Item Public Data\",\n+                \"operationId\": \"read_item_public_data_items__item_id__public_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Item\": {\n+                \"title\": \"Item\",\n+                \"required\": [\"name\", \"price\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n+                    \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n+                    \"description\": {\"title\": \"Description\", \"type\": \"string\"},\n+                    \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+def test_read_item_name():\n+    response = client.get(\"/items/bar/name\")\n+    assert response.status_code == 200\n+    assert response.json() == {\"name\": \"Bar\", \"description\": \"The Bar fighters\"}\n+\n+\n+def test_read_item_public_data():\n+    response = client.get(\"/items/bar/public\")\n+    assert response.status_code == 200\n+    assert response.json() == {\n+        \"name\": \"Bar\",\n+        \"description\": \"The Bar fighters\",\n+        \"price\": 62,\n+    }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
