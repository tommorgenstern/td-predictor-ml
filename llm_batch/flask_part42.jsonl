{"custom_id": "flask#cf0953619e2fa3a79e93b6195ca3b39f25552c3d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 369 | Contributors (this commit): 4 | Commits (past 90d): 1 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -125,7 +125,7 @@ html_theme_path = ['_themes']\n # The name of an image file (within the static path) to use as favicon of the\n # docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n # pixels large.\n-#html_favicon = None\n+html_favicon = \"flask-favicon.ico\"\n \n # Add any paths that contain custom static files (such as style sheets) here,\n # relative to this directory. They are copied after the builtin static files,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#f0f654537490011c9aa5bd6db91450d126e53cdf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 61 | Contributors (this commit): 2 | Commits (past 90d): 1 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -38,7 +38,7 @@ def login_handler():\n         'audience': request.host_url,\n     }, verify=True)\n     if resp.ok:\n-        verification_data = json.loads(resp.content)\n+        verification_data = resp.json()\n         if verification_data['status'] == 'okay':\n             session['email'] = verification_data['email']\n             return 'OK'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b81b040110d18d6aa3633c1132420bf29be00c6b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 63 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,4 +1,4 @@\n-from flask import Flask, render_template, session, request, json, abort, g\n+from flask import Flask, render_template, session, request, abort, g\n \n import requests\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#90a50f8b51bdd71d9f2b1fd82352628cfd681898", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 49 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 5/4 | Churn Δ: 49 | Churn Cumulative: 670 | Contributors (this commit): 9 | Commits (past 90d): 4 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -164,5 +164,39 @@ class Config(dict):\n             if key.isupper():\n                 self[key] = getattr(obj, key)\n \n+    def get_namespace(self, namespace, lowercase=True):\n+        \"\"\"Returns a dictionary containing a subset of configuration options\n+        that match the specified namespace/prefix. Example usage::\n+\n+            app.config['IMAGE_STORE_TYPE'] = 'fs'\n+            app.config['IMAGE_STORE_PATH'] = '/var/app/images'\n+            app.config['IMAGE_STORE_BASE_URL'] = 'http://img.website.com'\n+            image_store_config = app.config.get_namespace('IMAGE_STORE_')\n+\n+        The resulting dictionary `image_store` would look like::\n+\n+            {\n+                'type': 'fs',\n+                'path': '/var/app/images',\n+                'base_url': 'http://img.website.com'\n+            }\n+\n+        This is often useful when configuration options map directly to\n+        keyword arguments in functions or class constructors.\n+\n+        :param namespace: a configuration namespace\n+        :param lowercase: a flag indicating if the keys of the resulting\n+                          dictionary should be lowercase\n+        \"\"\"\n+        rv = {}\n+        for k, v in self.iteritems():\n+            if not k.startswith(namespace):\n+                continue\n+            key = k[len(namespace):]\n+            if lowercase:\n+                key = key.lower()\n+            rv[key] = v\n+        return rv\n+\n     def __repr__(self):\n         return '<%s %s>' % (self.__class__.__name__, dict.__repr__(self))\n\n@@ -105,6 +105,21 @@ class ConfigTestCase(FlaskTestCase):\n         app.config['PERMANENT_SESSION_LIFETIME'] = 42\n         self.assert_equal(app.permanent_session_lifetime.seconds, 42)\n \n+    def test_get_namespace(self):\n+        app = flask.Flask(__name__)\n+        app.config['FOO_OPTION_1'] = 'foo option 1'\n+        app.config['FOO_OPTION_2'] = 'foo option 2'\n+        app.config['BAR_STUFF_1'] = 'bar stuff 1'\n+        app.config['BAR_STUFF_2'] = 'bar stuff 2'\n+        foo_options = app.config.get_namespace('FOO_')\n+        self.assert_equal(2, len(foo_options))\n+        self.assert_equal('foo option 1', foo_options['option_1'])\n+        self.assert_equal('foo option 2', foo_options['option_2'])\n+        bar_options = app.config.get_namespace('BAR_', lowercase=False)\n+        self.assert_equal(2, len(bar_options))\n+        self.assert_equal('bar stuff 1', bar_options['STUFF_1'])\n+        self.assert_equal('bar stuff 2', bar_options['STUFF_2'])\n+\n \n class LimitedLoaderMockWrapper(object):\n     def __init__(self, loader):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#21aa620b6bd65e8368f86a37e55de8e56fccf917", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 119 | Contributors (this commit): 4 | Commits (past 90d): 2 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -5,7 +5,7 @@\n \n     Various helpers to make the development experience better.\n \n-1   :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2014 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from ._compat import implements_to_string\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#52e1c383faf44b88407f3b9a36293c8ab98b78a3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 604 | Contributors (this commit): 9 | Commits (past 90d): 3 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -189,7 +189,7 @@ class AppContext(object):\n         self.pop(exc_value)\n \n         if BROKEN_PYPY_CTXMGR_EXIT and exc_type is not None:\n-            raise exc_type, exc_value, tb\n+            reraise(exc_type, exc_value, tb)\n \n \n class RequestContext(object):\n@@ -395,7 +395,7 @@ class RequestContext(object):\n         self.auto_pop(exc_value)\n \n         if BROKEN_PYPY_CTXMGR_EXIT and exc_type is not None:\n-            raise exc_type, exc_value, tb\n+            reraise(exc_type, exc_value, tb)\n \n     def __repr__(self):\n         return '<%s \\'%s\\' [%s] of %s>' % (\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e78961c812f0a81792bb9e1eae26fd96a10069c0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 606 | Contributors (this commit): 9 | Commits (past 90d): 4 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -19,7 +19,7 @@ from werkzeug.exceptions import HTTPException\n from .globals import _request_ctx_stack, _app_ctx_stack\n from .module import blueprint_is_module\n from .signals import appcontext_pushed, appcontext_popped\n-from ._compat import BROKEN_PYPY_CTXMGR_EXIT\n+from ._compat import BROKEN_PYPY_CTXMGR_EXIT, reraise\n \n \n class _AppCtxGlobals(object):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e5bba9deb5c9ab9c66bea5c17e96741777fe46ab", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 25 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 3 | Methods Changed: 4 | Complexity Δ (Sum/Max): 7/4 | Churn Δ: 26 | Churn Cumulative: 1431 | Contributors (this commit): 17 | Commits (past 90d): 4 | Contributors (cumulative): 21 | DMM Complexity: 1.0\n\nDIFF:\n@@ -38,6 +38,15 @@ class JSONTestCase(FlaskTestCase):\n         rv = c.post('/json', data='malformed', content_type='application/json')\n         self.assert_equal(rv.status_code, 400)\n \n+    def test_json_custom_mimetypes(self):\n+        app = flask.Flask(__name__)\n+        @app.route('/json', methods=['POST'])\n+        def return_json():\n+            return flask.request.get_json()\n+        c = app.test_client()\n+        rv = c.post('/json', data='\"foo\"', content_type='application/x+json')\n+        self.assert_equal(rv.data, b'foo')\n+\n     def test_json_body_encoding(self):\n         app = flask.Flask(__name__)\n         app.testing = True\n\n@@ -107,6 +107,21 @@ class Request(RequestBase):\n         # XXX: deprecate property\n         return self.get_json()\n \n+    @property\n+    def is_json(self):\n+        \"\"\"Indicates if this request is JSON or not.  By default a request\n+        is considered to include JSON data if the mimetype is\n+        ``application/json`` or ``application/*+json``.\n+\n+        .. versionadded:: 0.11\n+        \"\"\"\n+        mt = self.mimetype\n+        if mt == 'application/json':\n+            return True\n+        if mt.startswith('application/') and mt.endswith('+json'):\n+            return True\n+        return False\n+\n     def get_json(self, force=False, silent=False, cache=True):\n         \"\"\"Parses the incoming JSON request data and returns it.  If\n         parsing fails the :meth:`on_json_loading_failed` method on the\n@@ -124,7 +139,7 @@ class Request(RequestBase):\n         if rv is not _missing:\n             return rv\n \n-        if self.mimetype != 'application/json' and not force:\n+        if not (force or self.is_json):\n             return None\n \n         # We accept a request charset against the specification as\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e7c587789ae22a626196cea26340253dd9b70bf1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 16 | Churn Cumulative: 592 | Contributors (this commit): 8 | Commits (past 90d): 4 | Contributors (cumulative): 13 | DMM Complexity: 0.8571428571428571\n\nDIFF:\n@@ -31,6 +31,8 @@ def make_test_environ_builder(app, path='/', base_url=None, *args, **kwargs):\n             base_url += app_root.lstrip('/')\n         if url.netloc:\n             path = url.path\n+            if url.query:\n+                path += '?' + url.query\n     return EnvironBuilder(path, base_url, *args, **kwargs)\n \n \n\n@@ -196,6 +196,20 @@ class TestToolsTestCase(FlaskTestCase):\n             self.assert_equal(called, [None])\n         self.assert_equal(called, [None, None])\n \n+    def test_full_url_request(self):\n+        app = flask.Flask(__name__)\n+        app.testing = True\n+\n+        @app.route('/action', methods=['POST'])\n+        def action():\n+            return 'x'\n+\n+        with app.test_client() as c:\n+            rv = c.post('http://domain.com/action?vodka=42', data={'gin': 43})\n+            self.assert_equal(rv.status_code, 200)\n+            self.assert_('gin' in flask.request.form)\n+            self.ssert_('vodka' in flask.request.args)\n+\n \n class SubdomainTestCase(FlaskTestCase):\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6de9484c97a9965ba2373015d28ab79280b85abe", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 366 | Contributors (this commit): 7 | Commits (past 90d): 3 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -208,7 +208,7 @@ class TestToolsTestCase(FlaskTestCase):\n             rv = c.post('http://domain.com/action?vodka=42', data={'gin': 43})\n             self.assert_equal(rv.status_code, 200)\n             self.assert_('gin' in flask.request.form)\n-            self.ssert_('vodka' in flask.request.args)\n+            self.assert_('vodka' in flask.request.args)\n \n \n class SubdomainTestCase(FlaskTestCase):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ae45aed8d6802fbea8f3693d82b6e89c4e51429d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 3386 | Contributors (this commit): 37 | Commits (past 90d): 3 | Contributors (cumulative): 37 | DMM Complexity: None\n\nDIFF:\n@@ -1159,7 +1159,6 @@ class Flask(_PackageBoundObject):\n         \"\"\"\n         self.jinja_env.tests[name or f.__name__] = f\n \n-\n     @setupmethod\n     def template_global(self, name=None):\n         \"\"\"A decorator that is used to register a custom template global function.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#46c24da0162208ddc82ea755347967e4162b97c3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 3387 | Contributors (this commit): 37 | Commits (past 90d): 4 | Contributors (cumulative): 37 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1205,6 +1205,7 @@ class Flask(_PackageBoundObject):\n         .. versionadded:: 0.8\n         \"\"\"\n         self.before_first_request_funcs.append(f)\n+        return f\n \n     @setupmethod\n     def after_request(self, f):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#2506c0b9a96d48f14624acfa552fc88e38a542ae", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): -2/1 | Churn Δ: 16 | Churn Cumulative: 2662 | Contributors (this commit): 31 | Commits (past 90d): 6 | Contributors (cumulative): 39 | DMM Complexity: 0.7142857142857143\n\nDIFF:\n@@ -538,6 +538,7 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n         rv.expires = int(time() + cache_timeout)\n \n     if add_etags and filename is not None:\n+        try:\n             rv.set_etag('flask-%s-%s-%s' % (\n                 os.path.getmtime(filename),\n                 os.path.getsize(filename),\n@@ -546,6 +547,10 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n                     else filename\n                 ) & 0xffffffff\n             ))\n+        except OSError:\n+            warn('Access %s failed, maybe it does not exist, so ignore etags in '\n+                 'headers' % filename, stacklevel=2)\n+\n         if conditional:\n             rv = rv.make_conditional(request)\n             # make sure we don't send x-sendfile for servers that\n\n@@ -264,6 +264,17 @@ class SendfileTestCase(FlaskTestCase):\n                 rv.close()\n             # etags\n             self.assert_equal(len(captured), 1)\n+            with catch_warnings() as captured:\n+                from StringIO import StringIO as PYStringIO\n+                f = PYStringIO('Test')\n+                f.name = 'test.txt'\n+                rv = flask.send_file(f)\n+                rv.direct_passthrough = False\n+                self.assert_equal(rv.data, b'Test')\n+                self.assert_equal(rv.mimetype, 'text/plain')\n+                rv.close()\n+            # attachment_filename and etags\n+            self.assert_equal(len(captured), 3)\n             with catch_warnings() as captured:\n                 f = StringIO('Test')\n                 rv = flask.send_file(f, mimetype='text/plain')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#9074bc46af69f168e059dc977f90bbeb6d250077", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 3 | Churn Cumulative: 237 | Contributors (this commit): 4 | Commits (past 90d): 2 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -10,6 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n+import os\n from sqlite3 import dbapi2 as sqlite3\n from flask import Flask, request, session, g, redirect, url_for, abort, \\\n      render_template, flash\n@@ -20,7 +21,7 @@ app = Flask(__name__)\n \n # Load default config and override config from an environment variable\n app.config.update(dict(\n-    DATABASE='/tmp/flaskr.db',\n+    DATABASE=os.path.join(app.root_path, 'flaskr.db'),\n     DEBUG=True,\n     SECRET_KEY='development key',\n     USERNAME='admin',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d094d5b6fc86a26680a8c496f719c4d711fcd766", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 9 | Churn Cumulative: 1388 | Contributors (this commit): 13 | Commits (past 90d): 8 | Contributors (cumulative): 18 | DMM Complexity: 1.0\n\nDIFF:\n@@ -265,8 +265,9 @@ class SendfileTestCase(FlaskTestCase):\n             # etags\n             self.assert_equal(len(captured), 1)\n             with catch_warnings() as captured:\n-                from StringIO import StringIO as PYStringIO\n-                f = PYStringIO('Test')\n+                class PyStringIO(StringIO):\n+                    pass\n+                f = PyStringIO('Test')\n                 f.name = 'test.txt'\n                 rv = flask.send_file(f)\n                 rv.direct_passthrough = False\n\n@@ -207,8 +207,8 @@ class TestToolsTestCase(FlaskTestCase):\n         with app.test_client() as c:\n             rv = c.post('http://domain.com/action?vodka=42', data={'gin': 43})\n             self.assert_equal(rv.status_code, 200)\n-            self.assert_('gin' in flask.request.form)\n-            self.assert_('vodka' in flask.request.args)\n+            self.assert_true('gin' in flask.request.form)\n+            self.assert_true('vodka' in flask.request.args)\n \n \n class SubdomainTestCase(FlaskTestCase):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#76e2f9cd0396c71eedf7e3b1dabf60f36585722e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 2 | Churn Cumulative: 1651 | Contributors (this commit): 28 | Commits (past 90d): 4 | Contributors (cumulative): 28 | DMM Complexity: 1.0\n\nDIFF:\n@@ -615,6 +615,8 @@ def send_from_directory(directory, filename, **options):\n                     forwarded to :func:`send_file`.\n     \"\"\"\n     filename = safe_join(directory, filename)\n+    if not os.path.isabs(filename):\n+        filename = os.path.join(current_app.root_path, filename)\n     if not os.path.isfile(filename):\n         raise NotFound()\n     options.setdefault('conditional', True)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8cb79fd026038fc63c8525a0aa0602a0f2a7e409", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 10 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 10 | Churn Cumulative: 1028 | Contributors (this commit): 11 | Commits (past 90d): 5 | Contributors (cumulative): 11 | DMM Complexity: 1.0\n\nDIFF:\n@@ -368,6 +368,16 @@ class SendfileTestCase(FlaskTestCase):\n             self.assert_equal(cc.max_age, 10)\n             rv.close()\n \n+    def test_send_from_directory(self):\n+        app = flask.Flask(__name__)\n+        app.testing = True\n+        app.root_path = os.path.join(os.path.dirname(__file__),\n+                                     'test_apps', 'subdomaintestmodule')\n+        with app.test_request_context():\n+            rv = flask.send_from_directory('static', 'hello.txt')\n+            rv.direct_passthrough = False\n+            self.assert_equal(rv.get_data().strip(), b'Hello Subdomain')\n+\n \n class LoggingTestCase(FlaskTestCase):\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#001100bc0b3a700540024c410a985c7f9e09f565", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 3 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 7 | Churn Cumulative: 1035 | Contributors (this commit): 11 | Commits (past 90d): 6 | Contributors (cumulative): 11 | DMM Complexity: 1.0\n\nDIFF:\n@@ -265,8 +265,11 @@ class SendfileTestCase(FlaskTestCase):\n             # etags\n             self.assert_equal(len(captured), 1)\n             with catch_warnings() as captured:\n-                class PyStringIO(StringIO):\n-                    pass\n+                class PyStringIO(object):\n+                    def __init__(self, *args, **kwargs):\n+                        self._io = StringIO(*args, **kwargs)\n+                    def __getattr__(self, name):\n+                        return getattr(self._io, name)\n                 f = PyStringIO('Test')\n                 f.name = 'test.txt'\n                 rv = flask.send_file(f)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#964c4a37c071aa312770c4ef51c025516d28a646", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 1036 | Contributors (this commit): 11 | Commits (past 90d): 7 | Contributors (cumulative): 11 | DMM Complexity: 1.0\n\nDIFF:\n@@ -380,6 +380,7 @@ class SendfileTestCase(FlaskTestCase):\n             rv = flask.send_from_directory('static', 'hello.txt')\n             rv.direct_passthrough = False\n             self.assert_equal(rv.get_data().strip(), b'Hello Subdomain')\n+            rv.close()\n \n \n class LoggingTestCase(FlaskTestCase):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#280d8659601a5e3b8dab77231d9f9fc16f5cd1ce", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 19 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 20 | Churn Cumulative: 5774 | Contributors (this commit): 38 | Commits (past 90d): 23 | Contributors (cumulative): 49 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1492,9 +1492,9 @@ class Flask(_PackageBoundObject):\n         with self._before_request_lock:\n             if self._got_first_request:\n                 return\n-            self._got_first_request = True\n             for func in self.before_first_request_funcs:\n                 func()\n+            self._got_first_request = True\n \n     def make_default_options_response(self):\n         \"\"\"This method is called to create the default `OPTIONS` response.\n\n@@ -16,6 +16,7 @@ import pickle\n import unittest\n from datetime import datetime\n from threading import Thread\n+from time import sleep\n from flask.testsuite import FlaskTestCase, emits_module_deprecation_warning\n from flask._compat import text_type\n from werkzeug.exceptions import BadRequest, NotFound\n@@ -1015,6 +1016,23 @@ class BasicFunctionalityTestCase(FlaskTestCase):\n         self.assert_equal(got, [42])\n         self.assert_true(app.got_first_request)\n \n+    def test_before_first_request_functions_concurrent(self):\n+        got = []\n+        app = flask.Flask(__name__)\n+        @app.before_first_request\n+        def foo():\n+            sleep(1)\n+            got.append(42)\n+        c = app.test_client()\n+        def get_and_assert():\n+            c.get(\"/\")\n+            self.assert_equal(got, [42])\n+        t = Thread(target=get_and_assert)\n+        t.start()\n+        get_and_assert()\n+        t.join()\n+        self.assert_true(app.got_first_request)\n+\n     def test_routing_redirect_debugging(self):\n         app = flask.Flask(__name__)\n         app.debug = True\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#75f2af7a6afdf620d7afdccee876b06f8c39373b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 4 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 9 | Churn Cumulative: 2394 | Contributors (this commit): 11 | Commits (past 90d): 4 | Contributors (cumulative): 11 | DMM Complexity: 1.0\n\nDIFF:\n@@ -15,8 +15,7 @@ import flask\n import pickle\n import unittest\n from datetime import datetime\n-from threading import Thread\n-from time import sleep\n+from threading import Thread, Condition\n from flask.testsuite import FlaskTestCase, emits_module_deprecation_warning\n from flask._compat import text_type\n from werkzeug.exceptions import BadRequest, NotFound\n@@ -1019,12 +1018,16 @@ class BasicFunctionalityTestCase(FlaskTestCase):\n     def test_before_first_request_functions_concurrent(self):\n         got = []\n         app = flask.Flask(__name__)\n+        cv = Condition()\n         @app.before_first_request\n         def foo():\n-            sleep(1)\n+            with cv:\n+                cv.wait()\n             got.append(42)\n         c = app.test_client()\n         def get_and_assert():\n+            with cv:\n+                cv.notify()\n             c.get(\"/\")\n             self.assert_equal(got, [42])\n         t = Thread(target=get_and_assert)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#fb622380d07372cc8c24b117bae53f45acfd1878", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1038 | Contributors (this commit): 11 | Commits (past 90d): 8 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -379,7 +379,7 @@ class SendfileTestCase(FlaskTestCase):\n         with app.test_request_context():\n             rv = flask.send_from_directory('static', 'hello.txt')\n             rv.direct_passthrough = False\n-            self.assert_equal(rv.get_data().strip(), b'Hello Subdomain')\n+            self.assert_equal(rv.data.strip(), b'Hello Subdomain')\n             rv.close()\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ddb5f9dc490879236cf20a7fa1cb75d7f787a0f0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 7 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 12 | Churn Cumulative: 2406 | Contributors (this commit): 11 | Commits (past 90d): 5 | Contributors (cumulative): 11 | DMM Complexity: 0.0\n\nDIFF:\n@@ -11,11 +11,12 @@\n \n import re\n import uuid\n+import time\n import flask\n import pickle\n import unittest\n from datetime import datetime\n-from threading import Thread, Condition\n+from threading import Thread\n from flask.testsuite import FlaskTestCase, emits_module_deprecation_warning\n from flask._compat import text_type\n from werkzeug.exceptions import BadRequest, NotFound\n@@ -1018,18 +1019,17 @@ class BasicFunctionalityTestCase(FlaskTestCase):\n     def test_before_first_request_functions_concurrent(self):\n         got = []\n         app = flask.Flask(__name__)\n-        cv = Condition()\n+\n         @app.before_first_request\n         def foo():\n-            with cv:\n-                cv.wait()\n+            time.sleep(0.2)\n             got.append(42)\n+\n         c = app.test_client()\n         def get_and_assert():\n-            with cv:\n-                cv.notify()\n             c.get(\"/\")\n             self.assert_equal(got, [42])\n+\n         t = Thread(target=get_and_assert)\n         t.start()\n         get_and_assert()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#97411295e3b46080f8976f14e73a6493ca17a2db", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 2 | Churn Cumulative: 142 | Contributors (this commit): 8 | Commits (past 90d): 3 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -175,6 +175,8 @@ class Config(dict):\n                          root path.\n         :param silent: set to `True` if you want silent failure for missing\n                        files.\n+\n+        .. versionadded:: 1.0\n         \"\"\"\n         filename = os.path.join(self.root_path, filename)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#19baae3d3445344679b68436322de08b5babf9a1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 371 | Contributors (this commit): 5 | Commits (past 90d): 2 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n@@ -43,7 +43,7 @@ master_doc = 'index'\n \n # General information about the project.\n project = u'Flask'\n-copyright = u'2013, Armin Ronacher'\n+copyright = u'2014, Armin Ronacher'\n \n # The version info for the project you're documenting, acts as replacement for\n # |version| and |release|, also used in various other places throughout the\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#3f8e29b12cd2b909d4dbbc3964339fd3f56c3203", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 2 | Churn Cumulative: 3391 | Contributors (this commit): 38 | Commits (past 90d): 5 | Contributors (cumulative): 38 | DMM Complexity: None\n\nDIFF:\n@@ -182,6 +182,8 @@ class Flask(_PackageBoundObject):\n     #:\n     #: 1. Default values for certain config options.\n     #: 2. Access to config values through attributes in addition to keys.\n+    #:\n+    #: .. versionadded:: 1.0\n     config_class = Config\n \n     #: The debug flag.  Set this to `True` to enable debugging of the\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d43bfb261a0cb562fdfec6d94768c80d95844578", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 3 | Churn Cumulative: 358 | Contributors (this commit): 7 | Commits (past 90d): 2 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -167,6 +167,9 @@ class FlaskTestCase(unittest.TestCase):\n         def assertNotIn(self, x, y):\n             assert x not in y, \"%r unexpectedly in %r\" % (x, y)\n \n+        def assertIsInstance(self, x, y):\n+            assert isinstance(x, y), \"not isinstance(%r, %r)\" % (x, y)\n+\n \n class _ExceptionCatcher(object):\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#dfae2679a6be1d3e61eaa9f83e85e0daf655187c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 3399 | Contributors (this commit): 39 | Commits (past 90d): 6 | Contributors (cumulative): 39 | DMM Complexity: None\n\nDIFF:\n@@ -1219,9 +1219,11 @@ class Flask(_PackageBoundObject):\n \n     @setupmethod\n     def after_request(self, f):\n-        \"\"\"Register a function to be run after each request.  Your function\n-        must take one parameter, a :attr:`response_class` object and return\n-        a new response object or the same (see :meth:`process_response`).\n+        \"\"\"Register a function to be run after each request.\n+\n+        Your function must take one parameter, an instance of\n+        :attr:`response_class` and return a new response object or the\n+        same (see :meth:`process_response`).\n \n         As of Flask 0.7 this function might not be executed at the end of the\n         request in case an unhandled exception occurred.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ba80e1e33bd93fd895d1b88853f47fb30cd0b670", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 4 | Churn Cumulative: 146 | Contributors (this commit): 8 | Commits (past 90d): 4 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -14,7 +14,7 @@ import os\n import errno\n \n from werkzeug.utils import import_string\n-from ._compat import string_types\n+from ._compat import string_types, iteritems\n from . import json\n \n \n@@ -218,7 +218,7 @@ class Config(dict):\n                           dictionary should be lowercase\n         \"\"\"\n         rv = {}\n-        for k, v in self.iteritems():\n+        for k, v in iteritems(self):\n             if not k.startswith(namespace):\n                 continue\n             key = k[len(namespace):]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#06857c9ba58fb3b93daa3604538ccd3fd2f1d07e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 148 | Contributors (this commit): 8 | Commits (past 90d): 5 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -216,6 +216,8 @@ class Config(dict):\n         :param namespace: a configuration namespace\n         :param lowercase: a flag indicating if the keys of the resulting\n                           dictionary should be lowercase\n+\n+        .. versionadded:: 1.0\n         \"\"\"\n         rv = {}\n         for k, v in iteritems(self):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#cb25c42316690860fd928d9ec6fc997eea3f062b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 315 | Contributors (this commit): 5 | Commits (past 90d): 2 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n@@ -25,7 +25,7 @@ except ImportError:\n     from itsdangerous import json as _json\n \n \n-# figure out if simplejson escapes slashes.  This behavior was changed\n+# Figure out if simplejson escapes slashes.  This behavior was changed\n # from one version to another without reason.\n _slash_escape = '\\\\/' not in _json.dumps('/')\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#f3f7b640b979a3d9f298c25ee42c72e7bb44b479", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 2 | Churn Cumulative: 577 | Contributors (this commit): 5 | Commits (past 90d): 2 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n@@ -223,7 +223,7 @@ class SessionInterface(object):\n \n     def get_cookie_path(self, app):\n         \"\"\"Returns the path for which the cookie should be valid.  The\n-        default implementation uses the value from the SESSION_COOKIE_PATH``\n+        default implementation uses the value from the ``SESSION_COOKIE_PATH``\n         config var if it's set, and falls back to ``APPLICATION_ROOT`` or\n         uses ``/`` if it's `None`.\n         \"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#2eef63a3208ebc5ee69a7feebb57090de3982110", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 67 | Contributors (this commit): 4 | Commits (past 90d): 2 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -37,12 +37,12 @@ except ImportError:\n             temporarily_connected_to = connected_to = _fail\n         del _fail\n \n-# the namespace for code signals.  If you are not flask code, do\n+# The namespace for code signals.  If you are not flask code, do\n # not put signals in here.  Create your own namespace instead.\n _signals = Namespace()\n \n \n-# core signals.  For usage examples grep the sourcecode or consult\n+# Core signals.  For usage examples grep the sourcecode or consult\n # the API documentation in docs/api.rst as well as docs/signals.rst\n template_rendered = _signals.signal('template-rendered')\n request_started = _signals.signal('request-started')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6974d52815da9a1a00b49191b161e3bd12051bac", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 207 | Contributors (this commit): 9 | Commits (past 90d): 2 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -89,7 +89,7 @@ class View(object):\n             for decorator in cls.decorators:\n                 view = decorator(view)\n \n-        # we attach the view class to the view function for two reasons:\n+        # We attach the view class to the view function for two reasons:\n         # first of all it allows us to easily figure out what class-based\n         # view this thing came from, secondly it's also used for instantiating\n         # the view class so you can actually replace it with something else\n@@ -111,7 +111,7 @@ class MethodViewType(type):\n             for key in d:\n                 if key in http_method_funcs:\n                     methods.add(key.upper())\n-            # if we have no method at all in there we don't want to\n+            # If we have no method at all in there we don't want to\n             # add a method list.  (This is for instance the case for\n             # the baseclass or another subclass of a base method view\n             # that does not introduce new methods).\n@@ -141,8 +141,8 @@ class MethodView(with_metaclass(MethodViewType, View)):\n     \"\"\"\n     def dispatch_request(self, *args, **kwargs):\n         meth = getattr(self, request.method.lower(), None)\n-        # if the request method is HEAD and we don't have a handler for it\n-        # retry with GET\n+        # If the request method is HEAD and we don't have a handler for it\n+        # retry with GET.\n         if meth is None and request.method == 'HEAD':\n             meth = getattr(self, 'get', None)\n         assert meth is not None, 'Unimplemented method %r' % request.method\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#db12a8f5e4285cda4e7440b6a4c015632cb2b345", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 5 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 12 | Churn Cumulative: 441 | Contributors (this commit): 11 | Commits (past 90d): 3 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -40,25 +40,25 @@ class Request(RequestBase):\n     specific ones.\n     \"\"\"\n \n-    #: the internal URL rule that matched the request.  This can be\n+    #: The internal URL rule that matched the request.  This can be\n     #: useful to inspect which methods are allowed for the URL from\n     #: a before/after handler (``request.url_rule.methods``) etc.\n     #:\n     #: .. versionadded:: 0.6\n     url_rule = None\n \n-    #: a dict of view arguments that matched the request.  If an exception\n+    #: A dict of view arguments that matched the request.  If an exception\n     #: happened when matching, this will be `None`.\n     view_args = None\n \n-    #: if matching the URL failed, this is the exception that will be\n+    #: If matching the URL failed, this is the exception that will be\n     #: raised / was raised as part of the request handling.  This is\n     #: usually a :exc:`~werkzeug.exceptions.NotFound` exception or\n     #: something similar.\n     routing_exception = None\n \n-    # switched by the request context until 1.0 to opt in deprecated\n-    # module functionality\n+    # Switched by the request context until 1.0 to opt in deprecated\n+    # module functionality.\n     _is_old_module = False\n \n     @property\n@@ -179,7 +179,7 @@ class Request(RequestBase):\n     def _load_form_data(self):\n         RequestBase._load_form_data(self)\n \n-        # in debug mode we're replacing the files multidict with an ad-hoc\n+        # In debug mode we're replacing the files multidict with an ad-hoc\n         # subclass that raises a different error for key errors.\n         ctx = _request_ctx_stack.top\n         if ctx is not None and ctx.app.debug and \\\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#2aa26fff04a98f2435e8e3015e92ef6108d3b485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 44 | Files Changed: 2 | Hunks: 2 | Methods Changed: 6 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 44 | Churn Cumulative: 1637 | Contributors (this commit): 12 | Commits (past 90d): 4 | Contributors (cumulative): 17 | DMM Complexity: 0.0\n\nDIFF:\n@@ -399,14 +399,3 @@ class Blueprint(_PackageBoundObject):\n                 self.name, code_or_exception, f))\n             return f\n         return decorator\n-\n-    def register_error_handler(self, code_or_exception, f):\n-        \"\"\"Non-decorator version of the :meth:`errorhandler` error attach\n-        function, akin to the :meth:`~flask.Flask.register_error_handler`\n-        application-wide function of the :class:`~flask.Flask` object but\n-        for error handlers limited to this blueprint.\n-\n-        .. versionadded:: 0.11\n-        \"\"\"\n-        self.record_once(lambda s: s.app._register_error_handler(\n-            self.name, code_or_exception, f))\n\n@@ -296,39 +296,6 @@ class BlueprintTestCase(FlaskTestCase):\n         self.assert_equal(c.get('/backend-no').data, b'backend says no')\n         self.assert_equal(c.get('/what-is-a-sideend').data, b'application itself says no')\n \n-    def test_blueprint_specific_user_error_handling(self):\n-        class MyDecoratorException(Exception):\n-            pass\n-        class MyFunctionException(Exception):\n-            pass\n-\n-        blue = flask.Blueprint('blue', __name__)\n-\n-        @blue.errorhandler(MyDecoratorException)\n-        def my_decorator_exception_handler(e):\n-            self.assert_true(isinstance(e, MyDecoratorException))\n-            return 'boom'\n-\n-        def my_function_exception_handler(e):\n-            self.assert_true(isinstance(e, MyFunctionException))\n-            return 'bam'\n-        blue.register_error_handler(MyFunctionException, my_function_exception_handler)\n-\n-        @blue.route('/decorator')\n-        def blue_deco_test():\n-            raise MyDecoratorException()\n-        @blue.route('/function')\n-        def blue_func_test():\n-            raise MyFunctionException()\n-\n-        app = flask.Flask(__name__)\n-        app.register_blueprint(blue)\n-\n-        c = app.test_client()\n-\n-        self.assert_equal(c.get('/decorator').data, b'boom')\n-        self.assert_equal(c.get('/function').data, b'bam')\n-\n     def test_blueprint_url_definitions(self):\n         bp = flask.Blueprint('test', __name__)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
