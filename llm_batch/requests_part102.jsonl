{"custom_id": "requests#a3e597c17112da2d9520e27e09159c29ac4b8351", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 39 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 4 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 41 | Churn Cumulative: 3547 | Contributors (this commit): 87 | Commits (past 90d): 7 | Contributors (cumulative): 90 | DMM Complexity: 1.0\n\nDIFF:\n@@ -122,7 +122,7 @@ class SessionRedirectMixin(object):\n             # Handle redirection without scheme (see: RFC 1808 Section 4)\n             if url.startswith('//'):\n                 parsed_rurl = urlparse(resp.url)\n-                url = '%s:%s' % (parsed_rurl.scheme, url)\n+                url = '%s:%s' % (to_native_string(parsed_rurl.scheme), url)\n \n             # The scheme should be lower case...\n             parsed = urlparse(url)\n\n@@ -1,9 +1,9 @@\n # -*- coding: utf-8 -*-\n \n-import os\n import pytest\n import threading\n import requests\n+from requests.compat import quote, is_py3\n \n from tests.testserver.server import Server, consume_socket_content\n \n@@ -204,3 +204,40 @@ def test_use_proxy_from_environment(httpbin, var, scheme):\n \n         # it had actual content (not checking for SOCKS protocol for now)\n         assert len(fake_proxy.handler_results[0]) > 0\n+\n+\n+def test_redirect_rfc1808_to_non_ascii_location():\n+    path = u'š'\n+    expected_path = quote(path.encode('utf8')).encode('ascii')\n+    expected_path_py3 = b'%C3%85%C2%A1'\n+    redirect_request = []  # stores the second request to the server\n+\n+    def redirect_resp_handler(sock):\n+        consume_socket_content(sock, timeout=0.5)\n+        location = u'//{0}:{1}/{2}'.format(host, port, path)\n+        sock.send(\n+            b'HTTP/1.1 301 Moved Permanently\\r\\n'\n+            b'Content-Length: 0\\r\\n'\n+            b'Location: ' + location.encode('utf8') + b'\\r\\n'\n+            b'\\r\\n'\n+        )\n+        redirect_request.append(consume_socket_content(sock, timeout=0.5))\n+        sock.send(b'HTTP/1.1 200 OK\\r\\n\\r\\n')\n+\n+    close_server = threading.Event()\n+    server = Server(redirect_resp_handler, wait_to_close_event=close_server)\n+\n+    with server as (host, port):\n+        url = u'http://{0}:{1}'.format(host, port)\n+        r = requests.get(url=url, allow_redirects=True)\n+        assert r.status_code == 200\n+        assert len(r.history) == 1\n+        assert r.history[0].status_code == 301\n+\n+        # currently Python3 not handling non-ASCII redirects (issue #3888)\n+        if is_py3:\n+            assert redirect_request[0].startswith(b'GET /' + expected_path_py3 + b' HTTP/1.1')\n+        else:\n+            assert redirect_request[0].startswith(b'GET /' + expected_path + b' HTTP/1.1')\n+\n+        close_server.set()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#722b1dae96b0523dde5e01351dd743f102090f53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 10 | Files Changed: 2 | Hunks: 6 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/1 | Churn Δ: 23 | Churn Cumulative: 3570 | Contributors (this commit): 87 | Commits (past 90d): 9 | Contributors (cumulative): 90 | DMM Complexity: None\n\nDIFF:\n@@ -12,7 +12,7 @@ from collections import Mapping\n from datetime import datetime\n \n from .auth import _basic_auth_str\n-from .compat import cookielib, OrderedDict, urljoin, urlparse\n+from .compat import cookielib, is_py3, OrderedDict, urljoin, urlparse\n from .cookies import (\n     cookiejar_from_dict, extract_cookies_to_jar, RequestsCookieJar, merge_cookies)\n from .models import Request, PreparedRequest, DEFAULT_REDIRECT_LIMIT\n@@ -90,7 +90,16 @@ class SessionRedirectMixin(object):\n     def get_redirect_target(self, resp):\n         \"\"\"Receives a Response. Returns a redirect URI or ``None``\"\"\"\n         if resp.is_redirect:\n-            return resp.headers['location']\n+            location = resp.headers['location']\n+            # Currently the underlying http module on py3 decode headers\n+            # in latin1, but empirical evidence suggests that latin1 is very\n+            # rarely used with non-ASCII characters in HTTP headers.\n+            # It is more likely to get UTF8 header rather than latin1.\n+            # This causes incorrect handling of UTF8 encoded location headers.\n+            # To solve this, we re-encode the location in latin1.\n+            if is_py3:\n+                location = location.encode('latin1')\n+            return to_native_string(location, 'utf8')\n         return None\n \n     def resolve_redirects(self, resp, req, stream=False, timeout=None,\n\n@@ -3,7 +3,6 @@\n import pytest\n import threading\n import requests\n-from requests.compat import quote, is_py3\n \n from tests.testserver.server import Server, consume_socket_content\n \n@@ -208,8 +207,7 @@ def test_use_proxy_from_environment(httpbin, var, scheme):\n \n def test_redirect_rfc1808_to_non_ascii_location():\n     path = u'š'\n-    expected_path = quote(path.encode('utf8')).encode('ascii')\n-    expected_path_py3 = b'%C3%85%C2%A1'\n+    expected_path = b'%C5%A1'\n     redirect_request = []  # stores the second request to the server\n \n     def redirect_resp_handler(sock):\n@@ -233,11 +231,7 @@ def test_redirect_rfc1808_to_non_ascii_location():\n         assert r.status_code == 200\n         assert len(r.history) == 1\n         assert r.history[0].status_code == 301\n-\n-        # currently Python3 not handling non-ASCII redirects (issue #3888)\n-        if is_py3:\n-            assert redirect_request[0].startswith(b'GET /' + expected_path_py3 + b' HTTP/1.1')\n-        else:\n         assert redirect_request[0].startswith(b'GET /' + expected_path + b' HTTP/1.1')\n+        assert r.url == u'{0}/{1}'.format(url, expected_path.decode('ascii'))\n \n         close_server.set()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#fcb272cc36b3fcf64220f669e48df8bd4566563c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 3830 | Contributors (this commit): 89 | Commits (past 90d): 6 | Contributors (cumulative): 100 | DMM Complexity: None\n\nDIFF:\n@@ -19,8 +19,6 @@ from .compat import cookielib, urlparse, urlunparse, Morsel\n \n try:\n     import threading\n-    # grr, pyflakes: this fixes \"redefinition of unused 'threading'\"\n-    threading\n except ImportError:\n     import dummy_threading as threading\n \n\n@@ -32,8 +32,6 @@ from .structures import CaseInsensitiveDict, TimedCache, TimedCacheManaged\n from .exceptions import (\n     InvalidURL, InvalidHeader, FileModeWarning, UnrewindableBodyError)\n \n-_hush_pyflakes = (RequestsCookieJar,)\n-\n NETRC_FILES = ('.netrc', '_netrc')\n \n DEFAULT_CA_BUNDLE_PATH = certs.where()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#19ba9f10979a6621d7329c8b60f57055ae37b132", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 6 | Files Changed: 4 | Hunks: 5 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 11 | Churn Cumulative: 15116 | Contributors (this commit): 272 | Commits (past 90d): 21 | Contributors (cumulative): 337 | DMM Complexity: None\n\nDIFF:\n@@ -19,7 +19,7 @@ from .packages.urllib3.util.retry import Retry\n from .compat import urlparse, basestring\n from .utils import (DEFAULT_CA_BUNDLE_PATH, get_encoding_from_headers,\n                     prepend_scheme_if_needed, get_auth_from_url, urldefragauth,\n-                    select_proxy, to_native_string)\n+                    select_proxy)\n from .structures import CaseInsensitiveDict\n from .packages.urllib3.exceptions import ClosedPoolError\n from .packages.urllib3.exceptions import ConnectTimeoutError\n\n@@ -20,7 +20,6 @@ from .compat import urlparse, str, basestring\n from .cookies import extract_cookies_to_jar\n from ._internal_utils import to_native_string\n from .utils import parse_dict_header\n-from .status_codes import codes\n \n CONTENT_TYPE_FORM_URLENCODED = 'application/x-www-form-urlencoded'\n CONTENT_TYPE_MULTI_PART = 'multipart/form-data'\n\n@@ -16,7 +16,7 @@ import sys\n # such as in Embedded Python. See https://github.com/kennethreitz/requests/issues/3578.\n import encodings.idna\n \n-from io import BytesIO, UnsupportedOperation\n+from io import UnsupportedOperation\n from .hooks import default_hooks\n from .structures import CaseInsensitiveDict\n \n@@ -36,7 +36,7 @@ from .utils import (\n     stream_decode_response_unicode, to_key_val_list, parse_header_links,\n     iter_slices, guess_json_utf, super_len, check_header_validity)\n from .compat import (\n-    cookielib, urlunparse, urlsplit, urlencode, str, bytes, StringIO,\n+    cookielib, urlunparse, urlsplit, urlencode, str, bytes,\n     is_py2, chardet, builtin_str, basestring)\n from .compat import json as complexjson\n from .status_codes import codes\n\n@@ -27,8 +27,8 @@ from .compat import parse_http_list as _parse_list_header\n from .compat import (\n     quote, urlparse, bytes, str, OrderedDict, unquote, getproxies,\n     proxy_bypass, urlunparse, basestring, integer_types)\n-from .cookies import RequestsCookieJar, cookiejar_from_dict\n-from .structures import CaseInsensitiveDict, TimedCache, TimedCacheManaged\n+from .cookies import cookiejar_from_dict\n+from .structures import CaseInsensitiveDict, TimedCacheManaged\n from .exceptions import (\n     InvalidURL, InvalidHeader, FileModeWarning, UnrewindableBodyError)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d89f8c0d70195d1ee707426ac7f3bdab870e0a18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 6 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 19 | Churn Cumulative: 3839 | Contributors (this commit): 100 | Commits (past 90d): 8 | Contributors (cumulative): 108 | DMM Complexity: 0.0\n\nDIFF:\n@@ -8,8 +8,10 @@ This module provides a Session object to manage and persist settings across\n requests (cookies, auth, proxies).\n \"\"\"\n import os\n+import platform\n+import time\n from collections import Mapping\n-from datetime import datetime\n+from datetime import timedelta\n \n from .auth import _basic_auth_str\n from .compat import cookielib, is_py3, OrderedDict, urljoin, urlparse\n@@ -38,6 +40,15 @@ from .models import REDIRECT_STATI\n \n REDIRECT_CACHE_SIZE = 1000\n \n+# Preferred clock, based on which one is more accurate on a given system.\n+if platform.system() == 'Windows':\n+    try:  # Python 3.3+\n+        preferred_clock = time.perf_counter\n+    except AttributeError:  # Earlier than Python 3.\n+        preferred_clock = time.clock\n+else:\n+    preferred_clock = time.time\n+\n \n def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n     \"\"\"Determines appropriate setting for a given request, taking into account\n@@ -622,13 +633,14 @@ class Session(SessionRedirectMixin):\n         adapter = self.get_adapter(url=request.url)\n \n         # Start time (approximately) of the request\n-        start = datetime.utcnow()\n+        start = preferred_clock()\n \n         # Send the request\n         r = adapter.send(request, **kwargs)\n \n         # Total elapsed time of the request (approximately)\n-        r.elapsed = datetime.utcnow() - start\n+        elapsed = preferred_clock() - start\n+        r.elapsed = timedelta(seconds=elapsed)\n \n         # Response manipulation hooks\n         r = dispatch_hook('response', hooks, r, **kwargs)\n\n@@ -97,6 +97,7 @@ setup(\n     extras_require={\n         'security': ['pyOpenSSL>=0.14', 'cryptography>=1.3.4', 'idna>=2.0.0'],\n         'socks': ['PySocks>=1.5.6, !=1.5.7'],\n+        'socks:platform_system == \"Windows\" and python_version<\"3.3\"': ['win_inet_pton'],\n     },\n )\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#724fd44b975c5a078a186e79417656772a3f8ecc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 174 | Files Changed: 3 | Hunks: 8 | Methods Changed: 21 | Complexity Δ (Sum/Max): -25/0 | Churn Δ: 177 | Churn Cumulative: 4938 | Contributors (this commit): 80 | Commits (past 90d): 12 | Contributors (cumulative): 95 | DMM Complexity: 0.0\n\nDIFF:\n@@ -8,12 +8,9 @@ Data structures that power Requests.\n \"\"\"\n \n import collections\n-import time\n \n from .compat import OrderedDict\n \n-current_time = getattr(time, 'monotonic', time.time)\n-\n \n class CaseInsensitiveDict(collections.MutableMapping):\n     \"\"\"A case-insensitive ``dict``-like object.\n@@ -106,89 +103,3 @@ class LookupDict(dict):\n \n     def get(self, key, default=None):\n         return self.__dict__.get(key, default)\n-\n-\n-class TimedCacheManaged(object):\n-    \"\"\"\n-    Wrap a function call in a timed cache\n-    \"\"\"\n-    def __init__(self, fnc):\n-        self.fnc = fnc\n-        self.cache = TimedCache()\n-\n-    def __call__(self, *args, **kwargs):\n-        key = args[0]\n-        found = None\n-        try:\n-            found = self.cache[key]\n-        except KeyError:\n-            found = self.fnc(key, **kwargs)\n-            self.cache[key] = found\n-\n-        return found\n-\n-\n-class TimedCache(collections.MutableMapping):\n-    \"\"\"\n-    Evicts entries after expiration_secs. If none are expired and maxlen is hit,\n-    will evict the oldest cached entry\n-    \"\"\"\n-    def __init__(self, maxlen=32, expiration_secs=60):\n-        \"\"\"\n-        :param maxlen: most number of entries to hold on to\n-        :param expiration_secs: the number of seconds to hold on\n-        to entries\n-        \"\"\"\n-        self.maxlen = maxlen\n-        self.expiration_secs = expiration_secs\n-        self._dict = OrderedDict()\n-\n-    def __repr__(self):\n-        return '<TimedCache maxlen:%d len:%d expiration_secs:%d>' % \\\n-            (self.maxlen, len(self._dict), self.expiration_secs)\n-\n-    def __iter__(self):\n-        return ((key, value[1]) for key, value in self._dict.items())\n-\n-    def __delitem__(self, item):\n-        del self._dict[item]\n-\n-    def __getitem__(self, key):\n-        \"\"\"\n-        Look up an item in the cache. If the item\n-        has already expired, it will be invalidated and not returned\n-\n-        :param key: which entry to look up\n-        :return: the value in the cache, or None\n-        \"\"\"\n-        occurred, value = self._dict[key]\n-        now = int(current_time())\n-\n-        if now - occurred > self.expiration_secs:\n-            del self._dict[key]\n-            raise KeyError(key)\n-        else:\n-            return value\n-\n-    def __setitem__(self, key, value):\n-        \"\"\"\n-        Locates the value at lookup key, if cache is full, will evict the\n-        oldest entry\n-\n-        :param key: the key to search the cache for\n-        :param value: the value to be added to the cache\n-        \"\"\"\n-        now = int(current_time())\n-\n-        while len(self._dict) >= self.maxlen:\n-            self._dict.popitem(last=False)\n-\n-        self._dict[key] = (now, value)\n-\n-    def __len__(self):\n-        \"\"\":return: the length of the cache\"\"\"\n-        return len(self._dict)\n-\n-    def clear(self):\n-        \"\"\"Clears the cache\"\"\"\n-        return self._dict.clear()\n\n@@ -28,7 +28,7 @@ from .compat import (\n     quote, urlparse, bytes, str, OrderedDict, unquote, getproxies,\n     proxy_bypass, urlunparse, basestring, integer_types)\n from .cookies import cookiejar_from_dict\n-from .structures import CaseInsensitiveDict, TimedCacheManaged\n+from .structures import CaseInsensitiveDict\n from .exceptions import (\n     InvalidURL, InvalidHeader, FileModeWarning, UnrewindableBodyError)\n \n@@ -577,16 +577,6 @@ def set_environ(env_name, value):\n             os.environ[env_name] = old_value\n \n \n-@TimedCacheManaged\n-def _proxy_bypass_cached(netloc):\n-    \"\"\"\n-    Looks for netloc in the cache, if not found, will call proxy_bypass\n-    for the netloc and store its result in the cache\n-\n-    :rtype: bool\n-    \"\"\"\n-    return proxy_bypass(netloc)\n-\n def should_bypass_proxies(url, no_proxy):\n     \"\"\"\n     Returns whether we should bypass proxies or not.\n@@ -634,7 +624,7 @@ def should_bypass_proxies(url, no_proxy):\n     # legitimate problems.\n     with set_environ('no_proxy', no_proxy_arg):\n         try:\n-            bypass = _proxy_bypass_cached(netloc)\n+            bypass = proxy_bypass(netloc)\n         except (TypeError, socket.gaierror):\n             bypass = False\n \n\n@@ -2,7 +2,7 @@\n \n import pytest\n \n-from requests.structures import CaseInsensitiveDict, LookupDict, TimedCache, TimedCacheManaged\n+from requests.structures import CaseInsensitiveDict, LookupDict\n \n \n class TestCaseInsensitiveDict:\n@@ -74,75 +74,3 @@ class TestLookupDict:\n     @get_item_parameters\n     def test_get(self, key, value):\n         assert self.lookup_dict.get(key) == value\n-\n-\n-class TestTimedCache(object):\n-    @pytest.fixture(autouse=True)\n-    def setup(self):\n-        self.any_value = 'some value'\n-        self.expiration_secs = 60\n-        self.cache = TimedCache(expiration_secs=self.expiration_secs)\n-        yield\n-        self.cache.clear()\n-\n-    def test_get(self):\n-        self.cache['a'] = self.any_value\n-        assert self.cache['a'] is self.any_value\n-\n-    def test_repr(self):\n-        repr = str(self.cache)\n-        assert repr == '<TimedCache maxlen:32 len:0 expiration_secs:60>'\n-\n-    def test_get_expired_item(self, mocker):\n-        self.cache = TimedCache(maxlen=1, expiration_secs=self.expiration_secs)\n-\n-        mocker.patch('requests.structures.current_time', lambda: 0)\n-        self.cache['a'] = self.any_value\n-        mocker.patch('requests.structures.current_time', lambda: self.expiration_secs + 1)\n-        assert self.cache.get('a') is None\n-\n-    def test_evict_first_entry_when_full(self, mocker):\n-        self.cache = TimedCache(maxlen=2, expiration_secs=2)\n-        mocker.patch('requests.structures.current_time', lambda: 0)\n-        self.cache['a'] = self.any_value\n-        mocker.patch('requests.structures.current_time', lambda: 1)\n-        self.cache['b'] = self.any_value\n-        mocker.patch('requests.structures.current_time', lambda: 3)\n-        self.cache['c'] = self.any_value\n-        assert len(self.cache) is 2\n-        with pytest.raises(KeyError, message='Expected key not found'):\n-            self.cache['a']\n-        assert self.cache['b'] is self.any_value\n-        assert self.cache['c'] is self.any_value\n-\n-    def test_delete_item_removes_item(self):\n-        self.cache['a'] = self.any_value\n-        del self.cache['a']\n-        with pytest.raises(KeyError, message='Expected key not found'):\n-            self.cache['a']\n-\n-    def test_iterating_hides_timestamps(self):\n-        self.cache['a'] = 1\n-        self.cache['b'] = 2\n-        expected = [('a', 1), ('b', 2)]\n-        actual = [(key, val) for key, val in self.cache]\n-        assert expected == actual\n-\n-\n-class TestTimedCacheManagedDecorator(object):\n-    def test_caches_repeated_calls(self, mocker):\n-        mocker.patch('requests.structures.current_time', lambda: 0)\n-\n-        nonlocals = {'value': 0}\n-\n-        @TimedCacheManaged\n-        def some_method(x):\n-            nonlocals['value'] = nonlocals['value'] + x\n-            return nonlocals['value']\n-\n-        first_result = some_method(1)\n-        assert first_result is 1\n-        second_result = some_method(1)\n-        assert second_result is 1\n-        third_result = some_method(2)\n-        assert third_result is 3\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4f34446b363d3dec84eedb410df79e5e3773cde9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 48 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 4 | Complexity Δ (Sum/Max): 8/8 | Churn Δ: 48 | Churn Cumulative: 1261 | Contributors (this commit): 17 | Commits (past 90d): 1 | Contributors (cumulative): 17 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n \n+import os\n from io import BytesIO\n \n import pytest\n@@ -599,3 +600,50 @@ def test_should_bypass_proxies_no_proxy(\n     no_proxy = '192.168.0.0/24,127.0.0.1,localhost.localdomain,172.16.1.1'\n     # Test 'no_proxy' argument\n     assert should_bypass_proxies(url, no_proxy=no_proxy) == expected\n+\n+\n+@pytest.mark.skipif(os.name != 'nt', reason='Test only on Windows')\n+@pytest.mark.parametrize(\n+    'url, expected', (\n+            ('http://192.168.0.1:5000/', True),\n+            ('http://192.168.0.1/', True),\n+            ('http://172.16.1.1/', True),\n+            ('http://172.16.1.1:5000/', True),\n+            ('http://localhost.localdomain:5000/v1.0/', True),\n+            ('http://172.16.1.22/', False),\n+            ('http://172.16.1.22:5000/', False),\n+            ('http://google.com:5000/v1.0/', False),\n+    ))\n+def test_should_bypass_proxies_win_registry(url, expected, monkeypatch):\n+    \"\"\"Tests for function should_bypass_proxies to check if proxy\n+    can be bypassed or not with Windows registry settings\n+    \"\"\"\n+    if compat.is_py3:\n+        import winreg\n+    else:\n+        import _winreg as winreg\n+\n+    class RegHandle:\n+        def Close(self):\n+            pass\n+\n+    ie_settings = RegHandle()\n+\n+    def OpenKey(key, subkey):\n+        return ie_settings\n+\n+    def QueryValueEx(key, value_name):\n+        if key is ie_settings:\n+            if value_name == 'ProxyEnable':\n+                return [1]\n+            elif value_name == 'ProxyOverride':\n+                return ['192.168.*;127.0.0.1;localhost.localdomain;172.16.1.1']\n+\n+    monkeypatch.setenv('http_proxy', '')\n+    monkeypatch.setenv('https_proxy', '')\n+    monkeypatch.setenv('ftp_proxy', '')\n+    monkeypatch.setenv('no_proxy', '')\n+    monkeypatch.setenv('NO_PROXY', '')\n+    monkeypatch.setattr(winreg, 'OpenKey', OpenKey)\n+    monkeypatch.setattr(winreg, 'QueryValueEx', QueryValueEx)\n+    assert should_bypass_proxies(url, no_proxy=None) == expected\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#1c38e1f5f64c5da8a39a890d9205dd49297a9914", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 71 | Lines Deleted: 14 | Files Changed: 3 | Hunks: 9 | Methods Changed: 5 | Complexity Δ (Sum/Max): 12/11 | Churn Δ: 85 | Churn Cumulative: 4323 | Contributors (this commit): 85 | Commits (past 90d): 11 | Contributors (cumulative): 110 | DMM Complexity: 0.22857142857142856\n\nDIFF:\n@@ -37,7 +37,9 @@ except (ImportError, SyntaxError):\n # ---------\n \n if is_py2:\n-    from urllib import quote, unquote, quote_plus, unquote_plus, urlencode, getproxies, proxy_bypass\n+    from urllib import (\n+        quote, unquote, quote_plus, unquote_plus, urlencode, getproxies,\n+        proxy_bypass, proxy_bypass_environment, getproxies_environment)\n     from urlparse import urlparse, urlunparse, urljoin, urlsplit, urldefrag\n     from urllib2 import parse_http_list\n     import cookielib\n@@ -54,7 +56,7 @@ if is_py2:\n \n elif is_py3:\n     from urllib.parse import urlparse, urlunparse, urljoin, urlsplit, urlencode, quote, unquote, quote_plus, unquote_plus, urldefrag\n-    from urllib.request import parse_http_list, getproxies, proxy_bypass\n+    from urllib.request import parse_http_list, getproxies, proxy_bypass, proxy_bypass_environment, getproxies_environment\n     from http import cookiejar as cookielib\n     from http.cookies import Morsel\n     from io import StringIO\n\n@@ -14,6 +14,7 @@ import collections\n import contextlib\n import io\n import os\n+import platform\n import re\n import socket\n import struct\n@@ -26,7 +27,8 @@ from ._internal_utils import to_native_string\n from .compat import parse_http_list as _parse_list_header\n from .compat import (\n     quote, urlparse, bytes, str, OrderedDict, unquote, getproxies,\n-    proxy_bypass, urlunparse, basestring, integer_types)\n+    proxy_bypass, urlunparse, basestring, integer_types, is_py3,\n+    proxy_bypass_environment, getproxies_environment)\n from .cookies import cookiejar_from_dict\n from .structures import CaseInsensitiveDict\n from .exceptions import (\n@@ -37,6 +39,54 @@ NETRC_FILES = ('.netrc', '_netrc')\n DEFAULT_CA_BUNDLE_PATH = certs.where()\n \n \n+if platform.system() == 'Windows':\n+    # provide a proxy_bypass version on Windows without DNS lookups\n+\n+    def proxy_bypass_registry(host):\n+        if is_py3:\n+            import winreg\n+        else:\n+            import _winreg as winreg\n+        try:\n+            internetSettings = winreg.OpenKey(winreg.HKEY_CURRENT_USER,\n+                r'Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings')\n+            proxyEnable = winreg.QueryValueEx(internetSettings,\n+                                              'ProxyEnable')[0]\n+            proxyOverride = winreg.QueryValueEx(internetSettings,\n+                                                'ProxyOverride')[0]\n+        except OSError:\n+            return False\n+        if not proxyEnable or not proxyOverride:\n+            return False\n+\n+        # make a check value list from the registry entry: replace the\n+        # '<local>' string by the localhost entry and the corresponding\n+        # canonical entry.\n+        proxyOverride = proxyOverride.split(';')\n+        # now check if we match one of the registry values.\n+        for test in proxyOverride:\n+            if test == '<local>':\n+                if '.' not in host:\n+                    return True\n+            test = test.replace(\".\", r\"\\.\")     # mask dots\n+            test = test.replace(\"*\", r\".*\")     # change glob sequence\n+            test = test.replace(\"?\", r\".\")      # change glob char\n+            if re.match(test, host, re.I):\n+                return True\n+        return False\n+\n+    def proxy_bypass(host):  # noqa\n+        \"\"\"Return True, if the host should be bypassed.\n+\n+        Checks proxy settings gathered from the environment, if specified,\n+        or the registry.\n+        \"\"\"\n+        if getproxies_environment():\n+            return proxy_bypass_environment(host)\n+        else:\n+            return proxy_bypass_registry(host)\n+\n+\n def dict_to_sequence(d):\n     \"\"\"Returns an internal sequence dictionary update.\"\"\"\n \n\n@@ -604,20 +604,25 @@ def test_should_bypass_proxies_no_proxy(\n \n @pytest.mark.skipif(os.name != 'nt', reason='Test only on Windows')\n @pytest.mark.parametrize(\n-    'url, expected', (\n-            ('http://192.168.0.1:5000/', True),\n-            ('http://192.168.0.1/', True),\n-            ('http://172.16.1.1/', True),\n-            ('http://172.16.1.1:5000/', True),\n-            ('http://localhost.localdomain:5000/v1.0/', True),\n-            ('http://172.16.1.22/', False),\n-            ('http://172.16.1.22:5000/', False),\n-            ('http://google.com:5000/v1.0/', False),\n+    'url, expected, override', (\n+            ('http://192.168.0.1:5000/', True, None),\n+            ('http://192.168.0.1/', True, None),\n+            ('http://172.16.1.1/', True, None),\n+            ('http://172.16.1.1:5000/', True, None),\n+            ('http://localhost.localdomain:5000/v1.0/', True, None),\n+            ('http://172.16.1.22/', False, None),\n+            ('http://172.16.1.22:5000/', False, None),\n+            ('http://google.com:5000/v1.0/', False, None),\n+            ('http://mylocalhostname:5000/v1.0/', True, '<local>'),\n+            ('http://192.168.0.1/', False, ''),\n     ))\n-def test_should_bypass_proxies_win_registry(url, expected, monkeypatch):\n+def test_should_bypass_proxies_win_registry(url, expected, override,\n+                                            monkeypatch):\n     \"\"\"Tests for function should_bypass_proxies to check if proxy\n     can be bypassed or not with Windows registry settings\n     \"\"\"\n+    if override is None:\n+        override = '192.168.*;127.0.0.1;localhost.localdomain;172.16.1.1'\n     if compat.is_py3:\n         import winreg\n     else:\n@@ -637,7 +642,7 @@ def test_should_bypass_proxies_win_registry(url, expected, monkeypatch):\n             if value_name == 'ProxyEnable':\n                 return [1]\n             elif value_name == 'ProxyOverride':\n-                return ['192.168.*;127.0.0.1;localhost.localdomain;172.16.1.1']\n+                return [override]\n \n     monkeypatch.setenv('http_proxy', '')\n     monkeypatch.setenv('https_proxy', '')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3d813c9a7a67f6085a27c7122083a2a92bd41963", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1211 | Contributors (this commit): 46 | Commits (past 90d): 6 | Contributors (cumulative): 46 | DMM Complexity: None\n\nDIFF:\n@@ -29,7 +29,7 @@ def request(method, url, **kwargs):\n         defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers\n         to add for the file.\n     :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.\n-    :param timeout: (optional) How long to wait for the server to send data\n+    :param timeout: (optional) How many seconds to wait for the server to send data\n         before giving up, as a float, or a :ref:`(connect timeout, read\n         timeout) <timeouts>` tuple.\n     :type timeout: float or tuple\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#debc5de6d4cf77f85f261d55f41084729e25f928", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1581 | Lines Deleted: 1574 | Files Changed: 3 | Hunks: 24 | Methods Changed: 8 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 3155 | Churn Cumulative: 5172 | Contributors (this commit): 1 | Commits (past 90d): 3 | Contributors (cumulative): 3 | DMM Complexity: 1.0\n\nDIFF:\n@@ -156,9 +156,9 @@ def valid_contextj(label, pos):\n         ok = False\n         for i in range(pos-1, -1, -1):\n             joining_type = idnadata.joining_types.get(ord(label[i]))\n-            if joining_type == 'T':\n+            if joining_type == ord('T'):\n                 continue\n-            if joining_type in ['L', 'D']:\n+            if joining_type in [ord('L'), ord('D')]:\n                 ok = True\n                 break\n \n@@ -168,9 +168,9 @@ def valid_contextj(label, pos):\n         ok = False\n         for i in range(pos+1, len(label)):\n             joining_type = idnadata.joining_types.get(ord(label[i]))\n-            if joining_type == 'T':\n+            if joining_type == ord('T'):\n                 continue\n-            if joining_type in ['R', 'D']:\n+            if joining_type in [ord('R'), ord('D')]:\n                 ok = True\n                 break\n         return ok\n@@ -211,9 +211,9 @@ def valid_contexto(label, pos, exception=False):\n         for cp in label:\n             if cp == u'\\u30fb':\n                 continue\n-            if not _is_script(cp, 'Hiragana') and not _is_script(cp, 'Katakana') and not _is_script(cp, 'Han'):\n-                return False\n+            if _is_script(cp, 'Hiragana') or _is_script(cp, 'Katakana') or _is_script(cp, 'Han'):\n                 return True\n+        return False\n \n     elif 0x660 <= cp_value <= 0x669:\n         for cp in label:\n@@ -261,12 +261,12 @@ def alabel(label):\n         label = label.encode('ascii')\n         try:\n             ulabel(label)\n-        except:\n+        except IDNAError:\n             raise IDNAError('The label {0} is not a valid A-label'.format(label))\n         if not valid_label_length(label):\n             raise IDNAError('Label too long')\n         return label\n-    except UnicodeError:\n+    except UnicodeEncodeError:\n         pass\n \n     if not label:\n@@ -288,7 +288,7 @@ def ulabel(label):\n     if not isinstance(label, (bytes, bytearray)):\n         try:\n             label = label.encode('ascii')\n-        except UnicodeError:\n+        except UnicodeEncodeError:\n             check_label(label)\n             return label\n \n\n@@ -2,1583 +2,1583 @@\n \n scripts = {\n     'Greek': (\n-        (0x370, 0x374),\n-        (0x375, 0x378),\n-        (0x37a, 0x37e),\n-        (0x384, 0x385),\n-        (0x386, 0x387),\n-        (0x388, 0x38b),\n-        (0x38c, 0x38d),\n-        (0x38e, 0x3a2),\n-        (0x3a3, 0x3e2),\n-        (0x3f0, 0x400),\n-        (0x1d26, 0x1d2b),\n-        (0x1d5d, 0x1d62),\n-        (0x1d66, 0x1d6b),\n-        (0x1dbf, 0x1dc0),\n-        (0x1f00, 0x1f16),\n-        (0x1f18, 0x1f1e),\n-        (0x1f20, 0x1f46),\n-        (0x1f48, 0x1f4e),\n-        (0x1f50, 0x1f58),\n-        (0x1f59, 0x1f5a),\n-        (0x1f5b, 0x1f5c),\n-        (0x1f5d, 0x1f5e),\n-        (0x1f5f, 0x1f7e),\n-        (0x1f80, 0x1fb5),\n-        (0x1fb6, 0x1fc5),\n-        (0x1fc6, 0x1fd4),\n-        (0x1fd6, 0x1fdc),\n-        (0x1fdd, 0x1ff0),\n-        (0x1ff2, 0x1ff5),\n-        (0x1ff6, 0x1fff),\n-        (0x2126, 0x2127),\n-        (0x10140, 0x1018b),\n-        (0x1d200, 0x1d246),\n+        0x37000000374,\n+        0x37500000378,\n+        0x37a0000037e,\n+        0x38400000385,\n+        0x38600000387,\n+        0x3880000038b,\n+        0x38c0000038d,\n+        0x38e000003a2,\n+        0x3a3000003e2,\n+        0x3f000000400,\n+        0x1d2600001d2b,\n+        0x1d5d00001d62,\n+        0x1d6600001d6b,\n+        0x1dbf00001dc0,\n+        0x1f0000001f16,\n+        0x1f1800001f1e,\n+        0x1f2000001f46,\n+        0x1f4800001f4e,\n+        0x1f5000001f58,\n+        0x1f5900001f5a,\n+        0x1f5b00001f5c,\n+        0x1f5d00001f5e,\n+        0x1f5f00001f7e,\n+        0x1f8000001fb5,\n+        0x1fb600001fc5,\n+        0x1fc600001fd4,\n+        0x1fd600001fdc,\n+        0x1fdd00001ff0,\n+        0x1ff200001ff5,\n+        0x1ff600001fff,\n+        0x212600002127,\n+        0x101400001018b,\n+        0x1d2000001d246,\n     ),\n     'Han': (\n-        (0x2e80, 0x2e9a),\n-        (0x2e9b, 0x2ef4),\n-        (0x2f00, 0x2fd6),\n-        (0x3005, 0x3006),\n-        (0x3007, 0x3008),\n-        (0x3021, 0x302a),\n-        (0x3038, 0x303c),\n-        (0x3400, 0x4db6),\n-        (0x4e00, 0x9fcd),\n-        (0xf900, 0xfa6e),\n-        (0xfa70, 0xfada),\n-        (0x20000, 0x2a6d7),\n-        (0x2a700, 0x2b735),\n-        (0x2b740, 0x2b81e),\n-        (0x2f800, 0x2fa1e),\n+        0x2e8000002e9a,\n+        0x2e9b00002ef4,\n+        0x2f0000002fd6,\n+        0x300500003006,\n+        0x300700003008,\n+        0x30210000302a,\n+        0x30380000303c,\n+        0x340000004db6,\n+        0x4e0000009fcd,\n+        0xf9000000fa6e,\n+        0xfa700000fada,\n+        0x200000002a6d7,\n+        0x2a7000002b735,\n+        0x2b7400002b81e,\n+        0x2f8000002fa1e,\n     ),\n     'Hebrew': (\n-        (0x591, 0x5c8),\n-        (0x5d0, 0x5eb),\n-        (0x5f0, 0x5f5),\n-        (0xfb1d, 0xfb37),\n-        (0xfb38, 0xfb3d),\n-        (0xfb3e, 0xfb3f),\n-        (0xfb40, 0xfb42),\n-        (0xfb43, 0xfb45),\n-        (0xfb46, 0xfb50),\n+        0x591000005c8,\n+        0x5d0000005eb,\n+        0x5f0000005f5,\n+        0xfb1d0000fb37,\n+        0xfb380000fb3d,\n+        0xfb3e0000fb3f,\n+        0xfb400000fb42,\n+        0xfb430000fb45,\n+        0xfb460000fb50,\n     ),\n     'Hiragana': (\n-        (0x3041, 0x3097),\n-        (0x309d, 0x30a0),\n-        (0x1b001, 0x1b002),\n-        (0x1f200, 0x1f201),\n+        0x304100003097,\n+        0x309d000030a0,\n+        0x1b0010001b002,\n+        0x1f2000001f201,\n     ),\n     'Katakana': (\n-        (0x30a1, 0x30fb),\n-        (0x30fd, 0x3100),\n-        (0x31f0, 0x3200),\n-        (0x32d0, 0x32ff),\n-        (0x3300, 0x3358),\n-        (0xff66, 0xff70),\n-        (0xff71, 0xff9e),\n-        (0x1b000, 0x1b001),\n+        0x30a1000030fb,\n+        0x30fd00003100,\n+        0x31f000003200,\n+        0x32d0000032ff,\n+        0x330000003358,\n+        0xff660000ff70,\n+        0xff710000ff9e,\n+        0x1b0000001b001,\n     ),\n }\n joining_types = {\n-    0x600: 'U',\n-    0x601: 'U',\n-    0x602: 'U',\n-    0x603: 'U',\n-    0x604: 'U',\n-    0x608: 'U',\n-    0x60b: 'U',\n-    0x620: 'D',\n-    0x621: 'U',\n-    0x622: 'R',\n-    0x623: 'R',\n-    0x624: 'R',\n-    0x625: 'R',\n-    0x626: 'D',\n-    0x627: 'R',\n-    0x628: 'D',\n-    0x629: 'R',\n-    0x62a: 'D',\n-    0x62b: 'D',\n-    0x62c: 'D',\n-    0x62d: 'D',\n-    0x62e: 'D',\n-    0x62f: 'R',\n-    0x630: 'R',\n-    0x631: 'R',\n-    0x632: 'R',\n-    0x633: 'D',\n-    0x634: 'D',\n-    0x635: 'D',\n-    0x636: 'D',\n-    0x637: 'D',\n-    0x638: 'D',\n-    0x639: 'D',\n-    0x63a: 'D',\n-    0x63b: 'D',\n-    0x63c: 'D',\n-    0x63d: 'D',\n-    0x63e: 'D',\n-    0x63f: 'D',\n-    0x640: 'C',\n-    0x641: 'D',\n-    0x642: 'D',\n-    0x643: 'D',\n-    0x644: 'D',\n-    0x645: 'D',\n-    0x646: 'D',\n-    0x647: 'D',\n-    0x648: 'R',\n-    0x649: 'D',\n-    0x64a: 'D',\n-    0x66e: 'D',\n-    0x66f: 'D',\n-    0x671: 'R',\n-    0x672: 'R',\n-    0x673: 'R',\n-    0x674: 'U',\n-    0x675: 'R',\n-    0x676: 'R',\n-    0x677: 'R',\n-    0x678: 'D',\n-    0x679: 'D',\n-    0x67a: 'D',\n-    0x67b: 'D',\n-    0x67c: 'D',\n-    0x67d: 'D',\n-    0x67e: 'D',\n-    0x67f: 'D',\n-    0x680: 'D',\n-    0x681: 'D',\n-    0x682: 'D',\n-    0x683: 'D',\n-    0x684: 'D',\n-    0x685: 'D',\n-    0x686: 'D',\n-    0x687: 'D',\n-    0x688: 'R',\n-    0x689: 'R',\n-    0x68a: 'R',\n-    0x68b: 'R',\n-    0x68c: 'R',\n-    0x68d: 'R',\n-    0x68e: 'R',\n-    0x68f: 'R',\n-    0x690: 'R',\n-    0x691: 'R',\n-    0x692: 'R',\n-    0x693: 'R',\n-    0x694: 'R',\n-    0x695: 'R',\n-    0x696: 'R',\n-    0x697: 'R',\n-    0x698: 'R',\n-    0x699: 'R',\n-    0x69a: 'D',\n-    0x69b: 'D',\n-    0x69c: 'D',\n-    0x69d: 'D',\n-    0x69e: 'D',\n-    0x69f: 'D',\n-    0x6a0: 'D',\n-    0x6a1: 'D',\n-    0x6a2: 'D',\n-    0x6a3: 'D',\n-    0x6a4: 'D',\n-    0x6a5: 'D',\n-    0x6a6: 'D',\n-    0x6a7: 'D',\n-    0x6a8: 'D',\n-    0x6a9: 'D',\n-    0x6aa: 'D',\n-    0x6ab: 'D',\n-    0x6ac: 'D',\n-    0x6ad: 'D',\n-    0x6ae: 'D',\n-    0x6af: 'D',\n-    0x6b0: 'D',\n-    0x6b1: 'D',\n-    0x6b2: 'D',\n-    0x6b3: 'D',\n-    0x6b4: 'D',\n-    0x6b5: 'D',\n-    0x6b6: 'D',\n-    0x6b7: 'D',\n-    0x6b8: 'D',\n-    0x6b9: 'D',\n-    0x6ba: 'D',\n-    0x6bb: 'D',\n-    0x6bc: 'D',\n-    0x6bd: 'D',\n-    0x6be: 'D',\n-    0x6bf: 'D',\n-    0x6c0: 'R',\n-    0x6c1: 'D',\n-    0x6c2: 'D',\n-    0x6c3: 'R',\n-    0x6c4: 'R',\n-    0x6c5: 'R',\n-    0x6c6: 'R',\n-    0x6c7: 'R',\n-    0x6c8: 'R',\n-    0x6c9: 'R',\n-    0x6ca: 'R',\n-    0x6cb: 'R',\n-    0x6cc: 'D',\n-    0x6cd: 'R',\n-    0x6ce: 'D',\n-    0x6cf: 'R',\n-    0x6d0: 'D',\n-    0x6d1: 'D',\n-    0x6d2: 'R',\n-    0x6d3: 'R',\n-    0x6d5: 'R',\n-    0x6dd: 'U',\n-    0x6ee: 'R',\n-    0x6ef: 'R',\n-    0x6fa: 'D',\n-    0x6fb: 'D',\n-    0x6fc: 'D',\n-    0x6ff: 'D',\n-    0x710: 'R',\n-    0x712: 'D',\n-    0x713: 'D',\n-    0x714: 'D',\n-    0x715: 'R',\n-    0x716: 'R',\n-    0x717: 'R',\n-    0x718: 'R',\n-    0x719: 'R',\n-    0x71a: 'D',\n-    0x71b: 'D',\n-    0x71c: 'D',\n-    0x71d: 'D',\n-    0x71e: 'R',\n-    0x71f: 'D',\n-    0x720: 'D',\n-    0x721: 'D',\n-    0x722: 'D',\n-    0x723: 'D',\n-    0x724: 'D',\n-    0x725: 'D',\n-    0x726: 'D',\n-    0x727: 'D',\n-    0x728: 'R',\n-    0x729: 'D',\n-    0x72a: 'R',\n-    0x72b: 'D',\n-    0x72c: 'R',\n-    0x72d: 'D',\n-    0x72e: 'D',\n-    0x72f: 'R',\n-    0x74d: 'R',\n-    0x74e: 'D',\n-    0x74f: 'D',\n-    0x750: 'D',\n-    0x751: 'D',\n-    0x752: 'D',\n-    0x753: 'D',\n-    0x754: 'D',\n-    0x755: 'D',\n-    0x756: 'D',\n-    0x757: 'D',\n-    0x758: 'D',\n-    0x759: 'R',\n-    0x75a: 'R',\n-    0x75b: 'R',\n-    0x75c: 'D',\n-    0x75d: 'D',\n-    0x75e: 'D',\n-    0x75f: 'D',\n-    0x760: 'D',\n-    0x761: 'D',\n-    0x762: 'D',\n-    0x763: 'D',\n-    0x764: 'D',\n-    0x765: 'D',\n-    0x766: 'D',\n-    0x767: 'D',\n-    0x768: 'D',\n-    0x769: 'D',\n-    0x76a: 'D',\n-    0x76b: 'R',\n-    0x76c: 'R',\n-    0x76d: 'D',\n-    0x76e: 'D',\n-    0x76f: 'D',\n-    0x770: 'D',\n-    0x771: 'R',\n-    0x772: 'D',\n-    0x773: 'R',\n-    0x774: 'R',\n-    0x775: 'D',\n-    0x776: 'D',\n-    0x777: 'D',\n-    0x778: 'R',\n-    0x779: 'R',\n-    0x77a: 'D',\n-    0x77b: 'D',\n-    0x77c: 'D',\n-    0x77d: 'D',\n-    0x77e: 'D',\n-    0x77f: 'D',\n-    0x7ca: 'D',\n-    0x7cb: 'D',\n-    0x7cc: 'D',\n-    0x7cd: 'D',\n-    0x7ce: 'D',\n-    0x7cf: 'D',\n-    0x7d0: 'D',\n-    0x7d1: 'D',\n-    0x7d2: 'D',\n-    0x7d3: 'D',\n-    0x7d4: 'D',\n-    0x7d5: 'D',\n-    0x7d6: 'D',\n-    0x7d7: 'D',\n-    0x7d8: 'D',\n-    0x7d9: 'D',\n-    0x7da: 'D',\n-    0x7db: 'D',\n-    0x7dc: 'D',\n-    0x7dd: 'D',\n-    0x7de: 'D',\n-    0x7df: 'D',\n-    0x7e0: 'D',\n-    0x7e1: 'D',\n-    0x7e2: 'D',\n-    0x7e3: 'D',\n-    0x7e4: 'D',\n-    0x7e5: 'D',\n-    0x7e6: 'D',\n-    0x7e7: 'D',\n-    0x7e8: 'D',\n-    0x7e9: 'D',\n-    0x7ea: 'D',\n-    0x7fa: 'C',\n-    0x840: 'R',\n-    0x841: 'D',\n-    0x842: 'D',\n-    0x843: 'D',\n-    0x844: 'D',\n-    0x845: 'D',\n-    0x846: 'R',\n-    0x847: 'D',\n-    0x848: 'D',\n-    0x849: 'R',\n-    0x84a: 'D',\n-    0x84b: 'D',\n-    0x84c: 'D',\n-    0x84d: 'D',\n-    0x84e: 'D',\n-    0x84f: 'R',\n-    0x850: 'D',\n-    0x851: 'D',\n-    0x852: 'D',\n-    0x853: 'D',\n-    0x854: 'R',\n-    0x855: 'D',\n-    0x856: 'U',\n-    0x857: 'U',\n-    0x858: 'U',\n-    0x8a0: 'D',\n-    0x8a2: 'D',\n-    0x8a3: 'D',\n-    0x8a4: 'D',\n-    0x8a5: 'D',\n-    0x8a6: 'D',\n-    0x8a7: 'D',\n-    0x8a8: 'D',\n-    0x8a9: 'D',\n-    0x8aa: 'R',\n-    0x8ab: 'R',\n-    0x8ac: 'R',\n-    0x1806: 'U',\n-    0x1807: 'D',\n-    0x180a: 'C',\n-    0x180e: 'U',\n-    0x1820: 'D',\n-    0x1821: 'D',\n-    0x1822: 'D',\n-    0x1823: 'D',\n-    0x1824: 'D',\n-    0x1825: 'D',\n-    0x1826: 'D',\n-    0x1827: 'D',\n-    0x1828: 'D',\n-    0x1829: 'D',\n-    0x182a: 'D',\n-    0x182b: 'D',\n-    0x182c: 'D',\n-    0x182d: 'D',\n-    0x182e: 'D',\n-    0x182f: 'D',\n-    0x1830: 'D',\n-    0x1831: 'D',\n-    0x1832: 'D',\n-    0x1833: 'D',\n-    0x1834: 'D',\n-    0x1835: 'D',\n-    0x1836: 'D',\n-    0x1837: 'D',\n-    0x1838: 'D',\n-    0x1839: 'D',\n-    0x183a: 'D',\n-    0x183b: 'D',\n-    0x183c: 'D',\n-    0x183d: 'D',\n-    0x183e: 'D',\n-    0x183f: 'D',\n-    0x1840: 'D',\n-    0x1841: 'D',\n-    0x1842: 'D',\n-    0x1843: 'D',\n-    0x1844: 'D',\n-    0x1845: 'D',\n-    0x1846: 'D',\n-    0x1847: 'D',\n-    0x1848: 'D',\n-    0x1849: 'D',\n-    0x184a: 'D',\n-    0x184b: 'D',\n-    0x184c: 'D',\n-    0x184d: 'D',\n-    0x184e: 'D',\n-    0x184f: 'D',\n-    0x1850: 'D',\n-    0x1851: 'D',\n-    0x1852: 'D',\n-    0x1853: 'D',\n-    0x1854: 'D',\n-    0x1855: 'D',\n-    0x1856: 'D',\n-    0x1857: 'D',\n-    0x1858: 'D',\n-    0x1859: 'D',\n-    0x185a: 'D',\n-    0x185b: 'D',\n-    0x185c: 'D',\n-    0x185d: 'D',\n-    0x185e: 'D',\n-    0x185f: 'D',\n-    0x1860: 'D',\n-    0x1861: 'D',\n-    0x1862: 'D',\n-    0x1863: 'D',\n-    0x1864: 'D',\n-    0x1865: 'D',\n-    0x1866: 'D',\n-    0x1867: 'D',\n-    0x1868: 'D',\n-    0x1869: 'D',\n-    0x186a: 'D',\n-    0x186b: 'D',\n-    0x186c: 'D',\n-    0x186d: 'D',\n-    0x186e: 'D',\n-    0x186f: 'D',\n-    0x1870: 'D',\n-    0x1871: 'D',\n-    0x1872: 'D',\n-    0x1873: 'D',\n-    0x1874: 'D',\n-    0x1875: 'D',\n-    0x1876: 'D',\n-    0x1877: 'D',\n-    0x1880: 'U',\n-    0x1881: 'U',\n-    0x1882: 'U',\n-    0x1883: 'U',\n-    0x1884: 'U',\n-    0x1885: 'U',\n-    0x1886: 'U',\n-    0x1887: 'D',\n-    0x1888: 'D',\n-    0x1889: 'D',\n-    0x188a: 'D',\n-    0x188b: 'D',\n-    0x188c: 'D',\n-    0x188d: 'D',\n-    0x188e: 'D',\n-    0x188f: 'D',\n-    0x1890: 'D',\n-    0x1891: 'D',\n-    0x1892: 'D',\n-    0x1893: 'D',\n-    0x1894: 'D',\n-    0x1895: 'D',\n-    0x1896: 'D',\n-    0x1897: 'D',\n-    0x1898: 'D',\n-    0x1899: 'D',\n-    0x189a: 'D',\n-    0x189b: 'D',\n-    0x189c: 'D',\n-    0x189d: 'D',\n-    0x189e: 'D',\n-    0x189f: 'D',\n-    0x18a0: 'D',\n-    0x18a1: 'D',\n-    0x18a2: 'D',\n-    0x18a3: 'D',\n-    0x18a4: 'D',\n-    0x18a5: 'D',\n-    0x18a6: 'D',\n-    0x18a7: 'D',\n-    0x18a8: 'D',\n-    0x18aa: 'D',\n-    0x200c: 'U',\n-    0x200d: 'C',\n-    0x2066: 'U',\n-    0x2067: 'U',\n-    0x2068: 'U',\n-    0x2069: 'U',\n-    0xa840: 'D',\n-    0xa841: 'D',\n-    0xa842: 'D',\n-    0xa843: 'D',\n-    0xa844: 'D',\n-    0xa845: 'D',\n-    0xa846: 'D',\n-    0xa847: 'D',\n-    0xa848: 'D',\n-    0xa849: 'D',\n-    0xa84a: 'D',\n-    0xa84b: 'D',\n-    0xa84c: 'D',\n-    0xa84d: 'D',\n-    0xa84e: 'D',\n-    0xa84f: 'D',\n-    0xa850: 'D',\n-    0xa851: 'D',\n-    0xa852: 'D',\n-    0xa853: 'D',\n-    0xa854: 'D',\n-    0xa855: 'D',\n-    0xa856: 'D',\n-    0xa857: 'D',\n-    0xa858: 'D',\n-    0xa859: 'D',\n-    0xa85a: 'D',\n-    0xa85b: 'D',\n-    0xa85c: 'D',\n-    0xa85d: 'D',\n-    0xa85e: 'D',\n-    0xa85f: 'D',\n-    0xa860: 'D',\n-    0xa861: 'D',\n-    0xa862: 'D',\n-    0xa863: 'D',\n-    0xa864: 'D',\n-    0xa865: 'D',\n-    0xa866: 'D',\n-    0xa867: 'D',\n-    0xa868: 'D',\n-    0xa869: 'D',\n-    0xa86a: 'D',\n-    0xa86b: 'D',\n-    0xa86c: 'D',\n-    0xa86d: 'D',\n-    0xa86e: 'D',\n-    0xa86f: 'D',\n-    0xa870: 'D',\n-    0xa871: 'D',\n-    0xa872: 'L',\n-    0xa873: 'U',\n+    0x600: 85,\n+    0x601: 85,\n+    0x602: 85,\n+    0x603: 85,\n+    0x604: 85,\n+    0x608: 85,\n+    0x60b: 85,\n+    0x620: 68,\n+    0x621: 85,\n+    0x622: 82,\n+    0x623: 82,\n+    0x624: 82,\n+    0x625: 82,\n+    0x626: 68,\n+    0x627: 82,\n+    0x628: 68,\n+    0x629: 82,\n+    0x62a: 68,\n+    0x62b: 68,\n+    0x62c: 68,\n+    0x62d: 68,\n+    0x62e: 68,\n+    0x62f: 82,\n+    0x630: 82,\n+    0x631: 82,\n+    0x632: 82,\n+    0x633: 68,\n+    0x634: 68,\n+    0x635: 68,\n+    0x636: 68,\n+    0x637: 68,\n+    0x638: 68,\n+    0x639: 68,\n+    0x63a: 68,\n+    0x63b: 68,\n+    0x63c: 68,\n+    0x63d: 68,\n+    0x63e: 68,\n+    0x63f: 68,\n+    0x640: 67,\n+    0x641: 68,\n+    0x642: 68,\n+    0x643: 68,\n+    0x644: 68,\n+    0x645: 68,\n+    0x646: 68,\n+    0x647: 68,\n+    0x648: 82,\n+    0x649: 68,\n+    0x64a: 68,\n+    0x66e: 68,\n+    0x66f: 68,\n+    0x671: 82,\n+    0x672: 82,\n+    0x673: 82,\n+    0x674: 85,\n+    0x675: 82,\n+    0x676: 82,\n+    0x677: 82,\n+    0x678: 68,\n+    0x679: 68,\n+    0x67a: 68,\n+    0x67b: 68,\n+    0x67c: 68,\n+    0x67d: 68,\n+    0x67e: 68,\n+    0x67f: 68,\n+    0x680: 68,\n+    0x681: 68,\n+    0x682: 68,\n+    0x683: 68,\n+    0x684: 68,\n+    0x685: 68,\n+    0x686: 68,\n+    0x687: 68,\n+    0x688: 82,\n+    0x689: 82,\n+    0x68a: 82,\n+    0x68b: 82,\n+    0x68c: 82,\n+    0x68d: 82,\n+    0x68e: 82,\n+    0x68f: 82,\n+    0x690: 82,\n+    0x691: 82,\n+    0x692: 82,\n+    0x693: 82,\n+    0x694: 82,\n+    0x695: 82,\n+    0x696: 82,\n+    0x697: 82,\n+    0x698: 82,\n+    0x699: 82,\n+    0x69a: 68,\n+    0x69b: 68,\n+    0x69c: 68,\n+    0x69d: 68,\n+    0x69e: 68,\n+    0x69f: 68,\n+    0x6a0: 68,\n+    0x6a1: 68,\n+    0x6a2: 68,\n+    0x6a3: 68,\n+    0x6a4: 68,\n+    0x6a5: 68,\n+    0x6a6: 68,\n+    0x6a7: 68,\n+    0x6a8: 68,\n+    0x6a9: 68,\n+    0x6aa: 68,\n+    0x6ab: 68,\n+    0x6ac: 68,\n+    0x6ad: 68,\n+    0x6ae: 68,\n+    0x6af: 68,\n+    0x6b0: 68,\n+    0x6b1: 68,\n+    0x6b2: 68,\n+    0x6b3: 68,\n+    0x6b4: 68,\n+    0x6b5: 68,\n+    0x6b6: 68,\n+    0x6b7: 68,\n+    0x6b8: 68,\n+    0x6b9: 68,\n+    0x6ba: 68,\n+    0x6bb: 68,\n+    0x6bc: 68,\n+    0x6bd: 68,\n+    0x6be: 68,\n+    0x6bf: 68,\n+    0x6c0: 82,\n+    0x6c1: 68,\n+    0x6c2: 68,\n+    0x6c3: 82,\n+    0x6c4: 82,\n+    0x6c5: 82,\n+    0x6c6: 82,\n+    0x6c7: 82,\n+    0x6c8: 82,\n+    0x6c9: 82,\n+    0x6ca: 82,\n+    0x6cb: 82,\n+    0x6cc: 68,\n+    0x6cd: 82,\n+    0x6ce: 68,\n+    0x6cf: 82,\n+    0x6d0: 68,\n+    0x6d1: 68,\n+    0x6d2: 82,\n+    0x6d3: 82,\n+    0x6d5: 82,\n+    0x6dd: 85,\n+    0x6ee: 82,\n+    0x6ef: 82,\n+    0x6fa: 68,\n+    0x6fb: 68,\n+    0x6fc: 68,\n+    0x6ff: 68,\n+    0x710: 82,\n+    0x712: 68,\n+    0x713: 68,\n+    0x714: 68,\n+    0x715: 82,\n+    0x716: 82,\n+    0x717: 82,\n+    0x718: 82,\n+    0x719: 82,\n+    0x71a: 68,\n+    0x71b: 68,\n+    0x71c: 68,\n+    0x71d: 68,\n+    0x71e: 82,\n+    0x71f: 68,\n+    0x720: 68,\n+    0x721: 68,\n+    0x722: 68,\n+    0x723: 68,\n+    0x724: 68,\n+    0x725: 68,\n+    0x726: 68,\n+    0x727: 68,\n+    0x728: 82,\n+    0x729: 68,\n+    0x72a: 82,\n+    0x72b: 68,\n+    0x72c: 82,\n+    0x72d: 68,\n+    0x72e: 68,\n+    0x72f: 82,\n+    0x74d: 82,\n+    0x74e: 68,\n+    0x74f: 68,\n+    0x750: 68,\n+    0x751: 68,\n+    0x752: 68,\n+    0x753: 68,\n+    0x754: 68,\n+    0x755: 68,\n+    0x756: 68,\n+    0x757: 68,\n+    0x758: 68,\n+    0x759: 82,\n+    0x75a: 82,\n+    0x75b: 82,\n+    0x75c: 68,\n+    0x75d: 68,\n+    0x75e: 68,\n+    0x75f: 68,\n+    0x760: 68,\n+    0x761: 68,\n+    0x762: 68,\n+    0x763: 68,\n+    0x764: 68,\n+    0x765: 68,\n+    0x766: 68,\n+    0x767: 68,\n+    0x768: 68,\n+    0x769: 68,\n+    0x76a: 68,\n+    0x76b: 82,\n+    0x76c: 82,\n+    0x76d: 68,\n+    0x76e: 68,\n+    0x76f: 68,\n+    0x770: 68,\n+    0x771: 82,\n+    0x772: 68,\n+    0x773: 82,\n+    0x774: 82,\n+    0x775: 68,\n+    0x776: 68,\n+    0x777: 68,\n+    0x778: 82,\n+    0x779: 82,\n+    0x77a: 68,\n+    0x77b: 68,\n+    0x77c: 68,\n+    0x77d: 68,\n+    0x77e: 68,\n+    0x77f: 68,\n+    0x7ca: 68,\n+    0x7cb: 68,\n+    0x7cc: 68,\n+    0x7cd: 68,\n+    0x7ce: 68,\n+    0x7cf: 68,\n+    0x7d0: 68,\n+    0x7d1: 68,\n+    0x7d2: 68,\n+    0x7d3: 68,\n+    0x7d4: 68,\n+    0x7d5: 68,\n+    0x7d6: 68,\n+    0x7d7: 68,\n+    0x7d8: 68,\n+    0x7d9: 68,\n+    0x7da: 68,\n+    0x7db: 68,\n+    0x7dc: 68,\n+    0x7dd: 68,\n+    0x7de: 68,\n+    0x7df: 68,\n+    0x7e0: 68,\n+    0x7e1: 68,\n+    0x7e2: 68,\n+    0x7e3: 68,\n+    0x7e4: 68,\n+    0x7e5: 68,\n+    0x7e6: 68,\n+    0x7e7: 68,\n+    0x7e8: 68,\n+    0x7e9: 68,\n+    0x7ea: 68,\n+    0x7fa: 67,\n+    0x840: 82,\n+    0x841: 68,\n+    0x842: 68,\n+    0x843: 68,\n+    0x844: 68,\n+    0x845: 68,\n+    0x846: 82,\n+    0x847: 68,\n+    0x848: 68,\n+    0x849: 82,\n+    0x84a: 68,\n+    0x84b: 68,\n+    0x84c: 68,\n+    0x84d: 68,\n+    0x84e: 68,\n+    0x84f: 82,\n+    0x850: 68,\n+    0x851: 68,\n+    0x852: 68,\n+    0x853: 68,\n+    0x854: 82,\n+    0x855: 68,\n+    0x856: 85,\n+    0x857: 85,\n+    0x858: 85,\n+    0x8a0: 68,\n+    0x8a2: 68,\n+    0x8a3: 68,\n+    0x8a4: 68,\n+    0x8a5: 68,\n+    0x8a6: 68,\n+    0x8a7: 68,\n+    0x8a8: 68,\n+    0x8a9: 68,\n+    0x8aa: 82,\n+    0x8ab: 82,\n+    0x8ac: 82,\n+    0x1806: 85,\n+    0x1807: 68,\n+    0x180a: 67,\n+    0x180e: 85,\n+    0x1820: 68,\n+    0x1821: 68,\n+    0x1822: 68,\n+    0x1823: 68,\n+    0x1824: 68,\n+    0x1825: 68,\n+    0x1826: 68,\n+    0x1827: 68,\n+    0x1828: 68,\n+    0x1829: 68,\n+    0x182a: 68,\n+    0x182b: 68,\n+    0x182c: 68,\n+    0x182d: 68,\n+    0x182e: 68,\n+    0x182f: 68,\n+    0x1830: 68,\n+    0x1831: 68,\n+    0x1832: 68,\n+    0x1833: 68,\n+    0x1834: 68,\n+    0x1835: 68,\n+    0x1836: 68,\n+    0x1837: 68,\n+    0x1838: 68,\n+    0x1839: 68,\n+    0x183a: 68,\n+    0x183b: 68,\n+    0x183c: 68,\n+    0x183d: 68,\n+    0x183e: 68,\n+    0x183f: 68,\n+    0x1840: 68,\n+    0x1841: 68,\n+    0x1842: 68,\n+    0x1843: 68,\n+    0x1844: 68,\n+    0x1845: 68,\n+    0x1846: 68,\n+    0x1847: 68,\n+    0x1848: 68,\n+    0x1849: 68,\n+    0x184a: 68,\n+    0x184b: 68,\n+    0x184c: 68,\n+    0x184d: 68,\n+    0x184e: 68,\n+    0x184f: 68,\n+    0x1850: 68,\n+    0x1851: 68,\n+    0x1852: 68,\n+    0x1853: 68,\n+    0x1854: 68,\n+    0x1855: 68,\n+    0x1856: 68,\n+    0x1857: 68,\n+    0x1858: 68,\n+    0x1859: 68,\n+    0x185a: 68,\n+    0x185b: 68,\n+    0x185c: 68,\n+    0x185d: 68,\n+    0x185e: 68,\n+    0x185f: 68,\n+    0x1860: 68,\n+    0x1861: 68,\n+    0x1862: 68,\n+    0x1863: 68,\n+    0x1864: 68,\n+    0x1865: 68,\n+    0x1866: 68,\n+    0x1867: 68,\n+    0x1868: 68,\n+    0x1869: 68,\n+    0x186a: 68,\n+    0x186b: 68,\n+    0x186c: 68,\n+    0x186d: 68,\n+    0x186e: 68,\n+    0x186f: 68,\n+    0x1870: 68,\n+    0x1871: 68,\n+    0x1872: 68,\n+    0x1873: 68,\n+    0x1874: 68,\n+    0x1875: 68,\n+    0x1876: 68,\n+    0x1877: 68,\n+    0x1880: 85,\n+    0x1881: 85,\n+    0x1882: 85,\n+    0x1883: 85,\n+    0x1884: 85,\n+    0x1885: 85,\n+    0x1886: 85,\n+    0x1887: 68,\n+    0x1888: 68,\n+    0x1889: 68,\n+    0x188a: 68,\n+    0x188b: 68,\n+    0x188c: 68,\n+    0x188d: 68,\n+    0x188e: 68,\n+    0x188f: 68,\n+    0x1890: 68,\n+    0x1891: 68,\n+    0x1892: 68,\n+    0x1893: 68,\n+    0x1894: 68,\n+    0x1895: 68,\n+    0x1896: 68,\n+    0x1897: 68,\n+    0x1898: 68,\n+    0x1899: 68,\n+    0x189a: 68,\n+    0x189b: 68,\n+    0x189c: 68,\n+    0x189d: 68,\n+    0x189e: 68,\n+    0x189f: 68,\n+    0x18a0: 68,\n+    0x18a1: 68,\n+    0x18a2: 68,\n+    0x18a3: 68,\n+    0x18a4: 68,\n+    0x18a5: 68,\n+    0x18a6: 68,\n+    0x18a7: 68,\n+    0x18a8: 68,\n+    0x18aa: 68,\n+    0x200c: 85,\n+    0x200d: 67,\n+    0x2066: 85,\n+    0x2067: 85,\n+    0x2068: 85,\n+    0x2069: 85,\n+    0xa840: 68,\n+    0xa841: 68,\n+    0xa842: 68,\n+    0xa843: 68,\n+    0xa844: 68,\n+    0xa845: 68,\n+    0xa846: 68,\n+    0xa847: 68,\n+    0xa848: 68,\n+    0xa849: 68,\n+    0xa84a: 68,\n+    0xa84b: 68,\n+    0xa84c: 68,\n+    0xa84d: 68,\n+    0xa84e: 68,\n+    0xa84f: 68,\n+    0xa850: 68,\n+    0xa851: 68,\n+    0xa852: 68,\n+    0xa853: 68,\n+    0xa854: 68,\n+    0xa855: 68,\n+    0xa856: 68,\n+    0xa857: 68,\n+    0xa858: 68,\n+    0xa859: 68,\n+    0xa85a: 68,\n+    0xa85b: 68,\n+    0xa85c: 68,\n+    0xa85d: 68,\n+    0xa85e: 68,\n+    0xa85f: 68,\n+    0xa860: 68,\n+    0xa861: 68,\n+    0xa862: 68,\n+    0xa863: 68,\n+    0xa864: 68,\n+    0xa865: 68,\n+    0xa866: 68,\n+    0xa867: 68,\n+    0xa868: 68,\n+    0xa869: 68,\n+    0xa86a: 68,\n+    0xa86b: 68,\n+    0xa86c: 68,\n+    0xa86d: 68,\n+    0xa86e: 68,\n+    0xa86f: 68,\n+    0xa870: 68,\n+    0xa871: 68,\n+    0xa872: 76,\n+    0xa873: 85,\n }\n codepoint_classes = {\n     'PVALID': (\n-        (0x2d, 0x2e),\n-        (0x30, 0x3a),\n-        (0x61, 0x7b),\n-        (0xdf, 0xf7),\n-        (0xf8, 0x100),\n-        (0x101, 0x102),\n-        (0x103, 0x104),\n-        (0x105, 0x106),\n-        (0x107, 0x108),\n-        (0x109, 0x10a),\n-        (0x10b, 0x10c),\n-        (0x10d, 0x10e),\n-        (0x10f, 0x110),\n-        (0x111, 0x112),\n-        (0x113, 0x114),\n-        (0x115, 0x116),\n-        (0x117, 0x118),\n-        (0x119, 0x11a),\n-        (0x11b, 0x11c),\n-        (0x11d, 0x11e),\n-        (0x11f, 0x120),\n-        (0x121, 0x122),\n-        (0x123, 0x124),\n-        (0x125, 0x126),\n-        (0x127, 0x128),\n-        (0x129, 0x12a),\n-        (0x12b, 0x12c),\n-        (0x12d, 0x12e),\n-        (0x12f, 0x130),\n-        (0x131, 0x132),\n-        (0x135, 0x136),\n-        (0x137, 0x139),\n-        (0x13a, 0x13b),\n-        (0x13c, 0x13d),\n-        (0x13e, 0x13f),\n-        (0x142, 0x143),\n-        (0x144, 0x145),\n-        (0x146, 0x147),\n-        (0x148, 0x149),\n-        (0x14b, 0x14c),\n-        (0x14d, 0x14e),\n-        (0x14f, 0x150),\n-        (0x151, 0x152),\n-        (0x153, 0x154),\n-        (0x155, 0x156),\n-        (0x157, 0x158),\n-        (0x159, 0x15a),\n-        (0x15b, 0x15c),\n-        (0x15d, 0x15e),\n-        (0x15f, 0x160),\n-        (0x161, 0x162),\n-        (0x163, 0x164),\n-        (0x165, 0x166),\n-        (0x167, 0x168),\n-        (0x169, 0x16a),\n-        (0x16b, 0x16c),\n-        (0x16d, 0x16e),\n-        (0x16f, 0x170),\n-        (0x171, 0x172),\n-        (0x173, 0x174),\n-        (0x175, 0x176),\n-        (0x177, 0x178),\n-        (0x17a, 0x17b),\n-        (0x17c, 0x17d),\n-        (0x17e, 0x17f),\n-        (0x180, 0x181),\n-        (0x183, 0x184),\n-        (0x185, 0x186),\n-        (0x188, 0x189),\n-        (0x18c, 0x18e),\n-        (0x192, 0x193),\n-        (0x195, 0x196),\n-        (0x199, 0x19c),\n-        (0x19e, 0x19f),\n-        (0x1a1, 0x1a2),\n-        (0x1a3, 0x1a4),\n-        (0x1a5, 0x1a6),\n-        (0x1a8, 0x1a9),\n-        (0x1aa, 0x1ac),\n-        (0x1ad, 0x1ae),\n-        (0x1b0, 0x1b1),\n-        (0x1b4, 0x1b5),\n-        (0x1b6, 0x1b7),\n-        (0x1b9, 0x1bc),\n-        (0x1bd, 0x1c4),\n-        (0x1ce, 0x1cf),\n-        (0x1d0, 0x1d1),\n-        (0x1d2, 0x1d3),\n-        (0x1d4, 0x1d5),\n-        (0x1d6, 0x1d7),\n-        (0x1d8, 0x1d9),\n-        (0x1da, 0x1db),\n-        (0x1dc, 0x1de),\n-        (0x1df, 0x1e0),\n-        (0x1e1, 0x1e2),\n-        (0x1e3, 0x1e4),\n-        (0x1e5, 0x1e6),\n-        (0x1e7, 0x1e8),\n-        (0x1e9, 0x1ea),\n-        (0x1eb, 0x1ec),\n-        (0x1ed, 0x1ee),\n-        (0x1ef, 0x1f1),\n-        (0x1f5, 0x1f6),\n-        (0x1f9, 0x1fa),\n-        (0x1fb, 0x1fc),\n-        (0x1fd, 0x1fe),\n-        (0x1ff, 0x200),\n-        (0x201, 0x202),\n-        (0x203, 0x204),\n-        (0x205, 0x206),\n-        (0x207, 0x208),\n-        (0x209, 0x20a),\n-        (0x20b, 0x20c),\n-        (0x20d, 0x20e),\n-        (0x20f, 0x210),\n-        (0x211, 0x212),\n-        (0x213, 0x214),\n-        (0x215, 0x216),\n-        (0x217, 0x218),\n-        (0x219, 0x21a),\n-        (0x21b, 0x21c),\n-        (0x21d, 0x21e),\n-        (0x21f, 0x220),\n-        (0x221, 0x222),\n-        (0x223, 0x224),\n-        (0x225, 0x226),\n-        (0x227, 0x228),\n-        (0x229, 0x22a),\n-        (0x22b, 0x22c),\n-        (0x22d, 0x22e),\n-        (0x22f, 0x230),\n-        (0x231, 0x232),\n-        (0x233, 0x23a),\n-        (0x23c, 0x23d),\n-        (0x23f, 0x241),\n-        (0x242, 0x243),\n-        (0x247, 0x248),\n-        (0x249, 0x24a),\n-        (0x24b, 0x24c),\n-        (0x24d, 0x24e),\n-        (0x24f, 0x2b0),\n-        (0x2b9, 0x2c2),\n-        (0x2c6, 0x2d2),\n-        (0x2ec, 0x2ed),\n-        (0x2ee, 0x2ef),\n-        (0x300, 0x340),\n-        (0x342, 0x343),\n-        (0x346, 0x34f),\n-        (0x350, 0x370),\n-        (0x371, 0x372),\n-        (0x373, 0x374),\n-        (0x377, 0x378),\n-        (0x37b, 0x37e),\n-        (0x390, 0x391),\n-        (0x3ac, 0x3cf),\n-        (0x3d7, 0x3d8),\n-        (0x3d9, 0x3da),\n-        (0x3db, 0x3dc),\n-        (0x3dd, 0x3de),\n-        (0x3df, 0x3e0),\n-        (0x3e1, 0x3e2),\n-        (0x3e3, 0x3e4),\n-        (0x3e5, 0x3e6),\n-        (0x3e7, 0x3e8),\n-        (0x3e9, 0x3ea),\n-        (0x3eb, 0x3ec),\n-        (0x3ed, 0x3ee),\n-        (0x3ef, 0x3f0),\n-        (0x3f3, 0x3f4),\n-        (0x3f8, 0x3f9),\n-        (0x3fb, 0x3fd),\n-        (0x430, 0x460),\n-        (0x461, 0x462),\n-        (0x463, 0x464),\n-        (0x465, 0x466),\n-        (0x467, 0x468),\n-        (0x469, 0x46a),\n-        (0x46b, 0x46c),\n-        (0x46d, 0x46e),\n-        (0x46f, 0x470),\n-        (0x471, 0x472),\n-        (0x473, 0x474),\n-        (0x475, 0x476),\n-        (0x477, 0x478),\n-        (0x479, 0x47a),\n-        (0x47b, 0x47c),\n-        (0x47d, 0x47e),\n-        (0x47f, 0x480),\n-        (0x481, 0x482),\n-        (0x483, 0x488),\n-        (0x48b, 0x48c),\n-        (0x48d, 0x48e),\n-        (0x48f, 0x490),\n-        (0x491, 0x492),\n-        (0x493, 0x494),\n-        (0x495, 0x496),\n-        (0x497, 0x498),\n-        (0x499, 0x49a),\n-        (0x49b, 0x49c),\n-        (0x49d, 0x49e),\n-        (0x49f, 0x4a0),\n-        (0x4a1, 0x4a2),\n-        (0x4a3, 0x4a4),\n-        (0x4a5, 0x4a6),\n-        (0x4a7, 0x4a8),\n-        (0x4a9, 0x4aa),\n-        (0x4ab, 0x4ac),\n-        (0x4ad, 0x4ae),\n-        (0x4af, 0x4b0),\n-        (0x4b1, 0x4b2),\n-        (0x4b3, 0x4b4),\n-        (0x4b5, 0x4b6),\n-        (0x4b7, 0x4b8),\n-        (0x4b9, 0x4ba),\n-        (0x4bb, 0x4bc),\n-        (0x4bd, 0x4be),\n-        (0x4bf, 0x4c0),\n-        (0x4c2, 0x4c3),\n-        (0x4c4, 0x4c5),\n-        (0x4c6, 0x4c7),\n-        (0x4c8, 0x4c9),\n-        (0x4ca, 0x4cb),\n-        (0x4cc, 0x4cd),\n-        (0x4ce, 0x4d0),\n-        (0x4d1, 0x4d2),\n-        (0x4d3, 0x4d4),\n-        (0x4d5, 0x4d6),\n-        (0x4d7, 0x4d8),\n-        (0x4d9, 0x4da),\n-        (0x4db, 0x4dc),\n-        (0x4dd, 0x4de),\n-        (0x4df, 0x4e0),\n-        (0x4e1, 0x4e2),\n-        (0x4e3, 0x4e4),\n-        (0x4e5, 0x4e6),\n-        (0x4e7, 0x4e8),\n-        (0x4e9, 0x4ea),\n-        (0x4eb, 0x4ec),\n-        (0x4ed, 0x4ee),\n-        (0x4ef, 0x4f0),\n-        (0x4f1, 0x4f2),\n-        (0x4f3, 0x4f4),\n-        (0x4f5, 0x4f6),\n-        (0x4f7, 0x4f8),\n-        (0x4f9, 0x4fa),\n-        (0x4fb, 0x4fc),\n-        (0x4fd, 0x4fe),\n-        (0x4ff, 0x500),\n-        (0x501, 0x502),\n-        (0x503, 0x504),\n-        (0x505, 0x506),\n-        (0x507, 0x508),\n-        (0x509, 0x50a),\n-        (0x50b, 0x50c),\n-        (0x50d, 0x50e),\n-        (0x50f, 0x510),\n-        (0x511, 0x512),\n-        (0x513, 0x514),\n-        (0x515, 0x516),\n-        (0x517, 0x518),\n-        (0x519, 0x51a),\n-        (0x51b, 0x51c),\n-        (0x51d, 0x51e),\n-        (0x51f, 0x520),\n-        (0x521, 0x522),\n-        (0x523, 0x524),\n-        (0x525, 0x526),\n-        (0x527, 0x528),\n-        (0x559, 0x55a),\n-        (0x561, 0x587),\n-        (0x591, 0x5be),\n-        (0x5bf, 0x5c0),\n-        (0x5c1, 0x5c3),\n-        (0x5c4, 0x5c6),\n-        (0x5c7, 0x5c8),\n-        (0x5d0, 0x5eb),\n-        (0x5f0, 0x5f3),\n-        (0x610, 0x61b),\n-        (0x620, 0x640),\n-        (0x641, 0x660),\n-        (0x66e, 0x675),\n-        (0x679, 0x6d4),\n-        (0x6d5, 0x6dd),\n-        (0x6df, 0x6e9),\n-        (0x6ea, 0x6f0),\n-        (0x6fa, 0x700),\n-        (0x710, 0x74b),\n-        (0x74d, 0x7b2),\n-        (0x7c0, 0x7f6),\n-        (0x800, 0x82e),\n-        (0x840, 0x85c),\n-        (0x8a0, 0x8a1),\n-        (0x8a2, 0x8ad),\n-        (0x8e4, 0x8ff),\n-        (0x900, 0x958),\n-        (0x960, 0x964),\n-        (0x966, 0x970),\n-        (0x971, 0x978),\n-        (0x979, 0x980),\n-        (0x981, 0x984),\n-        (0x985, 0x98d),\n-        (0x98f, 0x991),\n-        (0x993, 0x9a9),\n-        (0x9aa, 0x9b1),\n-        (0x9b2, 0x9b3),\n-        (0x9b6, 0x9ba),\n-        (0x9bc, 0x9c5),\n-        (0x9c7, 0x9c9),\n-        (0x9cb, 0x9cf),\n-        (0x9d7, 0x9d8),\n-        (0x9e0, 0x9e4),\n-        (0x9e6, 0x9f2),\n-        (0xa01, 0xa04),\n-        (0xa05, 0xa0b),\n-        (0xa0f, 0xa11),\n-        (0xa13, 0xa29),\n-        (0xa2a, 0xa31),\n-        (0xa32, 0xa33),\n-        (0xa35, 0xa36),\n-        (0xa38, 0xa3a),\n-        (0xa3c, 0xa3d),\n-        (0xa3e, 0xa43),\n-        (0xa47, 0xa49),\n-        (0xa4b, 0xa4e),\n-        (0xa51, 0xa52),\n-        (0xa5c, 0xa5d),\n-        (0xa66, 0xa76),\n-        (0xa81, 0xa84),\n-        (0xa85, 0xa8e),\n-        (0xa8f, 0xa92),\n-        (0xa93, 0xaa9),\n-        (0xaaa, 0xab1),\n-        (0xab2, 0xab4),\n-        (0xab5, 0xaba),\n-        (0xabc, 0xac6),\n-        (0xac7, 0xaca),\n-        (0xacb, 0xace),\n-        (0xad0, 0xad1),\n-        (0xae0, 0xae4),\n-        (0xae6, 0xaf0),\n-        (0xb01, 0xb04),\n-        (0xb05, 0xb0d),\n-        (0xb0f, 0xb11),\n-        (0xb13, 0xb29),\n-        (0xb2a, 0xb31),\n-        (0xb32, 0xb34),\n-        (0xb35, 0xb3a),\n-        (0xb3c, 0xb45),\n-        (0xb47, 0xb49),\n-        (0xb4b, 0xb4e),\n-        (0xb56, 0xb58),\n-        (0xb5f, 0xb64),\n-        (0xb66, 0xb70),\n-        (0xb71, 0xb72),\n-        (0xb82, 0xb84),\n-        (0xb85, 0xb8b),\n-        (0xb8e, 0xb91),\n-        (0xb92, 0xb96),\n-        (0xb99, 0xb9b),\n-        (0xb9c, 0xb9d),\n-        (0xb9e, 0xba0),\n-        (0xba3, 0xba5),\n-        (0xba8, 0xbab),\n-        (0xbae, 0xbba),\n-        (0xbbe, 0xbc3),\n-        (0xbc6, 0xbc9),\n-        (0xbca, 0xbce),\n-        (0xbd0, 0xbd1),\n-        (0xbd7, 0xbd8),\n-        (0xbe6, 0xbf0),\n-        (0xc01, 0xc04),\n-        (0xc05, 0xc0d),\n-        (0xc0e, 0xc11),\n-        (0xc12, 0xc29),\n-        (0xc2a, 0xc34),\n-        (0xc35, 0xc3a),\n-        (0xc3d, 0xc45),\n-        (0xc46, 0xc49),\n-        (0xc4a, 0xc4e),\n-        (0xc55, 0xc57),\n-        (0xc58, 0xc5a),\n-        (0xc60, 0xc64),\n-        (0xc66, 0xc70),\n-        (0xc82, 0xc84),\n-        (0xc85, 0xc8d),\n-        (0xc8e, 0xc91),\n-        (0xc92, 0xca9),\n-        (0xcaa, 0xcb4),\n-        (0xcb5, 0xcba),\n-        (0xcbc, 0xcc5),\n-        (0xcc6, 0xcc9),\n-        (0xcca, 0xcce),\n-        (0xcd5, 0xcd7),\n-        (0xcde, 0xcdf),\n-        (0xce0, 0xce4),\n-        (0xce6, 0xcf0),\n-        (0xcf1, 0xcf3),\n-        (0xd02, 0xd04),\n-        (0xd05, 0xd0d),\n-        (0xd0e, 0xd11),\n-        (0xd12, 0xd3b),\n-        (0xd3d, 0xd45),\n-        (0xd46, 0xd49),\n-        (0xd4a, 0xd4f),\n-        (0xd57, 0xd58),\n-        (0xd60, 0xd64),\n-        (0xd66, 0xd70),\n-        (0xd7a, 0xd80),\n-        (0xd82, 0xd84),\n-        (0xd85, 0xd97),\n-        (0xd9a, 0xdb2),\n-        (0xdb3, 0xdbc),\n-        (0xdbd, 0xdbe),\n-        (0xdc0, 0xdc7),\n-        (0xdca, 0xdcb),\n-        (0xdcf, 0xdd5),\n-        (0xdd6, 0xdd7),\n-        (0xdd8, 0xde0),\n-        (0xdf2, 0xdf4),\n-        (0xe01, 0xe33),\n-        (0xe34, 0xe3b),\n-        (0xe40, 0xe4f),\n-        (0xe50, 0xe5a),\n-        (0xe81, 0xe83),\n-        (0xe84, 0xe85),\n-        (0xe87, 0xe89),\n-        (0xe8a, 0xe8b),\n-        (0xe8d, 0xe8e),\n-        (0xe94, 0xe98),\n-        (0xe99, 0xea0),\n-        (0xea1, 0xea4),\n-        (0xea5, 0xea6),\n-        (0xea7, 0xea8),\n-        (0xeaa, 0xeac),\n-        (0xead, 0xeb3),\n-        (0xeb4, 0xeba),\n-        (0xebb, 0xebe),\n-        (0xec0, 0xec5),\n-        (0xec6, 0xec7),\n-        (0xec8, 0xece),\n-        (0xed0, 0xeda),\n-        (0xede, 0xee0),\n-        (0xf00, 0xf01),\n-        (0xf0b, 0xf0c),\n-        (0xf18, 0xf1a),\n-        (0xf20, 0xf2a),\n-        (0xf35, 0xf36),\n-        (0xf37, 0xf38),\n-        (0xf39, 0xf3a),\n-        (0xf3e, 0xf43),\n-        (0xf44, 0xf48),\n-        (0xf49, 0xf4d),\n-        (0xf4e, 0xf52),\n-        (0xf53, 0xf57),\n-        (0xf58, 0xf5c),\n-        (0xf5d, 0xf69),\n-        (0xf6a, 0xf6d),\n-        (0xf71, 0xf73),\n-        (0xf74, 0xf75),\n-        (0xf7a, 0xf81),\n-        (0xf82, 0xf85),\n-        (0xf86, 0xf93),\n-        (0xf94, 0xf98),\n-        (0xf99, 0xf9d),\n-        (0xf9e, 0xfa2),\n-        (0xfa3, 0xfa7),\n-        (0xfa8, 0xfac),\n-        (0xfad, 0xfb9),\n-        (0xfba, 0xfbd),\n-        (0xfc6, 0xfc7),\n-        (0x1000, 0x104a),\n-        (0x1050, 0x109e),\n-        (0x10d0, 0x10fb),\n-        (0x10fd, 0x1100),\n-        (0x1200, 0x1249),\n-        (0x124a, 0x124e),\n-        (0x1250, 0x1257),\n-        (0x1258, 0x1259),\n-        (0x125a, 0x125e),\n-        (0x1260, 0x1289),\n-        (0x128a, 0x128e),\n-        (0x1290, 0x12b1),\n-        (0x12b2, 0x12b6),\n-        (0x12b8, 0x12bf),\n-        (0x12c0, 0x12c1),\n-        (0x12c2, 0x12c6),\n-        (0x12c8, 0x12d7),\n-        (0x12d8, 0x1311),\n-        (0x1312, 0x1316),\n-        (0x1318, 0x135b),\n-        (0x135d, 0x1360),\n-        (0x1380, 0x1390),\n-        (0x13a0, 0x13f5),\n-        (0x1401, 0x166d),\n-        (0x166f, 0x1680),\n-        (0x1681, 0x169b),\n-        (0x16a0, 0x16eb),\n-        (0x1700, 0x170d),\n-        (0x170e, 0x1715),\n-        (0x1720, 0x1735),\n-        (0x1740, 0x1754),\n-        (0x1760, 0x176d),\n-        (0x176e, 0x1771),\n-        (0x1772, 0x1774),\n-        (0x1780, 0x17b4),\n-        (0x17b6, 0x17d4),\n-        (0x17d7, 0x17d8),\n-        (0x17dc, 0x17de),\n-        (0x17e0, 0x17ea),\n-        (0x1810, 0x181a),\n-        (0x1820, 0x1878),\n-        (0x1880, 0x18ab),\n-        (0x18b0, 0x18f6),\n-        (0x1900, 0x191d),\n-        (0x1920, 0x192c),\n-        (0x1930, 0x193c),\n-        (0x1946, 0x196e),\n-        (0x1970, 0x1975),\n-        (0x1980, 0x19ac),\n-        (0x19b0, 0x19ca),\n-        (0x19d0, 0x19da),\n-        (0x1a00, 0x1a1c),\n-        (0x1a20, 0x1a5f),\n-        (0x1a60, 0x1a7d),\n-        (0x1a7f, 0x1a8a),\n-        (0x1a90, 0x1a9a),\n-        (0x1aa7, 0x1aa8),\n-        (0x1b00, 0x1b4c),\n-        (0x1b50, 0x1b5a),\n-        (0x1b6b, 0x1b74),\n-        (0x1b80, 0x1bf4),\n-        (0x1c00, 0x1c38),\n-        (0x1c40, 0x1c4a),\n-        (0x1c4d, 0x1c7e),\n-        (0x1cd0, 0x1cd3),\n-        (0x1cd4, 0x1cf7),\n-        (0x1d00, 0x1d2c),\n-        (0x1d2f, 0x1d30),\n-        (0x1d3b, 0x1d3c),\n-        (0x1d4e, 0x1d4f),\n-        (0x1d6b, 0x1d78),\n-        (0x1d79, 0x1d9b),\n-        (0x1dc0, 0x1de7),\n-        (0x1dfc, 0x1e00),\n-        (0x1e01, 0x1e02),\n-        (0x1e03, 0x1e04),\n-        (0x1e05, 0x1e06),\n-        (0x1e07, 0x1e08),\n-        (0x1e09, 0x1e0a),\n-        (0x1e0b, 0x1e0c),\n-        (0x1e0d, 0x1e0e),\n-        (0x1e0f, 0x1e10),\n-        (0x1e11, 0x1e12),\n-        (0x1e13, 0x1e14),\n-        (0x1e15, 0x1e16),\n-        (0x1e17, 0x1e18),\n-        (0x1e19, 0x1e1a),\n-        (0x1e1b, 0x1e1c),\n-        (0x1e1d, 0x1e1e),\n-        (0x1e1f, 0x1e20),\n-        (0x1e21, 0x1e22),\n-        (0x1e23, 0x1e24),\n-        (0x1e25, 0x1e26),\n-        (0x1e27, 0x1e28),\n-        (0x1e29, 0x1e2a),\n-        (0x1e2b, 0x1e2c),\n-        (0x1e2d, 0x1e2e),\n-        (0x1e2f, 0x1e30),\n-        (0x1e31, 0x1e32),\n-        (0x1e33, 0x1e34),\n-        (0x1e35, 0x1e36),\n-        (0x1e37, 0x1e38),\n-        (0x1e39, 0x1e3a),\n-        (0x1e3b, 0x1e3c),\n-        (0x1e3d, 0x1e3e),\n-        (0x1e3f, 0x1e40),\n-        (0x1e41, 0x1e42),\n-        (0x1e43, 0x1e44),\n-        (0x1e45, 0x1e46),\n-        (0x1e47, 0x1e48),\n-        (0x1e49, 0x1e4a),\n-        (0x1e4b, 0x1e4c),\n-        (0x1e4d, 0x1e4e),\n-        (0x1e4f, 0x1e50),\n-        (0x1e51, 0x1e52),\n-        (0x1e53, 0x1e54),\n-        (0x1e55, 0x1e56),\n-        (0x1e57, 0x1e58),\n-        (0x1e59, 0x1e5a),\n-        (0x1e5b, 0x1e5c),\n-        (0x1e5d, 0x1e5e),\n-        (0x1e5f, 0x1e60),\n-        (0x1e61, 0x1e62),\n-        (0x1e63, 0x1e64),\n-        (0x1e65, 0x1e66),\n-        (0x1e67, 0x1e68),\n-        (0x1e69, 0x1e6a),\n-        (0x1e6b, 0x1e6c),\n-        (0x1e6d, 0x1e6e),\n-        (0x1e6f, 0x1e70),\n-        (0x1e71, 0x1e72),\n-        (0x1e73, 0x1e74),\n-        (0x1e75, 0x1e76),\n-        (0x1e77, 0x1e78),\n-        (0x1e79, 0x1e7a),\n-        (0x1e7b, 0x1e7c),\n-        (0x1e7d, 0x1e7e),\n-        (0x1e7f, 0x1e80),\n-        (0x1e81, 0x1e82),\n-        (0x1e83, 0x1e84),\n-        (0x1e85, 0x1e86),\n-        (0x1e87, 0x1e88),\n-        (0x1e89, 0x1e8a),\n-        (0x1e8b, 0x1e8c),\n-        (0x1e8d, 0x1e8e),\n-        (0x1e8f, 0x1e90),\n-        (0x1e91, 0x1e92),\n-        (0x1e93, 0x1e94),\n-        (0x1e95, 0x1e9a),\n-        (0x1e9c, 0x1e9e),\n-        (0x1e9f, 0x1ea0),\n-        (0x1ea1, 0x1ea2),\n-        (0x1ea3, 0x1ea4),\n-        (0x1ea5, 0x1ea6),\n-        (0x1ea7, 0x1ea8),\n-        (0x1ea9, 0x1eaa),\n-        (0x1eab, 0x1eac),\n-        (0x1ead, 0x1eae),\n-        (0x1eaf, 0x1eb0),\n-        (0x1eb1, 0x1eb2),\n-        (0x1eb3, 0x1eb4),\n-        (0x1eb5, 0x1eb6),\n-        (0x1eb7, 0x1eb8),\n-        (0x1eb9, 0x1eba),\n-        (0x1ebb, 0x1ebc),\n-        (0x1ebd, 0x1ebe),\n-        (0x1ebf, 0x1ec0),\n-        (0x1ec1, 0x1ec2),\n-        (0x1ec3, 0x1ec4),\n-        (0x1ec5, 0x1ec6),\n-        (0x1ec7, 0x1ec8),\n-        (0x1ec9, 0x1eca),\n-        (0x1ecb, 0x1ecc),\n-        (0x1ecd, 0x1ece),\n-        (0x1ecf, 0x1ed0),\n-        (0x1ed1, 0x1ed2),\n-        (0x1ed3, 0x1ed4),\n-        (0x1ed5, 0x1ed6),\n-        (0x1ed7, 0x1ed8),\n-        (0x1ed9, 0x1eda),\n-        (0x1edb, 0x1edc),\n-        (0x1edd, 0x1ede),\n-        (0x1edf, 0x1ee0),\n-        (0x1ee1, 0x1ee2),\n-        (0x1ee3, 0x1ee4),\n-        (0x1ee5, 0x1ee6),\n-        (0x1ee7, 0x1ee8),\n-        (0x1ee9, 0x1eea),\n-        (0x1eeb, 0x1eec),\n-        (0x1eed, 0x1eee),\n-        (0x1eef, 0x1ef0),\n-        (0x1ef1, 0x1ef2),\n-        (0x1ef3, 0x1ef4),\n-        (0x1ef5, 0x1ef6),\n-        (0x1ef7, 0x1ef8),\n-        (0x1ef9, 0x1efa),\n-        (0x1efb, 0x1efc),\n-        (0x1efd, 0x1efe),\n-        (0x1eff, 0x1f08),\n-        (0x1f10, 0x1f16),\n-        (0x1f20, 0x1f28),\n-        (0x1f30, 0x1f38),\n-        (0x1f40, 0x1f46),\n-        (0x1f50, 0x1f58),\n-        (0x1f60, 0x1f68),\n-        (0x1f70, 0x1f71),\n-        (0x1f72, 0x1f73),\n-        (0x1f74, 0x1f75),\n-        (0x1f76, 0x1f77),\n-        (0x1f78, 0x1f79),\n-        (0x1f7a, 0x1f7b),\n-        (0x1f7c, 0x1f7d),\n-        (0x1fb0, 0x1fb2),\n-        (0x1fb6, 0x1fb7),\n-        (0x1fc6, 0x1fc7),\n-        (0x1fd0, 0x1fd3),\n-        (0x1fd6, 0x1fd8),\n-        (0x1fe0, 0x1fe3),\n-        (0x1fe4, 0x1fe8),\n-        (0x1ff6, 0x1ff7),\n-        (0x214e, 0x214f),\n-        (0x2184, 0x2185),\n-        (0x2c30, 0x2c5f),\n-        (0x2c61, 0x2c62),\n-        (0x2c65, 0x2c67),\n-        (0x2c68, 0x2c69),\n-        (0x2c6a, 0x2c6b),\n-        (0x2c6c, 0x2c6d),\n-        (0x2c71, 0x2c72),\n-        (0x2c73, 0x2c75),\n-        (0x2c76, 0x2c7c),\n-        (0x2c81, 0x2c82),\n-        (0x2c83, 0x2c84),\n-        (0x2c85, 0x2c86),\n-        (0x2c87, 0x2c88),\n-        (0x2c89, 0x2c8a),\n-        (0x2c8b, 0x2c8c),\n-        (0x2c8d, 0x2c8e),\n-        (0x2c8f, 0x2c90),\n-        (0x2c91, 0x2c92),\n-        (0x2c93, 0x2c94),\n-        (0x2c95, 0x2c96),\n-        (0x2c97, 0x2c98),\n-        (0x2c99, 0x2c9a),\n-        (0x2c9b, 0x2c9c),\n-        (0x2c9d, 0x2c9e),\n-        (0x2c9f, 0x2ca0),\n-        (0x2ca1, 0x2ca2),\n-        (0x2ca3, 0x2ca4),\n-        (0x2ca5, 0x2ca6),\n-        (0x2ca7, 0x2ca8),\n-        (0x2ca9, 0x2caa),\n-        (0x2cab, 0x2cac),\n-        (0x2cad, 0x2cae),\n-        (0x2caf, 0x2cb0),\n-        (0x2cb1, 0x2cb2),\n-        (0x2cb3, 0x2cb4),\n-        (0x2cb5, 0x2cb6),\n-        (0x2cb7, 0x2cb8),\n-        (0x2cb9, 0x2cba),\n-        (0x2cbb, 0x2cbc),\n-        (0x2cbd, 0x2cbe),\n-        (0x2cbf, 0x2cc0),\n-        (0x2cc1, 0x2cc2),\n-        (0x2cc3, 0x2cc4),\n-        (0x2cc5, 0x2cc6),\n-        (0x2cc7, 0x2cc8),\n-        (0x2cc9, 0x2cca),\n-        (0x2ccb, 0x2ccc),\n-        (0x2ccd, 0x2cce),\n-        (0x2ccf, 0x2cd0),\n-        (0x2cd1, 0x2cd2),\n-        (0x2cd3, 0x2cd4),\n-        (0x2cd5, 0x2cd6),\n-        (0x2cd7, 0x2cd8),\n-        (0x2cd9, 0x2cda),\n-        (0x2cdb, 0x2cdc),\n-        (0x2cdd, 0x2cde),\n-        (0x2cdf, 0x2ce0),\n-        (0x2ce1, 0x2ce2),\n-        (0x2ce3, 0x2ce5),\n-        (0x2cec, 0x2ced),\n-        (0x2cee, 0x2cf2),\n-        (0x2cf3, 0x2cf4),\n-        (0x2d00, 0x2d26),\n-        (0x2d27, 0x2d28),\n-        (0x2d2d, 0x2d2e),\n-        (0x2d30, 0x2d68),\n-        (0x2d7f, 0x2d97),\n-        (0x2da0, 0x2da7),\n-        (0x2da8, 0x2daf),\n-        (0x2db0, 0x2db7),\n-        (0x2db8, 0x2dbf),\n-        (0x2dc0, 0x2dc7),\n-        (0x2dc8, 0x2dcf),\n-        (0x2dd0, 0x2dd7),\n-        (0x2dd8, 0x2ddf),\n-        (0x2de0, 0x2e00),\n-        (0x2e2f, 0x2e30),\n-        (0x3005, 0x3008),\n-        (0x302a, 0x302e),\n-        (0x303c, 0x303d),\n-        (0x3041, 0x3097),\n-        (0x3099, 0x309b),\n-        (0x309d, 0x309f),\n-        (0x30a1, 0x30fb),\n-        (0x30fc, 0x30ff),\n-        (0x3105, 0x312e),\n-        (0x31a0, 0x31bb),\n-        (0x31f0, 0x3200),\n-        (0x3400, 0x4db6),\n-        (0x4e00, 0x9fcd),\n-        (0xa000, 0xa48d),\n-        (0xa4d0, 0xa4fe),\n-        (0xa500, 0xa60d),\n-        (0xa610, 0xa62c),\n-        (0xa641, 0xa642),\n-        (0xa643, 0xa644),\n-        (0xa645, 0xa646),\n-        (0xa647, 0xa648),\n-        (0xa649, 0xa64a),\n-        (0xa64b, 0xa64c),\n-        (0xa64d, 0xa64e),\n-        (0xa64f, 0xa650),\n-        (0xa651, 0xa652),\n-        (0xa653, 0xa654),\n-        (0xa655, 0xa656),\n-        (0xa657, 0xa658),\n-        (0xa659, 0xa65a),\n-        (0xa65b, 0xa65c),\n-        (0xa65d, 0xa65e),\n-        (0xa65f, 0xa660),\n-        (0xa661, 0xa662),\n-        (0xa663, 0xa664),\n-        (0xa665, 0xa666),\n-        (0xa667, 0xa668),\n-        (0xa669, 0xa66a),\n-        (0xa66b, 0xa66c),\n-        (0xa66d, 0xa670),\n-        (0xa674, 0xa67e),\n-        (0xa67f, 0xa680),\n-        (0xa681, 0xa682),\n-        (0xa683, 0xa684),\n-        (0xa685, 0xa686),\n-        (0xa687, 0xa688),\n-        (0xa689, 0xa68a),\n-        (0xa68b, 0xa68c),\n-        (0xa68d, 0xa68e),\n-        (0xa68f, 0xa690),\n-        (0xa691, 0xa692),\n-        (0xa693, 0xa694),\n-        (0xa695, 0xa696),\n-        (0xa697, 0xa698),\n-        (0xa69f, 0xa6e6),\n-        (0xa6f0, 0xa6f2),\n-        (0xa717, 0xa720),\n-        (0xa723, 0xa724),\n-        (0xa725, 0xa726),\n-        (0xa727, 0xa728),\n-        (0xa729, 0xa72a),\n-        (0xa72b, 0xa72c),\n-        (0xa72d, 0xa72e),\n-        (0xa72f, 0xa732),\n-        (0xa733, 0xa734),\n-        (0xa735, 0xa736),\n-        (0xa737, 0xa738),\n-        (0xa739, 0xa73a),\n-        (0xa73b, 0xa73c),\n-        (0xa73d, 0xa73e),\n-        (0xa73f, 0xa740),\n-        (0xa741, 0xa742),\n-        (0xa743, 0xa744),\n-        (0xa745, 0xa746),\n-        (0xa747, 0xa748),\n-        (0xa749, 0xa74a),\n-        (0xa74b, 0xa74c),\n-        (0xa74d, 0xa74e),\n-        (0xa74f, 0xa750),\n-        (0xa751, 0xa752),\n-        (0xa753, 0xa754),\n-        (0xa755, 0xa756),\n-        (0xa757, 0xa758),\n-        (0xa759, 0xa75a),\n-        (0xa75b, 0xa75c),\n-        (0xa75d, 0xa75e),\n-        (0xa75f, 0xa760),\n-        (0xa761, 0xa762),\n-        (0xa763, 0xa764),\n-        (0xa765, 0xa766),\n-        (0xa767, 0xa768),\n-        (0xa769, 0xa76a),\n-        (0xa76b, 0xa76c),\n-        (0xa76d, 0xa76e),\n-        (0xa76f, 0xa770),\n-        (0xa771, 0xa779),\n-        (0xa77a, 0xa77b),\n-        (0xa77c, 0xa77d),\n-        (0xa77f, 0xa780),\n-        (0xa781, 0xa782),\n-        (0xa783, 0xa784),\n-        (0xa785, 0xa786),\n-        (0xa787, 0xa789),\n-        (0xa78c, 0xa78d),\n-        (0xa78e, 0xa78f),\n-        (0xa791, 0xa792),\n-        (0xa793, 0xa794),\n-        (0xa7a1, 0xa7a2),\n-        (0xa7a3, 0xa7a4),\n-        (0xa7a5, 0xa7a6),\n-        (0xa7a7, 0xa7a8),\n-        (0xa7a9, 0xa7aa),\n-        (0xa7fa, 0xa828),\n-        (0xa840, 0xa874),\n-        (0xa880, 0xa8c5),\n-        (0xa8d0, 0xa8da),\n-        (0xa8e0, 0xa8f8),\n-        (0xa8fb, 0xa8fc),\n-        (0xa900, 0xa92e),\n-        (0xa930, 0xa954),\n-        (0xa980, 0xa9c1),\n-        (0xa9cf, 0xa9da),\n-        (0xaa00, 0xaa37),\n-        (0xaa40, 0xaa4e),\n-        (0xaa50, 0xaa5a),\n-        (0xaa60, 0xaa77),\n-        (0xaa7a, 0xaa7c),\n-        (0xaa80, 0xaac3),\n-        (0xaadb, 0xaade),\n-        (0xaae0, 0xaaf0),\n-        (0xaaf2, 0xaaf7),\n-        (0xab01, 0xab07),\n-        (0xab09, 0xab0f),\n-        (0xab11, 0xab17),\n-        (0xab20, 0xab27),\n-        (0xab28, 0xab2f),\n-        (0xabc0, 0xabeb),\n-        (0xabec, 0xabee),\n-        (0xabf0, 0xabfa),\n-        (0xac00, 0xd7a4),\n-        (0xfa0e, 0xfa10),\n-        (0xfa11, 0xfa12),\n-        (0xfa13, 0xfa15),\n-        (0xfa1f, 0xfa20),\n-        (0xfa21, 0xfa22),\n-        (0xfa23, 0xfa25),\n-        (0xfa27, 0xfa2a),\n-        (0xfb1e, 0xfb1f),\n-        (0xfe20, 0xfe27),\n-        (0xfe73, 0xfe74),\n-        (0x10000, 0x1000c),\n-        (0x1000d, 0x10027),\n-        (0x10028, 0x1003b),\n-        (0x1003c, 0x1003e),\n-        (0x1003f, 0x1004e),\n-        (0x10050, 0x1005e),\n-        (0x10080, 0x100fb),\n-        (0x101fd, 0x101fe),\n-        (0x10280, 0x1029d),\n-        (0x102a0, 0x102d1),\n-        (0x10300, 0x1031f),\n-        (0x10330, 0x10341),\n-        (0x10342, 0x1034a),\n-        (0x10380, 0x1039e),\n-        (0x103a0, 0x103c4),\n-        (0x103c8, 0x103d0),\n-        (0x10428, 0x1049e),\n-        (0x104a0, 0x104aa),\n-        (0x10800, 0x10806),\n-        (0x10808, 0x10809),\n-        (0x1080a, 0x10836),\n-        (0x10837, 0x10839),\n-        (0x1083c, 0x1083d),\n-        (0x1083f, 0x10856),\n-        (0x10900, 0x10916),\n-        (0x10920, 0x1093a),\n-        (0x10980, 0x109b8),\n-        (0x109be, 0x109c0),\n-        (0x10a00, 0x10a04),\n-        (0x10a05, 0x10a07),\n-        (0x10a0c, 0x10a14),\n-        (0x10a15, 0x10a18),\n-        (0x10a19, 0x10a34),\n-        (0x10a38, 0x10a3b),\n-        (0x10a3f, 0x10a40),\n-        (0x10a60, 0x10a7d),\n-        (0x10b00, 0x10b36),\n-        (0x10b40, 0x10b56),\n-        (0x10b60, 0x10b73),\n-        (0x10c00, 0x10c49),\n-        (0x11000, 0x11047),\n-        (0x11066, 0x11070),\n-        (0x11080, 0x110bb),\n-        (0x110d0, 0x110e9),\n-        (0x110f0, 0x110fa),\n-        (0x11100, 0x11135),\n-        (0x11136, 0x11140),\n-        (0x11180, 0x111c5),\n-        (0x111d0, 0x111da),\n-        (0x11680, 0x116b8),\n-        (0x116c0, 0x116ca),\n-        (0x12000, 0x1236f),\n-        (0x13000, 0x1342f),\n-        (0x16800, 0x16a39),\n-        (0x16f00, 0x16f45),\n-        (0x16f50, 0x16f7f),\n-        (0x16f8f, 0x16fa0),\n-        (0x1b000, 0x1b002),\n-        (0x20000, 0x2a6d7),\n-        (0x2a700, 0x2b735),\n-        (0x2b740, 0x2b81e),\n+        0x2d0000002e,\n+        0x300000003a,\n+        0x610000007b,\n+        0xdf000000f7,\n+        0xf800000100,\n+        0x10100000102,\n+        0x10300000104,\n+        0x10500000106,\n+        0x10700000108,\n+        0x1090000010a,\n+        0x10b0000010c,\n+        0x10d0000010e,\n+        0x10f00000110,\n+        0x11100000112,\n+        0x11300000114,\n+        0x11500000116,\n+        0x11700000118,\n+        0x1190000011a,\n+        0x11b0000011c,\n+        0x11d0000011e,\n+        0x11f00000120,\n+        0x12100000122,\n+        0x12300000124,\n+        0x12500000126,\n+        0x12700000128,\n+        0x1290000012a,\n+        0x12b0000012c,\n+        0x12d0000012e,\n+        0x12f00000130,\n+        0x13100000132,\n+        0x13500000136,\n+        0x13700000139,\n+        0x13a0000013b,\n+        0x13c0000013d,\n+        0x13e0000013f,\n+        0x14200000143,\n+        0x14400000145,\n+        0x14600000147,\n+        0x14800000149,\n+        0x14b0000014c,\n+        0x14d0000014e,\n+        0x14f00000150,\n+        0x15100000152,\n+        0x15300000154,\n+        0x15500000156,\n+        0x15700000158,\n+        0x1590000015a,\n+        0x15b0000015c,\n+        0x15d0000015e,\n+        0x15f00000160,\n+        0x16100000162,\n+        0x16300000164,\n+        0x16500000166,\n+        0x16700000168,\n+        0x1690000016a,\n+        0x16b0000016c,\n+        0x16d0000016e,\n+        0x16f00000170,\n+        0x17100000172,\n+        0x17300000174,\n+        0x17500000176,\n+        0x17700000178,\n+        0x17a0000017b,\n+        0x17c0000017d,\n+        0x17e0000017f,\n+        0x18000000181,\n+        0x18300000184,\n+        0x18500000186,\n+        0x18800000189,\n+        0x18c0000018e,\n+        0x19200000193,\n+        0x19500000196,\n+        0x1990000019c,\n+        0x19e0000019f,\n+        0x1a1000001a2,\n+        0x1a3000001a4,\n+        0x1a5000001a6,\n+        0x1a8000001a9,\n+        0x1aa000001ac,\n+        0x1ad000001ae,\n+        0x1b0000001b1,\n+        0x1b4000001b5,\n+        0x1b6000001b7,\n+        0x1b9000001bc,\n+        0x1bd000001c4,\n+        0x1ce000001cf,\n+        0x1d0000001d1,\n+        0x1d2000001d3,\n+        0x1d4000001d5,\n+        0x1d6000001d7,\n+        0x1d8000001d9,\n+        0x1da000001db,\n+        0x1dc000001de,\n+        0x1df000001e0,\n+        0x1e1000001e2,\n+        0x1e3000001e4,\n+        0x1e5000001e6,\n+        0x1e7000001e8,\n+        0x1e9000001ea,\n+        0x1eb000001ec,\n+        0x1ed000001ee,\n+        0x1ef000001f1,\n+        0x1f5000001f6,\n+        0x1f9000001fa,\n+        0x1fb000001fc,\n+        0x1fd000001fe,\n+        0x1ff00000200,\n+        0x20100000202,\n+        0x20300000204,\n+        0x20500000206,\n+        0x20700000208,\n+        0x2090000020a,\n+        0x20b0000020c,\n+        0x20d0000020e,\n+        0x20f00000210,\n+        0x21100000212,\n+        0x21300000214,\n+        0x21500000216,\n+        0x21700000218,\n+        0x2190000021a,\n+        0x21b0000021c,\n+        0x21d0000021e,\n+        0x21f00000220,\n+        0x22100000222,\n+        0x22300000224,\n+        0x22500000226,\n+        0x22700000228,\n+        0x2290000022a,\n+        0x22b0000022c,\n+        0x22d0000022e,\n+        0x22f00000230,\n+        0x23100000232,\n+        0x2330000023a,\n+        0x23c0000023d,\n+        0x23f00000241,\n+        0x24200000243,\n+        0x24700000248,\n+        0x2490000024a,\n+        0x24b0000024c,\n+        0x24d0000024e,\n+        0x24f000002b0,\n+        0x2b9000002c2,\n+        0x2c6000002d2,\n+        0x2ec000002ed,\n+        0x2ee000002ef,\n+        0x30000000340,\n+        0x34200000343,\n+        0x3460000034f,\n+        0x35000000370,\n+        0x37100000372,\n+        0x37300000374,\n+        0x37700000378,\n+        0x37b0000037e,\n+        0x39000000391,\n+        0x3ac000003cf,\n+        0x3d7000003d8,\n+        0x3d9000003da,\n+        0x3db000003dc,\n+        0x3dd000003de,\n+        0x3df000003e0,\n+        0x3e1000003e2,\n+        0x3e3000003e4,\n+        0x3e5000003e6,\n+        0x3e7000003e8,\n+        0x3e9000003ea,\n+        0x3eb000003ec,\n+        0x3ed000003ee,\n+        0x3ef000003f0,\n+        0x3f3000003f4,\n+        0x3f8000003f9,\n+        0x3fb000003fd,\n+        0x43000000460,\n+        0x46100000462,\n+        0x46300000464,\n+        0x46500000466,\n+        0x46700000468,\n+        0x4690000046a,\n+        0x46b0000046c,\n+        0x46d0000046e,\n+        0x46f00000470,\n+        0x47100000472,\n+        0x47300000474,\n+        0x47500000476,\n+        0x47700000478,\n+        0x4790000047a,\n+        0x47b0000047c,\n+        0x47d0000047e,\n+        0x47f00000480,\n+        0x48100000482,\n+        0x48300000488,\n+        0x48b0000048c,\n+        0x48d0000048e,\n+        0x48f00000490,\n+        0x49100000492,\n+        0x49300000494,\n+        0x49500000496,\n+        0x49700000498,\n+        0x4990000049a,\n+        0x49b0000049c,\n+        0x49d0000049e,\n+        0x49f000004a0,\n+        0x4a1000004a2,\n+        0x4a3000004a4,\n+        0x4a5000004a6,\n+        0x4a7000004a8,\n+        0x4a9000004aa,\n+        0x4ab000004ac,\n+        0x4ad000004ae,\n+        0x4af000004b0,\n+        0x4b1000004b2,\n+        0x4b3000004b4,\n+        0x4b5000004b6,\n+        0x4b7000004b8,\n+        0x4b9000004ba,\n+        0x4bb000004bc,\n+        0x4bd000004be,\n+        0x4bf000004c0,\n+        0x4c2000004c3,\n+        0x4c4000004c5,\n+        0x4c6000004c7,\n+        0x4c8000004c9,\n+        0x4ca000004cb,\n+        0x4cc000004cd,\n+        0x4ce000004d0,\n+        0x4d1000004d2,\n+        0x4d3000004d4,\n+        0x4d5000004d6,\n+        0x4d7000004d8,\n+        0x4d9000004da,\n+        0x4db000004dc,\n+        0x4dd000004de,\n+        0x4df000004e0,\n+        0x4e1000004e2,\n+        0x4e3000004e4,\n+        0x4e5000004e6,\n+        0x4e7000004e8,\n+        0x4e9000004ea,\n+        0x4eb000004ec,\n+        0x4ed000004ee,\n+        0x4ef000004f0,\n+        0x4f1000004f2,\n+        0x4f3000004f4,\n+        0x4f5000004f6,\n+        0x4f7000004f8,\n+        0x4f9000004fa,\n+        0x4fb000004fc,\n+        0x4fd000004fe,\n+        0x4ff00000500,\n+        0x50100000502,\n+        0x50300000504,\n+        0x50500000506,\n+        0x50700000508,\n+        0x5090000050a,\n+        0x50b0000050c,\n+        0x50d0000050e,\n+        0x50f00000510,\n+        0x51100000512,\n+        0x51300000514,\n+        0x51500000516,\n+        0x51700000518,\n+        0x5190000051a,\n+        0x51b0000051c,\n+        0x51d0000051e,\n+        0x51f00000520,\n+        0x52100000522,\n+        0x52300000524,\n+        0x52500000526,\n+        0x52700000528,\n+        0x5590000055a,\n+        0x56100000587,\n+        0x591000005be,\n+        0x5bf000005c0,\n+        0x5c1000005c3,\n+        0x5c4000005c6,\n+        0x5c7000005c8,\n+        0x5d0000005eb,\n+        0x5f0000005f3,\n+        0x6100000061b,\n+        0x62000000640,\n+        0x64100000660,\n+        0x66e00000675,\n+        0x679000006d4,\n+        0x6d5000006dd,\n+        0x6df000006e9,\n+        0x6ea000006f0,\n+        0x6fa00000700,\n+        0x7100000074b,\n+        0x74d000007b2,\n+        0x7c0000007f6,\n+        0x8000000082e,\n+        0x8400000085c,\n+        0x8a0000008a1,\n+        0x8a2000008ad,\n+        0x8e4000008ff,\n+        0x90000000958,\n+        0x96000000964,\n+        0x96600000970,\n+        0x97100000978,\n+        0x97900000980,\n+        0x98100000984,\n+        0x9850000098d,\n+        0x98f00000991,\n+        0x993000009a9,\n+        0x9aa000009b1,\n+        0x9b2000009b3,\n+        0x9b6000009ba,\n+        0x9bc000009c5,\n+        0x9c7000009c9,\n+        0x9cb000009cf,\n+        0x9d7000009d8,\n+        0x9e0000009e4,\n+        0x9e6000009f2,\n+        0xa0100000a04,\n+        0xa0500000a0b,\n+        0xa0f00000a11,\n+        0xa1300000a29,\n+        0xa2a00000a31,\n+        0xa3200000a33,\n+        0xa3500000a36,\n+        0xa3800000a3a,\n+        0xa3c00000a3d,\n+        0xa3e00000a43,\n+        0xa4700000a49,\n+        0xa4b00000a4e,\n+        0xa5100000a52,\n+        0xa5c00000a5d,\n+        0xa6600000a76,\n+        0xa8100000a84,\n+        0xa8500000a8e,\n+        0xa8f00000a92,\n+        0xa9300000aa9,\n+        0xaaa00000ab1,\n+        0xab200000ab4,\n+        0xab500000aba,\n+        0xabc00000ac6,\n+        0xac700000aca,\n+        0xacb00000ace,\n+        0xad000000ad1,\n+        0xae000000ae4,\n+        0xae600000af0,\n+        0xb0100000b04,\n+        0xb0500000b0d,\n+        0xb0f00000b11,\n+        0xb1300000b29,\n+        0xb2a00000b31,\n+        0xb3200000b34,\n+        0xb3500000b3a,\n+        0xb3c00000b45,\n+        0xb4700000b49,\n+        0xb4b00000b4e,\n+        0xb5600000b58,\n+        0xb5f00000b64,\n+        0xb6600000b70,\n+        0xb7100000b72,\n+        0xb8200000b84,\n+        0xb8500000b8b,\n+        0xb8e00000b91,\n+        0xb9200000b96,\n+        0xb9900000b9b,\n+        0xb9c00000b9d,\n+        0xb9e00000ba0,\n+        0xba300000ba5,\n+        0xba800000bab,\n+        0xbae00000bba,\n+        0xbbe00000bc3,\n+        0xbc600000bc9,\n+        0xbca00000bce,\n+        0xbd000000bd1,\n+        0xbd700000bd8,\n+        0xbe600000bf0,\n+        0xc0100000c04,\n+        0xc0500000c0d,\n+        0xc0e00000c11,\n+        0xc1200000c29,\n+        0xc2a00000c34,\n+        0xc3500000c3a,\n+        0xc3d00000c45,\n+        0xc4600000c49,\n+        0xc4a00000c4e,\n+        0xc5500000c57,\n+        0xc5800000c5a,\n+        0xc6000000c64,\n+        0xc6600000c70,\n+        0xc8200000c84,\n+        0xc8500000c8d,\n+        0xc8e00000c91,\n+        0xc9200000ca9,\n+        0xcaa00000cb4,\n+        0xcb500000cba,\n+        0xcbc00000cc5,\n+        0xcc600000cc9,\n+        0xcca00000cce,\n+        0xcd500000cd7,\n+        0xcde00000cdf,\n+        0xce000000ce4,\n+        0xce600000cf0,\n+        0xcf100000cf3,\n+        0xd0200000d04,\n+        0xd0500000d0d,\n+        0xd0e00000d11,\n+        0xd1200000d3b,\n+        0xd3d00000d45,\n+        0xd4600000d49,\n+        0xd4a00000d4f,\n+        0xd5700000d58,\n+        0xd6000000d64,\n+        0xd6600000d70,\n+        0xd7a00000d80,\n+        0xd8200000d84,\n+        0xd8500000d97,\n+        0xd9a00000db2,\n+        0xdb300000dbc,\n+        0xdbd00000dbe,\n+        0xdc000000dc7,\n+        0xdca00000dcb,\n+        0xdcf00000dd5,\n+        0xdd600000dd7,\n+        0xdd800000de0,\n+        0xdf200000df4,\n+        0xe0100000e33,\n+        0xe3400000e3b,\n+        0xe4000000e4f,\n+        0xe5000000e5a,\n+        0xe8100000e83,\n+        0xe8400000e85,\n+        0xe8700000e89,\n+        0xe8a00000e8b,\n+        0xe8d00000e8e,\n+        0xe9400000e98,\n+        0xe9900000ea0,\n+        0xea100000ea4,\n+        0xea500000ea6,\n+        0xea700000ea8,\n+        0xeaa00000eac,\n+        0xead00000eb3,\n+        0xeb400000eba,\n+        0xebb00000ebe,\n+        0xec000000ec5,\n+        0xec600000ec7,\n+        0xec800000ece,\n+        0xed000000eda,\n+        0xede00000ee0,\n+        0xf0000000f01,\n+        0xf0b00000f0c,\n+        0xf1800000f1a,\n+        0xf2000000f2a,\n+        0xf3500000f36,\n+        0xf3700000f38,\n+        0xf3900000f3a,\n+        0xf3e00000f43,\n+        0xf4400000f48,\n+        0xf4900000f4d,\n+        0xf4e00000f52,\n+        0xf5300000f57,\n+        0xf5800000f5c,\n+        0xf5d00000f69,\n+        0xf6a00000f6d,\n+        0xf7100000f73,\n+        0xf7400000f75,\n+        0xf7a00000f81,\n+        0xf8200000f85,\n+        0xf8600000f93,\n+        0xf9400000f98,\n+        0xf9900000f9d,\n+        0xf9e00000fa2,\n+        0xfa300000fa7,\n+        0xfa800000fac,\n+        0xfad00000fb9,\n+        0xfba00000fbd,\n+        0xfc600000fc7,\n+        0x10000000104a,\n+        0x10500000109e,\n+        0x10d0000010fb,\n+        0x10fd00001100,\n+        0x120000001249,\n+        0x124a0000124e,\n+        0x125000001257,\n+        0x125800001259,\n+        0x125a0000125e,\n+        0x126000001289,\n+        0x128a0000128e,\n+        0x1290000012b1,\n+        0x12b2000012b6,\n+        0x12b8000012bf,\n+        0x12c0000012c1,\n+        0x12c2000012c6,\n+        0x12c8000012d7,\n+        0x12d800001311,\n+        0x131200001316,\n+        0x13180000135b,\n+        0x135d00001360,\n+        0x138000001390,\n+        0x13a0000013f5,\n+        0x14010000166d,\n+        0x166f00001680,\n+        0x16810000169b,\n+        0x16a0000016eb,\n+        0x17000000170d,\n+        0x170e00001715,\n+        0x172000001735,\n+        0x174000001754,\n+        0x17600000176d,\n+        0x176e00001771,\n+        0x177200001774,\n+        0x1780000017b4,\n+        0x17b6000017d4,\n+        0x17d7000017d8,\n+        0x17dc000017de,\n+        0x17e0000017ea,\n+        0x18100000181a,\n+        0x182000001878,\n+        0x1880000018ab,\n+        0x18b0000018f6,\n+        0x19000000191d,\n+        0x19200000192c,\n+        0x19300000193c,\n+        0x19460000196e,\n+        0x197000001975,\n+        0x1980000019ac,\n+        0x19b0000019ca,\n+        0x19d0000019da,\n+        0x1a0000001a1c,\n+        0x1a2000001a5f,\n+        0x1a6000001a7d,\n+        0x1a7f00001a8a,\n+        0x1a9000001a9a,\n+        0x1aa700001aa8,\n+        0x1b0000001b4c,\n+        0x1b5000001b5a,\n+        0x1b6b00001b74,\n+        0x1b8000001bf4,\n+        0x1c0000001c38,\n+        0x1c4000001c4a,\n+        0x1c4d00001c7e,\n+        0x1cd000001cd3,\n+        0x1cd400001cf7,\n+        0x1d0000001d2c,\n+        0x1d2f00001d30,\n+        0x1d3b00001d3c,\n+        0x1d4e00001d4f,\n+        0x1d6b00001d78,\n+        0x1d7900001d9b,\n+        0x1dc000001de7,\n+        0x1dfc00001e00,\n+        0x1e0100001e02,\n+        0x1e0300001e04,\n+        0x1e0500001e06,\n+        0x1e0700001e08,\n+        0x1e0900001e0a,\n+        0x1e0b00001e0c,\n+        0x1e0d00001e0e,\n+        0x1e0f00001e10,\n+        0x1e1100001e12,\n+        0x1e1300001e14,\n+        0x1e1500001e16,\n+        0x1e1700001e18,\n+        0x1e1900001e1a,\n+        0x1e1b00001e1c,\n+        0x1e1d00001e1e,\n+        0x1e1f00001e20,\n+        0x1e2100001e22,\n+        0x1e2300001e24,\n+        0x1e2500001e26,\n+        0x1e2700001e28,\n+        0x1e2900001e2a,\n+        0x1e2b00001e2c,\n+        0x1e2d00001e2e,\n+        0x1e2f00001e30,\n+        0x1e3100001e32,\n+        0x1e3300001e34,\n+        0x1e3500001e36,\n+        0x1e3700001e38,\n+        0x1e3900001e3a,\n+        0x1e3b00001e3c,\n+        0x1e3d00001e3e,\n+        0x1e3f00001e40,\n+        0x1e4100001e42,\n+        0x1e4300001e44,\n+        0x1e4500001e46,\n+        0x1e4700001e48,\n+        0x1e4900001e4a,\n+        0x1e4b00001e4c,\n+        0x1e4d00001e4e,\n+        0x1e4f00001e50,\n+        0x1e5100001e52,\n+        0x1e5300001e54,\n+        0x1e5500001e56,\n+        0x1e5700001e58,\n+        0x1e5900001e5a,\n+        0x1e5b00001e5c,\n+        0x1e5d00001e5e,\n+        0x1e5f00001e60,\n+        0x1e6100001e62,\n+        0x1e6300001e64,\n+        0x1e6500001e66,\n+        0x1e6700001e68,\n+        0x1e6900001e6a,\n+        0x1e6b00001e6c,\n+        0x1e6d00001e6e,\n+        0x1e6f00001e70,\n+        0x1e7100001e72,\n+        0x1e7300001e74,\n+        0x1e7500001e76,\n+        0x1e7700001e78,\n+        0x1e7900001e7a,\n+        0x1e7b00001e7c,\n+        0x1e7d00001e7e,\n+        0x1e7f00001e80,\n+        0x1e8100001e82,\n+        0x1e8300001e84,\n+        0x1e8500001e86,\n+        0x1e8700001e88,\n+        0x1e8900001e8a,\n+        0x1e8b00001e8c,\n+        0x1e8d00001e8e,\n+        0x1e8f00001e90,\n+        0x1e9100001e92,\n+        0x1e9300001e94,\n+        0x1e9500001e9a,\n+        0x1e9c00001e9e,\n+        0x1e9f00001ea0,\n+        0x1ea100001ea2,\n+        0x1ea300001ea4,\n+        0x1ea500001ea6,\n+        0x1ea700001ea8,\n+        0x1ea900001eaa,\n+        0x1eab00001eac,\n+        0x1ead00001eae,\n+        0x1eaf00001eb0,\n+        0x1eb100001eb2,\n+        0x1eb300001eb4,\n+        0x1eb500001eb6,\n+        0x1eb700001eb8,\n+        0x1eb900001eba,\n+        0x1ebb00001ebc,\n+        0x1ebd00001ebe,\n+        0x1ebf00001ec0,\n+        0x1ec100001ec2,\n+        0x1ec300001ec4,\n+        0x1ec500001ec6,\n+        0x1ec700001ec8,\n+        0x1ec900001eca,\n+        0x1ecb00001ecc,\n+        0x1ecd00001ece,\n+        0x1ecf00001ed0,\n+        0x1ed100001ed2,\n+        0x1ed300001ed4,\n+        0x1ed500001ed6,\n+        0x1ed700001ed8,\n+        0x1ed900001eda,\n+        0x1edb00001edc,\n+        0x1edd00001ede,\n+        0x1edf00001ee0,\n+        0x1ee100001ee2,\n+        0x1ee300001ee4,\n+        0x1ee500001ee6,\n+        0x1ee700001ee8,\n+        0x1ee900001eea,\n+        0x1eeb00001eec,\n+        0x1eed00001eee,\n+        0x1eef00001ef0,\n+        0x1ef100001ef2,\n+        0x1ef300001ef4,\n+        0x1ef500001ef6,\n+        0x1ef700001ef8,\n+        0x1ef900001efa,\n+        0x1efb00001efc,\n+        0x1efd00001efe,\n+        0x1eff00001f08,\n+        0x1f1000001f16,\n+        0x1f2000001f28,\n+        0x1f3000001f38,\n+        0x1f4000001f46,\n+        0x1f5000001f58,\n+        0x1f6000001f68,\n+        0x1f7000001f71,\n+        0x1f7200001f73,\n+        0x1f7400001f75,\n+        0x1f7600001f77,\n+        0x1f7800001f79,\n+        0x1f7a00001f7b,\n+        0x1f7c00001f7d,\n+        0x1fb000001fb2,\n+        0x1fb600001fb7,\n+        0x1fc600001fc7,\n+        0x1fd000001fd3,\n+        0x1fd600001fd8,\n+        0x1fe000001fe3,\n+        0x1fe400001fe8,\n+        0x1ff600001ff7,\n+        0x214e0000214f,\n+        0x218400002185,\n+        0x2c3000002c5f,\n+        0x2c6100002c62,\n+        0x2c6500002c67,\n+        0x2c6800002c69,\n+        0x2c6a00002c6b,\n+        0x2c6c00002c6d,\n+        0x2c7100002c72,\n+        0x2c7300002c75,\n+        0x2c7600002c7c,\n+        0x2c8100002c82,\n+        0x2c8300002c84,\n+        0x2c8500002c86,\n+        0x2c8700002c88,\n+        0x2c8900002c8a,\n+        0x2c8b00002c8c,\n+        0x2c8d00002c8e,\n+        0x2c8f00002c90,\n+        0x2c9100002c92,\n+        0x2c9300002c94,\n+        0x2c9500002c96,\n+        0x2c9700002c98,\n+        0x2c9900002c9a,\n+        0x2c9b00002c9c,\n+        0x2c9d00002c9e,\n+        0x2c9f00002ca0,\n+        0x2ca100002ca2,\n+        0x2ca300002ca4,\n+        0x2ca500002ca6,\n+        0x2ca700002ca8,\n+        0x2ca900002caa,\n+        0x2cab00002cac,\n+        0x2cad00002cae,\n+        0x2caf00002cb0,\n+        0x2cb100002cb2,\n+        0x2cb300002cb4,\n+        0x2cb500002cb6,\n+        0x2cb700002cb8,\n+        0x2cb900002cba,\n+        0x2cbb00002cbc,\n+        0x2cbd00002cbe,\n+        0x2cbf00002cc0,\n+        0x2cc100002cc2,\n+        0x2cc300002cc4,\n+        0x2cc500002cc6,\n+        0x2cc700002cc8,\n+        0x2cc900002cca,\n+        0x2ccb00002ccc,\n+        0x2ccd00002cce,\n+        0x2ccf00002cd0,\n+        0x2cd100002cd2,\n+        0x2cd300002cd4,\n+        0x2cd500002cd6,\n+        0x2cd700002cd8,\n+        0x2cd900002cda,\n+        0x2cdb00002cdc,\n+        0x2cdd00002cde,\n+        0x2cdf00002ce0,\n+        0x2ce100002ce2,\n+        0x2ce300002ce5,\n+        0x2cec00002ced,\n+        0x2cee00002cf2,\n+        0x2cf300002cf4,\n+        0x2d0000002d26,\n+        0x2d2700002d28,\n+        0x2d2d00002d2e,\n+        0x2d3000002d68,\n+        0x2d7f00002d97,\n+        0x2da000002da7,\n+        0x2da800002daf,\n+        0x2db000002db7,\n+        0x2db800002dbf,\n+        0x2dc000002dc7,\n+        0x2dc800002dcf,\n+        0x2dd000002dd7,\n+        0x2dd800002ddf,\n+        0x2de000002e00,\n+        0x2e2f00002e30,\n+        0x300500003008,\n+        0x302a0000302e,\n+        0x303c0000303d,\n+        0x304100003097,\n+        0x30990000309b,\n+        0x309d0000309f,\n+        0x30a1000030fb,\n+        0x30fc000030ff,\n+        0x31050000312e,\n+        0x31a0000031bb,\n+        0x31f000003200,\n+        0x340000004db6,\n+        0x4e0000009fcd,\n+        0xa0000000a48d,\n+        0xa4d00000a4fe,\n+        0xa5000000a60d,\n+        0xa6100000a62c,\n+        0xa6410000a642,\n+        0xa6430000a644,\n+        0xa6450000a646,\n+        0xa6470000a648,\n+        0xa6490000a64a,\n+        0xa64b0000a64c,\n+        0xa64d0000a64e,\n+        0xa64f0000a650,\n+        0xa6510000a652,\n+        0xa6530000a654,\n+        0xa6550000a656,\n+        0xa6570000a658,\n+        0xa6590000a65a,\n+        0xa65b0000a65c,\n+        0xa65d0000a65e,\n+        0xa65f0000a660,\n+        0xa6610000a662,\n+        0xa6630000a664,\n+        0xa6650000a666,\n+        0xa6670000a668,\n+        0xa6690000a66a,\n+        0xa66b0000a66c,\n+        0xa66d0000a670,\n+        0xa6740000a67e,\n+        0xa67f0000a680,\n+        0xa6810000a682,\n+        0xa6830000a684,\n+        0xa6850000a686,\n+        0xa6870000a688,\n+        0xa6890000a68a,\n+        0xa68b0000a68c,\n+        0xa68d0000a68e,\n+        0xa68f0000a690,\n+        0xa6910000a692,\n+        0xa6930000a694,\n+        0xa6950000a696,\n+        0xa6970000a698,\n+        0xa69f0000a6e6,\n+        0xa6f00000a6f2,\n+        0xa7170000a720,\n+        0xa7230000a724,\n+        0xa7250000a726,\n+        0xa7270000a728,\n+        0xa7290000a72a,\n+        0xa72b0000a72c,\n+        0xa72d0000a72e,\n+        0xa72f0000a732,\n+        0xa7330000a734,\n+        0xa7350000a736,\n+        0xa7370000a738,\n+        0xa7390000a73a,\n+        0xa73b0000a73c,\n+        0xa73d0000a73e,\n+        0xa73f0000a740,\n+        0xa7410000a742,\n+        0xa7430000a744,\n+        0xa7450000a746,\n+        0xa7470000a748,\n+        0xa7490000a74a,\n+        0xa74b0000a74c,\n+        0xa74d0000a74e,\n+        0xa74f0000a750,\n+        0xa7510000a752,\n+        0xa7530000a754,\n+        0xa7550000a756,\n+        0xa7570000a758,\n+        0xa7590000a75a,\n+        0xa75b0000a75c,\n+        0xa75d0000a75e,\n+        0xa75f0000a760,\n@@ -11,6 +11,8 @@ def intranges_from_list(list_):\n     \"\"\"Represent a list of integers as a sequence of ranges:\n     ((start_0, end_0), (start_1, end_1), ...), such that the original\n     integers are exactly those x such that start_i <= x < end_i for some i.\n+\n+    Ranges are encoded as single integers (start << 32 | end), not as tuples.\n     \"\"\"\n \n     sorted_list = sorted(list_)\n@@ -21,26 +23,31 @@ def intranges_from_list(list_):\n             if sorted_list[i] == sorted_list[i+1]-1:\n                 continue\n         current_range = sorted_list[last_write+1:i+1]\n-        range_tuple = (current_range[0], current_range[-1] + 1)\n-        ranges.append(range_tuple)\n+        ranges.append(_encode_range(current_range[0], current_range[-1] + 1))\n         last_write = i\n \n     return tuple(ranges)\n \n+def _encode_range(start, end):\n+    return (start << 32) | end\n+\n+def _decode_range(r):\n+    return (r >> 32), (r & ((1 << 32) - 1))\n+\n \n def intranges_contain(int_, ranges):\n     \"\"\"Determine if `int_` falls into one of the ranges in `ranges`.\"\"\"\n-    tuple_ = (int_, int_)\n+    tuple_ = _encode_range(int_, 0)\n     pos = bisect.bisect_left(ranges, tuple_)\n     # we could be immediately ahead of a tuple (start, end)\n     # with start < int_ <= end\n     if pos > 0:\n-        left, right = ranges[pos-1]\n+        left, right = _decode_range(ranges[pos-1])\n         if left <= int_ < right:\n             return True\n     # or we could be immediately behind a tuple (int_, end)\n     if pos < len(ranges):\n-        left, _ = ranges[pos]\n+        left, _ = _decode_range(ranges[pos])\n         if left == int_:\n             return True\n     return False\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
