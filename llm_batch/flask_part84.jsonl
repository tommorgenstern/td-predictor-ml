{"custom_id": "flask#d8d74b0cc89f7b9242cb5419ac1193463749f218", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 6 | Churn Cumulative: 6177 | Contributors (this commit): 106 | Commits (past 90d): 10 | Contributors (cumulative): 106 | DMM Complexity: None\n\nDIFF:\n@@ -1270,7 +1270,11 @@ class Flask(_PackageBoundObject):\n \n     @staticmethod\n     def _get_exc_class_and_code(exc_class_or_code):\n-        \"\"\"Ensure that we register only exceptions as handler keys\"\"\"\n+        \"\"\"Ensure that we register only exceptions as handler keys\n+\n+        :param exc_class_or_code: the class for the exception, or\n+                                  exception code as integer\n+        \"\"\"\n         if isinstance(exc_class_or_code, integer_types):\n             exc_class = default_exceptions[exc_class_or_code]\n         else:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6ec98f07499a6e6b61a43f265c818100aa41e205", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 6185 | Contributors (this commit): 106 | Commits (past 90d): 11 | Contributors (cumulative): 106 | DMM Complexity: None\n\nDIFF:\n@@ -1270,10 +1270,12 @@ class Flask(_PackageBoundObject):\n \n     @staticmethod\n     def _get_exc_class_and_code(exc_class_or_code):\n-        \"\"\"Ensure that we register only exceptions as handler keys\n+        \"\"\"Get the exception class being handled. For HTTP status codes\n+        or ``HTTPException`` subclasses, return both the exception and\n+        status code.\n \n-        :param exc_class_or_code: the class for the exception, or\n-                                  exception code as integer\n+        :param exc_class_or_code: Any exception class, or an HTTP status\n+            code as an integer.\n         \"\"\"\n         if isinstance(exc_class_or_code, integer_types):\n             exc_class = default_exceptions[exc_class_or_code]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1ff98a2d21f6800b7b97195e0f9c90776ffb8f9b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 41 | Lines Deleted: 24 | Files Changed: 4 | Hunks: 5 | Methods Changed: 14 | Complexity Δ (Sum/Max): 8/8 | Churn Δ: 65 | Churn Cumulative: 5199 | Contributors (this commit): 38 | Commits (past 90d): 27 | Contributors (cumulative): 51 | DMM Complexity: 0.8333333333333334\n\nDIFF:\n@@ -314,9 +314,6 @@ class RequestContext(object):\n         # functions.\n         self._after_request_functions = []\n \n-        if self.url_adapter is not None:\n-            self.match_request()\n-\n     @property\n     def g(self):\n         return _app_ctx_stack.top.g\n@@ -384,6 +381,9 @@ class RequestContext(object):\n \n         _request_ctx_stack.push(self)\n \n+        if self.url_adapter is not None:\n+            self.match_request()\n+\n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n         # Only open a new session if this is the first time the request was\n\n@@ -1384,26 +1384,6 @@ def test_url_for_passes_special_values_to_build_error_handler(app):\n         flask.url_for(\"/\")\n \n \n-def test_custom_converters(app, client):\n-    from werkzeug.routing import BaseConverter\n-\n-    class ListConverter(BaseConverter):\n-        def to_python(self, value):\n-            return value.split(\",\")\n-\n-        def to_url(self, value):\n-            base_to_url = super(ListConverter, self).to_url\n-            return \",\".join(base_to_url(x) for x in value)\n-\n-    app.url_map.converters[\"list\"] = ListConverter\n-\n-    @app.route(\"/<list:args>\")\n-    def index(args):\n-        return \"|\".join(args)\n-\n-    assert client.get(\"/1,2,3\").data == b\"1|2|3\"\n-\n-\n def test_static_files(app, client):\n     rv = client.get(\"/static/index.html\")\n     assert rv.status_code == 200\n\n@@ -0,0 +1,38 @@\n+from flask.globals import _app_ctx_stack\n+\n+\n+def test_custom_converters(app, client):\n+    from werkzeug.routing import BaseConverter\n+\n+    class ListConverter(BaseConverter):\n+        def to_python(self, value):\n+            return value.split(\",\")\n+\n+        def to_url(self, value):\n+            base_to_url = super(ListConverter, self).to_url\n+            return \",\".join(base_to_url(x) for x in value)\n+\n+    app.url_map.converters[\"list\"] = ListConverter\n+\n+    @app.route(\"/<list:args>\")\n+    def index(args):\n+        return \"|\".join(args)\n+\n+    assert client.get(\"/1,2,3\").data == b\"1|2|3\"\n+\n+\n+def test_model_converters(app, client):\n+    from werkzeug.routing import BaseConverter\n+\n+    class ModelConverterTester(BaseConverter):\n+        def to_python(self, value):\n+            assert _app_ctx_stack.top is not None\n+            return value\n+\n+    app.url_map.converters[\"model\"] = ModelConverterTester\n+\n+    @app.route(\"/<model:user_name>\")\n+    def index(user_name):\n+        return user_name, 200\n+\n+    client.get(\"/admin\").data\n\n@@ -153,7 +153,6 @@ def test_blueprint_with_subdomain():\n \n     ctx = app.test_request_context(\"/\", subdomain=\"xxx\")\n     assert ctx.request.url == \"http://xxx.example.com:1234/foo/\"\n-    assert ctx.request.blueprint == bp.name\n \n     rv = client.get(\"/\", subdomain=\"xxx\")\n     assert rv.data == b\"http://xxx.example.com:1234/foo/\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#c65863912ba3c93d014378e21402c97babca272b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 22 | Lines Deleted: 17 | Files Changed: 3 | Hunks: 13 | Methods Changed: 10 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 39 | Churn Cumulative: 947 | Contributors (this commit): 13 | Commits (past 90d): 13 | Contributors (cumulative): 17 | DMM Complexity: 1.0\n\nDIFF:\n@@ -347,8 +347,8 @@ class RequestContext(object):\n         of the request.\n         \"\"\"\n         try:\n-            url_rule, self.request.view_args = self.url_adapter.match(return_rule=True)\n-            self.request.url_rule = url_rule\n+            result = self.url_adapter.match(return_rule=True)\n+            self.request.url_rule, self.request.view_args = result\n         except HTTPException as e:\n             self.request.routing_exception = e\n \n@@ -381,9 +381,6 @@ class RequestContext(object):\n \n         _request_ctx_stack.push(self)\n \n-        if self.url_adapter is not None:\n-            self.match_request()\n-\n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n         # Only open a new session if this is the first time the request was\n@@ -395,6 +392,9 @@ class RequestContext(object):\n             if self.session is None:\n                 self.session = session_interface.make_null_session(self.app)\n \n+        if self.url_adapter is not None:\n+            self.match_request()\n+\n     def pop(self, exc=_sentinel):\n         \"\"\"Pops the request context and unbinds it by doing that.  This will\n         also trigger the execution of functions registered by the\n\n@@ -1,9 +1,10 @@\n-from flask.globals import _app_ctx_stack\n+from werkzeug.routing import BaseConverter\n+\n+from flask import has_request_context\n+from flask import url_for\n \n \n def test_custom_converters(app, client):\n-    from werkzeug.routing import BaseConverter\n-\n     class ListConverter(BaseConverter):\n         def to_python(self, value):\n             return value.split(\",\")\n@@ -20,19 +21,20 @@ def test_custom_converters(app, client):\n \n     assert client.get(\"/1,2,3\").data == b\"1|2|3\"\n \n+    with app.test_request_context():\n+        assert url_for(\"index\", args=[4, 5, 6]) == \"/4,5,6\"\n \n-def test_model_converters(app, client):\n-    from werkzeug.routing import BaseConverter\n \n-    class ModelConverterTester(BaseConverter):\n+def test_context_available(app, client):\n+    class ContextConverter(BaseConverter):\n         def to_python(self, value):\n-            assert _app_ctx_stack.top is not None\n+            assert has_request_context()\n             return value\n \n-    app.url_map.converters[\"model\"] = ModelConverterTester\n+    app.url_map.converters[\"ctx\"] = ContextConverter\n \n-    @app.route(\"/<model:user_name>\")\n-    def index(user_name):\n-        return user_name, 200\n+    @app.route(\"/<ctx:name>\")\n+    def index(name):\n+        return name\n \n-    client.get(\"/admin\").data\n+    assert client.get(\"/admin\").data == b\"admin\"\n\n@@ -154,6 +154,9 @@ def test_blueprint_with_subdomain():\n     ctx = app.test_request_context(\"/\", subdomain=\"xxx\")\n     assert ctx.request.url == \"http://xxx.example.com:1234/foo/\"\n \n+    with ctx:\n+        assert ctx.request.blueprint == bp.name\n+\n     rv = client.get(\"/\", subdomain=\"xxx\")\n     assert rv.data == b\"http://xxx.example.com:1234/foo/\"\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#54519ef028660da63c3b2bab51c1f18e7b7c9fa2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 146 | Contributors (this commit): 1 | Commits (past 90d): 5 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1829,7 +1829,7 @@ class Flask(_PackageBoundObject):\n \n         .. note::\n             Prior to Werkzeug 1.0.0, ``InternalServerError`` will not\n-            always have a ``original_exception`` attribute. Use\n+            always have an ``original_exception`` attribute. Use\n             ``getattr(e, \"original_exception\", None)`` to simulate the\n             behavior for compatibility.\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e666f7a69c737fef8236237671be4da5910e9113", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 76 | Lines Deleted: 76 | Files Changed: 38 | Hunks: 38 | Methods Changed: 0 | Complexity Δ (Sum/Max): -33/15 | Churn Δ: 152 | Churn Cumulative: 36549 | Contributors (this commit): 268 | Commits (past 90d): 182 | Contributors (cumulative): 670 | DMM Complexity: None\n\nDIFF:\n@@ -6,8 +6,8 @@\n     A microframework based on Werkzeug.  It's extensively documented\n     and follows best practice patterns.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n __version__ = '1.0.3'\n\n@@ -5,8 +5,8 @@\n \n     Alias for flask.run for the command line.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n if __name__ == '__main__':\n\n@@ -7,8 +7,8 @@\n     version of six so we don't have to depend on a specific version\n     of it.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import sys\n\n@@ -5,8 +5,8 @@\n \n     This module implements the central WSGI application object.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import os\n\n@@ -6,8 +6,8 @@\n     Blueprints are the recommended way to implement larger or more\n     pluggable applications in Flask 0.7 and later.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n from functools import update_wrapper\n \n\n@@ -5,8 +5,8 @@\n \n     A simple command line application to run flask apps.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n from __future__ import print_function\n\n@@ -5,8 +5,8 @@\n \n     Implements the configuration related objects.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import os\n\n@@ -5,8 +5,8 @@\n \n     Implements the objects required to keep the context.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import sys\n\n@@ -5,8 +5,8 @@\n \n     Various helpers to make the development experience better.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import os\n\n@@ -6,8 +6,8 @@\n     Defines all the global objects that are proxies to the current\n     active context.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n from functools import partial\n\n@@ -5,8 +5,8 @@\n \n     Implements various helpers.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import os\n\n@@ -3,8 +3,8 @@\n flask.json\n ~~~~~~~~~~\n \n-:copyright: © 2010 by the Pallets team.\n-:license: BSD, see LICENSE for more details.\n+:copyright: 2010 Pallets\n+:license: BSD-3-Clause\n \"\"\"\n import codecs\n import io\n\n@@ -38,8 +38,8 @@ processes dicts first, so insert the new tag at the front of the order since\n \n     app.session_interface.serializer.register(TagOrderedDict, index=0)\n \n-:copyright: © 2010 by the Pallets team.\n-:license: BSD, see LICENSE for more details.\n+:copyright: 2010 Pallets\n+:license: BSD-3-Clause\n \"\"\"\n \n from base64 import b64decode, b64encode\n\n@@ -3,8 +3,8 @@\n flask.logging\n ~~~~~~~~~~~~~\n \n-:copyright: © 2010 by the Pallets team.\n-:license: BSD, see LICENSE for more details.\n+:copyright: 2010 Pallets\n+:license: BSD-3-Clause\n \"\"\"\n \n from __future__ import absolute_import\n\n@@ -5,8 +5,8 @@\n \n     Implements cookie based sessions based on itsdangerous.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import hashlib\n\n@@ -6,8 +6,8 @@\n     Implements signals based on blinker if available, otherwise\n     falls silently back to a noop.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n signals_available = False\n\n@@ -5,8 +5,8 @@\n \n     Implements the bridge to Jinja2.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n from jinja2 import BaseLoader, Environment as BaseEnvironment, \\\n\n@@ -6,8 +6,8 @@\n     Implements test support helpers.  This module is lazily imported\n     and usually not used in production environments.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import werkzeug\n\n@@ -5,8 +5,8 @@\n \n     This module provides class-based views inspired by the ones in Django.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n from .globals import request\n\n@@ -5,8 +5,8 @@\n \n     Implements the WSGI wrappers (request and response).\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n from werkzeug.exceptions import BadRequest\n\n@@ -3,8 +3,8 @@\n     tests.conftest\n     ~~~~~~~~~~~~~~\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import gc\n\n@@ -5,8 +5,8 @@\n \n     Tests the application context.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import pytest\n\n@@ -5,8 +5,8 @@\n \n     The basic functionality.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import re\n\n@@ -5,8 +5,8 @@\n \n     Blueprints (and currently modules)\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import functools\n\n@@ -3,8 +3,8 @@\n     tests.test_cli\n     ~~~~~~~~~~~~~~\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n # This file was part of Flask-CLI and was modified under the terms of\n\n@@ -3,8 +3,8 @@\n     tests.test_config\n     ~~~~~~~~~~~~~~~~~\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n from datetime import timedelta\n\n@@ -5,8 +5,8 @@\n \n     Various helpers.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import datetime\n\n@@ -3,8 +3,8 @@\n     tests.test_instance\n     ~~~~~~~~~~~~~~~~~~~\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import os\n\n@@ -3,8 +3,8 @@\n tests.test_json_tag\n ~~~~~~~~~~~~~~~~~~~\n \n-:copyright: © 2010 by the Pallets team.\n-:license: BSD, see LICENSE for more details.\n+:copyright: 2010 Pallets\n+:license: BSD-3-Clause\n \"\"\"\n \n from datetime import datetime\n\n@@ -3,8 +3,8 @@\n tests.test_logging\n ~~~~~~~~~~~~~~~~~~~\n \n-:copyright: © 2010 by the Pallets team.\n-:license: BSD, see LICENSE for more details.\n+:copyright: 2010 Pallets\n+:license: BSD-3-Clause\n \"\"\"\n \n import logging\n\n@@ -5,8 +5,8 @@\n \n     Tests regressions.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import gc\n\n@@ -5,8 +5,8 @@\n \n     Tests the request context.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import pytest\n\n@@ -5,8 +5,8 @@\n \n     Signalling.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import pytest\n\n@@ -6,8 +6,8 @@\n     Test that certain behavior of flask can be customized by\n     subclasses.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import flask\n\n@@ -5,8 +5,8 @@\n \n     Template functionality\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import pytest\n\n@@ -5,8 +5,8 @@\n \n     Test client and more.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n import click\n import pytest\n\n@@ -3,8 +3,8 @@\n tests.test_user_error_handler\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-:copyright: © 2010 by the Pallets team.\n-:license: BSD, see LICENSE for more details.\n+:copyright: 2010 Pallets\n+:license: BSD-3-Clause\n \"\"\"\n \n from werkzeug.exceptions import (\n\n@@ -5,8 +5,8 @@\n \n     Pluggable views.\n \n-    :copyright: © 2010 by the Pallets team.\n-    :license: BSD, see LICENSE for more details.\n+    :copyright: 2010 Pallets\n+    :license: BSD-3-Clause\n \"\"\"\n \n import pytest\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#24498afed5075583ecd5667b105b4a315a25051e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 57 | Lines Deleted: 226 | Files Changed: 2 | Hunks: 14 | Methods Changed: 14 | Complexity Δ (Sum/Max): -28/0 | Churn Δ: 283 | Churn Cumulative: 1363 | Contributors (this commit): 33 | Commits (past 90d): 10 | Contributors (cumulative): 38 | DMM Complexity: 0.5145631067961165\n\nDIFF:\n@@ -1,164 +0,0 @@\n-#!/usr/bin/env python\n-from __future__ import print_function\n-\n-import os\n-import re\n-import sys\n-from datetime import date, datetime\n-from subprocess import PIPE, Popen\n-\n-_date_strip_re = re.compile(r'(?<=\\d)(st|nd|rd|th)')\n-\n-\n-def parse_changelog():\n-    with open('CHANGES.rst') as f:\n-        lineiter = iter(f)\n-        for line in lineiter:\n-            match = re.search('^Version\\s+(.*)', line.strip())\n-\n-            if match is None:\n-                continue\n-\n-            version = match.group(1).strip()\n-\n-            if next(lineiter).count('-') != len(match.group(0)):\n-                continue\n-\n-            while 1:\n-                change_info = next(lineiter).strip()\n-\n-                if change_info:\n-                    break\n-\n-            match = re.search(\n-                r'released on (\\w+\\s+\\d+\\w+\\s+\\d+)(?:, codename (.*))?',\n-                change_info,\n-                flags=re.IGNORECASE\n-            )\n-\n-            if match is None:\n-                continue\n-\n-            datestr, codename = match.groups()\n-            return version, parse_date(datestr), codename\n-\n-\n-def bump_version(version):\n-    try:\n-        parts = [int(i) for i in version.split('.')]\n-    except ValueError:\n-        fail('Current version is not numeric')\n-\n-    parts[-1] += 1\n-    return '.'.join(map(str, parts))\n-\n-\n-def parse_date(string):\n-    string = _date_strip_re.sub('', string)\n-    return datetime.strptime(string, '%B %d %Y')\n-\n-\n-def set_filename_version(filename, version_number, pattern):\n-    changed = []\n-\n-    def inject_version(match):\n-        before, old, after = match.groups()\n-        changed.append(True)\n-        return before + version_number + after\n-\n-    with open(filename) as f:\n-        contents = re.sub(\n-            r\"^(\\s*%s\\s*=\\s*')(.+?)(')\" % pattern,\n-            inject_version, f.read(),\n-            flags=re.DOTALL | re.MULTILINE\n-        )\n-\n-    if not changed:\n-        fail('Could not find %s in %s', pattern, filename)\n-\n-    with open(filename, 'w') as f:\n-        f.write(contents)\n-\n-\n-def set_init_version(version):\n-    info('Setting __init__.py version to %s', version)\n-    set_filename_version('flask/__init__.py', version, '__version__')\n-\n-\n-def build():\n-    cmd = [sys.executable, 'setup.py', 'sdist', 'bdist_wheel']\n-    Popen(cmd).wait()\n-\n-\n-def fail(message, *args):\n-    print('Error:', message % args, file=sys.stderr)\n-    sys.exit(1)\n-\n-\n-def info(message, *args):\n-    print(message % args, file=sys.stderr)\n-\n-\n-def get_git_tags():\n-    return set(\n-        Popen(['git', 'tag'], stdout=PIPE).communicate()[0].splitlines()\n-    )\n-\n-\n-def git_is_clean():\n-    return Popen(['git', 'diff', '--quiet']).wait() == 0\n-\n-\n-def make_git_commit(message, *args):\n-    message = message % args\n-    Popen(['git', 'commit', '-am', message]).wait()\n-\n-\n-def make_git_tag(tag):\n-    info('Tagging \"%s\"', tag)\n-    Popen(['git', 'tag', tag]).wait()\n-\n-\n-def main():\n-    os.chdir(os.path.join(os.path.dirname(__file__), '..'))\n-\n-    rv = parse_changelog()\n-\n-    if rv is None:\n-        fail('Could not parse changelog')\n-\n-    version, release_date, codename = rv\n-    dev_version = bump_version(version) + '.dev'\n-\n-    info(\n-        'Releasing %s (codename %s, release date %s)',\n-        version, codename, release_date.strftime('%d/%m/%Y')\n-    )\n-    tags = get_git_tags()\n-\n-    if version in tags:\n-        fail('Version \"%s\" is already tagged', version)\n-\n-    if release_date.date() != date.today():\n-        fail(\n-            'Release date is not today (%s != %s)',\n-            release_date.date(), date.today()\n-        )\n-\n-    if not git_is_clean():\n-        fail('You have uncommitted changes in git')\n-\n-    try:\n-        import wheel  # noqa: F401\n-    except ImportError:\n-        fail('You need to install the wheel package.')\n-\n-    set_init_version(version)\n-    make_git_commit('Bump version number to %s', version)\n-    make_git_tag(version)\n-    build()\n-    set_init_version(dev_version)\n-\n-\n-if __name__ == '__main__':\n-    main()\n\n@@ -1,81 +1,76 @@\n-#!/usr/bin/env python\n-# -*- coding: utf-8 -*-\n import io\n import re\n-from collections import OrderedDict\n \n+from setuptools import find_packages\n from setuptools import setup\n \n-with io.open('README.rst', 'rt', encoding='utf8') as f:\n+with io.open(\"README.rst\", \"rt\", encoding=\"utf8\") as f:\n     readme = f.read()\n \n-with io.open('flask/__init__.py', 'rt', encoding='utf8') as f:\n-    version = re.search(r'__version__ = \\'(.*?)\\'', f.read()).group(1)\n+with io.open(\"flask/__init__.py\", \"rt\", encoding=\"utf8\") as f:\n+    version = re.search(r\"__version__ = \\'(.*?)\\'\", f.read()).group(1)\n \n setup(\n-    name='Flask',\n+    name=\"Flask\",\n     version=version,\n-    url='https://www.palletsprojects.com/p/flask/',\n-    project_urls=OrderedDict((\n-        ('Documentation', 'http://flask.pocoo.org/docs/'),\n-        ('Code', 'https://github.com/pallets/flask'),\n-        ('Issue tracker', 'https://github.com/pallets/flask/issues'),\n-    )),\n-    license='BSD',\n-    author='Armin Ronacher',\n-    author_email='armin.ronacher@active-4.com',\n-    maintainer='Pallets team',\n-    maintainer_email='contact@palletsprojects.com',\n-    description='A simple framework for building complex web applications.',\n+    url=\"https://palletsprojects.com/p/flask/\",\n+    project_urls={\n+        \"Documentation\": \"http://flask.palletsprojects.com/\",\n+        \"Code\": \"https://github.com/pallets/flask\",\n+        \"Issue tracker\": \"https://github.com/pallets/flask/issues\",\n+    },\n+    license=\"BSD-3-Clause\",\n+    author=\"Armin Ronacher\",\n+    author_email=\"armin.ronacher@active-4.com\",\n+    maintainer=\"Pallets\",\n+    maintainer_email=\"contact@palletsprojects.com\",\n+    description=\"A simple framework for building complex web applications.\",\n     long_description=readme,\n-    packages=['flask', 'flask.json'],\n+    classifiers=[\n+        \"Development Status :: 5 - Production/Stable\",\n+        \"Environment :: Web Environment\",\n+        \"Framework :: Flask\",\n+        \"Intended Audience :: Developers\",\n+        \"License :: OSI Approved :: BSD License\",\n+        \"Operating System :: OS Independent\",\n+        \"Programming Language :: Python\",\n+        \"Programming Language :: Python :: 2\",\n+        \"Programming Language :: Python :: 2.7\",\n+        \"Programming Language :: Python :: 3\",\n+        \"Programming Language :: Python :: 3.4\",\n+        \"Programming Language :: Python :: 3.5\",\n+        \"Programming Language :: Python :: 3.6\",\n+        \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n+        \"Topic :: Internet :: WWW/HTTP :: WSGI :: Application\",\n+        \"Topic :: Software Development :: Libraries :: Application Frameworks\",\n+        \"Topic :: Software Development :: Libraries :: Python Modules\",\n+    ],\n+    packages=find_packages(),\n     include_package_data=True,\n-    zip_safe=False,\n-    platforms='any',\n+    python_requires=\">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\",\n     install_requires=[\n-        'Werkzeug>=0.14',\n-        'Jinja2>=2.10',\n-        'itsdangerous>=0.24',\n-        'click>=5.1',\n+        \"Werkzeug>=0.14\",\n+        \"Jinja2>=2.10\",\n+        \"itsdangerous>=0.24\",\n+        \"click>=5.1\",\n     ],\n     extras_require={\n-        'dotenv': ['python-dotenv'],\n-        'dev': [\n-            'pytest>=3',\n-            'coverage',\n-            'tox',\n-            'sphinx',\n-            'pallets-sphinx-themes',\n-            'sphinxcontrib-log-cabinet',\n+        \"dotenv\": [\"python-dotenv\"],\n+        \"dev\": [\n+            \"pytest\",\n+            \"coverage\",\n+            \"tox\",\n+            \"sphinx\",\n+            \"pallets-sphinx-themes\",\n+            \"sphinxcontrib-log-cabinet\",\n+            \"sphinx-issues\",\n         ],\n-        'docs': [\n-            'sphinx',\n-            'pallets-sphinx-themes',\n-            'sphinxcontrib-log-cabinet',\n-        ]\n-    },\n-    classifiers=[\n-        'Development Status :: 5 - Production/Stable',\n-        'Environment :: Web Environment',\n-        'Framework :: Flask',\n-        'Intended Audience :: Developers',\n-        'License :: OSI Approved :: BSD License',\n-        'Operating System :: OS Independent',\n-        'Programming Language :: Python',\n-        'Programming Language :: Python :: 2',\n-        'Programming Language :: Python :: 2.7',\n-        'Programming Language :: Python :: 3',\n-        'Programming Language :: Python :: 3.4',\n-        'Programming Language :: Python :: 3.5',\n-        'Programming Language :: Python :: 3.6',\n-        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',\n-        'Topic :: Internet :: WWW/HTTP :: WSGI :: Application',\n-        'Topic :: Software Development :: Libraries :: Application Frameworks',\n-        'Topic :: Software Development :: Libraries :: Python Modules',\n-    ],\n-    entry_points={\n-        'console_scripts': [\n-            'flask = flask.cli:main',\n+        \"docs\": [\n+            \"sphinx\",\n+            \"pallets-sphinx-themes\",\n+            \"sphinxcontrib-log-cabinet\",\n+            \"sphinx-issues\",\n         ],\n     },\n+    entry_points={\"console_scripts\": [\"flask = flask.cli:main\"]},\n )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#28b35c55a1fd7963227011b1a8a3dae2feb308a3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 10 | Lines Deleted: 19 | Files Changed: 1 | Hunks: 8 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 29 | Churn Cumulative: 1761 | Contributors (this commit): 15 | Commits (past 90d): 2 | Contributors (cumulative): 15 | DMM Complexity: None\n\nDIFF:\n@@ -1,13 +1,11 @@\n-# -*- coding: utf-8 -*-\n-from __future__ import print_function\n-\n-from pallets_sphinx_themes import ProjectLink, get_version\n+from pallets_sphinx_themes import get_version\n+from pallets_sphinx_themes import ProjectLink\n \n # Project --------------------------------------------------------------\n \n project = \"Flask\"\n-copyright = \"2010 Pallets Team\"\n-author = \"Pallets Team\"\n+copyright = \"2010 Pallets\"\n+author = \"Pallets\"\n release, version = get_version(\"Flask\")\n \n # General --------------------------------------------------------------\n@@ -18,10 +16,11 @@ extensions = [\n     \"sphinx.ext.intersphinx\",\n     \"sphinxcontrib.log_cabinet\",\n     \"pallets_sphinx_themes\",\n+    \"sphinx_issues\",\n ]\n intersphinx_mapping = {\n     \"python\": (\"https://docs.python.org/3/\", None),\n-    \"werkzeug\": (\"http://werkzeug.pocoo.org/docs/\", None),\n+    \"werkzeug\": (\"https://werkzeug.palletsprojects.com/\", None),\n     \"click\": (\"https://click.palletsprojects.com/\", None),\n     \"jinja\": (\"http://jinja.pocoo.org/docs/\", None),\n     \"itsdangerous\": (\"https://itsdangerous.palletsprojects.com/\", None),\n@@ -29,6 +28,7 @@ intersphinx_mapping = {\n     \"wtforms\": (\"https://wtforms.readthedocs.io/en/stable/\", None),\n     \"blinker\": (\"https://pythonhosted.org/blinker/\", None),\n }\n+issues_github_path = \"pallets/flask\"\n \n # HTML -----------------------------------------------------------------\n \n@@ -49,25 +49,16 @@ html_sidebars = {\n }\n singlehtml_sidebars = {\"index\": [\"project.html\", \"localtoc.html\"]}\n html_static_path = [\"_static\"]\n-html_favicon = \"_static/flask-favicon.ico\"\n-html_logo = \"_static/flask.png\"\n+html_favicon = \"_static/flask-icon.png\"\n+html_logo = \"_static/flask-icon.png\"\n html_title = \"Flask Documentation ({})\".format(version)\n html_show_sourcelink = False\n \n # LaTeX ----------------------------------------------------------------\n \n latex_documents = [\n-    (master_doc, \"Flask.tex\", \"Flask Documentation\", \"Pallets Team\", \"manual\")\n+    (master_doc, \"Flask-{}.tex\".format(version), html_title, author, \"manual\")\n ]\n-latex_use_modindex = False\n-latex_elements = {\n-    \"papersize\": \"a4paper\",\n-    \"pointsize\": \"12pt\",\n-    \"fontpkg\": r\"\\usepackage{mathpazo}\",\n-    \"preamble\": r\"\\usepackage{flaskstyle}\",\n-}\n-latex_use_parts = True\n-latex_additional_files = [\"flaskstyle.sty\", \"logo.pdf\"]\n \n # Local Extensions -----------------------------------------------------\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#54cbb4e64297d68ff6c9ef3fe03c283448e3533f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 5584 | Contributors (this commit): 79 | Commits (past 90d): 20 | Contributors (cumulative): 99 | DMM Complexity: None\n\nDIFF:\n@@ -576,7 +576,7 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n             filenames = {\n                 'filename': unicodedata.normalize(\n                     'NFKD', attachment_filename).encode('ascii', 'ignore'),\n-                'filename*': \"UTF-8''%s\" % url_quote(attachment_filename),\n+                'filename*': \"UTF-8''%s\" % url_quote(attachment_filename, safe=b\"\"),\n             }\n         else:\n             filenames = {'filename': attachment_filename}\n\n@@ -646,6 +646,8 @@ class TestSendfile(object):\n         (u'Vögel.txt', 'Vogel.txt', 'V%C3%B6gel.txt'),\n         # Native string not marked as Unicode on Python 2\n         ('tést.txt', 'test.txt', 't%C3%A9st.txt'),\n+        # \":/\" are not safe in filename* value\n+        (u\"те:/ст\", '\":/\"', \"%D1%82%D0%B5%3A%2F%D1%81%D1%82\"),\n     ))\n     def test_attachment_filename_encoding(self, filename, ascii, utf8):\n         rv = flask.send_file('static/index.html', as_attachment=True, attachment_filename=filename)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ac302fb6071a4a580234e3596dac082d6e8d8a1f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 6 | Churn Cumulative: 6 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -0,0 +1,6 @@\n+import io\n+\n+\n+def test_changelog_utf8_compatible():\n+    with io.open(\"CHANGES.rst\", encoding=\"UTF-8\") as f:\n+        f.read()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a5ecdfa7a57bf6bcba7391fc6d356e3f7de33e57", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 55 | Lines Deleted: 24 | Files Changed: 4 | Hunks: 14 | Methods Changed: 7 | Complexity Δ (Sum/Max): 6/6 | Churn Δ: 79 | Churn Cumulative: 9997 | Contributors (this commit): 104 | Commits (past 90d): 37 | Contributors (cumulative): 140 | DMM Complexity: 1.0\n\nDIFF:\n@@ -12,7 +12,7 @@ def test_get_close_db(app):\n     with pytest.raises(sqlite3.ProgrammingError) as e:\n         db.execute('SELECT 1')\n \n-    assert 'closed' in str(e)\n+    assert 'closed' in str(e.value)\n \n \n def test_init_db_command(runner, monkeypatch):\n\n@@ -789,19 +789,38 @@ def _matching_loader_thinks_module_is_package(loader, mod_name):\n         loader.__class__.__name__)\n \n \n-def find_package(import_name):\n-    \"\"\"Finds a package and returns the prefix (or None if the package is\n-    not installed) as well as the folder that contains the package or\n-    module as a tuple.  The package path returned is the module that would\n-    have to be added to the pythonpath in order to make it possible to\n-    import the module.  The prefix is the path below which a UNIX like\n-    folder structure exists (lib, share etc.).\n-    \"\"\"\n-    root_mod_name = import_name.split('.')[0]\n+def _find_package_path(root_mod_name):\n+    \"\"\"Find the path where the module's root exists in\"\"\"\n+    if sys.version_info >= (3, 4):\n+        import importlib.util\n+\n+        try:\n+            spec = importlib.util.find_spec(root_mod_name)\n+            if spec is None:\n+                raise ValueError(\"not found\")\n+        # ImportError: the machinery told us it does not exist\n+        # ValueError:\n+        #    - the module name was invalid\n+        #    - the module name is __main__\n+        #    - *we* raised `ValueError` due to `spec` being `None`\n+        except (ImportError, ValueError):\n+            pass  # handled below\n+        else:\n+            # namespace package\n+            if spec.origin in {\"namespace\", None}:\n+                return os.path.dirname(next(iter(spec.submodule_search_locations)))\n+            # a package (with __init__.py)\n+            elif spec.submodule_search_locations:\n+                return os.path.dirname(os.path.dirname(spec.origin))\n+            # just a normal module\n+            else:\n+                return os.path.dirname(spec.origin)\n+\n+    # we were unable to find the `package_path` using PEP 451 loaders\n     loader = pkgutil.get_loader(root_mod_name)\n-    if loader is None or import_name == '__main__':\n+    if loader is None or root_mod_name == '__main__':\n         # import name is not found, or interactive/main module\n-        package_path = os.getcwd()\n+        return os.getcwd()\n     else:\n         # For .egg, zipimporter does not have get_filename until Python 2.7.\n         if hasattr(loader, 'get_filename'):\n@@ -815,17 +834,29 @@ def find_package(import_name):\n             # Google App Engine's HardenedModulesHook\n             #\n             # Fall back to imports.\n-            __import__(import_name)\n-            filename = sys.modules[import_name].__file__\n+            __import__(root_mod_name)\n+            filename = sys.modules[root_mod_name].__file__\n         package_path = os.path.abspath(os.path.dirname(filename))\n \n         # In case the root module is a package we need to chop of the\n         # rightmost part.  This needs to go through a helper function\n         # because of python 3.3 namespace packages.\n-        if _matching_loader_thinks_module_is_package(\n-                loader, root_mod_name):\n+        if _matching_loader_thinks_module_is_package(loader, root_mod_name):\n             package_path = os.path.dirname(package_path)\n \n+    return package_path\n+\n+\n+def find_package(import_name):\n+    \"\"\"Finds a package and returns the prefix (or None if the package is\n+    not installed) as well as the folder that contains the package or\n+    module as a tuple.  The package path returned is the module that would\n+    have to be added to the pythonpath in order to make it possible to\n+    import the module.  The prefix is the path below which a UNIX like\n+    folder structure exists (lib, share etc.).\n+    \"\"\"\n+    root_mod_name, _, _ = import_name.partition('.')\n+    package_path = _find_package_path(root_mod_name)\n     site_parent, site_folder = os.path.split(package_path)\n     py_prefix = os.path.abspath(sys.prefix)\n     if package_path.startswith(py_prefix):\n\n@@ -1219,17 +1219,17 @@ def test_response_type_errors():\n \n     with pytest.raises(TypeError) as e:\n         c.get('/none')\n-        assert 'returned None' in str(e)\n+        assert 'returned None' in str(e.value)\n \n     with pytest.raises(TypeError) as e:\n         c.get('/small_tuple')\n-        assert 'tuple must have the form' in str(e)\n+        assert 'tuple must have the form' in str(e.value)\n \n     pytest.raises(TypeError, c.get, '/large_tuple')\n \n     with pytest.raises(TypeError) as e:\n         c.get('/bad_type')\n-        assert 'it was a bool' in str(e)\n+        assert 'it was a bool' in str(e.value)\n \n     pytest.raises(TypeError, c.get, '/bad_wsgi')\n \n@@ -1622,7 +1622,7 @@ def test_debug_mode_complains_after_first_request(app, client):\n         @app.route('/foo')\n         def broken():\n             return 'Meh'\n-    assert 'A setup function was called' in str(e)\n+    assert 'A setup function was called' in str(e.value)\n \n     app.debug = False\n \n@@ -1677,9 +1677,9 @@ def test_routing_redirect_debugging(app, client):\n     with client:\n         with pytest.raises(AssertionError) as e:\n             client.post('/foo', data={})\n-        assert 'http://localhost/foo/' in str(e)\n+        assert 'http://localhost/foo/' in str(e.value)\n         assert ('Make sure to directly send '\n-                'your POST-request to this URL') in str(e)\n+                'your POST-request to this URL') in str(e.value)\n \n         rv = client.get('/foo', data={}, follow_redirects=True)\n         assert rv.data == b'success'\n\n@@ -468,8 +468,8 @@ class TestSendfile(object):\n     def test_send_file_object_without_mimetype(self, app, req_ctx):\n         with pytest.raises(ValueError) as excinfo:\n             flask.send_file(StringIO(\"LOL\"))\n-        assert 'Unable to infer MIME-type' in str(excinfo)\n-        assert 'no filename is available' in str(excinfo)\n+        assert 'Unable to infer MIME-type' in str(excinfo.value)\n+        assert 'no filename is available' in str(excinfo.value)\n \n         flask.send_file(StringIO(\"LOL\"), attachment_filename='filename')\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#3aff003c456ecfd329c29432d941714a0b474d53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 3127 | Contributors (this commit): 45 | Commits (past 90d): 10 | Contributors (cumulative): 45 | DMM Complexity: None\n\nDIFF:\n@@ -459,7 +459,7 @@ class FlaskGroup(AppGroup):\n     For information as of why this is useful see :ref:`custom-scripts`.\n \n     :param add_default_commands: if this is True then the default run and\n-        shell commands wil be added.\n+        shell commands will be added.\n     :param add_version_option: adds the ``--version`` option.\n     :param create_app: an optional callback that is passed the script info and\n         returns the loaded app.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#df470aecb96efbcb17ca76e73196c25c38ce6d17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 26 | Lines Deleted: 17 | Files Changed: 4 | Hunks: 10 | Methods Changed: 5 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 43 | Churn Cumulative: 1223 | Contributors (this commit): 11 | Commits (past 90d): 19 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -653,22 +653,26 @@ class Flask(_PackageBoundObject):\n \n     @locked_cached_property\n     def logger(self):\n-        \"\"\"The ``'flask.app'`` logger, a standard Python\n-        :class:`~logging.Logger`.\n+        \"\"\"A standard Python :class:`~logging.Logger` for the app, with\n+        the same name as :attr:`name`.\n \n-        In debug mode, the logger's :attr:`~logging.Logger.level` will be set\n-        to :data:`~logging.DEBUG`.\n+        In debug mode, the logger's :attr:`~logging.Logger.level` will\n+        be set to :data:`~logging.DEBUG`.\n \n-        If there are no handlers configured, a default handler will be added.\n-        See :ref:`logging` for more information.\n+        If there are no handlers configured, a default handler will be\n+        added. See :doc:`/logging` for more information.\n \n-        .. versionchanged:: 1.0\n+        .. versionchanged:: 1.1.0\n+            The logger takes the same name as :attr:`name` rather than\n+            hard-coding ``\"flask.app\"``.\n+\n+        .. versionchanged:: 1.0.0\n             Behavior was simplified. The logger is always named\n-            ``flask.app``. The level is only set during configuration, it\n-            doesn't check ``app.debug`` each time. Only one format is used,\n-            not different ones depending on ``app.debug``. No handlers are\n-            removed, and a handler is only added if no handlers are already\n-            configured.\n+            ``\"flask.app\"``. The level is only set during configuration,\n+            it doesn't check ``app.debug`` each time. Only one format is\n+            used, not different ones depending on ``app.debug``. No\n+            handlers are removed, and a handler is only added if no\n+            handlers are already configured.\n \n         .. versionadded:: 0.3\n         \"\"\"\n\n@@ -57,7 +57,10 @@ default_handler.setFormatter(\n \n \n def create_logger(app):\n-    \"\"\"Get the ``'flask.app'`` logger and configure it if needed.\n+    \"\"\"Get the the Flask apps's logger and configure it if needed.\n+\n+    The logger name will be the same as\n+    :attr:`app.import_name <flask.Flask.name>`.\n \n     When :attr:`~flask.Flask.debug` is enabled, set the logger level to\n     :data:`logging.DEBUG` if it is not set.\n@@ -66,7 +69,7 @@ def create_logger(app):\n     :class:`~logging.StreamHandler` for\n     :func:`~flask.logging.wsgi_errors_stream` with a basic format.\n     \"\"\"\n-    logger = logging.getLogger(\"flask.app\")\n+    logger = logging.getLogger(app.name)\n \n     if app.debug and logger.level == logging.NOTSET:\n         logger.setLevel(logging.DEBUG)\n\n@@ -23,7 +23,7 @@ def reset_logging(pytestconfig):\n     logging.root.handlers = []\n     root_level = logging.root.level\n \n-    logger = logging.getLogger(\"flask.app\")\n+    logger = logging.getLogger(\"flask_test\")\n     logger.handlers = []\n     logger.setLevel(logging.NOTSET)\n \n@@ -42,7 +42,7 @@ def reset_logging(pytestconfig):\n \n \n def test_logger(app):\n-    assert app.logger.name == \"flask.app\"\n+    assert app.logger.name == \"flask_test\"\n     assert app.logger.level == logging.NOTSET\n     assert app.logger.handlers == [default_handler]\n \n\n@@ -430,7 +430,9 @@ def test_template_loader_debugging(test_apps, monkeypatch):\n \n     with app.test_client() as c:\n         monkeypatch.setitem(app.config, \"EXPLAIN_TEMPLATE_LOADING\", True)\n-        monkeypatch.setattr(logging.getLogger(\"flask\"), \"handlers\", [_TestHandler()])\n+        monkeypatch.setattr(\n+            logging.getLogger(\"blueprintapp\"), \"handlers\", [_TestHandler()]\n+        )\n \n         with pytest.raises(TemplateNotFound) as excinfo:\n             c.get(\"/missing\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
