{"custom_id": "fastapi#9cf9e1084dceb45e50946e4130801012ac0c0c59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 439 | Contributors (this commit): 2 | Commits (past 90d): 12 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.101.1\"\n+__version__ = \"0.102.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#415eb1405a5bc93a32e14c15d690517c95d26743", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 441 | Contributors (this commit): 2 | Commits (past 90d): 13 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.102.0\"\n+__version__ = \"0.103.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#37d46e6b6c58c0e38747d91c4a0cdc0ea76c9d40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 458 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -125,6 +125,9 @@ client = TestClient(app)\n \n \n def test_call_api():\n+    response = client.post(\"/examples/\", json={\"data\": \"example1\"})\n+    assert response.status_code == 200, response.text\n+\n     response = client.get(\"/path_examples/foo\")\n     assert response.status_code == 200, response.text\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#9fc33f8565be369ed7b40d8202a8cf4a49c951b6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 12 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 24 | Churn Cumulative: 3235 | Contributors (this commit): 31 | Commits (past 90d): 7 | Contributors (cumulative): 31 | DMM Complexity: None\n\nDIFF:\n@@ -189,20 +189,20 @@ class FastAPI(Starlette):\n                 # contextvars.\n                 # This needs to happen after user middlewares because those create a\n                 # new contextvars context copy by using a new AnyIO task group.\n-                # The initial part of dependencies with yield is executed in the\n-                # FastAPI code, inside all the middlewares, but the teardown part\n-                # (after yield) is executed in the AsyncExitStack in this middleware,\n-                # if the AsyncExitStack lived outside of the custom middlewares and\n-                # contextvars were set in a dependency with yield in that internal\n+                # The initial part of dependencies with 'yield' is executed in the\n+                # FastAPI code, inside all the middlewares. However, the teardown part\n+                # (after 'yield') is executed in the AsyncExitStack in this middleware.\n+                # If the AsyncExitStack lived outside of the custom middlewares and\n+                # contextvars were set in a dependency with 'yield' in that internal\n                 # contextvars context, the values would not be available in the\n-                # outside context of the AsyncExitStack.\n-                # By putting the middleware and the AsyncExitStack here, inside all\n-                # user middlewares, the code before and after yield in dependencies\n-                # with yield is executed in the same contextvars context, so all values\n-                # set in contextvars before yield is still available after yield as\n-                # would be expected.\n+                # outer context of the AsyncExitStack.\n+                # By placing the middleware and the AsyncExitStack here, inside all\n+                # user middlewares, the code before and after 'yield' in dependencies\n+                # with 'yield' is executed in the same contextvars context. Thus, all values\n+                # set in contextvars before 'yield' are still available after 'yield,' as\n+                # expected.\n                 # Additionally, by having this AsyncExitStack here, after the\n-                # ExceptionMiddleware, now dependencies can catch handled exceptions,\n+                # ExceptionMiddleware, dependencies can now catch handled exceptions,\n                 # e.g. HTTPException, to customize the teardown code (e.g. DB session\n                 # rollback).\n                 Middleware(AsyncExitStackMiddleware),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#0242ca756670e66aeb534054c9251176f08876bd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 3 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 82 | Contributors (this commit): 3 | Commits (past 90d): 3 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -6,7 +6,7 @@ from pydantic import BaseModel\n \n class User(BaseModel):\n     id: int\n-    name = \"John Doe\"\n+    name: str = \"John Doe\"\n     signup_ts: Union[datetime, None] = None\n     friends: List[int] = []\n \n\n@@ -5,7 +5,7 @@ from pydantic import BaseModel\n \n class User(BaseModel):\n     id: int\n-    name = \"John Doe\"\n+    name: str = \"John Doe\"\n     signup_ts: datetime | None = None\n     friends: list[int] = []\n \n\n@@ -6,7 +6,7 @@ from pydantic import BaseModel\n \n class User(BaseModel):\n     id: int\n-    name = \"John Doe\"\n+    name: str = \"John Doe\"\n     signup_ts: Union[datetime, None] = None\n     friends: list[int] = []\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#bfde8f3ef20dc338bbce8a0ff0f4b441c54d5b64", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 443 | Contributors (this commit): 2 | Commits (past 90d): 13 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.103.0\"\n+__version__ = \"0.103.1\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#74cf05117b21b90ac4da40bba8dad527220c465f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 519 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -9,7 +9,7 @@ import httpx\n from github import Github\n from pydantic import BaseModel, BaseSettings, SecretStr\n \n-awaiting_label = \"awaiting review\"\n+awaiting_label = \"awaiting-review\"\n lang_all_label = \"lang-all\"\n approved_label = \"approved-2\"\n translations_path = Path(__file__).parent / \"translations.yml\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#bc935e08b6d9069280ed34625930a1461235db9e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 57 | Lines Deleted: 297 | Files Changed: 17 | Hunks: 66 | Methods Changed: 20 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 354 | Churn Cumulative: 6947 | Contributors (this commit): 17 | Commits (past 90d): 65 | Contributors (cumulative): 43 | DMM Complexity: 0.0\n\nDIFF:\n@@ -58,8 +58,14 @@ if PYDANTIC_V2:\n     from pydantic_core import CoreSchema as CoreSchema\n     from pydantic_core import PydanticUndefined, PydanticUndefinedType\n     from pydantic_core import Url as Url\n+\n+    try:\n         from pydantic_core.core_schema import (\n-        general_plain_validator_function as general_plain_validator_function,\n+            with_info_plain_validator_function as with_info_plain_validator_function,\n+        )\n+    except ImportError:  # pragma: no cover\n+        from pydantic_core.core_schema import (\n+            general_plain_validator_function as with_info_plain_validator_function,  # noqa: F401\n         )\n \n     Required = PydanticUndefined\n@@ -345,7 +351,7 @@ else:\n     class PydanticSchemaGenerationError(Exception):  # type: ignore[no-redef]\n         pass\n \n-    def general_plain_validator_function(  # type: ignore[misc]\n+    def with_info_plain_validator_function(  # type: ignore[misc]\n         function: Callable[..., Any],\n         *,\n         ref: Union[str, None] = None,\n\n@@ -5,7 +5,7 @@ from fastapi._compat import (\n     CoreSchema,\n     GetJsonSchemaHandler,\n     JsonSchemaValue,\n-    general_plain_validator_function,\n+    with_info_plain_validator_function,\n )\n from starlette.datastructures import URL as URL  # noqa: F401\n from starlette.datastructures import Address as Address  # noqa: F401\n@@ -49,7 +49,7 @@ class UploadFile(StarletteUploadFile):\n     def __get_pydantic_core_schema__(\n         cls, source: Type[Any], handler: Callable[[Any], CoreSchema]\n     ) -> CoreSchema:\n-        return general_plain_validator_function(cls._validate)\n+        return with_info_plain_validator_function(cls._validate)\n \n \n class DefaultPlaceholder:\n\n@@ -7,7 +7,7 @@ from fastapi._compat import (\n     GetJsonSchemaHandler,\n     JsonSchemaValue,\n     _model_rebuild,\n-    general_plain_validator_function,\n+    with_info_plain_validator_function,\n )\n from fastapi.logger import logger\n from pydantic import AnyUrl, BaseModel, Field\n@@ -52,7 +52,7 @@ except ImportError:  # pragma: no cover\n         def __get_pydantic_core_schema__(\n             cls, source: Type[Any], handler: Callable[[Any], CoreSchema]\n         ) -> CoreSchema:\n-            return general_plain_validator_function(cls._validate)\n+            return with_info_plain_validator_function(cls._validate)\n \n \n class Contact(BaseModel):\n\n@@ -24,7 +24,7 @@ def test_model_field_default_required():\n \n \n @needs_pydanticv1\n-def test_upload_file_dummy_general_plain_validator_function():\n+def test_upload_file_dummy_with_info_plain_validator_function():\n     # For coverage\n     assert UploadFile.__get_pydantic_core_schema__(str, lambda x: None) == {}\n \n\n@@ -12,7 +12,7 @@ from .utils import needs_pydanticv2\n \n @pytest.fixture(name=\"client\")\n def get_client():\n-    from pydantic import BaseModel, FieldValidationInfo, field_validator\n+    from pydantic import BaseModel, ValidationInfo, field_validator\n \n     app = FastAPI()\n \n@@ -28,7 +28,7 @@ def get_client():\n         foo: ModelB\n \n         @field_validator(\"name\")\n-        def lower_username(cls, name: str, info: FieldValidationInfo):\n+        def lower_username(cls, name: str, info: ValidationInfo):\n             if not name.endswith(\"A\"):\n                 raise ValueError(\"name must end in A\")\n             return name\n\n@@ -4,19 +4,23 @@ from fastapi import FastAPI\n from fastapi.testclient import TestClient\n from pydantic import BaseModel\n \n-from .utils import needs_pydanticv2\n+from .utils import PYDANTIC_V2, needs_pydanticv2\n \n \n class SubItem(BaseModel):\n     subname: str\n     sub_description: Optional[str] = None\n     tags: List[str] = []\n+    if PYDANTIC_V2:\n+        model_config = {\"json_schema_serialization_defaults_required\": True}\n \n \n class Item(BaseModel):\n     name: str\n     description: Optional[str] = None\n     sub: Optional[SubItem] = None\n+    if PYDANTIC_V2:\n+        model_config = {\"json_schema_serialization_defaults_required\": True}\n \n \n def get_app_client(separate_input_output_schemas: bool = True) -> TestClient:\n\n@@ -52,9 +52,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"Successful Response\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -86,9 +84,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"Successful Response\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -116,7 +112,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -126,35 +122,9 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"Item-Input\": {\n-                    \"title\": \"Item\",\n+                \"Item\": {\n                     \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\n-                            \"title\": \"Name\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"description\": {\n-                            \"title\": \"Description\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"price\": {\n-                            \"title\": \"Price\",\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n-                \"Item-Output\": {\n                     \"title\": \"Item\",\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n                     \"properties\": {\n                         \"name\": {\n                             \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n\n@@ -55,9 +55,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"Successful Response\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -89,9 +87,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"Successful Response\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -119,7 +115,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -129,35 +125,9 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"Item-Input\": {\n-                    \"title\": \"Item\",\n+                \"Item\": {\n                     \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\n-                            \"title\": \"Name\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"description\": {\n-                            \"title\": \"Description\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"price\": {\n-                            \"title\": \"Price\",\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n-                \"Item-Output\": {\n                     \"title\": \"Item\",\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n                     \"properties\": {\n                         \"name\": {\n                             \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n\n@@ -55,9 +55,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"Successful Response\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -89,9 +87,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"Successful Response\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -119,7 +115,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -129,35 +125,9 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"Item-Input\": {\n-                    \"title\": \"Item\",\n+                \"Item\": {\n                     \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\n-                            \"title\": \"Name\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"description\": {\n-                            \"title\": \"Description\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"price\": {\n-                            \"title\": \"Price\",\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n-                \"Item-Output\": {\n                     \"title\": \"Item\",\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n                     \"properties\": {\n                         \"name\": {\n                             \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n\n@@ -79,9 +79,7 @@ def test_openapi_schema():\n                                 \"schema\": {\n                                     \"title\": \"Items\",\n                                     \"type\": \"array\",\n-                                    \"items\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Input\"\n-                                    },\n+                                    \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n                                 }\n                             }\n                         },\n@@ -136,14 +134,14 @@ def test_openapi_schema():\n             \"schemas\": {\n                 \"Author\": {\n                     \"title\": \"Author\",\n-                    \"required\": [\"name\", \"items\"],\n+                    \"required\": [\"name\"],\n                     \"type\": \"object\",\n                     \"properties\": {\n                         \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n                         \"items\": {\n                             \"title\": \"Items\",\n                             \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/Item-Output\"},\n+                            \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n                         },\n                     },\n                 },\n@@ -158,27 +156,15 @@ def test_openapi_schema():\n                         }\n                     },\n                 },\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\"],\n                     \"type\": \"object\",\n                     \"properties\": {\n                         \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n                         \"description\": {\n-                            \"title\": \"Description\",\n                             \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                    },\n-                },\n-                \"Item-Output\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"description\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": {\n                             \"title\": \"Description\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n                         },\n                     },\n                 },\n\n@@ -34,9 +34,7 @@ def test_openapi_schema():\n                             \"description\": \"Successful Response\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -57,7 +55,7 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -67,7 +65,7 @@ def test_openapi_schema():\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -91,30 +89,6 @@ def test_openapi_schema():\n                         },\n                     },\n                 },\n-                \"Item-Output\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": {\n-                            \"title\": \"Description\",\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": {\n-                            \"title\": \"Tax\",\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"uniqueItems\": True,\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n                 \"ValidationError\": {\n                     \"title\": \"ValidationError\",\n                     \"required\": [\"loc\", \"msg\", \"type\"],\n\n@@ -34,9 +34,7 @@ def test_openapi_schema():\n                             \"description\": \"The created item\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -57,7 +55,7 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -67,7 +65,7 @@ def test_openapi_schema():\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -91,30 +89,6 @@ def test_openapi_schema():\n                         },\n                     },\n                 },\n-                \"Item-Output\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": {\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Description\",\n-                        },\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": {\n-                            \"title\": \"Tax\",\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"uniqueItems\": True,\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n                 \"ValidationError\": {\n                     \"title\": \"ValidationError\",\n                     \"required\": [\"loc\", \"msg\", \"type\"],\n\n@@ -41,9 +41,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"The created item\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -64,7 +62,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -74,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -98,30 +96,6 @@ def test_openapi_schema(client: TestClient):\n                         },\n                     },\n                 },\n-                \"Item-Output\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": {\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Description\",\n-                        },\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": {\n-                            \"title\": \"Tax\",\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"uniqueItems\": True,\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n                 \"ValidationError\": {\n                     \"title\": \"ValidationError\",\n                     \"required\": [\"loc\", \"msg\", \"type\"],\n\n@@ -41,9 +41,7 @@ def test_openapi_schema(client: TestClient):\n                             \"description\": \"The created item\",\n                             \"content\": {\n                                 \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/Item-Output\"\n-                                    }\n+                                    \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                                 }\n                             },\n                         },\n@@ -64,7 +62,7 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -74,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n         },\n         \"components\": {\n             \"schemas\": {\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"title\": \"Item\",\n                     \"required\": [\"name\", \"price\"],\n                     \"type\": \"object\",\n@@ -98,30 +96,6 @@ def test_openapi_schema(client: TestClient):\n                         },\n                     },\n                 },\n-                \"Item-Output\": {\n-                    \"title\": \"Item\",\n-                    \"required\": [\"name\", \"description\", \"price\", \"tax\", \"tags\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n-                        \"description\": {\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Description\",\n-                        },\n-                        \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n-                        \"tax\": {\n-                            \"title\": \"Tax\",\n-                            \"anyOf\": [{\"type\": \"number\"}, {\"type\": \"null\"}],\n-                        },\n-                        \"tags\": {\n-                            \"title\": \"Tags\",\n-                            \"uniqueItems\": True,\n-                            \"type\": \"array\",\n-                            \"items\": {\"type\": \"string\"},\n-                            \"default\": [],\n-                        },\n-                    },\n-                },\n                 \"ValidationError\": {\n                     \"title\": \"ValidationError\",\n                     \"required\": [\"loc\", \"msg\", \"type\"],\n\n@@ -48,9 +48,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"items\": {\n-                                            \"$ref\": \"#/components/schemas/Item-Output\"\n-                                        },\n+                                        \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n                                         \"type\": \"array\",\n                                         \"title\": \"Response Read Items Items  Get\",\n                                     }\n@@ -65,7 +63,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -102,7 +100,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"type\": \"object\",\n                     \"title\": \"HTTPValidationError\",\n                 },\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"properties\": {\n                         \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n                         \"description\": {\n@@ -114,18 +112,6 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"required\": [\"name\"],\n                     \"title\": \"Item\",\n                 },\n-                \"Item-Output\": {\n-                    \"properties\": {\n-                        \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n-                        \"description\": {\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Description\",\n-                        },\n-                    },\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"description\"],\n-                    \"title\": \"Item\",\n-                },\n                 \"ValidationError\": {\n                     \"properties\": {\n                         \"loc\": {\n\n@@ -51,9 +51,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"items\": {\n-                                            \"$ref\": \"#/components/schemas/Item-Output\"\n-                                        },\n+                                        \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n                                         \"type\": \"array\",\n                                         \"title\": \"Response Read Items Items  Get\",\n                                     }\n@@ -68,7 +66,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -105,7 +103,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"type\": \"object\",\n                     \"title\": \"HTTPValidationError\",\n                 },\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"properties\": {\n                         \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n                         \"description\": {\n@@ -117,18 +115,6 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"required\": [\"name\"],\n                     \"title\": \"Item\",\n                 },\n-                \"Item-Output\": {\n-                    \"properties\": {\n-                        \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n-                        \"description\": {\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Description\",\n-                        },\n-                    },\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"description\"],\n-                    \"title\": \"Item\",\n-                },\n                 \"ValidationError\": {\n                     \"properties\": {\n                         \"loc\": {\n\n@@ -51,9 +51,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                             \"content\": {\n                                 \"application/json\": {\n                                     \"schema\": {\n-                                        \"items\": {\n-                                            \"$ref\": \"#/components/schemas/Item-Output\"\n-                                        },\n+                                        \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n                                         \"type\": \"array\",\n                                         \"title\": \"Response Read Items Items  Get\",\n                                     }\n@@ -68,7 +66,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item-Input\"}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                             }\n                         },\n                         \"required\": True,\n@@ -105,7 +103,7 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"type\": \"object\",\n                     \"title\": \"HTTPValidationError\",\n                 },\n-                \"Item-Input\": {\n+                \"Item\": {\n                     \"properties\": {\n                         \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n                         \"description\": {\n@@ -117,18 +115,6 @@ def test_openapi_schema(client: TestClient) -> None:\n                     \"required\": [\"name\"],\n                     \"title\": \"Item\",\n                 },\n-                \"Item-Output\": {\n-                    \"properties\": {\n-                        \"name\": {\"type\": \"string\", \"title\": \"Name\"},\n-                        \"description\": {\n-                            \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                            \"title\": \"Description\",\n-                        },\n-                    },\n-                    \"type\": \"object\",\n-                    \"required\": [\"name\", \"description\"],\n-                    \"title\": \"Item\",\n-                },\n                 \"ValidationError\": {\n                     \"properties\": {\n                         \"loc\": {\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#1bf5e7a10e33d6f65e0f701ec271785fbc9b463c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 445 | Contributors (this commit): 2 | Commits (past 90d): 10 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.103.1\"\n+__version__ = \"0.103.2\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#05ca41cfd1c56157cf5bd2b3c1958263bdd71611", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 10858 | Lines Deleted: 836 | Files Changed: 22 | Hunks: 226 | Methods Changed: 132 | Complexity Δ (Sum/Max): 6/4 | Churn Δ: 11694 | Churn Cumulative: 27354 | Contributors (this commit): 107 | Commits (past 90d): 30 | Contributors (cumulative): 205 | DMM Complexity: 0.9645473883242732\n\nDIFF:\n@@ -43,57 +43,792 @@ from starlette.requests import Request\n from starlette.responses import HTMLResponse, JSONResponse, Response\n from starlette.routing import BaseRoute\n from starlette.types import ASGIApp, Lifespan, Receive, Scope, Send\n+from typing_extensions import Annotated, Doc, deprecated  # type: ignore [attr-defined]\n \n AppType = TypeVar(\"AppType\", bound=\"FastAPI\")\n \n \n class FastAPI(Starlette):\n+    \"\"\"\n+    `FastAPI` app class, the main entrypoint to use FastAPI.\n+\n+    Read more in the\n+    [FastAPI docs for First Steps](https://fastapi.tiangolo.com/tutorial/first-steps/).\n+\n+    ## Example\n+\n+    ```python\n+    from fastapi import FastAPI\n+\n+    app = FastAPI()\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self: AppType,\n         *,\n-        debug: bool = False,\n-        routes: Optional[List[BaseRoute]] = None,\n-        title: str = \"FastAPI\",\n-        summary: Optional[str] = None,\n-        description: str = \"\",\n-        version: str = \"0.1.0\",\n-        openapi_url: Optional[str] = \"/openapi.json\",\n-        openapi_tags: Optional[List[Dict[str, Any]]] = None,\n-        servers: Optional[List[Dict[str, Union[str, Any]]]] = None,\n-        dependencies: Optional[Sequence[Depends]] = None,\n-        default_response_class: Type[Response] = Default(JSONResponse),\n-        redirect_slashes: bool = True,\n-        docs_url: Optional[str] = \"/docs\",\n-        redoc_url: Optional[str] = \"/redoc\",\n-        swagger_ui_oauth2_redirect_url: Optional[str] = \"/docs/oauth2-redirect\",\n-        swagger_ui_init_oauth: Optional[Dict[str, Any]] = None,\n-        middleware: Optional[Sequence[Middleware]] = None,\n-        exception_handlers: Optional[\n+        debug: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Boolean indicating if debug tracebacks should be returned on server\n+                errors.\n+\n+                Read more in the\n+                [Starlette docs for Applications](https://www.starlette.io/applications/#instantiating-the-application).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        routes: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                **Note**: you probably shouldn't use this parameter, it is inherited\n+                from Starlette and supported for compatibility.\n+\n+                In FastAPI, you normally would use the *path operation* decorators,\n+                like:\n+\n+                * `app.get()`\n+                * `app.post()`\n+                * etc.\n+\n+                ---\n+\n+                A list of routes to serve incoming HTTP and WebSocket requests.\n+                \"\"\"\n+            ),\n+            deprecated(\n+                \"\"\"\n+                You normally wouldn't use this parameter with FastAPI, it is inherited\n+                from Starlette and supported for compatibility.\n+\n+                In FastAPI, you normally would use the *path operation methods*,\n+                like `app.get()`, `app.post()`, etc.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        title: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The title of the API.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(title=\"ChimichangApp\")\n+                ```\n+                \"\"\"\n+            ),\n+        ] = \"FastAPI\",\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A short summary of the API.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(summary=\"Deadpond's favorite app. Nuff said.\")\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            str,\n+            Doc(\n+                '''\n+                A description of the API. Supports Markdown (using\n+                [CommonMark syntax](https://commonmark.org/)).\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(\n+                    description=\"\"\"\n+                                ChimichangApp API helps you do awesome stuff. 🚀\n+\n+                                ## Items\n+\n+                                You can **read items**.\n+\n+                                ## Users\n+\n+                                You will be able to:\n+\n+                                * **Create users** (_not implemented_).\n+                                * **Read users** (_not implemented_).\n+\n+                                \"\"\"\n+                )\n+                ```\n+                '''\n+            ),\n+        ] = \"\",\n+        version: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The version of the API.\n+\n+                **Note** This is the version of your application, not the version of\n+                the OpenAPI specification nor the version of FastAPI being used.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(version=\"0.0.1\")\n+                ```\n+                \"\"\"\n+            ),\n+        ] = \"0.1.0\",\n+        openapi_url: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                The URL where the OpenAPI schema will be served from.\n+\n+                If you set it to `None`, no OpenAPI schema will be served publicly, and\n+                the default automatic endpoints `/docs` and `/redoc` will also be\n+                disabled.\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#openapi-url).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(openapi_url=\"/api/v1/openapi.json\")\n+                ```\n+                \"\"\"\n+            ),\n+        ] = \"/openapi.json\",\n+        openapi_tags: Annotated[\n+            Optional[List[Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags used by OpenAPI, these are the same `tags` you can set\n+                in the *path operations*, like:\n+\n+                * `@app.get(\"/users/\", tags=[\"users\"])`\n+                * `@app.get(\"/items/\", tags=[\"items\"])`\n+\n+                The order of the tags can be used to specify the order shown in\n+                tools like Swagger UI, used in the automatic path `/docs`.\n+\n+                It's not required to specify all the tags used.\n+\n+                The tags that are not declared MAY be organized randomly or based\n+                on the tools' logic. Each tag name in the list MUST be unique.\n+\n+                The value of each item is a `dict` containing:\n+\n+                * `name`: The name of the tag.\n+                * `description`: A short description of the tag.\n+                    [CommonMark syntax](https://commonmark.org/) MAY be used for rich\n+                    text representation.\n+                * `externalDocs`: Additional external documentation for this tag. If\n+                    provided, it would contain a `dict` with:\n+                    * `description`: A short description of the target documentation.\n+                        [CommonMark syntax](https://commonmark.org/) MAY be used for\n+                        rich text representation.\n+                    * `url`: The URL for the target documentation. Value MUST be in\n+                        the form of a URL.\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-tags).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                tags_metadata = [\n+                    {\n+                        \"name\": \"users\",\n+                        \"description\": \"Operations with users. The **login** logic is also here.\",\n+                    },\n+                    {\n+                        \"name\": \"items\",\n+                        \"description\": \"Manage items. So _fancy_ they have their own docs.\",\n+                        \"externalDocs\": {\n+                            \"description\": \"Items external docs\",\n+                            \"url\": \"https://fastapi.tiangolo.com/\",\n+                        },\n+                    },\n+                ]\n+\n+                app = FastAPI(openapi_tags=tags_metadata)\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        servers: Annotated[\n+            Optional[List[Dict[str, Union[str, Any]]]],\n+            Doc(\n+                \"\"\"\n+                A `list` of `dict`s with connectivity information to a target server.\n+\n+                You would use it, for example, if your application is served from\n+                different domains and you want to use the same Swagger UI in the\n+                browser to interact with each of them (instead of having multiple\n+                browser tabs open). Or if you want to leave fixed the possible URLs.\n+\n+                If the servers `list` is not provided, or is an empty `list`, the\n+                default value would be a a `dict` with a `url` value of `/`.\n+\n+                Each item in the `list` is a `dict` containing:\n+\n+                * `url`: A URL to the target host. This URL supports Server Variables\n+                and MAY be relative, to indicate that the host location is relative\n+                to the location where the OpenAPI document is being served. Variable\n+                substitutions will be made when a variable is named in `{`brackets`}`.\n+                * `description`: An optional string describing the host designated by\n+                the URL. [CommonMark syntax](https://commonmark.org/) MAY be used for\n+                rich text representation.\n+                * `variables`: A `dict` between a variable name and its value. The value\n+                    is used for substitution in the server's URL template.\n+\n+                Read more in the\n+                [FastAPI docs for Behind a Proxy](https://fastapi.tiangolo.com/advanced/behind-a-proxy/#additional-servers).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(\n+                    servers=[\n+                        {\"url\": \"https://stag.example.com\", \"description\": \"Staging environment\"},\n+                        {\"url\": \"https://prod.example.com\", \"description\": \"Production environment\"},\n+                    ]\n+                )\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of global dependencies, they will be applied to each\n+                *path operation*, including in sub-routers.\n+\n+                Read more about it in the\n+                [FastAPI docs for Global Dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/global-dependencies/).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import Depends, FastAPI\n+\n+                from .dependencies import func_dep_1, func_dep_2\n+\n+                app = FastAPI(dependencies=[Depends(func_dep_1), Depends(func_dep_2)])\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        default_response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                The default response class to be used.\n+\n+                Read more in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+                from fastapi.responses import ORJSONResponse\n+\n+                app = FastAPI(default_response_class=ORJSONResponse)\n+                ```\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        redirect_slashes: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Whether to detect and redirect slashes in URLs when the client doesn't\n+                use the same format.\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(redirect_slashes=True)  # the default\n+\n+                @app.get(\"/items/\")\n+                async def read_items():\n+                    return [{\"item_id\": \"Foo\"}]\n+                ```\n+\n+                With this app, if a client goes to `/items` (without a trailing slash),\n+                they will be automatically redirected with an HTTP status code of 307\n+                to `/items/`.\n+                \"\"\"\n+            ),\n+        ] = True,\n+        docs_url: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                The path to the automatic interactive API documentation.\n+                It is handled in the browser by Swagger UI.\n+\n+                The default URL is `/docs`. You can disable it by setting it to `None`.\n+\n+                If `openapi_url` is set to `None`, this will be automatically disabled.\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#docs-urls).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(docs_url=\"/documentation\", redoc_url=None)\n+                ```\n+                \"\"\"\n+            ),\n+        ] = \"/docs\",\n+        redoc_url: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                The path to the alternative automatic interactive API documentation\n+                provided by ReDoc.\n+\n+                The default URL is `/redoc`. You can disable it by setting it to `None`.\n+\n+                If `openapi_url` is set to `None`, this will be automatically disabled.\n+\n+                Read more in the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#docs-urls).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(docs_url=\"/documentation\", redoc_url=\"redocumentation\")\n+                ```\n+                \"\"\"\n+            ),\n+        ] = \"/redoc\",\n+        swagger_ui_oauth2_redirect_url: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                The OAuth2 redirect endpoint for the Swagger UI.\n+\n+                By default it is `/docs/oauth2-redirect`.\n+\n+                This is only used if you use OAuth2 (with the \"Authorize\" button)\n+                with Swagger UI.\n+                \"\"\"\n+            ),\n+        ] = \"/docs/oauth2-redirect\",\n+        swagger_ui_init_oauth: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                OAuth2 configuration for the Swagger UI, by default shown at `/docs`.\n+\n+                Read more about the available configuration options in the\n+                [Swagger UI docs](https://swagger.io/docs/open-source-tools/swagger-ui/usage/oauth2/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        middleware: Annotated[\n+            Optional[Sequence[Middleware]],\n+            Doc(\n+                \"\"\"\n+                List of middleware to be added when creating the application.\n+\n+                In FastAPI you would normally do this with `app.add_middleware()`\n+                instead.\n+\n+                Read more in the\n+                [FastAPI docs for Middleware](https://fastapi.tiangolo.com/tutorial/middleware/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        exception_handlers: Annotated[\n+            Optional[\n                 Dict[\n                     Union[int, Type[Exception]],\n                     Callable[[Request, Any], Coroutine[Any, Any, Response]],\n                 ]\n-        ] = None,\n-        on_startup: Optional[Sequence[Callable[[], Any]]] = None,\n-        on_shutdown: Optional[Sequence[Callable[[], Any]]] = None,\n-        lifespan: Optional[Lifespan[AppType]] = None,\n-        terms_of_service: Optional[str] = None,\n-        contact: Optional[Dict[str, Union[str, Any]]] = None,\n-        license_info: Optional[Dict[str, Union[str, Any]]] = None,\n-        openapi_prefix: str = \"\",\n-        root_path: str = \"\",\n-        root_path_in_servers: bool = True,\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        webhooks: Optional[routing.APIRouter] = None,\n-        deprecated: Optional[bool] = None,\n-        include_in_schema: bool = True,\n-        swagger_ui_parameters: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[routing.APIRoute], str] = Default(\n-            generate_unique_id\n+            ],\n+            Doc(\n+                \"\"\"\n+                A dictionary with handlers for exceptions.\n+\n+                In FastAPI, you would normally use the decorator\n+                `@app.exception_handler()`.\n+\n+                Read more in the\n+                [FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).\n+                \"\"\"\n             ),\n-        separate_input_output_schemas: bool = True,\n-        **extra: Any,\n+        ] = None,\n+        on_startup: Annotated[\n+            Optional[Sequence[Callable[[], Any]]],\n+            Doc(\n+                \"\"\"\n+                A list of startup event handler functions.\n+\n+                You should instead use the `lifespan` handlers.\n+\n+                Read more in the [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        on_shutdown: Annotated[\n+            Optional[Sequence[Callable[[], Any]]],\n+            Doc(\n+                \"\"\"\n+                A list of shutdown event handler functions.\n+\n+                You should instead use the `lifespan` handlers.\n+\n+                Read more in the\n+                [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        lifespan: Annotated[\n+            Optional[Lifespan[AppType]],\n+            Doc(\n+                \"\"\"\n+                A `Lifespan` context manager handler. This replaces `startup` and\n+                `shutdown` functions with a single context manager.\n+\n+                Read more in the\n+                [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        terms_of_service: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A URL to the Terms of Service for your API.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more at the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n+\n+                **Example**\n+\n+                ```python\n+                app = FastAPI(terms_of_service=\"http://example.com/terms/\")\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        contact: Annotated[\n+            Optional[Dict[str, Union[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                A dictionary with the contact information for the exposed API.\n+\n+                It can contain several fields.\n+\n+                * `name`: (`str`) The name of the contact person/organization.\n+                * `url`: (`str`) A URL pointing to the contact information. MUST be in\n+                    the format of a URL.\n+                * `email`: (`str`) The email address of the contact person/organization.\n+                    MUST be in the format of an email address.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more at the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n+\n+                **Example**\n+\n+                ```python\n+                app = FastAPI(\n+                    contact={\n+                        \"name\": \"Deadpoolio the Amazing\",\n+                        \"url\": \"http://x-force.example.com/contact/\",\n+                        \"email\": \"dp@x-force.example.com\",\n+                    }\n+                )\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        license_info: Annotated[\n+            Optional[Dict[str, Union[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                A dictionary with the license information for the exposed API.\n+\n+                It can contain several fields.\n+\n+                * `name`: (`str`) **REQUIRED** (if a `license_info` is set). The\n+                    license name used for the API.\n+                * `identifier`: (`str`) An [SPDX](https://spdx.dev/) license expression\n+                    for the API. The `identifier` field is mutually exclusive of the `url`\n+                    field. Available since OpenAPI 3.1.0, FastAPI 0.99.0.\n+                * `url`: (`str`) A URL to the license used for the API. This MUST be\n+                    the format of a URL.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more at the\n+                [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).\n+\n+                **Example**\n+\n+                ```python\n+                app = FastAPI(\n+                    license_info={\n+                        \"name\": \"Apache 2.0\",\n+                        \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\",\n+                    }\n+                )\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_prefix: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                A URL prefix for the OpenAPI URL.\n+                \"\"\"\n+            ),\n+            deprecated(\n+                \"\"\"\n+                \"openapi_prefix\" has been deprecated in favor of \"root_path\", which\n+                follows more closely the ASGI standard, is simpler, and more\n+                automatic.\n+                \"\"\"\n+            ),\n+        ] = \"\",\n+        root_path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                A path prefix handled by a proxy that is not seen by the application\n+                but is seen by external clients, which affects things like Swagger UI.\n+\n+                Read more about it at the\n+                [FastAPI docs for Behind a Proxy](https://fastapi.tiangolo.com/advanced/behind-a-proxy/).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(root_path=\"/api/v1\")\n+                ```\n+                \"\"\"\n+            ),\n+        ] = \"\",\n+        root_path_in_servers: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                To disable automatically generating the URLs in the `servers` field\n+                in the autogenerated OpenAPI using the `root_path`.\n+\n+                Read more about it in the\n+                [FastAPI docs for Behind a Proxy](https://fastapi.tiangolo.com/advanced/behind-a-proxy/#disable-automatic-server-from-root_path).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI(root_path_in_servers=False)\n+                ```\n+                \"\"\"\n+            ),\n+        ] = True,\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses to be shown in OpenAPI.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\n+\n+                And in the\n+                [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                OpenAPI callbacks that should apply to all *path operations*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        webhooks: Annotated[\n+            Optional[routing.APIRouter],\n+            Doc(\n+                \"\"\"\n+                Add OpenAPI webhooks. This is similar to `callbacks` but it doesn't\n+                depend on specific *path operations*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                **Note**: This is available since OpenAPI 3.1.0, FastAPI 0.99.0.\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Webhooks](https://fastapi.tiangolo.com/advanced/openapi-webhooks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark all *path operations* as deprecated. You probably don't need it,\n+                but it's available.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                To include (or not) all the *path operations* in the generated OpenAPI.\n+                You probably don't need it, but it's available.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        swagger_ui_parameters: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Parameters to configure Swagger UI, the autogenerated interactive API\n+                documentation (by default at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[routing.APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n+        separate_input_output_schemas: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Whether to generate separate OpenAPI schemas for request body and\n+                response body when the results would be more precise.\n+\n+                This is particularly useful when automatically generating clients.\n+\n+                For example, if you have a model like:\n+\n+                ```python\n+                from pydantic import BaseModel\n+\n+                class Item(BaseModel):\n+                    name: str\n+                    tags: list[str] = []\n+                ```\n+\n+                When `Item` is used for input, a request body, `tags` is not required,\n+                the client doesn't have to provide it.\n+\n+                But when using `Item` for output, for a response body, `tags` is always\n+                available because it has a default value, even if it's just an empty\n+                list. So, the client should be able to always expect it.\n+\n+                In this case, there would be two different schemas, one for input and\n+                another one for output.\n+                \"\"\"\n+            ),\n+        ] = True,\n+        **extra: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                Extra keyword arguments to be stored in the app, not used by FastAPI\n+                anywhere.\n+                \"\"\"\n+            ),\n+        ],\n     ) -> None:\n         self.debug = debug\n         self.title = title\n@@ -114,7 +849,37 @@ class FastAPI(Starlette):\n         self.servers = servers or []\n         self.separate_input_output_schemas = separate_input_output_schemas\n         self.extra = extra\n-        self.openapi_version = \"3.1.0\"\n+        self.openapi_version: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The version string of OpenAPI.\n+\n+                FastAPI will generate OpenAPI version 3.1.0, and will output that as\n+                the OpenAPI version. But some tools, even though they might be\n+                compatible with OpenAPI 3.1.0, might not recognize it as a valid.\n+\n+                So you could override this value to trick those tools into using\n+                the generated OpenAPI. Have in mind that this is a hack. But if you\n+                avoid using features added in OpenAPI 3.1.0, it might work for your\n+                use case.\n+\n+                This is not passed as a parameter to the `FastAPI` class to avoid\n+                giving the false idea that FastAPI would generate a different OpenAPI\n+                schema. It is only available as an attribute.\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                app = FastAPI()\n+\n+                app.openapi_version = \"3.0.2\"\n+                ```\n+                \"\"\"\n+            ),\n+        ] = \"3.1.0\"\n         self.openapi_schema: Optional[Dict[str, Any]] = None\n         if self.openapi_url:\n             assert self.title, \"A title must be provided for OpenAPI, e.g.: 'My API'\"\n@@ -127,10 +892,55 @@ class FastAPI(Starlette):\n                 \"automatic. Check the docs at \"\n                 \"https://fastapi.tiangolo.com/advanced/sub-applications/\"\n             )\n-        self.webhooks = webhooks or routing.APIRouter()\n+        self.webhooks: Annotated[\n+            routing.APIRouter,\n+            Doc(\n+                \"\"\"\n+                The `app.webhooks` attribute is an `APIRouter` with the *path\n+                operations* that will be used just for documentation of webhooks.\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Webhooks](https://fastapi.tiangolo.com/advanced/openapi-webhooks/).\n+                \"\"\"\n+            ),\n+        ] = (\n+            webhooks or routing.APIRouter()\n+        )\n         self.root_path = root_path or openapi_prefix\n-        self.state: State = State()\n-        self.dependency_overrides: Dict[Callable[..., Any], Callable[..., Any]] = {}\n+        self.state: Annotated[\n+            State,\n+            Doc(\n+                \"\"\"\n+                A state object for the application. This is the same object for the\n+                entire application, it doesn't change from request to request.\n+\n+                You normally woudln't use this in FastAPI, for most of the cases you\n+                would instead use FastAPI dependencies.\n+\n+                This is simply inherited from Starlette.\n+\n+                Read more about it in the\n+                [Starlette docs for Applications](https://www.starlette.io/applications/#storing-state-on-the-app-instance).\n+                \"\"\"\n+            ),\n+        ] = State()\n+        self.dependency_overrides: Annotated[\n+            Dict[Callable[..., Any], Callable[..., Any]],\n+            Doc(\n+                \"\"\"\n+                A dictionary with overrides for the dependencies.\n+\n+                Each key is the original dependency callable, and the value is the\n+                actual dependency that should be called.\n+\n+                This is for testing, to replace expensive dependencies with testing\n+                versions.\n+\n+                Read more about it in the\n+                [FastAPI docs for Testing Dependencies with Overrides](https://fastapi.tiangolo.com/advanced/testing-dependencies/).\n+                \"\"\"\n+            ),\n+        ] = {}\n         self.router: routing.APIRouter = routing.APIRouter(\n             routes=routes,\n             redirect_slashes=redirect_slashes,\n@@ -215,6 +1025,19 @@ class FastAPI(Starlette):\n         return app\n \n     def openapi(self) -> Dict[str, Any]:\n+        \"\"\"\n+        Generate the OpenAPI schema of the application. This is called by FastAPI\n+        internally.\n+\n+        The first time it is called it stores the result in the attribute\n+        `app.openapi_schema`, and next times it is called, it just returns that same\n+        result. To avoid the cost of generating the schema every time.\n+\n+        If you need to modify the generated OpenAPI schema, you could modify it.\n+\n+        Read more in the\n+        [FastAPI docs for OpenAPI](https://fastapi.tiangolo.com/how-to/extending-openapi/).\n+        \"\"\"\n         if not self.openapi_schema:\n             self.openapi_schema = get_openapi(\n                 title=self.title,\n@@ -427,11 +1250,58 @@ class FastAPI(Starlette):\n \n     def websocket(\n         self,\n-        path: str,\n-        name: Optional[str] = None,\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                WebSocket path.\n+                \"\"\"\n+            ),\n+        ],\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A name for the WebSocket. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n         *,\n-        dependencies: Optional[Sequence[Depends]] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be used for this\n+                WebSocket.\n+\n+                Read more about it in the\n+                [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n+                \"\"\"\n+            ),\n+        ] = None,\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Decorate a WebSocket function.\n+\n+        Read more about it in the\n+        [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n+\n+        **Example**\n+\n+        ```python\n+        from fastapi import FastAPI, WebSocket\n+\n+        app = FastAPI()\n+\n+        @app.websocket(\"/ws\")\n+        async def websocket_endpoint(websocket: WebSocket):\n+            await websocket.accept()\n+            while True:\n+                data = await websocket.receive_text()\n+                await websocket.send_text(f\"Message text was: {data}\")\n+        ```\n+        \"\"\"\n+\n         def decorator(func: DecoratedCallable) -> DecoratedCallable:\n             self.add_api_websocket_route(\n                 path,\n@@ -445,20 +1315,196 @@ class FastAPI(Starlette):\n \n     def include_router(\n         self,\n-        router: routing.APIRouter,\n+        router: Annotated[routing.APIRouter, Doc(\"The `APIRouter` to include.\")],\n         *,\n-        prefix: str = \"\",\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[Depends]] = None,\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        include_in_schema: bool = True,\n-        default_response_class: Type[Response] = Default(JSONResponse),\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        generate_unique_id_function: Callable[[routing.APIRoute], str] = Default(\n-            generate_unique_id\n+        prefix: Annotated[str, Doc(\"An optional path prefix for the router.\")] = \"\",\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to all the *path operations* in this\n+                router.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n             ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to all the\n+                *path operations* in this router.\n+\n+                Read more about it in the\n+                [FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import Depends, FastAPI\n+\n+                from .dependencies import get_token_header\n+                from .internal import admin\n+\n+                app = FastAPI()\n+\n+                app.include_router(\n+                    admin.router,\n+                    dependencies=[Depends(get_token_header)],\n+                )\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses to be shown in OpenAPI.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\n+\n+                And in the\n+                [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark all the *path operations* in this router as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                from .internal import old_api\n+\n+                app = FastAPI()\n+\n+                app.include_router(\n+                    old_api.router,\n+                    deprecated=True,\n+                )\n+                ```\n+                \"\"\"\n+            ),\n+        ] = None,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include (or not) all the *path operations* in this router in the\n+                generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+\n+                from .internal import old_api\n+\n+                app = FastAPI()\n+\n+                app.include_router(\n+                    old_api.router,\n+                    include_in_schema=False,\n+                )\n+                ```\n+                \"\"\"\n+            ),\n+        ] = True,\n+        default_response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Default response class to be used for the *path operations* in this\n+                router.\n+\n+                Read more in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n+\n+                **Example**\n+\n+                ```python\n+                from fastapi import FastAPI\n+                from fastapi.responses import ORJSONResponse\n+\n+                from .internal import old_api\n+\n+                app = FastAPI()\n+\n+                app.include_router(\n+                    old_api.router,\n+                    default_response_class=ORJSONResponse,\n+                )\n+                ```\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[routing.APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> None:\n+        \"\"\"\n+        Include an `APIRouter` in the same app.\n+\n+        Read more about it in the\n+        [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/).\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import FastAPI\n+\n+        from .users import users_router\n+\n+        app = FastAPI()\n+\n+        app.include_router(users_router)\n+        ```\n+        \"\"\"\n         self.router.include_router(\n             router,\n             prefix=prefix,\n@@ -474,33 +1520,351 @@ class FastAPI(Starlette):\n \n     def get(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[routing.APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[routing.APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP GET operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import FastAPI\n+\n+        app = FastAPI()\n+\n+        @app.get(\"/items/\")\n+        def read_items():\n+            return [{\"name\": \"Empanada\"}, {\"name\": \"Arepa\"}]\n+        ```\n+        \"\"\"\n         return self.router.get(\n             path,\n             response_model=response_model,\n@@ -529,33 +1893,356 @@ class FastAPI(Starlette):\n \n     def put(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[routing.APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[routing.APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP PUT operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import FastAPI\n+        from pydantic import BaseModel\n+\n+        class Item(BaseModel):\n+            name: str\n+            description: str | None = None\n+\n+        app = FastAPI()\n+\n+        @app.put(\"/items/{item_id}\")\n+        def replace_item(item_id: str, item: Item):\n+            return {\"message\": \"Item replaced\", \"id\": item_id}\n+        ```\n+        \"\"\"\n         return self.router.put(\n             path,\n             response_model=response_model,\n@@ -584,33 +2271,356 @@ class FastAPI(Starlette):\n \n     def post(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[routing.APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[routing.APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP POST operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import FastAPI\n+        from pydantic import BaseModel\n+\n+        class Item(BaseModel):\n+            name: str\n+            description: str | None = None\n+\n+        app = FastAPI()\n+\n+        @app.post(\"/items/\")\n+        def create_item(item: Item):\n+            return {\"message\": \"Item created\"}\n+        ```\n+        \"\"\"\n         return self.router.post(\n             path,\n             response_model=response_model,\n@@ -639,33 +2649,351 @@ class FastAPI(Starlette):\n \n     def delete(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[routing.APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[routing.APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP DELETE operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import FastAPI\n+\n+        app = FastAPI()\n+\n+        @app.delete(\"/items/{item_id}\")\n+        def delete_item(item_id: str):\n+            return {\"message\": \"Item deleted\"}\n+        ```\n+        \"\"\"\n         return self.router.delete(\n             path,\n             response_model=response_model,\n@@ -694,33 +3022,351 @@ class FastAPI(Starlette):\n \n     def options(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[routing.APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n@@ -1 +1,59 @@\n-from starlette.background import BackgroundTasks as BackgroundTasks  # noqa\n+from typing import Any, Callable\n+\n+from starlette.background import BackgroundTasks as StarletteBackgroundTasks\n+from typing_extensions import Annotated, Doc, ParamSpec  # type: ignore [attr-defined]\n+\n+P = ParamSpec(\"P\")\n+\n+\n+class BackgroundTasks(StarletteBackgroundTasks):\n+    \"\"\"\n+    A collection of background tasks that will be called after a response has been\n+    sent to the client.\n+\n+    Read more about it in the\n+    [FastAPI docs for Background Tasks](https://fastapi.tiangolo.com/tutorial/background-tasks/).\n+\n+    ## Example\n+\n+    ```python\n+    from fastapi import BackgroundTasks, FastAPI\n+\n+    app = FastAPI()\n+\n+\n+    def write_notification(email: str, message=\"\"):\n+        with open(\"log.txt\", mode=\"w\") as email_file:\n+            content = f\"notification for {email}: {message}\"\n+            email_file.write(content)\n+\n+\n+    @app.post(\"/send-notification/{email}\")\n+    async def send_notification(email: str, background_tasks: BackgroundTasks):\n+        background_tasks.add_task(write_notification, email, message=\"some notification\")\n+        return {\"message\": \"Notification sent in the background\"}\n+    ```\n+    \"\"\"\n+\n+    def add_task(\n+        self,\n+        func: Annotated[\n+            Callable[P, Any],\n+            Doc(\n+                \"\"\"\n+                The function to call after the response is sent.\n+\n+                It can be a regular `def` function or an `async def` function.\n+                \"\"\"\n+            ),\n+        ],\n+        *args: P.args,\n+        **kwargs: P.kwargs,\n+    ) -> None:\n+        \"\"\"\n+        Add a function to be called in the background after the response is sent.\n+\n+        Read more about it in the\n+        [FastAPI docs for Background Tasks](https://fastapi.tiangolo.com/tutorial/background-tasks/).\n+        \"\"\"\n+        return super().add_task(func, *args, **kwargs)\n\n@@ -1,4 +1,14 @@\n-from typing import Any, Callable, Dict, Iterable, Type, TypeVar, cast\n+from typing import (\n+    Any,\n+    BinaryIO,\n+    Callable,\n+    Dict,\n+    Iterable,\n+    Optional,\n+    Type,\n+    TypeVar,\n+    cast,\n+)\n \n from fastapi._compat import (\n     PYDANTIC_V2,\n@@ -14,9 +24,120 @@ from starlette.datastructures import Headers as Headers  # noqa: F401\n from starlette.datastructures import QueryParams as QueryParams  # noqa: F401\n from starlette.datastructures import State as State  # noqa: F401\n from starlette.datastructures import UploadFile as StarletteUploadFile\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n \n class UploadFile(StarletteUploadFile):\n+    \"\"\"\n+    A file uploaded in a request.\n+\n+    Define it as a *path operation function* (or dependency) parameter.\n+\n+    If you are using a regular `def` function, you can use the `upload_file.file`\n+    attribute to access the raw standard Python file (blocking, not async), useful and\n+    needed for non-async code.\n+\n+    Read more about it in the\n+    [FastAPI docs for Request Files](https://fastapi.tiangolo.com/tutorial/request-files/).\n+\n+    ## Example\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import FastAPI, File, UploadFile\n+\n+    app = FastAPI()\n+\n+\n+    @app.post(\"/files/\")\n+    async def create_file(file: Annotated[bytes, File()]):\n+        return {\"file_size\": len(file)}\n+\n+\n+    @app.post(\"/uploadfile/\")\n+    async def create_upload_file(file: UploadFile):\n+        return {\"filename\": file.filename}\n+    ```\n+    \"\"\"\n+\n+    file: Annotated[\n+        BinaryIO,\n+        Doc(\"The standard Python file object (non-async).\"),\n+    ]\n+    filename: Annotated[Optional[str], Doc(\"The original file name.\")]\n+    size: Annotated[Optional[int], Doc(\"The size of the file in bytes.\")]\n+    headers: Annotated[Headers, Doc(\"The headers of the request.\")]\n+    content_type: Annotated[\n+        Optional[str], Doc(\"The content type of the request, from the headers.\")\n+    ]\n+\n+    async def write(\n+        self,\n+        data: Annotated[\n+            bytes,\n+            Doc(\n+                \"\"\"\n+                The bytes to write to the file.\n+                \"\"\"\n+            ),\n+        ],\n+    ) -> None:\n+        \"\"\"\n+        Write some bytes to the file.\n+\n+        You normally wouldn't use this from a file you read in a request.\n+\n+        To be awaitable, compatible with async, this is run in threadpool.\n+        \"\"\"\n+        return await super().write(data)\n+\n+    async def read(\n+        self,\n+        size: Annotated[\n+            int,\n+            Doc(\n+                \"\"\"\n+                The number of bytes to read from the file.\n+                \"\"\"\n+            ),\n+        ] = -1,\n+    ) -> bytes:\n+        \"\"\"\n+        Read some bytes from the file.\n+\n+        To be awaitable, compatible with async, this is run in threadpool.\n+        \"\"\"\n+        return await super().read(size)\n+\n+    async def seek(\n+        self,\n+        offset: Annotated[\n+            int,\n+            Doc(\n+                \"\"\"\n+                The position in bytes to seek to in the file.\n+                \"\"\"\n+            ),\n+        ],\n+    ) -> None:\n+        \"\"\"\n+        Move to a position in the file.\n+\n+        Any next read or write will be done from that position.\n+\n+        To be awaitable, compatible with async, this is run in threadpool.\n+        \"\"\"\n+        return await super().seek(offset)\n+\n+    async def close(self) -> None:\n+        \"\"\"\n+        Close the file.\n+\n+        To be awaitable, compatible with async, this is run in threadpool.\n+        \"\"\"\n+        return await super().close()\n+\n     @classmethod\n     def __get_validators__(cls: Type[\"UploadFile\"]) -> Iterable[Callable[..., Any]]:\n         yield cls.validate\n\n@@ -44,6 +44,7 @@ from fastapi._compat import (\n     serialize_sequence_value,\n     value_is_sequence,\n )\n+from fastapi.background import BackgroundTasks\n from fastapi.concurrency import (\n     AsyncExitStack,\n     asynccontextmanager,\n@@ -56,7 +57,7 @@ from fastapi.security.oauth2 import OAuth2, SecurityScopes\n from fastapi.security.open_id_connect_url import OpenIdConnect\n from fastapi.utils import create_response_field, get_path_param_names\n from pydantic.fields import FieldInfo\n-from starlette.background import BackgroundTasks\n+from starlette.background import BackgroundTasks as StarletteBackgroundTasks\n from starlette.concurrency import run_in_threadpool\n from starlette.datastructures import FormData, Headers, QueryParams, UploadFile\n from starlette.requests import HTTPConnection, Request\n@@ -305,7 +306,7 @@ def add_non_field_param_to_dependency(\n     elif lenient_issubclass(type_annotation, Response):\n         dependant.response_param_name = param_name\n         return True\n-    elif lenient_issubclass(type_annotation, BackgroundTasks):\n+    elif lenient_issubclass(type_annotation, StarletteBackgroundTasks):\n         dependant.background_tasks_param_name = param_name\n         return True\n     elif lenient_issubclass(type_annotation, SecurityScopes):\n@@ -382,7 +383,14 @@ def analyze_param(\n \n     if lenient_issubclass(\n         type_annotation,\n-        (Request, WebSocket, HTTPConnection, Response, BackgroundTasks, SecurityScopes),\n+        (\n+            Request,\n+            WebSocket,\n+            HTTPConnection,\n+            Response,\n+            StarletteBackgroundTasks,\n+            SecurityScopes,\n+        ),\n     ):\n         assert depends is None, f\"Cannot specify `Depends` for type {type_annotation!r}\"\n         assert (\n@@ -510,14 +518,14 @@ async def solve_dependencies(\n     request: Union[Request, WebSocket],\n     dependant: Dependant,\n     body: Optional[Union[Dict[str, Any], FormData]] = None,\n-    background_tasks: Optional[BackgroundTasks] = None,\n+    background_tasks: Optional[StarletteBackgroundTasks] = None,\n     response: Optional[Response] = None,\n     dependency_overrides_provider: Optional[Any] = None,\n     dependency_cache: Optional[Dict[Tuple[Callable[..., Any], Tuple[str]], Any]] = None,\n ) -> Tuple[\n     Dict[str, Any],\n     List[Any],\n-    Optional[BackgroundTasks],\n+    Optional[StarletteBackgroundTasks],\n     Response,\n     Dict[Tuple[Callable[..., Any], Tuple[str]], Any],\n ]:\n\n@@ -22,6 +22,7 @@ from pydantic import BaseModel\n from pydantic.color import Color\n from pydantic.networks import AnyUrl, NameEmail\n from pydantic.types import SecretBytes, SecretStr\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n from ._compat import PYDANTIC_V2, Url, _model_dump\n \n@@ -99,16 +100,107 @@ encoders_by_class_tuples = generate_encoders_by_class_tuples(ENCODERS_BY_TYPE)\n \n \n def jsonable_encoder(\n-    obj: Any,\n-    include: Optional[IncEx] = None,\n-    exclude: Optional[IncEx] = None,\n-    by_alias: bool = True,\n-    exclude_unset: bool = False,\n-    exclude_defaults: bool = False,\n-    exclude_none: bool = False,\n-    custom_encoder: Optional[Dict[Any, Callable[[Any], Any]]] = None,\n-    sqlalchemy_safe: bool = True,\n+    obj: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            The input object to convert to JSON.\n+            \"\"\"\n+        ),\n+    ],\n+    include: Annotated[\n+        Optional[IncEx],\n+        Doc(\n+            \"\"\"\n+            Pydantic's `include` parameter, passed to Pydantic models to set the\n+            fields to include.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    exclude: Annotated[\n+        Optional[IncEx],\n+        Doc(\n+            \"\"\"\n+            Pydantic's `exclude` parameter, passed to Pydantic models to set the\n+            fields to exclude.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    by_alias: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            Pydantic's `by_alias` parameter, passed to Pydantic models to define if\n+            the output should use the alias names (when provided) or the Python\n+            attribute names. In an API, if you set an alias, it's probably because you\n+            want to use it in the result, so you probably want to leave this set to\n+            `True`.\n+            \"\"\"\n+        ),\n+    ] = True,\n+    exclude_unset: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            Pydantic's `exclude_unset` parameter, passed to Pydantic models to define\n+            if it should exclude from the output the fields that were not explicitly\n+            set (and that only had their default values).\n+            \"\"\"\n+        ),\n+    ] = False,\n+    exclude_defaults: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            Pydantic's `exclude_defaults` parameter, passed to Pydantic models to define\n+            if it should exclude from the output the fields that had the same default\n+            value, even when they were explicitly set.\n+            \"\"\"\n+        ),\n+    ] = False,\n+    exclude_none: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            Pydantic's `exclude_none` parameter, passed to Pydantic models to define\n+            if it should exclude from the output any fields that have a `None` value.\n+            \"\"\"\n+        ),\n+    ] = False,\n+    custom_encoder: Annotated[\n+        Optional[Dict[Any, Callable[[Any], Any]]],\n+        Doc(\n+            \"\"\"\n+            Pydantic's `custom_encoder` parameter, passed to Pydantic models to define\n+            a custom encoder.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    sqlalchemy_safe: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            Exclude from the output any fields that start with the name `_sa`.\n+\n+            This is mainly a hack for compatibility with SQLAlchemy objects, they\n+            store internal SQLAlchemy-specific state in attributes named with `_sa`,\n+            and those objects can't (and shouldn't be) serialized to JSON.\n+            \"\"\"\n+        ),\n+    ] = True,\n ) -> Any:\n+    \"\"\"\n+    Convert any object to something that can be encoded in JSON.\n+\n+    This is used internally by FastAPI to make sure anything you return can be\n+    encoded as JSON before it is sent to the client.\n+\n+    You can also use it yourself, for example to convert objects before saving them\n+    in a database that supports only JSON.\n+\n+    Read more about it in the\n+    [FastAPI docs for JSON Compatible Encoder](https://fastapi.tiangolo.com/tutorial/encoder/).\n+    \"\"\"\n     custom_encoder = custom_encoder or {}\n     if custom_encoder:\n         if type(obj) in custom_encoder:\n\n@@ -1,20 +1,141 @@\n-from typing import Any, Dict, Optional, Sequence, Type\n+from typing import Any, Dict, Optional, Sequence, Type, Union\n \n from pydantic import BaseModel, create_model\n from starlette.exceptions import HTTPException as StarletteHTTPException\n-from starlette.exceptions import WebSocketException as WebSocketException  # noqa: F401\n+from starlette.exceptions import WebSocketException as StarletteWebSocketException\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n \n class HTTPException(StarletteHTTPException):\n+    \"\"\"\n+    An HTTP exception you can raise in your own code to show errors to the client.\n+\n+    This is for client errors, invalid authentication, invalid data, etc. Not for server\n+    errors in your code.\n+\n+    Read more about it in the\n+    [FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).\n+\n+    ## Example\n+\n+    ```python\n+    from fastapi import FastAPI, HTTPException\n+\n+    app = FastAPI()\n+\n+    items = {\"foo\": \"The Foo Wrestlers\"}\n+\n+\n+    @app.get(\"/items/{item_id}\")\n+    async def read_item(item_id: str):\n+        if item_id not in items:\n+            raise HTTPException(status_code=404, detail=\"Item not found\")\n+        return {\"item\": items[item_id]}\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n-        status_code: int,\n-        detail: Any = None,\n-        headers: Optional[Dict[str, str]] = None,\n+        status_code: Annotated[\n+            int,\n+            Doc(\n+                \"\"\"\n+                HTTP status code to send to the client.\n+                \"\"\"\n+            ),\n+        ],\n+        detail: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                Any data to be sent to the client in the `detail` key of the JSON\n+                response.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        headers: Annotated[\n+            Optional[Dict[str, str]],\n+            Doc(\n+                \"\"\"\n+                Any headers to send to the client in the response.\n+                \"\"\"\n+            ),\n+        ] = None,\n     ) -> None:\n         super().__init__(status_code=status_code, detail=detail, headers=headers)\n \n \n+class WebSocketException(StarletteWebSocketException):\n+    \"\"\"\n+    A WebSocket exception you can raise in your own code to show errors to the client.\n+\n+    This is for client errors, invalid authentication, invalid data, etc. Not for server\n+    errors in your code.\n+\n+    Read more about it in the\n+    [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n+\n+    ## Example\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import (\n+        Cookie,\n+        FastAPI,\n+        WebSocket,\n+        WebSocketException,\n+        status,\n+    )\n+\n+    app = FastAPI()\n+\n+    @app.websocket(\"/items/{item_id}/ws\")\n+    async def websocket_endpoint(\n+        *,\n+        websocket: WebSocket,\n+        session: Annotated[str | None, Cookie()] = None,\n+        item_id: str,\n+    ):\n+        if session is None:\n+            raise WebSocketException(code=status.WS_1008_POLICY_VIOLATION)\n+        await websocket.accept()\n+        while True:\n+            data = await websocket.receive_text()\n+            await websocket.send_text(f\"Session cookie is: {session}\")\n+            await websocket.send_text(f\"Message text was: {data}, for item ID: {item_id}\")\n+    ```\n+    \"\"\"\n+\n+    def __init__(\n+        self,\n+        code: Annotated[\n+            int,\n+            Doc(\n+                \"\"\"\n+                A closing code from the\n+                [valid codes defined in the specification](https://datatracker.ietf.org/doc/html/rfc6455#section-7.4.1).\n+                \"\"\"\n+            ),\n+        ],\n+        reason: Annotated[\n+            Union[str, None],\n+            Doc(\n+                \"\"\"\n+                The reason to close the WebSocket connection.\n+\n+                It is UTF-8-encoded data. The interpretation of the reason is up to the\n+                application, it is not specified by the WebSocket specification.\n+\n+                It could contain text that could be human-readable or interpretable\n+                by the client code, etc.\n+                \"\"\"\n+            ),\n+        ] = None,\n+    ) -> None:\n+        super().__init__(code=code, reason=reason)\n+\n+\n RequestErrorModel: Type[BaseModel] = create_model(\"Request\")\n WebSocketErrorModel: Type[BaseModel] = create_model(\"WebSocket\")\n \n\n@@ -3,8 +3,18 @@ from typing import Any, Dict, Optional\n \n from fastapi.encoders import jsonable_encoder\n from starlette.responses import HTMLResponse\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n-swagger_ui_default_parameters = {\n+swagger_ui_default_parameters: Annotated[\n+    Dict[str, Any],\n+    Doc(\n+        \"\"\"\n+        Default configurations for Swagger UI.\n+\n+        You can use it as a template to add any other configurations needed.\n+        \"\"\"\n+    ),\n+] = {\n     \"dom_id\": \"#swagger-ui\",\n     \"layout\": \"BaseLayout\",\n     \"deepLinking\": True,\n@@ -15,15 +25,91 @@ swagger_ui_default_parameters = {\n \n def get_swagger_ui_html(\n     *,\n-    openapi_url: str,\n-    title: str,\n-    swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js\",\n-    swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css\",\n-    swagger_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n-    oauth2_redirect_url: Optional[str] = None,\n-    init_oauth: Optional[Dict[str, Any]] = None,\n-    swagger_ui_parameters: Optional[Dict[str, Any]] = None,\n+    openapi_url: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The OpenAPI URL that Swagger UI should load and use.\n+\n+            This is normally done automatically by FastAPI using the default URL\n+            `/openapi.json`.\n+            \"\"\"\n+        ),\n+    ],\n+    title: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The HTML `<title>` content, normally shown in the browser tab.\n+            \"\"\"\n+        ),\n+    ],\n+    swagger_js_url: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The URL to use to load the Swagger UI JavaScript.\n+\n+            It is normally set to a CDN URL.\n+            \"\"\"\n+        ),\n+    ] = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js\",\n+    swagger_css_url: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The URL to use to load the Swagger UI CSS.\n+\n+            It is normally set to a CDN URL.\n+            \"\"\"\n+        ),\n+    ] = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css\",\n+    swagger_favicon_url: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The URL of the favicon to use. It is normally shown in the browser tab.\n+            \"\"\"\n+        ),\n+    ] = \"https://fastapi.tiangolo.com/img/favicon.png\",\n+    oauth2_redirect_url: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            The OAuth2 redirect URL, it is normally automatically handled by FastAPI.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    init_oauth: Annotated[\n+        Optional[Dict[str, Any]],\n+        Doc(\n+            \"\"\"\n+            A dictionary with Swagger UI OAuth2 initialization configurations.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    swagger_ui_parameters: Annotated[\n+        Optional[Dict[str, Any]],\n+        Doc(\n+            \"\"\"\n+            Configuration parameters for Swagger UI.\n+\n+            It defaults to [swagger_ui_default_parameters][fastapi.openapi.docs.swagger_ui_default_parameters].\n+            \"\"\"\n+        ),\n+    ] = None,\n ) -> HTMLResponse:\n+    \"\"\"\n+    Generate and return the HTML  that loads Swagger UI for the interactive\n+    API docs (normally served at `/docs`).\n+\n+    You would only call this function yourself if you needed to override some parts,\n+    for example the URLs to use to load Swagger UI's JavaScript and CSS.\n+\n+    Read more about it in the\n+    [FastAPI docs for Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)\n+    and the [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).\n+    \"\"\"\n     current_swagger_ui_parameters = swagger_ui_default_parameters.copy()\n     if swagger_ui_parameters:\n         current_swagger_ui_parameters.update(swagger_ui_parameters)\n@@ -74,12 +160,62 @@ def get_swagger_ui_html(\n \n def get_redoc_html(\n     *,\n-    openapi_url: str,\n-    title: str,\n-    redoc_js_url: str = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\",\n-    redoc_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n-    with_google_fonts: bool = True,\n+    openapi_url: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The OpenAPI URL that ReDoc should load and use.\n+\n+            This is normally done automatically by FastAPI using the default URL\n+            `/openapi.json`.\n+            \"\"\"\n+        ),\n+    ],\n+    title: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The HTML `<title>` content, normally shown in the browser tab.\n+            \"\"\"\n+        ),\n+    ],\n+    redoc_js_url: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The URL to use to load the ReDoc JavaScript.\n+\n+            It is normally set to a CDN URL.\n+            \"\"\"\n+        ),\n+    ] = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\",\n+    redoc_favicon_url: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The URL of the favicon to use. It is normally shown in the browser tab.\n+            \"\"\"\n+        ),\n+    ] = \"https://fastapi.tiangolo.com/img/favicon.png\",\n+    with_google_fonts: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            Load and use Google Fonts.\n+            \"\"\"\n+        ),\n+    ] = True,\n ) -> HTMLResponse:\n+    \"\"\"\n+    Generate and return the HTML response that loads ReDoc for the alternative\n+    API docs (normally served at `/redoc`).\n+\n+    You would only call this function yourself if you needed to override some parts,\n+    for example the URLs to use to load ReDoc's JavaScript and CSS.\n+\n+    Read more about it in the\n+    [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).\n+    \"\"\"\n     html = f\"\"\"\n     <!DOCTYPE html>\n     <html>\n@@ -118,6 +254,11 @@ def get_redoc_html(\n \n \n def get_swagger_ui_oauth2_redirect_html() -> HTMLResponse:\n+    \"\"\"\n+    Generate the HTML response with the OAuth2 redirection for Swagger UI.\n+\n+    You normally don't need to use or change this.\n+    \"\"\"\n     # copied from https://github.com/swagger-api/swagger-ui/blob/v4.14.0/dist/oauth2-redirect.html\n     html = \"\"\"\n     <!doctype html>\n\n@@ -3,43 +3,218 @@ from typing import Any, Callable, Dict, List, Optional, Sequence, Union\n from fastapi import params\n from fastapi._compat import Undefined\n from fastapi.openapi.models import Example\n-from typing_extensions import Annotated, deprecated\n+from typing_extensions import Annotated, Doc, deprecated  # type: ignore [attr-defined]\n \n _Unset: Any = Undefined\n \n \n def Path(  # noqa: N802\n-    default: Any = ...,\n+    default: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Default value if the parameter field is not set.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = ...,\n     *,\n-    default_factory: Union[Callable[[], Any], None] = _Unset,\n-    alias: Optional[str] = None,\n-    alias_priority: Union[int, None] = _Unset,\n+    default_factory: Annotated[\n+        Union[Callable[[], Any], None],\n+        Doc(\n+            \"\"\"\n+            A callable to generate the default value.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    alias: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            An alternative name for the parameter field.\n+\n+            This will be used to extract the data and for the generated OpenAPI.\n+            It is particularly useful when you can't use the name you want because it\n+            is a Python reserved keyword or similar.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    alias_priority: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Priority of the alias. This affects whether an alias generator is used.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n     # TODO: update when deprecating Pydantic v1, import these types\n     # validation_alias: str | AliasPath | AliasChoices | None\n-    validation_alias: Union[str, None] = None,\n-    serialization_alias: Union[str, None] = None,\n-    title: Optional[str] = None,\n-    description: Optional[str] = None,\n-    gt: Optional[float] = None,\n-    ge: Optional[float] = None,\n-    lt: Optional[float] = None,\n-    le: Optional[float] = None,\n-    min_length: Optional[int] = None,\n-    max_length: Optional[int] = None,\n-    pattern: Optional[str] = None,\n+    validation_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Whitelist' validation step. The parameter field will be the single one\n+            allowed by the alias or set of aliases defined.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    serialization_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Blacklist' validation step. The vanilla parameter field will be the\n+            single one of the alias' or set of aliases' fields and all the other\n+            fields will be ignored at serialization time.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    title: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable title.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    description: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable description.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    gt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than. If set, value must be greater than this. Only applicable to\n+            numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    ge: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than or equal. If set, value must be greater than or equal to\n+            this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    lt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than. If set, value must be less than this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    le: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than or equal. If set, value must be less than or equal to this.\n+            Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    min_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Minimum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    max_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Maximum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    pattern: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n     regex: Annotated[\n         Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n         deprecated(\n             \"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n         ),\n     ] = None,\n-    discriminator: Union[str, None] = None,\n-    strict: Union[bool, None] = _Unset,\n-    multiple_of: Union[float, None] = _Unset,\n-    allow_inf_nan: Union[bool, None] = _Unset,\n-    max_digits: Union[int, None] = _Unset,\n-    decimal_places: Union[int, None] = _Unset,\n-    examples: Optional[List[Any]] = None,\n+    discriminator: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            Parameter field name for discriminating the type in a tagged union.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    strict: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            If `True`, strict validation is applied to the field.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    multiple_of: Annotated[\n+        Union[float, None],\n+        Doc(\n+            \"\"\"\n+            Value must be a multiple of this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    allow_inf_nan: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            Allow `inf`, `-inf`, `nan`. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    max_digits: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of allow digits for strings.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    decimal_places: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of decimal places allowed for numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    examples: Annotated[\n+        Optional[List[Any]],\n+        Doc(\n+            \"\"\"\n+            Example values for this field.\n+            \"\"\"\n+        ),\n+    ] = None,\n     example: Annotated[\n         Optional[Any],\n         deprecated(\n@@ -47,12 +222,87 @@ def Path(  # noqa: N802\n             \"although still supported. Use examples instead.\"\n         ),\n     ] = _Unset,\n-    openapi_examples: Optional[Dict[str, Example]] = None,\n-    deprecated: Optional[bool] = None,\n-    include_in_schema: bool = True,\n-    json_schema_extra: Union[Dict[str, Any], None] = None,\n-    **extra: Any,\n+    openapi_examples: Annotated[\n+        Optional[Dict[str, Example]],\n+        Doc(\n+            \"\"\"\n+            OpenAPI-specific examples.\n+\n+            It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+            Swagger UI (that provides the `/docs` interface) has better support for the\n+            OpenAPI-specific examples than the JSON Schema `examples`, that's the main\n+            use case for this.\n+\n+            Read more about it in the\n+            [FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    deprecated: Annotated[\n+        Optional[bool],\n+        Doc(\n+            \"\"\"\n+            Mark this parameter field as deprecated.\n+\n+            It will affect the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    include_in_schema: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            To include (or not) this parameter field in the generated OpenAPI.\n+            You probably don't need it, but it's available.\n+\n+            This affects the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = True,\n+    json_schema_extra: Annotated[\n+        Union[Dict[str, Any], None],\n+        Doc(\n+            \"\"\"\n+            Any additional JSON schema data.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    **extra: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Include extra fields used by the JSON Schema.\n+            \"\"\"\n+        ),\n+        deprecated(\n+            \"\"\"\n+            The `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n+            \"\"\"\n+        ),\n+    ],\n ) -> Any:\n+    \"\"\"\n+    Declare a path parameter for a *path operation*.\n+\n+    Read more about it in the\n+    [FastAPI docs for Path Parameters and Numeric Validations](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/).\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import FastAPI, Path\n+\n+    app = FastAPI()\n+\n+\n+    @app.get(\"/items/{item_id}\")\n+    async def read_items(\n+        item_id: Annotated[int, Path(title=\"The ID of the item to get\")],\n+    ):\n+        return {\"item_id\": item_id}\n+    ```\n+    \"\"\"\n     return params.Path(\n         default=default,\n         default_factory=default_factory,\n@@ -87,37 +337,209 @@ def Path(  # noqa: N802\n \n \n def Query(  # noqa: N802\n-    default: Any = Undefined,\n+    default: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Default value if the parameter field is not set.\n+            \"\"\"\n+        ),\n+    ] = Undefined,\n     *,\n-    default_factory: Union[Callable[[], Any], None] = _Unset,\n-    alias: Optional[str] = None,\n-    alias_priority: Union[int, None] = _Unset,\n+    default_factory: Annotated[\n+        Union[Callable[[], Any], None],\n+        Doc(\n+            \"\"\"\n+            A callable to generate the default value.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    alias: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            An alternative name for the parameter field.\n+\n+            This will be used to extract the data and for the generated OpenAPI.\n+            It is particularly useful when you can't use the name you want because it\n+            is a Python reserved keyword or similar.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    alias_priority: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Priority of the alias. This affects whether an alias generator is used.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n     # TODO: update when deprecating Pydantic v1, import these types\n     # validation_alias: str | AliasPath | AliasChoices | None\n-    validation_alias: Union[str, None] = None,\n-    serialization_alias: Union[str, None] = None,\n-    title: Optional[str] = None,\n-    description: Optional[str] = None,\n-    gt: Optional[float] = None,\n-    ge: Optional[float] = None,\n-    lt: Optional[float] = None,\n-    le: Optional[float] = None,\n-    min_length: Optional[int] = None,\n-    max_length: Optional[int] = None,\n-    pattern: Optional[str] = None,\n+    validation_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Whitelist' validation step. The parameter field will be the single one\n+            allowed by the alias or set of aliases defined.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    serialization_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Blacklist' validation step. The vanilla parameter field will be the\n+            single one of the alias' or set of aliases' fields and all the other\n+            fields will be ignored at serialization time.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    title: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable title.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    description: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable description.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    gt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than. If set, value must be greater than this. Only applicable to\n+            numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    ge: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than or equal. If set, value must be greater than or equal to\n+            this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    lt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than. If set, value must be less than this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    le: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than or equal. If set, value must be less than or equal to this.\n+            Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    min_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Minimum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    max_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Maximum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    pattern: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n     regex: Annotated[\n         Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n         deprecated(\n             \"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n         ),\n     ] = None,\n-    discriminator: Union[str, None] = None,\n-    strict: Union[bool, None] = _Unset,\n-    multiple_of: Union[float, None] = _Unset,\n-    allow_inf_nan: Union[bool, None] = _Unset,\n-    max_digits: Union[int, None] = _Unset,\n-    decimal_places: Union[int, None] = _Unset,\n-    examples: Optional[List[Any]] = None,\n+    discriminator: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            Parameter field name for discriminating the type in a tagged union.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    strict: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            If `True`, strict validation is applied to the field.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    multiple_of: Annotated[\n+        Union[float, None],\n+        Doc(\n+            \"\"\"\n+            Value must be a multiple of this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    allow_inf_nan: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            Allow `inf`, `-inf`, `nan`. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    max_digits: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of allow digits for strings.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    decimal_places: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of decimal places allowed for numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    examples: Annotated[\n+        Optional[List[Any]],\n+        Doc(\n+            \"\"\"\n+            Example values for this field.\n+            \"\"\"\n+        ),\n+    ] = None,\n     example: Annotated[\n         Optional[Any],\n         deprecated(\n@@ -125,11 +547,65 @@ def Query(  # noqa: N802\n             \"although still supported. Use examples instead.\"\n         ),\n     ] = _Unset,\n-    openapi_examples: Optional[Dict[str, Example]] = None,\n-    deprecated: Optional[bool] = None,\n-    include_in_schema: bool = True,\n-    json_schema_extra: Union[Dict[str, Any], None] = None,\n-    **extra: Any,\n+    openapi_examples: Annotated[\n+        Optional[Dict[str, Example]],\n+        Doc(\n+            \"\"\"\n+            OpenAPI-specific examples.\n+\n+            It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+            Swagger UI (that provides the `/docs` interface) has better support for the\n+            OpenAPI-specific examples than the JSON Schema `examples`, that's the main\n+            use case for this.\n+\n+            Read more about it in the\n+            [FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    deprecated: Annotated[\n+        Optional[bool],\n+        Doc(\n+            \"\"\"\n+            Mark this parameter field as deprecated.\n+\n+            It will affect the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    include_in_schema: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            To include (or not) this parameter field in the generated OpenAPI.\n+            You probably don't need it, but it's available.\n+\n+            This affects the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = True,\n+    json_schema_extra: Annotated[\n+        Union[Dict[str, Any], None],\n+        Doc(\n+            \"\"\"\n+            Any additional JSON schema data.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    **extra: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Include extra fields used by the JSON Schema.\n+            \"\"\"\n+        ),\n+        deprecated(\n+            \"\"\"\n+            The `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n+            \"\"\"\n+        ),\n+    ],\n ) -> Any:\n     return params.Query(\n         default=default,\n@@ -165,38 +641,220 @@ def Query(  # noqa: N802\n \n \n def Header(  # noqa: N802\n-    default: Any = Undefined,\n+    default: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Default value if the parameter field is not set.\n+            \"\"\"\n+        ),\n+    ] = Undefined,\n     *,\n-    default_factory: Union[Callable[[], Any], None] = _Unset,\n-    alias: Optional[str] = None,\n-    alias_priority: Union[int, None] = _Unset,\n+    default_factory: Annotated[\n+        Union[Callable[[], Any], None],\n+        Doc(\n+            \"\"\"\n+            A callable to generate the default value.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    alias: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            An alternative name for the parameter field.\n+\n+            This will be used to extract the data and for the generated OpenAPI.\n+            It is particularly useful when you can't use the name you want because it\n+            is a Python reserved keyword or similar.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    alias_priority: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Priority of the alias. This affects whether an alias generator is used.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n     # TODO: update when deprecating Pydantic v1, import these types\n     # validation_alias: str | AliasPath | AliasChoices | None\n-    validation_alias: Union[str, None] = None,\n-    serialization_alias: Union[str, None] = None,\n-    convert_underscores: bool = True,\n-    title: Optional[str] = None,\n-    description: Optional[str] = None,\n-    gt: Optional[float] = None,\n-    ge: Optional[float] = None,\n-    lt: Optional[float] = None,\n-    le: Optional[float] = None,\n-    min_length: Optional[int] = None,\n-    max_length: Optional[int] = None,\n-    pattern: Optional[str] = None,\n+    validation_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Whitelist' validation step. The parameter field will be the single one\n+            allowed by the alias or set of aliases defined.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    serialization_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Blacklist' validation step. The vanilla parameter field will be the\n+            single one of the alias' or set of aliases' fields and all the other\n+            fields will be ignored at serialization time.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    convert_underscores: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            Automatically convert underscores to hyphens in the parameter field name.\n+\n+            Read more about it in the\n+            [FastAPI docs for Header Parameters](https://fastapi.tiangolo.com/tutorial/header-params/#automatic-conversion)\n+            \"\"\"\n+        ),\n+    ] = True,\n+    title: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable title.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    description: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable description.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    gt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than. If set, value must be greater than this. Only applicable to\n+            numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    ge: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than or equal. If set, value must be greater than or equal to\n+            this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    lt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than. If set, value must be less than this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    le: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than or equal. If set, value must be less than or equal to this.\n+            Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    min_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Minimum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    max_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Maximum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    pattern: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n     regex: Annotated[\n         Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n         deprecated(\n             \"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n         ),\n     ] = None,\n-    discriminator: Union[str, None] = None,\n-    strict: Union[bool, None] = _Unset,\n-    multiple_of: Union[float, None] = _Unset,\n-    allow_inf_nan: Union[bool, None] = _Unset,\n-    max_digits: Union[int, None] = _Unset,\n-    decimal_places: Union[int, None] = _Unset,\n-    examples: Optional[List[Any]] = None,\n+    discriminator: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            Parameter field name for discriminating the type in a tagged union.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    strict: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            If `True`, strict validation is applied to the field.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    multiple_of: Annotated[\n+        Union[float, None],\n+        Doc(\n+            \"\"\"\n+            Value must be a multiple of this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    allow_inf_nan: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            Allow `inf`, `-inf`, `nan`. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    max_digits: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of allow digits for strings.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    decimal_places: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of decimal places allowed for numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    examples: Annotated[\n+        Optional[List[Any]],\n+        Doc(\n+            \"\"\"\n+            Example values for this field.\n+            \"\"\"\n+        ),\n+    ] = None,\n     example: Annotated[\n         Optional[Any],\n         deprecated(\n@@ -204,11 +862,65 @@ def Header(  # noqa: N802\n             \"although still supported. Use examples instead.\"\n         ),\n     ] = _Unset,\n-    openapi_examples: Optional[Dict[str, Example]] = None,\n-    deprecated: Optional[bool] = None,\n-    include_in_schema: bool = True,\n-    json_schema_extra: Union[Dict[str, Any], None] = None,\n-    **extra: Any,\n+    openapi_examples: Annotated[\n+        Optional[Dict[str, Example]],\n+        Doc(\n+            \"\"\"\n+            OpenAPI-specific examples.\n+\n+            It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+            Swagger UI (that provides the `/docs` interface) has better support for the\n+            OpenAPI-specific examples than the JSON Schema `examples`, that's the main\n+            use case for this.\n+\n+            Read more about it in the\n+            [FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    deprecated: Annotated[\n+        Optional[bool],\n+        Doc(\n+            \"\"\"\n+            Mark this parameter field as deprecated.\n+\n+            It will affect the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    include_in_schema: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            To include (or not) this parameter field in the generated OpenAPI.\n+            You probably don't need it, but it's available.\n+\n+            This affects the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = True,\n+    json_schema_extra: Annotated[\n+        Union[Dict[str, Any], None],\n+        Doc(\n+            \"\"\"\n+            Any additional JSON schema data.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    **extra: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Include extra fields used by the JSON Schema.\n+            \"\"\"\n+        ),\n+        deprecated(\n+            \"\"\"\n+            The `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n+            \"\"\"\n+        ),\n+    ],\n ) -> Any:\n     return params.Header(\n         default=default,\n@@ -245,37 +957,209 @@ def Header(  # noqa: N802\n \n \n def Cookie(  # noqa: N802\n-    default: Any = Undefined,\n+    default: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Default value if the parameter field is not set.\n+            \"\"\"\n+        ),\n+    ] = Undefined,\n     *,\n-    default_factory: Union[Callable[[], Any], None] = _Unset,\n-    alias: Optional[str] = None,\n-    alias_priority: Union[int, None] = _Unset,\n+    default_factory: Annotated[\n+        Union[Callable[[], Any], None],\n+        Doc(\n+            \"\"\"\n+            A callable to generate the default value.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    alias: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            An alternative name for the parameter field.\n+\n+            This will be used to extract the data and for the generated OpenAPI.\n+            It is particularly useful when you can't use the name you want because it\n+            is a Python reserved keyword or similar.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    alias_priority: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Priority of the alias. This affects whether an alias generator is used.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n     # TODO: update when deprecating Pydantic v1, import these types\n     # validation_alias: str | AliasPath | AliasChoices | None\n-    validation_alias: Union[str, None] = None,\n-    serialization_alias: Union[str, None] = None,\n-    title: Optional[str] = None,\n-    description: Optional[str] = None,\n-    gt: Optional[float] = None,\n-    ge: Optional[float] = None,\n-    lt: Optional[float] = None,\n-    le: Optional[float] = None,\n-    min_length: Optional[int] = None,\n-    max_length: Optional[int] = None,\n-    pattern: Optional[str] = None,\n+    validation_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Whitelist' validation step. The parameter field will be the single one\n+            allowed by the alias or set of aliases defined.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    serialization_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Blacklist' validation step. The vanilla parameter field will be the\n+            single one of the alias' or set of aliases' fields and all the other\n+            fields will be ignored at serialization time.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    title: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable title.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    description: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable description.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    gt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than. If set, value must be greater than this. Only applicable to\n+            numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    ge: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than or equal. If set, value must be greater than or equal to\n+            this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    lt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than. If set, value must be less than this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    le: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than or equal. If set, value must be less than or equal to this.\n+            Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    min_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Minimum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    max_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Maximum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    pattern: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n     regex: Annotated[\n         Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n         deprecated(\n             \"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n         ),\n     ] = None,\n-    discriminator: Union[str, None] = None,\n-    strict: Union[bool, None] = _Unset,\n-    multiple_of: Union[float, None] = _Unset,\n-    allow_inf_nan: Union[bool, None] = _Unset,\n-    max_digits: Union[int, None] = _Unset,\n-    decimal_places: Union[int, None] = _Unset,\n-    examples: Optional[List[Any]] = None,\n+    discriminator: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            Parameter field name for discriminating the type in a tagged union.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    strict: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            If `True`, strict validation is applied to the field.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    multiple_of: Annotated[\n+        Union[float, None],\n+        Doc(\n+            \"\"\"\n+            Value must be a multiple of this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    allow_inf_nan: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            Allow `inf`, `-inf`, `nan`. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    max_digits: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of allow digits for strings.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    decimal_places: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of decimal places allowed for numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    examples: Annotated[\n+        Optional[List[Any]],\n+        Doc(\n+            \"\"\"\n+            Example values for this field.\n+            \"\"\"\n+        ),\n+    ] = None,\n     example: Annotated[\n         Optional[Any],\n         deprecated(\n@@ -283,11 +1167,65 @@ def Cookie(  # noqa: N802\n             \"although still supported. Use examples instead.\"\n         ),\n     ] = _Unset,\n-    openapi_examples: Optional[Dict[str, Example]] = None,\n-    deprecated: Optional[bool] = None,\n-    include_in_schema: bool = True,\n-    json_schema_extra: Union[Dict[str, Any], None] = None,\n-    **extra: Any,\n+    openapi_examples: Annotated[\n+        Optional[Dict[str, Example]],\n+        Doc(\n+            \"\"\"\n+            OpenAPI-specific examples.\n+\n+            It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+            Swagger UI (that provides the `/docs` interface) has better support for the\n+            OpenAPI-specific examples than the JSON Schema `examples`, that's the main\n+            use case for this.\n+\n+            Read more about it in the\n+            [FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    deprecated: Annotated[\n+        Optional[bool],\n+        Doc(\n+            \"\"\"\n+            Mark this parameter field as deprecated.\n+\n+            It will affect the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    include_in_schema: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            To include (or not) this parameter field in the generated OpenAPI.\n+            You probably don't need it, but it's available.\n+\n+            This affects the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = True,\n+    json_schema_extra: Annotated[\n+        Union[Dict[str, Any], None],\n+        Doc(\n+            \"\"\"\n+            Any additional JSON schema data.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    **extra: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Include extra fields used by the JSON Schema.\n+            \"\"\"\n+        ),\n+        deprecated(\n+            \"\"\"\n+            The `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n+            \"\"\"\n+        ),\n+    ],\n ) -> Any:\n     return params.Cookie(\n         default=default,\n@@ -323,39 +1261,232 @@ def Cookie(  # noqa: N802\n \n \n def Body(  # noqa: N802\n-    default: Any = Undefined,\n+    default: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Default value if the parameter field is not set.\n+            \"\"\"\n+        ),\n+    ] = Undefined,\n     *,\n-    default_factory: Union[Callable[[], Any], None] = _Unset,\n-    embed: bool = False,\n-    media_type: str = \"application/json\",\n-    alias: Optional[str] = None,\n-    alias_priority: Union[int, None] = _Unset,\n+    default_factory: Annotated[\n+        Union[Callable[[], Any], None],\n+        Doc(\n+            \"\"\"\n+            A callable to generate the default value.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    embed: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            When `embed` is `True`, the parameter will be expected in a JSON body as a\n+            key instead of being the JSON body itself.\n+\n+            This happens automatically when more than one `Body` parameter is declared.\n+\n+            Read more about it in the\n+            [FastAPI docs for Body - Multiple Parameters](https://fastapi.tiangolo.com/tutorial/body-multiple-params/#embed-a-single-body-parameter).\n+            \"\"\"\n+        ),\n+    ] = False,\n+    media_type: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The media type of this parameter field. Changing it would affect the\n+            generated OpenAPI, but currently it doesn't affect the parsing of the data.\n+            \"\"\"\n+        ),\n+    ] = \"application/json\",\n+    alias: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            An alternative name for the parameter field.\n+\n+            This will be used to extract the data and for the generated OpenAPI.\n+            It is particularly useful when you can't use the name you want because it\n+            is a Python reserved keyword or similar.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    alias_priority: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Priority of the alias. This affects whether an alias generator is used.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n     # TODO: update when deprecating Pydantic v1, import these types\n     # validation_alias: str | AliasPath | AliasChoices | None\n-    validation_alias: Union[str, None] = None,\n-    serialization_alias: Union[str, None] = None,\n-    title: Optional[str] = None,\n-    description: Optional[str] = None,\n-    gt: Optional[float] = None,\n-    ge: Optional[float] = None,\n-    lt: Optional[float] = None,\n-    le: Optional[float] = None,\n-    min_length: Optional[int] = None,\n-    max_length: Optional[int] = None,\n-    pattern: Optional[str] = None,\n+    validation_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Whitelist' validation step. The parameter field will be the single one\n+            allowed by the alias or set of aliases defined.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    serialization_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Blacklist' validation step. The vanilla parameter field will be the\n+            single one of the alias' or set of aliases' fields and all the other\n+            fields will be ignored at serialization time.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    title: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable title.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    description: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable description.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    gt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than. If set, value must be greater than this. Only applicable to\n+            numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    ge: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than or equal. If set, value must be greater than or equal to\n+            this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    lt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than. If set, value must be less than this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    le: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than or equal. If set, value must be less than or equal to this.\n+            Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    min_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Minimum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    max_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Maximum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    pattern: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n     regex: Annotated[\n         Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n         deprecated(\n             \"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n         ),\n     ] = None,\n-    discriminator: Union[str, None] = None,\n-    strict: Union[bool, None] = _Unset,\n-    multiple_of: Union[float, None] = _Unset,\n-    allow_inf_nan: Union[bool, None] = _Unset,\n-    max_digits: Union[int, None] = _Unset,\n-    decimal_places: Union[int, None] = _Unset,\n-    examples: Optional[List[Any]] = None,\n+    discriminator: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            Parameter field name for discriminating the type in a tagged union.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    strict: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            If `True`, strict validation is applied to the field.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    multiple_of: Annotated[\n+        Union[float, None],\n+        Doc(\n+            \"\"\"\n+            Value must be a multiple of this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    allow_inf_nan: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            Allow `inf`, `-inf`, `nan`. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    max_digits: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of allow digits for strings.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    decimal_places: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of decimal places allowed for numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    examples: Annotated[\n+        Optional[List[Any]],\n+        Doc(\n+            \"\"\"\n+            Example values for this field.\n+            \"\"\"\n+        ),\n+    ] = None,\n     example: Annotated[\n         Optional[Any],\n         deprecated(\n@@ -363,11 +1494,65 @@ def Body(  # noqa: N802\n             \"although still supported. Use examples instead.\"\n         ),\n     ] = _Unset,\n-    openapi_examples: Optional[Dict[str, Example]] = None,\n-    deprecated: Optional[bool] = None,\n-    include_in_schema: bool = True,\n-    json_schema_extra: Union[Dict[str, Any], None] = None,\n-    **extra: Any,\n+    openapi_examples: Annotated[\n+        Optional[Dict[str, Example]],\n+        Doc(\n+            \"\"\"\n+            OpenAPI-specific examples.\n+\n+            It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+            Swagger UI (that provides the `/docs` interface) has better support for the\n+            OpenAPI-specific examples than the JSON Schema `examples`, that's the main\n+            use case for this.\n+\n+            Read more about it in the\n+            [FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    deprecated: Annotated[\n+        Optional[bool],\n+        Doc(\n+            \"\"\"\n+            Mark this parameter field as deprecated.\n+\n+            It will affect the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    include_in_schema: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            To include (or not) this parameter field in the generated OpenAPI.\n+            You probably don't need it, but it's available.\n+\n+            This affects the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = True,\n+    json_schema_extra: Annotated[\n+        Union[Dict[str, Any], None],\n+        Doc(\n+            \"\"\"\n+            Any additional JSON schema data.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    **extra: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Include extra fields used by the JSON Schema.\n+            \"\"\"\n+        ),\n+        deprecated(\n+            \"\"\"\n+            The `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n+            \"\"\"\n+        ),\n+    ],\n ) -> Any:\n     return params.Body(\n         default=default,\n@@ -405,38 +1590,218 @@ def Body(  # noqa: N802\n \n \n def Form(  # noqa: N802\n-    default: Any = Undefined,\n+    default: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Default value if the parameter field is not set.\n+            \"\"\"\n+        ),\n+    ] = Undefined,\n     *,\n-    default_factory: Union[Callable[[], Any], None] = _Unset,\n-    media_type: str = \"application/x-www-form-urlencoded\",\n-    alias: Optional[str] = None,\n-    alias_priority: Union[int, None] = _Unset,\n+    default_factory: Annotated[\n+        Union[Callable[[], Any], None],\n+        Doc(\n+            \"\"\"\n+            A callable to generate the default value.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    media_type: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The media type of this parameter field. Changing it would affect the\n+            generated OpenAPI, but currently it doesn't affect the parsing of the data.\n+            \"\"\"\n+        ),\n+    ] = \"application/x-www-form-urlencoded\",\n+    alias: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            An alternative name for the parameter field.\n+\n+            This will be used to extract the data and for the generated OpenAPI.\n+            It is particularly useful when you can't use the name you want because it\n+            is a Python reserved keyword or similar.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    alias_priority: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Priority of the alias. This affects whether an alias generator is used.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n     # TODO: update when deprecating Pydantic v1, import these types\n     # validation_alias: str | AliasPath | AliasChoices | None\n-    validation_alias: Union[str, None] = None,\n-    serialization_alias: Union[str, None] = None,\n-    title: Optional[str] = None,\n-    description: Optional[str] = None,\n-    gt: Optional[float] = None,\n-    ge: Optional[float] = None,\n-    lt: Optional[float] = None,\n-    le: Optional[float] = None,\n-    min_length: Optional[int] = None,\n-    max_length: Optional[int] = None,\n-    pattern: Optional[str] = None,\n+    validation_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Whitelist' validation step. The parameter field will be the single one\n+            allowed by the alias or set of aliases defined.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    serialization_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Blacklist' validation step. The vanilla parameter field will be the\n+            single one of the alias' or set of aliases' fields and all the other\n+            fields will be ignored at serialization time.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    title: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable title.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    description: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable description.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    gt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than. If set, value must be greater than this. Only applicable to\n+            numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    ge: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than or equal. If set, value must be greater than or equal to\n+            this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    lt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than. If set, value must be less than this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    le: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than or equal. If set, value must be less than or equal to this.\n+            Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    min_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Minimum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    max_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Maximum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    pattern: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n     regex: Annotated[\n         Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n         deprecated(\n             \"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n         ),\n     ] = None,\n-    discriminator: Union[str, None] = None,\n-    strict: Union[bool, None] = _Unset,\n-    multiple_of: Union[float, None] = _Unset,\n-    allow_inf_nan: Union[bool, None] = _Unset,\n-    max_digits: Union[int, None] = _Unset,\n-    decimal_places: Union[int, None] = _Unset,\n-    examples: Optional[List[Any]] = None,\n+    discriminator: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            Parameter field name for discriminating the type in a tagged union.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    strict: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            If `True`, strict validation is applied to the field.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    multiple_of: Annotated[\n+        Union[float, None],\n+        Doc(\n+            \"\"\"\n+            Value must be a multiple of this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    allow_inf_nan: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            Allow `inf`, `-inf`, `nan`. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    max_digits: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of allow digits for strings.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    decimal_places: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of decimal places allowed for numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    examples: Annotated[\n+        Optional[List[Any]],\n+        Doc(\n+            \"\"\"\n+            Example values for this field.\n+            \"\"\"\n+        ),\n+    ] = None,\n     example: Annotated[\n         Optional[Any],\n         deprecated(\n@@ -444,11 +1809,65 @@ def Form(  # noqa: N802\n             \"although still supported. Use examples instead.\"\n         ),\n     ] = _Unset,\n-    openapi_examples: Optional[Dict[str, Example]] = None,\n-    deprecated: Optional[bool] = None,\n-    include_in_schema: bool = True,\n-    json_schema_extra: Union[Dict[str, Any], None] = None,\n-    **extra: Any,\n+    openapi_examples: Annotated[\n+        Optional[Dict[str, Example]],\n+        Doc(\n+            \"\"\"\n+            OpenAPI-specific examples.\n+\n+            It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+            Swagger UI (that provides the `/docs` interface) has better support for the\n+            OpenAPI-specific examples than the JSON Schema `examples`, that's the main\n+            use case for this.\n+\n+            Read more about it in the\n+            [FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    deprecated: Annotated[\n+        Optional[bool],\n+        Doc(\n+            \"\"\"\n+            Mark this parameter field as deprecated.\n+\n+            It will affect the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    include_in_schema: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            To include (or not) this parameter field in the generated OpenAPI.\n+            You probably don't need it, but it's available.\n+\n+            This affects the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = True,\n+    json_schema_extra: Annotated[\n+        Union[Dict[str, Any], None],\n+        Doc(\n+            \"\"\"\n+            Any additional JSON schema data.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    **extra: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Include extra fields used by the JSON Schema.\n+            \"\"\"\n+        ),\n+        deprecated(\n+            \"\"\"\n+            The `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n+            \"\"\"\n+        ),\n+    ],\n ) -> Any:\n     return params.Form(\n         default=default,\n@@ -485,38 +1904,218 @@ def Form(  # noqa: N802\n \n \n def File(  # noqa: N802\n-    default: Any = Undefined,\n+    default: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Default value if the parameter field is not set.\n+            \"\"\"\n+        ),\n+    ] = Undefined,\n     *,\n-    default_factory: Union[Callable[[], Any], None] = _Unset,\n-    media_type: str = \"multipart/form-data\",\n-    alias: Optional[str] = None,\n-    alias_priority: Union[int, None] = _Unset,\n+    default_factory: Annotated[\n+        Union[Callable[[], Any], None],\n+        Doc(\n+            \"\"\"\n+            A callable to generate the default value.\n+\n+            This doesn't affect `Path` parameters as the value is always required.\n+            The parameter is available only for compatibility.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    media_type: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The media type of this parameter field. Changing it would affect the\n+            generated OpenAPI, but currently it doesn't affect the parsing of the data.\n+            \"\"\"\n+        ),\n+    ] = \"multipart/form-data\",\n+    alias: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            An alternative name for the parameter field.\n+\n+            This will be used to extract the data and for the generated OpenAPI.\n+            It is particularly useful when you can't use the name you want because it\n+            is a Python reserved keyword or similar.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    alias_priority: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Priority of the alias. This affects whether an alias generator is used.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n     # TODO: update when deprecating Pydantic v1, import these types\n     # validation_alias: str | AliasPath | AliasChoices | None\n-    validation_alias: Union[str, None] = None,\n-    serialization_alias: Union[str, None] = None,\n-    title: Optional[str] = None,\n-    description: Optional[str] = None,\n-    gt: Optional[float] = None,\n-    ge: Optional[float] = None,\n-    lt: Optional[float] = None,\n-    le: Optional[float] = None,\n-    min_length: Optional[int] = None,\n-    max_length: Optional[int] = None,\n-    pattern: Optional[str] = None,\n+    validation_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Whitelist' validation step. The parameter field will be the single one\n+            allowed by the alias or set of aliases defined.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    serialization_alias: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            'Blacklist' validation step. The vanilla parameter field will be the\n+            single one of the alias' or set of aliases' fields and all the other\n+            fields will be ignored at serialization time.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    title: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable title.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    description: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            Human-readable description.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    gt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than. If set, value must be greater than this. Only applicable to\n+            numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    ge: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Greater than or equal. If set, value must be greater than or equal to\n+            this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    lt: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than. If set, value must be less than this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    le: Annotated[\n+        Optional[float],\n+        Doc(\n+            \"\"\"\n+            Less than or equal. If set, value must be less than or equal to this.\n+            Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    min_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Minimum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    max_length: Annotated[\n+        Optional[int],\n+        Doc(\n+            \"\"\"\n+            Maximum length for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    pattern: Annotated[\n+        Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n+    ] = None,\n     regex: Annotated[\n         Optional[str],\n+        Doc(\n+            \"\"\"\n+            RegEx pattern for strings.\n+            \"\"\"\n+        ),\n         deprecated(\n             \"Deprecated in FastAPI 0.100.0 and Pydantic v2, use `pattern` instead.\"\n         ),\n     ] = None,\n-    discriminator: Union[str, None] = None,\n-    strict: Union[bool, None] = _Unset,\n-    multiple_of: Union[float, None] = _Unset,\n-    allow_inf_nan: Union[bool, None] = _Unset,\n-    max_digits: Union[int, None] = _Unset,\n-    decimal_places: Union[int, None] = _Unset,\n-    examples: Optional[List[Any]] = None,\n+    discriminator: Annotated[\n+        Union[str, None],\n+        Doc(\n+            \"\"\"\n+            Parameter field name for discriminating the type in a tagged union.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    strict: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            If `True`, strict validation is applied to the field.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    multiple_of: Annotated[\n+        Union[float, None],\n+        Doc(\n+            \"\"\"\n+            Value must be a multiple of this. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    allow_inf_nan: Annotated[\n+        Union[bool, None],\n+        Doc(\n+            \"\"\"\n+            Allow `inf`, `-inf`, `nan`. Only applicable to numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    max_digits: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of allow digits for strings.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    decimal_places: Annotated[\n+        Union[int, None],\n+        Doc(\n+            \"\"\"\n+            Maximum number of decimal places allowed for numbers.\n+            \"\"\"\n+        ),\n+    ] = _Unset,\n+    examples: Annotated[\n+        Optional[List[Any]],\n+        Doc(\n+            \"\"\"\n+            Example values for this field.\n+            \"\"\"\n+        ),\n+    ] = None,\n     example: Annotated[\n         Optional[Any],\n         deprecated(\n@@ -524,11 +2123,65 @@ def File(  # noqa: N802\n             \"although still supported. Use examples instead.\"\n         ),\n     ] = _Unset,\n-    openapi_examples: Optional[Dict[str, Example]] = None,\n-    deprecated: Optional[bool] = None,\n-    include_in_schema: bool = True,\n-    json_schema_extra: Union[Dict[str, Any], None] = None,\n-    **extra: Any,\n+    openapi_examples: Annotated[\n+        Optional[Dict[str, Example]],\n+        Doc(\n+            \"\"\"\n+            OpenAPI-specific examples.\n+\n+            It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+            Swagger UI (that provides the `/docs` interface) has better support for the\n+            OpenAPI-specific examples than the JSON Schema `examples`, that's the main\n+            use case for this.\n+\n+            Read more about it in the\n+            [FastAPI docs for Declare Request Example Data](https://fastapi.tiangolo.com/tutorial/schema-extra-example/#using-the-openapi_examples-parameter).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    deprecated: Annotated[\n+        Optional[bool],\n+        Doc(\n+            \"\"\"\n+            Mark this parameter field as deprecated.\n+\n+            It will affect the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = None,\n+    include_in_schema: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            To include (or not) this parameter field in the generated OpenAPI.\n+            You probably don't need it, but it's available.\n+\n+            This affects the generated OpenAPI (e.g. visible at `/docs`).\n+            \"\"\"\n+        ),\n+    ] = True,\n+    json_schema_extra: Annotated[\n+        Union[Dict[str, Any], None],\n+        Doc(\n+            \"\"\"\n+            Any additional JSON schema data.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    **extra: Annotated[\n+        Any,\n+        Doc(\n+            \"\"\"\n+            Include extra fields used by the JSON Schema.\n+            \"\"\"\n+        ),\n+        deprecated(\n+            \"\"\"\n+            The `extra` kwargs is deprecated. Use `json_schema_extra` instead.\n+            \"\"\"\n+        ),\n+    ],\n ) -> Any:\n     return params.File(\n         default=default,\n@@ -565,15 +2218,143 @@ def File(  # noqa: N802\n \n \n def Depends(  # noqa: N802\n-    dependency: Optional[Callable[..., Any]] = None, *, use_cache: bool = True\n+    dependency: Annotated[\n+        Optional[Callable[..., Any]],\n+        Doc(\n+            \"\"\"\n+            A \"dependable\" callable (like a function).\n+\n+            Don't call it directly, FastAPI will call it for you, just pass the object\n+            directly.\n+            \"\"\"\n+        ),\n+    ] = None,\n+    *,\n+    use_cache: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            By default, after a dependency is called the first time in a request, if\n+            the dependency is declared again for the rest of the request (for example\n+            if the dependency is needed by several dependencies), the value will be\n+            re-used for the rest of the request.\n+\n+            Set `use_cache` to `False` to disable this behavior and ensure the\n+            dependency is called again (if declared more than once) in the same request.\n+            \"\"\"\n+        ),\n+    ] = True,\n ) -> Any:\n+    \"\"\"\n+    Declare a FastAPI dependency.\n+\n+    It takes a single \"dependable\" callable (like a function).\n+\n+    Don't call it directly, FastAPI will call it for you.\n+\n+    Read more about it in the\n+    [FastAPI docs for Dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/).\n+\n+    **Example**\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import Depends, FastAPI\n+\n+    app = FastAPI()\n+\n+\n+    async def common_parameters(q: str | None = None, skip: int = 0, limit: int = 100):\n+        return {\"q\": q, \"skip\": skip, \"limit\": limit}\n+\n+\n+    @app.get(\"/items/\")\n+    async def read_items(commons: Annotated[dict, Depends(common_parameters)]):\n+        return commons\n+    ```\n+    \"\"\"\n     return params.Depends(dependency=dependency, use_cache=use_cache)\n \n \n def Security(  # noqa: N802\n-    dependency: Optional[Callable[..., Any]] = None,\n+    dependency: Annotated[\n+        Optional[Callable[..., Any]],\n+        Doc(\n+            \"\"\"\n+            A \"dependable\" callable (like a function).\n+\n+            Don't call it directly, FastAPI will call it for you, just pass the object\n+            directly.\n+            \"\"\"\n+        ),\n+    ] = None,\n     *,\n-    scopes: Optional[Sequence[str]] = None,\n-    use_cache: bool = True,\n+    scopes: Annotated[\n+        Optional[Sequence[str]],\n+        Doc(\n+            \"\"\"\n+            OAuth2 scopes required for the *path operation* that uses this Security\n+            dependency.\n+\n+            The term \"scope\" comes from the OAuth2 specification, it seems to be\n+            intentionaly vague and interpretable. It normally refers to permissions,\n+            in cases to roles.\n+\n+            These scopes are integrated with OpenAPI (and the API docs at `/docs`).\n+            So they are visible in the OpenAPI specification.\n+            )\n+            \"\"\"\n+        ),\n+    ] = None,\n+    use_cache: Annotated[\n+        bool,\n+        Doc(\n+            \"\"\"\n+            By default, after a dependency is called the first time in a request, if\n+            the dependency is declared again for the rest of the request (for example\n+            if the dependency is needed by several dependencies), the value will be\n+            re-used for the rest of the request.\n+\n+            Set `use_cache` to `False` to disable this behavior and ensure the\n+            dependency is called again (if declared more than once) in the same request.\n+            \"\"\"\n+        ),\n+    ] = True,\n ) -> Any:\n+    \"\"\"\n+    Declare a FastAPI Security dependency.\n+\n+    The only difference with a regular dependency is that it can declare OAuth2\n+    scopes that will be integrated with OpenAPI and the automatic UI docs (by default\n+    at `/docs`).\n+\n+    It takes a single \"dependable\" callable (like a function).\n+\n+    Don't call it directly, FastAPI will call it for you.\n+\n+    Read more about it in the\n+    [FastAPI docs for Security](https://fastapi.tiangolo.com/tutorial/security/) and\n+    in the\n+    [FastAPI docs for OAuth2 scopes](https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/).\n+\n+    **Example**\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import Depends, FastAPI\n+\n+    from .db import User\n+    from .security import get_current_active_user\n+\n+    app = FastAPI()\n+\n+    @app.get(\"/users/me/items/\")\n+    async def read_own_items(\n+        current_user: Annotated[User, Security(get_current_active_user, scopes=[\"items\"])]\n+    ):\n+        return [{\"item_id\": \"Foo\", \"owner\": current_user.username}]\n+    ```\n+    \"\"\"\n     return params.Security(dependency=dependency, scopes=scopes, use_cache=use_cache)\n\n@@ -21,12 +21,26 @@ except ImportError:  # pragma: nocover\n \n \n class UJSONResponse(JSONResponse):\n+    \"\"\"\n+    JSON response using the high-performance ujson library to serialize data to JSON.\n+\n+    Read more about it in the\n+    [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/).\n+    \"\"\"\n+\n     def render(self, content: Any) -> bytes:\n         assert ujson is not None, \"ujson must be installed to use UJSONResponse\"\n         return ujson.dumps(content, ensure_ascii=False).encode(\"utf-8\")\n \n \n class ORJSONResponse(JSONResponse):\n+    \"\"\"\n+    JSON response using the high-performance orjson library to serialize data to JSON.\n+\n+    Read more about it in the\n+    [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/).\n+    \"\"\"\n+\n     def render(self, content: Any) -> bytes:\n         assert orjson is not None, \"orjson must be installed to use ORJSONResponse\"\n         return orjson.dumps(\n\n@@ -69,6 +69,7 @@ from starlette.routing import (\n from starlette.routing import Mount as Mount  # noqa\n from starlette.types import ASGIApp, Lifespan, Scope\n from starlette.websockets import WebSocket\n+from typing_extensions import Annotated, Doc, deprecated  # type: ignore [attr-defined]\n \n \n def _prepare_response_content(\n@@ -519,30 +520,253 @@ class APIRoute(routing.Route):\n \n \n class APIRouter(routing.Router):\n+    \"\"\"\n+    `APIRouter` class, used to group *path operations*, for example to structure\n+    an app in multiple files. It would then be included in the `FastAPI` app, or\n+    in another `APIRouter` (ultimately included in the app).\n+\n+    Read more about it in the\n+    [FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/).\n+\n+    ## Example\n+\n+    ```python\n+    from fastapi import APIRouter, FastAPI\n+\n+    app = FastAPI()\n+    router = APIRouter()\n+\n+\n+    @router.get(\"/users/\", tags=[\"users\"])\n+    async def read_users():\n+        return [{\"username\": \"Rick\"}, {\"username\": \"Morty\"}]\n+\n+\n+    app.include_router(router)\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        prefix: str = \"\",\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        default_response_class: Type[Response] = Default(JSONResponse),\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        routes: Optional[List[routing.BaseRoute]] = None,\n-        redirect_slashes: bool = True,\n-        default: Optional[ASGIApp] = None,\n-        dependency_overrides_provider: Optional[Any] = None,\n-        route_class: Type[APIRoute] = APIRoute,\n-        on_startup: Optional[Sequence[Callable[[], Any]]] = None,\n-        on_shutdown: Optional[Sequence[Callable[[], Any]]] = None,\n+        prefix: Annotated[str, Doc(\"An optional path prefix for the router.\")] = \"\",\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to all the *path operations* in this\n+                router.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to all the\n+                *path operations* in this router.\n+\n+                Read more about it in the\n+                [FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        default_response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                The default response class to be used.\n+\n+                Read more in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses to be shown in OpenAPI.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\n+\n+                And in the\n+                [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                OpenAPI callbacks that should apply to all *path operations* in this\n+                router.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        routes: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                **Note**: you probably shouldn't use this parameter, it is inherited\n+                from Starlette and supported for compatibility.\n+\n+                In FastAPI, you normally would use the *path operation* decorators,\n+                like:\n+\n+                * `router.get()`\n+                * `router.post()`\n+                * etc.\n+\n+                ---\n+\n+                A list of routes to serve incoming HTTP and WebSocket requests.\n+                \"\"\"\n+            ),\n+            deprecated(\n+                \"\"\"\n+                You normally wouldn't use this parameter with FastAPI, it is inherited\n+                from Starlette and supported for compatibility.\n+\n+                In FastAPI, you normally would use the *path operation methods*,\n+                like `router.get()`, `router.post()`, etc.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        redirect_slashes: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Whether to detect and redirect slashes in URLs when the client doesn't\n+                use the same format.\n+                \"\"\"\n+            ),\n+        ] = True,\n+        default: Annotated[\n+            Optional[ASGIApp],\n+            Doc(\n+                \"\"\"\n+                Default function handler for this router. Used to handle\n+                404 Not Found errors.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependency_overrides_provider: Annotated[\n+            Optional[Any],\n+            Doc(\n+                \"\"\"\n+                Only used internally by FastAPI to handle dependency overrides.\n+\n+                You shouldn't need to use it. It normally points to the `FastAPI` app\n+                object.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        route_class: Annotated[\n+            Type[APIRoute],\n+            Doc(\n+                \"\"\"\n+                Custom route (*path operation*) class to be used by this router.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Request and APIRoute class](https://fastapi.tiangolo.com/how-to/custom-request-and-route/#custom-apiroute-class-in-a-router).\n+                \"\"\"\n+            ),\n+        ] = APIRoute,\n+        on_startup: Annotated[\n+            Optional[Sequence[Callable[[], Any]]],\n+            Doc(\n+                \"\"\"\n+                A list of startup event handler functions.\n+\n+                You should instead use the `lifespan` handlers.\n+\n+                Read more in the [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        on_shutdown: Annotated[\n+            Optional[Sequence[Callable[[], Any]]],\n+            Doc(\n+                \"\"\"\n+                A list of shutdown event handler functions.\n+\n+                You should instead use the `lifespan` handlers.\n+\n+                Read more in the\n+                [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n+                \"\"\"\n+            ),\n+        ] = None,\n         # the generic to Lifespan[AppType] is the type of the top level application\n         # which the router cannot know statically, so we use typing.Any\n-        lifespan: Optional[Lifespan[Any]] = None,\n-        deprecated: Optional[bool] = None,\n-        include_in_schema: bool = True,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        lifespan: Annotated[\n+            Optional[Lifespan[Any]],\n+            Doc(\n+                \"\"\"\n+                A `Lifespan` context manager handler. This replaces `startup` and\n+                `shutdown` functions with a single context manager.\n+\n+                Read more in the\n+                [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).\n+                \"\"\"\n             ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark all *path operations* in this router as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                To include (or not) all the *path operations* in this router in the\n+                generated OpenAPI.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> None:\n         super().__init__(\n             routes=routes,\n@@ -755,11 +979,63 @@ class APIRouter(routing.Router):\n \n     def websocket(\n         self,\n-        path: str,\n-        name: Optional[str] = None,\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                WebSocket path.\n+                \"\"\"\n+            ),\n+        ],\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A name for the WebSocket. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n         *,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be used for this\n+                WebSocket.\n+\n+                Read more about it in the\n+                [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n+                \"\"\"\n+            ),\n+        ] = None,\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Decorate a WebSocket function.\n+\n+        Read more about it in the\n+        [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).\n+\n+        **Example**\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI, WebSocket\n+\n+        app = FastAPI()\n+        router = APIRouter()\n+\n+        @router.websocket(\"/ws\")\n+        async def websocket_endpoint(websocket: WebSocket):\n+            await websocket.accept()\n+            while True:\n+                data = await websocket.receive_text()\n+                await websocket.send_text(f\"Message text was: {data}\")\n+\n+        app.include_router(router)\n+        ```\n+        \"\"\"\n+\n         def decorator(func: DecoratedCallable) -> DecoratedCallable:\n             self.add_api_websocket_route(\n                 path, func, name=name, dependencies=dependencies\n@@ -779,20 +1055,139 @@ class APIRouter(routing.Router):\n \n     def include_router(\n         self,\n-        router: \"APIRouter\",\n+        router: Annotated[\"APIRouter\", Doc(\"The `APIRouter` to include.\")],\n         *,\n-        prefix: str = \"\",\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        default_response_class: Type[Response] = Default(JSONResponse),\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        deprecated: Optional[bool] = None,\n-        include_in_schema: bool = True,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        prefix: Annotated[str, Doc(\"An optional path prefix for the router.\")] = \"\",\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to all the *path operations* in this\n+                router.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n             ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to all the\n+                *path operations* in this router.\n+\n+                Read more about it in the\n+                [FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        default_response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                The default response class to be used.\n+\n+                Read more in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses to be shown in OpenAPI.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\n+\n+                And in the\n+                [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                OpenAPI callbacks that should apply to all *path operations* in this\n+                router.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark all *path operations* in this router as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include (or not) all the *path operations* in this router in the\n+                generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> None:\n+        \"\"\"\n+        Include another `APIRouter` in the same current `APIRouter`.\n+\n+        Read more about it in the\n+        [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/).\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI\n+\n+        app = FastAPI()\n+        internal_router = APIRouter()\n+        users_router = APIRouter()\n+\n+        @users_router.get(\"/users/\")\n+        def read_users():\n+            return [{\"name\": \"Rick\"}, {\"name\": \"Morty\"}]\n+\n+        internal_router.include_router(users_router)\n+        app.include_router(internal_router)\n+        ```\n+        \"\"\"\n         if prefix:\n             assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n             assert not prefix.endswith(\n@@ -900,33 +1295,354 @@ class APIRouter(routing.Router):\n \n     def get(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP GET operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI\n+\n+        app = FastAPI()\n+        router = APIRouter()\n+\n+        @router.get(\"/items/\")\n+        def read_items():\n+            return [{\"name\": \"Empanada\"}, {\"name\": \"Arepa\"}]\n+\n+        app.include_router(router)\n+        ```\n+        \"\"\"\n         return self.api_route(\n             path=path,\n             response_model=response_model,\n@@ -956,33 +1672,359 @@ class APIRouter(routing.Router):\n \n     def put(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP PUT operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI\n+        from pydantic import BaseModel\n+\n+        class Item(BaseModel):\n+            name: str\n+            description: str | None = None\n+\n+        app = FastAPI()\n+        router = APIRouter()\n+\n+        @router.put(\"/items/{item_id}\")\n+        def replace_item(item_id: str, item: Item):\n+            return {\"message\": \"Item replaced\", \"id\": item_id}\n+\n+        app.include_router(router)\n+        ```\n+        \"\"\"\n         return self.api_route(\n             path=path,\n             response_model=response_model,\n@@ -1012,33 +2054,359 @@ class APIRouter(routing.Router):\n \n     def post(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP POST operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI\n+        from pydantic import BaseModel\n+\n+        class Item(BaseModel):\n+            name: str\n+            description: str | None = None\n+\n+        app = FastAPI()\n+        router = APIRouter()\n+\n+        @router.post(\"/items/\")\n+        def create_item(item: Item):\n+            return {\"message\": \"Item created\"}\n+\n+        app.include_router(router)\n+        ```\n+        \"\"\"\n         return self.api_route(\n             path=path,\n             response_model=response_model,\n@@ -1068,33 +2436,354 @@ class APIRouter(routing.Router):\n \n     def delete(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP DELETE operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI\n+\n+        app = FastAPI()\n+        router = APIRouter()\n+\n+        @router.delete(\"/items/{item_id}\")\n+        def delete_item(item_id: str):\n+            return {\"message\": \"Item deleted\"}\n+\n+        app.include_router(router)\n+        ```\n+        \"\"\"\n         return self.api_route(\n             path=path,\n             response_model=response_model,\n@@ -1124,33 +2813,354 @@ class APIRouter(routing.Router):\n \n     def options(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP OPTIONS operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI\n+\n+        app = FastAPI()\n+        router = APIRouter()\n+\n+        @router.options(\"/items/\")\n+        def get_item_options():\n+            return {\"additions\": [\"Aji\", \"Guacamole\"]}\n+\n+        app.include_router(router)\n+        ```\n+        \"\"\"\n         return self.api_route(\n             path=path,\n             response_model=response_model,\n@@ -1180,33 +3190,359 @@ class APIRouter(routing.Router):\n \n     def head(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to exclude certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_by_alias: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response model\n+                should be serialized by alias when an alias is used.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_model_exclude_unset: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that were not set and\n+                have their default values. This is different from\n+                `response_model_exclude_defaults` in that if the fields are set,\n+                they will be included in the response, even if the value is the same\n+                as the default.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_defaults: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data\n+                should have all the fields, including the ones that have the same value\n+                as the default. This is different from `response_model_exclude_unset`\n+                in that if the fields are set but contain the same default values,\n+                they will be excluded from the response.\n+\n+                When `True`, default values are omitted from the response.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#use-the-response_model_exclude_unset-parameter).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        response_model_exclude_none: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to define if the response data should\n+                exclude fields set to `None`.\n+\n+                This is much simpler (less smart) than `response_model_exclude_unset`\n+                and `response_model_exclude_defaults`. You probably want to use one of\n+                those two instead of this one, as those allow returning `None` values\n+                when it makes sense.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_exclude_none).\n+                \"\"\"\n+            ),\n+        ] = False,\n+        include_in_schema: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                Include this *path operation* in the generated OpenAPI schema.\n+\n+                This affects the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).\n+                \"\"\"\n+            ),\n+        ] = True,\n+        response_class: Annotated[\n+            Type[Response],\n+            Doc(\n+                \"\"\"\n+                Response class to be used for this *path operation*.\n+\n+                This will not be used if you return a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#redirectresponse).\n+                \"\"\"\n+            ),\n+        ] = Default(JSONResponse),\n+        name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Name for this *path operation*. Only used internally.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        callbacks: Annotated[\n+            Optional[List[BaseRoute]],\n+            Doc(\n+                \"\"\"\n+                List of *path operations* that will be used as OpenAPI callbacks.\n+\n+                This is only for OpenAPI documentation, the callbacks won't be used\n+                directly.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        openapi_extra: Annotated[\n+            Optional[Dict[str, Any]],\n+            Doc(\n+                \"\"\"\n+                Extra metadata to be included in the OpenAPI schema for this *path\n+                operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        generate_unique_id_function: Annotated[\n+            Callable[[APIRoute], str],\n+            Doc(\n+                \"\"\"\n+                Customize the function used to generate unique IDs for the *path\n+                operations* shown in the generated OpenAPI.\n+\n+                This is particularly useful when automatically generating clients or\n+                SDKs for your API.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = Default(generate_unique_id),\n     ) -> Callable[[DecoratedCallable], DecoratedCallable]:\n+        \"\"\"\n+        Add a *path operation* using an HTTP HEAD operation.\n+\n+        ## Example\n+\n+        ```python\n+        from fastapi import APIRouter, FastAPI\n+        from pydantic import BaseModel\n+\n+        class Item(BaseModel):\n+            name: str\n+            description: str | None = None\n+\n+        app = FastAPI()\n+        router = APIRouter()\n+\n+        @router.head(\"/items/\", status_code=204)\n+        def get_items_headers(response: Response):\n+            response.headers[\"X-Cat-Dog\"] = \"Alone in the world\"\n+\n+        app.include_router(router)\n+        ```\n+        \"\"\"\n         return self.api_route(\n             path=path,\n             response_model=response_model,\n@@ -1236,33 +3572,359 @@ class APIRouter(routing.Router):\n \n     def patch(\n         self,\n-        path: str,\n-        *,\n-        response_model: Any = Default(None),\n-        status_code: Optional[int] = None,\n-        tags: Optional[List[Union[str, Enum]]] = None,\n-        dependencies: Optional[Sequence[params.Depends]] = None,\n-        summary: Optional[str] = None,\n-        description: Optional[str] = None,\n-        response_description: str = \"Successful Response\",\n-        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        deprecated: Optional[bool] = None,\n-        operation_id: Optional[str] = None,\n-        response_model_include: Optional[IncEx] = None,\n-        response_model_exclude: Optional[IncEx] = None,\n-        response_model_by_alias: bool = True,\n-        response_model_exclude_unset: bool = False,\n-        response_model_exclude_defaults: bool = False,\n-        response_model_exclude_none: bool = False,\n-        include_in_schema: bool = True,\n-        response_class: Type[Response] = Default(JSONResponse),\n-        name: Optional[str] = None,\n-        callbacks: Optional[List[BaseRoute]] = None,\n-        openapi_extra: Optional[Dict[str, Any]] = None,\n-        generate_unique_id_function: Callable[[APIRoute], str] = Default(\n-            generate_unique_id\n+        path: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL path to be used for this *path operation*.\n+\n+                For example, in `http://example.com/items`, the path is `/items`.\n+                \"\"\"\n             ),\n+        ],\n+        *,\n+        response_model: Annotated[\n+            Any,\n+            Doc(\n+                \"\"\"\n+                The type to use for the response.\n+\n+                It could be any valid Pydantic *field* type. So, it doesn't have to\n+                be a Pydantic model, it could be other things, like a `list`, `dict`,\n+                etc.\n+\n+                It will be used for:\n+\n+                * Documentation: the generated OpenAPI (and the UI at `/docs`) will\n+                    show it as the response (JSON Schema).\n+                * Serialization: you could return an arbitrary object and the\n+                    `response_model` would be used to serialize that object into the\n+                    corresponding JSON.\n+                * Filtering: the JSON sent to the client will only contain the data\n+                    (fields) defined in the `response_model`. If you returned an object\n+                    that contains an attribute `password` but the `response_model` does\n+                    not include that field, the JSON sent to the client would not have\n+                    that `password`.\n+                * Validation: whatever you return will be serialized with the\n+                    `response_model`, converting any data as necessary to generate the\n+                    corresponding JSON. But if the data in the object returned is not\n+                    valid, that would mean a violation of the contract with the client,\n+                    so it's an error from the API developer. So, FastAPI will raise an\n+                    error and return a 500 error code (Internal Server Error).\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model](https://fastapi.tiangolo.com/tutorial/response-model/).\n+                \"\"\"\n+            ),\n+        ] = Default(None),\n+        status_code: Annotated[\n+            Optional[int],\n+            Doc(\n+                \"\"\"\n+                The default status code to be used for the response.\n+\n+                You could override the status code by returning a response directly.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Status Code](https://fastapi.tiangolo.com/tutorial/response-status-code/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        tags: Annotated[\n+            Optional[List[Union[str, Enum]]],\n+            Doc(\n+                \"\"\"\n+                A list of tags to be applied to the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/#tags).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        dependencies: Annotated[\n+            Optional[Sequence[params.Depends]],\n+            Doc(\n+                \"\"\"\n+                A list of dependencies (using `Depends()`) to be applied to the\n+                *path operation*.\n+\n+                Read more about it in the\n+                [FastAPI docs for Dependencies in path operation decorators](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        summary: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A summary for the *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                A description for the *path operation*.\n+\n+                If not provided, it will be extracted automatically from the docstring\n+                of the *path operation function*.\n+\n+                It can contain Markdown.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+\n+                Read more about it in the\n+                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_description: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The description for the default response.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = \"Successful Response\",\n+        responses: Annotated[\n+            Optional[Dict[Union[int, str], Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                Additional responses that could be returned by this *path operation*.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        deprecated: Annotated[\n+            Optional[bool],\n+            Doc(\n+                \"\"\"\n+                Mark this *path operation* as deprecated.\n+\n+                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        operation_id: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Custom operation ID to be used by this *path operation*.\n+\n+                By default, it is generated automatically.\n+\n+                If you provide a custom operation ID, you need to make sure it is\n+                unique for the whole API.\n+\n+                You can customize the\n+                operation ID generation with the parameter\n+                `generate_unique_id_function` in the `FastAPI` class.\n+\n+                Read more about it in the\n+                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_include: Annotated[\n+            Optional[IncEx],\n+            Doc(\n+                \"\"\"\n+                Configuration passed to Pydantic to include only certain fields in the\n+                response data.\n+\n+                Read more about it in the\n+                [FastAPI docs for Response Model - Return Type](https://fastapi.tiangolo.com/tutorial/response-model/#response_model_include-and-response_model_exclude).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        response_model_exclude: Annotated[\n+            Optional[IncEx],\n@@ -5,6 +5,7 @@ from fastapi.security.base import SecurityBase\n from starlette.exceptions import HTTPException\n from starlette.requests import Request\n from starlette.status import HTTP_403_FORBIDDEN\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n \n class APIKeyBase(SecurityBase):\n@@ -12,13 +13,83 @@ class APIKeyBase(SecurityBase):\n \n \n class APIKeyQuery(APIKeyBase):\n+    \"\"\"\n+    API key authentication using a query parameter.\n+\n+    This defines the name of the query parameter that should be provided in the request\n+    with the API key and integrates that into the OpenAPI documentation. It extracts\n+    the key value sent in the query parameter automatically and provides it as the\n+    dependency result. But it doesn't define how to send that API key to the client.\n+\n+    ## Usage\n+\n+    Create an instance object and use that object as the dependency in `Depends()`.\n+\n+    The dependency result will be a string containing the key value.\n+\n+    ## Example\n+\n+    ```python\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import APIKeyQuery\n+\n+    app = FastAPI()\n+\n+    query_scheme = APIKeyQuery(name=\"api_key\")\n+\n+\n+    @app.get(\"/items/\")\n+    async def read_items(api_key: str = Depends(query_scheme)):\n+        return {\"api_key\": api_key}\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        name: str,\n-        scheme_name: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        name: Annotated[\n+            str,\n+            Doc(\"Query parameter name.\"),\n+        ],\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if the query parameter is not provided, `APIKeyQuery` will\n+                automatically cancel the request and sebd the client an error.\n+\n+                If `auto_error` is set to `False`, when the query parameter is not\n+                available, instead of erroring out, the dependency result will be\n+                `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, in a query\n+                parameter or in an HTTP Bearer token).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model: APIKey = APIKey(\n             **{\"in\": APIKeyIn.query},  # type: ignore[arg-type]\n@@ -41,13 +112,79 @@ class APIKeyQuery(APIKeyBase):\n \n \n class APIKeyHeader(APIKeyBase):\n+    \"\"\"\n+    API key authentication using a header.\n+\n+    This defines the name of the header that should be provided in the request with\n+    the API key and integrates that into the OpenAPI documentation. It extracts\n+    the key value sent in the header automatically and provides it as the dependency\n+    result. But it doesn't define how to send that key to the client.\n+\n+    ## Usage\n+\n+    Create an instance object and use that object as the dependency in `Depends()`.\n+\n+    The dependency result will be a string containing the key value.\n+\n+    ## Example\n+\n+    ```python\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import APIKeyHeader\n+\n+    app = FastAPI()\n+\n+    header_scheme = APIKeyHeader(name=\"x-key\")\n+\n+\n+    @app.get(\"/items/\")\n+    async def read_items(key: str = Depends(header_scheme)):\n+        return {\"key\": key}\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        name: str,\n-        scheme_name: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        name: Annotated[str, Doc(\"Header name.\")],\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if the header is not provided, `APIKeyHeader` will\n+                automatically cancel the request and send the client an error.\n+\n+                If `auto_error` is set to `False`, when the header is not available,\n+                instead of erroring out, the dependency result will be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, in a header or\n+                in an HTTP Bearer token).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model: APIKey = APIKey(\n             **{\"in\": APIKeyIn.header},  # type: ignore[arg-type]\n@@ -70,13 +207,79 @@ class APIKeyHeader(APIKeyBase):\n \n \n class APIKeyCookie(APIKeyBase):\n+    \"\"\"\n+    API key authentication using a cookie.\n+\n+    This defines the name of the cookie that should be provided in the request with\n+    the API key and integrates that into the OpenAPI documentation. It extracts\n+    the key value sent in the cookie automatically and provides it as the dependency\n+    result. But it doesn't define how to set that cookie.\n+\n+    ## Usage\n+\n+    Create an instance object and use that object as the dependency in `Depends()`.\n+\n+    The dependency result will be a string containing the key value.\n+\n+    ## Example\n+\n+    ```python\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import APIKeyCookie\n+\n+    app = FastAPI()\n+\n+    cookie_scheme = APIKeyCookie(name=\"session\")\n+\n+\n+    @app.get(\"/items/\")\n+    async def read_items(session: str = Depends(cookie_scheme)):\n+        return {\"session\": session}\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        name: str,\n-        scheme_name: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        name: Annotated[str, Doc(\"Cookie name.\")],\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if the cookie is not provided, `APIKeyCookie` will\n+                automatically cancel the request and send the client an error.\n+\n+                If `auto_error` is set to `False`, when the cookie is not available,\n+                instead of erroring out, the dependency result will be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, in a cookie or\n+                in an HTTP Bearer token).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model: APIKey = APIKey(\n             **{\"in\": APIKeyIn.cookie},  # type: ignore[arg-type]\n\n@@ -10,16 +10,60 @@ from fastapi.security.utils import get_authorization_scheme_param\n from pydantic import BaseModel\n from starlette.requests import Request\n from starlette.status import HTTP_401_UNAUTHORIZED, HTTP_403_FORBIDDEN\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n \n class HTTPBasicCredentials(BaseModel):\n-    username: str\n-    password: str\n+    \"\"\"\n+    The HTTP Basic credendials given as the result of using `HTTPBasic` in a\n+    dependency.\n+\n+    Read more about it in the\n+    [FastAPI docs for HTTP Basic Auth](https://fastapi.tiangolo.com/advanced/security/http-basic-auth/).\n+    \"\"\"\n+\n+    username: Annotated[str, Doc(\"The HTTP Basic username.\")]\n+    password: Annotated[str, Doc(\"The HTTP Basic password.\")]\n \n \n class HTTPAuthorizationCredentials(BaseModel):\n-    scheme: str\n-    credentials: str\n+    \"\"\"\n+    The HTTP authorization credentials in the result of using `HTTPBearer` or\n+    `HTTPDigest` in a dependency.\n+\n+    The HTTP authorization header value is split by the first space.\n+\n+    The first part is the `scheme`, the second part is the `credentials`.\n+\n+    For example, in an HTTP Bearer token scheme, the client will send a header\n+    like:\n+\n+    ```\n+    Authorization: Bearer deadbeef12346\n+    ```\n+\n+    In this case:\n+\n+    * `scheme` will have the value `\"Bearer\"`\n+    * `credentials` will have the value `\"deadbeef12346\"`\n+    \"\"\"\n+\n+    scheme: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The HTTP authorization scheme extracted from the header value.\n+            \"\"\"\n+        ),\n+    ]\n+    credentials: Annotated[\n+        str,\n+        Doc(\n+            \"\"\"\n+            The HTTP authorization credentials extracted from the header value.\n+            \"\"\"\n+        ),\n+    ]\n \n \n class HTTPBase(SecurityBase):\n@@ -51,13 +95,89 @@ class HTTPBase(SecurityBase):\n \n \n class HTTPBasic(HTTPBase):\n+    \"\"\"\n+    HTTP Basic authentication.\n+\n+    ## Usage\n+\n+    Create an instance object and use that object as the dependency in `Depends()`.\n+\n+    The dependency result will be an `HTTPBasicCredentials` object containing the\n+    `username` and the `password`.\n+\n+    Read more about it in the\n+    [FastAPI docs for HTTP Basic Auth](https://fastapi.tiangolo.com/advanced/security/http-basic-auth/).\n+\n+    ## Example\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import HTTPBasic, HTTPBasicCredentials\n+\n+    app = FastAPI()\n+\n+    security = HTTPBasic()\n+\n+\n+    @app.get(\"/users/me\")\n+    def read_current_user(credentials: Annotated[HTTPBasicCredentials, Depends(security)]):\n+        return {\"username\": credentials.username, \"password\": credentials.password}\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        scheme_name: Optional[str] = None,\n-        realm: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        realm: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                HTTP Basic authentication realm.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if the HTTP Basic authentication is not provided (a\n+                header), `HTTPBasic` will automatically cancel the request and send the\n+                client an error.\n+\n+                If `auto_error` is set to `False`, when the HTTP Basic authentication\n+                is not available, instead of erroring out, the dependency result will\n+                be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, in HTTP Basic\n+                authentication or in an HTTP Bearer token).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model = HTTPBaseModel(scheme=\"basic\", description=description)\n         self.scheme_name = scheme_name or self.__class__.__name__\n@@ -98,13 +218,81 @@ class HTTPBasic(HTTPBase):\n \n \n class HTTPBearer(HTTPBase):\n+    \"\"\"\n+    HTTP Bearer token authentication.\n+\n+    ## Usage\n+\n+    Create an instance object and use that object as the dependency in `Depends()`.\n+\n+    The dependency result will be an `HTTPAuthorizationCredentials` object containing\n+    the `scheme` and the `credentials`.\n+\n+    ## Example\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import HTTPAuthorizationCredentials, HTTPBearer\n+\n+    app = FastAPI()\n+\n+    security = HTTPBearer()\n+\n+\n+    @app.get(\"/users/me\")\n+    def read_current_user(\n+        credentials: Annotated[HTTPAuthorizationCredentials, Depends(security)]\n+    ):\n+        return {\"scheme\": credentials.scheme, \"credentials\": credentials.credentials}\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        bearerFormat: Optional[str] = None,\n-        scheme_name: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        bearerFormat: Annotated[Optional[str], Doc(\"Bearer token format.\")] = None,\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if the HTTP Bearer token not provided (in an\n+                `Authorization` header), `HTTPBearer` will automatically cancel the\n+                request and send the client an error.\n+\n+                If `auto_error` is set to `False`, when the HTTP Bearer token\n+                is not available, instead of erroring out, the dependency result will\n+                be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, in an HTTP\n+                Bearer token or in a cookie).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model = HTTPBearerModel(bearerFormat=bearerFormat, description=description)\n         self.scheme_name = scheme_name or self.__class__.__name__\n@@ -134,12 +322,79 @@ class HTTPBearer(HTTPBase):\n \n \n class HTTPDigest(HTTPBase):\n+    \"\"\"\n+    HTTP Digest authentication.\n+\n+    ## Usage\n+\n+    Create an instance object and use that object as the dependency in `Depends()`.\n+\n+    The dependency result will be an `HTTPAuthorizationCredentials` object containing\n+    the `scheme` and the `credentials`.\n+\n+    ## Example\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import HTTPAuthorizationCredentials, HTTPDigest\n+\n+    app = FastAPI()\n+\n+    security = HTTPDigest()\n+\n+\n+    @app.get(\"/users/me\")\n+    def read_current_user(\n+        credentials: Annotated[HTTPAuthorizationCredentials, Depends(security)]\n+    ):\n+        return {\"scheme\": credentials.scheme, \"credentials\": credentials.credentials}\n+    ```\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        scheme_name: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if the HTTP Digest not provided, `HTTPDigest` will\n+                automatically cancel the request and send the client an error.\n+\n+                If `auto_error` is set to `False`, when the HTTP Digest is not\n+                available, instead of erroring out, the dependency result will\n+                be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, in HTTP\n+                Digest or in a cookie).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model = HTTPBaseModel(scheme=\"digest\", description=description)\n         self.scheme_name = scheme_name or self.__class__.__name__\n\n@@ -10,51 +10,136 @@ from starlette.requests import Request\n from starlette.status import HTTP_401_UNAUTHORIZED, HTTP_403_FORBIDDEN\n \n # TODO: import from typing when deprecating Python 3.9\n-from typing_extensions import Annotated\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n \n class OAuth2PasswordRequestForm:\n     \"\"\"\n-    This is a dependency class, use it like:\n+    This is a dependency class to collect the `username` and `password` as form data\n+    for an OAuth2 password flow.\n+\n+    The OAuth2 specification dictates that for a password flow the data should be\n+    collected using form data (instead of JSON) and that it should have the specific\n+    fields `username` and `password`.\n+\n+    All the initialization parameters are extracted from the request.\n+\n+    Read more about it in the\n+    [FastAPI docs for Simple OAuth2 with Password and Bearer](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/).\n+\n+    ## Example\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import OAuth2PasswordRequestForm\n+\n+    app = FastAPI()\n+\n \n     @app.post(\"/login\")\n-        def login(form_data: OAuth2PasswordRequestForm = Depends()):\n-            data = form_data.parse()\n-            print(data.username)\n-            print(data.password)\n-            for scope in data.scopes:\n-                print(scope)\n-            if data.client_id:\n-                print(data.client_id)\n-            if data.client_secret:\n-                print(data.client_secret)\n+    def login(form_data: Annotated[OAuth2PasswordRequestForm, Depends()]):\n+        data = {}\n+        data[\"scopes\"] = []\n+        for scope in form_data.scopes:\n+            data[\"scopes\"].append(scope)\n+        if form_data.client_id:\n+            data[\"client_id\"] = form_data.client_id\n+        if form_data.client_secret:\n+            data[\"client_secret\"] = form_data.client_secret\n         return data\n+    ```\n \n-\n-    It creates the following Form request parameters in your endpoint:\n-\n-    grant_type: the OAuth2 spec says it is required and MUST be the fixed string \"password\".\n-        Nevertheless, this dependency class is permissive and allows not passing it. If you want to enforce it,\n-        use instead the OAuth2PasswordRequestFormStrict dependency.\n-    username: username string. The OAuth2 spec requires the exact field name \"username\".\n-    password: password string. The OAuth2 spec requires the exact field name \"password\".\n-    scope: Optional string. Several scopes (each one a string) separated by spaces. E.g.\n-        \"items:read items:write users:read profile openid\"\n-    client_id: optional string. OAuth2 recommends sending the client_id and client_secret (if any)\n-        using HTTP Basic auth, as: client_id:client_secret\n-    client_secret: optional string. OAuth2 recommends sending the client_id and client_secret (if any)\n-        using HTTP Basic auth, as: client_id:client_secret\n+    Note that for OAuth2 the scope `items:read` is a single scope in an opaque string.\n+    You could have custom internal logic to separate it by colon caracters (`:`) or\n+    similar, and get the two parts `items` and `read`. Many applications do that to\n+    group and organize permisions, you could do it as well in your application, just\n+    know that that it is application specific, it's not part of the specification.\n     \"\"\"\n \n     def __init__(\n         self,\n         *,\n-        grant_type: Annotated[Union[str, None], Form(pattern=\"password\")] = None,\n-        username: Annotated[str, Form()],\n-        password: Annotated[str, Form()],\n-        scope: Annotated[str, Form()] = \"\",\n-        client_id: Annotated[Union[str, None], Form()] = None,\n-        client_secret: Annotated[Union[str, None], Form()] = None,\n+        grant_type: Annotated[\n+            Union[str, None],\n+            Form(pattern=\"password\"),\n+            Doc(\n+                \"\"\"\n+                The OAuth2 spec says it is required and MUST be the fixed string\n+                \"password\". Nevertheless, this dependency class is permissive and\n+                allows not passing it. If you want to enforce it, use instead the\n+                `OAuth2PasswordRequestFormStrict` dependency.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        username: Annotated[\n+            str,\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                `username` string. The OAuth2 spec requires the exact field name\n+                `username`.\n+                \"\"\"\n+            ),\n+        ],\n+        password: Annotated[\n+            str,\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                `password` string. The OAuth2 spec requires the exact field name\n+                `password\".\n+                \"\"\"\n+            ),\n+        ],\n+        scope: Annotated[\n+            str,\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                A single string with actually several scopes separated by spaces. Each\n+                scope is also a string.\n+\n+                For example, a single string with:\n+\n+                ```python\n+                \"items:read items:write users:read profile openid\"\n+                ````\n+\n+                would represent the scopes:\n+\n+                * `items:read`\n+                * `items:write`\n+                * `users:read`\n+                * `profile`\n+                * `openid`\n+                \"\"\"\n+            ),\n+        ] = \"\",\n+        client_id: Annotated[\n+            Union[str, None],\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                If there's a `client_id`, it can be sent as part of the form fields.\n+                But the OAuth2 specification recommends sending the `client_id` and\n+                `client_secret` (if any) using HTTP Basic auth.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        client_secret: Annotated[\n+            Union[str, None],\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                If there's a `client_password` (and a `client_id`), they can be sent\n+                as part of the form fields. But the OAuth2 specification recommends\n+                sending the `client_id` and `client_secret` (if any) using HTTP Basic\n+                auth.\n+                \"\"\"\n+            ),\n+        ] = None,\n     ):\n         self.grant_type = grant_type\n         self.username = username\n@@ -66,23 +151,54 @@ class OAuth2PasswordRequestForm:\n \n class OAuth2PasswordRequestFormStrict(OAuth2PasswordRequestForm):\n     \"\"\"\n-    This is a dependency class, use it like:\n+    This is a dependency class to collect the `username` and `password` as form data\n+    for an OAuth2 password flow.\n+\n+    The OAuth2 specification dictates that for a password flow the data should be\n+    collected using form data (instead of JSON) and that it should have the specific\n+    fields `username` and `password`.\n+\n+    All the initialization parameters are extracted from the request.\n+\n+    The only difference between `OAuth2PasswordRequestFormStrict` and\n+    `OAuth2PasswordRequestForm` is that `OAuth2PasswordRequestFormStrict` requires the\n+    client to send the form field `grant_type` with the value `\"password\"`, which\n+    is required in the OAuth2 specification (it seems that for no particular reason),\n+    while for `OAuth2PasswordRequestForm` `grant_type` is optional.\n+\n+    Read more about it in the\n+    [FastAPI docs for Simple OAuth2 with Password and Bearer](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/).\n+\n+    ## Example\n+\n+    ```python\n+    from typing import Annotated\n+\n+    from fastapi import Depends, FastAPI\n+    from fastapi.security import OAuth2PasswordRequestForm\n+\n+    app = FastAPI()\n+\n \n     @app.post(\"/login\")\n-        def login(form_data: OAuth2PasswordRequestFormStrict = Depends()):\n-            data = form_data.parse()\n-            print(data.username)\n-            print(data.password)\n-            for scope in data.scopes:\n-                print(scope)\n-            if data.client_id:\n-                print(data.client_id)\n-            if data.client_secret:\n-                print(data.client_secret)\n+    def login(form_data: Annotated[OAuth2PasswordRequestFormStrict, Depends()]):\n+        data = {}\n+        data[\"scopes\"] = []\n+        for scope in form_data.scopes:\n+            data[\"scopes\"].append(scope)\n+        if form_data.client_id:\n+            data[\"client_id\"] = form_data.client_id\n+        if form_data.client_secret:\n+            data[\"client_secret\"] = form_data.client_secret\n         return data\n+    ```\n \n+    Note that for OAuth2 the scope `items:read` is a single scope in an opaque string.\n+    You could have custom internal logic to separate it by colon caracters (`:`) or\n+    similar, and get the two parts `items` and `read`. Many applications do that to\n+    group and organize permisions, you could do it as well in your application, just\n+    know that that it is application specific, it's not part of the specification.\n \n-    It creates the following Form request parameters in your endpoint:\n \n     grant_type: the OAuth2 spec says it is required and MUST be the fixed string \"password\".\n         This dependency is strict about it. If you want to be permissive, use instead the\n@@ -99,12 +215,85 @@ class OAuth2PasswordRequestFormStrict(OAuth2PasswordRequestForm):\n \n     def __init__(\n         self,\n-        grant_type: Annotated[str, Form(pattern=\"password\")],\n-        username: Annotated[str, Form()],\n-        password: Annotated[str, Form()],\n-        scope: Annotated[str, Form()] = \"\",\n-        client_id: Annotated[Union[str, None], Form()] = None,\n-        client_secret: Annotated[Union[str, None], Form()] = None,\n+        grant_type: Annotated[\n+            str,\n+            Form(pattern=\"password\"),\n+            Doc(\n+                \"\"\"\n+                The OAuth2 spec says it is required and MUST be the fixed string\n+                \"password\". This dependency is strict about it. If you want to be\n+                permissive, use instead the `OAuth2PasswordRequestForm` dependency\n+                class.\n+                \"\"\"\n+            ),\n+        ],\n+        username: Annotated[\n+            str,\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                `username` string. The OAuth2 spec requires the exact field name\n+                `username`.\n+                \"\"\"\n+            ),\n+        ],\n+        password: Annotated[\n+            str,\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                `password` string. The OAuth2 spec requires the exact field name\n+                `password\".\n+                \"\"\"\n+            ),\n+        ],\n+        scope: Annotated[\n+            str,\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                A single string with actually several scopes separated by spaces. Each\n+                scope is also a string.\n+\n+                For example, a single string with:\n+\n+                ```python\n+                \"items:read items:write users:read profile openid\"\n+                ````\n+\n+                would represent the scopes:\n+\n+                * `items:read`\n+                * `items:write`\n+                * `users:read`\n+                * `profile`\n+                * `openid`\n+                \"\"\"\n+            ),\n+        ] = \"\",\n+        client_id: Annotated[\n+            Union[str, None],\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                If there's a `client_id`, it can be sent as part of the form fields.\n+                But the OAuth2 specification recommends sending the `client_id` and\n+                `client_secret` (if any) using HTTP Basic auth.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        client_secret: Annotated[\n+            Union[str, None],\n+            Form(),\n+            Doc(\n+                \"\"\"\n+                If there's a `client_password` (and a `client_id`), they can be sent\n+                as part of the form fields. But the OAuth2 specification recommends\n+                sending the `client_id` and `client_secret` (if any) using HTTP Basic\n+                auth.\n+                \"\"\"\n+            ),\n+        ] = None,\n     ):\n         super().__init__(\n             grant_type=grant_type,\n@@ -117,13 +306,69 @@ class OAuth2PasswordRequestFormStrict(OAuth2PasswordRequestForm):\n \n \n class OAuth2(SecurityBase):\n+    \"\"\"\n+    This is the base class for OAuth2 authentication, an instance of it would be used\n+    as a dependency. All other OAuth2 classes inherit from it and customize it for\n+    each OAuth2 flow.\n+\n+    You normally would not create a new class inheriting from it but use one of the\n+    existing subclasses, and maybe compose them if you want to support multiple flows.\n+\n+    Read more about it in the\n+    [FastAPI docs for Security](https://fastapi.tiangolo.com/tutorial/security/).\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        flows: Union[OAuthFlowsModel, Dict[str, Dict[str, Any]]] = OAuthFlowsModel(),\n-        scheme_name: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        flows: Annotated[\n+            Union[OAuthFlowsModel, Dict[str, Dict[str, Any]]],\n+            Doc(\n+                \"\"\"\n+                The dictionary of OAuth2 flows.\n+                \"\"\"\n+            ),\n+        ] = OAuthFlowsModel(),\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if no HTTP Auhtorization header is provided, required for\n+                OAuth2 authentication, it will automatically cancel the request and\n+                send the client an error.\n+\n+                If `auto_error` is set to `False`, when the HTTP Authorization header\n+                is not available, instead of erroring out, the dependency result will\n+                be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, with OAuth2\n+                or in a cookie).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model = OAuth2Model(\n             flows=cast(OAuthFlowsModel, flows), description=description\n@@ -144,13 +389,74 @@ class OAuth2(SecurityBase):\n \n \n class OAuth2PasswordBearer(OAuth2):\n+    \"\"\"\n+    OAuth2 flow for authentication using a bearer token obtained with a password.\n+    An instance of it would be used as a dependency.\n+\n+    Read more about it in the\n+    [FastAPI docs for Simple OAuth2 with Password and Bearer](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/).\n+    \"\"\"\n+\n     def __init__(\n         self,\n-        tokenUrl: str,\n-        scheme_name: Optional[str] = None,\n-        scopes: Optional[Dict[str, str]] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        tokenUrl: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL to obtain the OAuth2 token. This would be the *path operation*\n+                that has `OAuth2PasswordRequestForm` as a dependency.\n+                \"\"\"\n+            ),\n+        ],\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        scopes: Annotated[\n+            Optional[Dict[str, str]],\n+            Doc(\n+                \"\"\"\n+                The OAuth2 scopes that would be required by the *path operations* that\n+                use this dependency.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if no HTTP Auhtorization header is provided, required for\n+                OAuth2 authentication, it will automatically cancel the request and\n+                send the client an error.\n+\n+                If `auto_error` is set to `False`, when the HTTP Authorization header\n+                is not available, instead of erroring out, the dependency result will\n+                be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, with OAuth2\n+                or in a cookie).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         if not scopes:\n             scopes = {}\n@@ -180,15 +486,79 @@ class OAuth2PasswordBearer(OAuth2):\n \n \n class OAuth2AuthorizationCodeBearer(OAuth2):\n+    \"\"\"\n+    OAuth2 flow for authentication using a bearer token obtained with an OAuth2 code\n+    flow. An instance of it would be used as a dependency.\n+    \"\"\"\n+\n     def __init__(\n         self,\n         authorizationUrl: str,\n-        tokenUrl: str,\n-        refreshUrl: Optional[str] = None,\n-        scheme_name: Optional[str] = None,\n-        scopes: Optional[Dict[str, str]] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        tokenUrl: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                The URL to obtain the OAuth2 token.\n+                \"\"\"\n+            ),\n+        ],\n+        refreshUrl: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                The URL to refresh the token and obtain a new one.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        scopes: Annotated[\n+            Optional[Dict[str, str]],\n+            Doc(\n+                \"\"\"\n+                The OAuth2 scopes that would be required by the *path operations* that\n+                use this dependency.\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if no HTTP Auhtorization header is provided, required for\n+                OAuth2 authentication, it will automatically cancel the request and\n+                send the client an error.\n+\n+                If `auto_error` is set to `False`, when the HTTP Authorization header\n+                is not available, instead of erroring out, the dependency result will\n+                be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, with OAuth2\n+                or in a cookie).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         if not scopes:\n             scopes = {}\n@@ -226,6 +596,45 @@ class OAuth2AuthorizationCodeBearer(OAuth2):\n \n \n class SecurityScopes:\n-    def __init__(self, scopes: Optional[List[str]] = None):\n-        self.scopes = scopes or []\n-        self.scope_str = \" \".join(self.scopes)\n+    \"\"\"\n+    This is a special class that you can define in a parameter in a dependency to\n+    obtain the OAuth2 scopes required by all the dependencies in the same chain.\n+\n+    This way, multiple dependencies can have different scopes, even when used in the\n+    same *path operation*. And with this, you can access all the scopes required in\n+    all those dependencies in a single place.\n+\n+    Read more about it in the\n+    [FastAPI docs for OAuth2 scopes](https://fastapi.tiangolo.com/advanced/security/oauth2-scopes/).\n+    \"\"\"\n+\n+    def __init__(\n+        self,\n+        scopes: Annotated[\n+            Optional[List[str]],\n+            Doc(\n+                \"\"\"\n+                This will be filled by FastAPI.\n+                \"\"\"\n+            ),\n+        ] = None,\n+    ):\n+        self.scopes: Annotated[\n+            List[str],\n+            Doc(\n+                \"\"\"\n+                The list of all the scopes required by dependencies.\n+                \"\"\"\n+            ),\n+        ] = (\n+            scopes or []\n+        )\n+        self.scope_str: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+                All the scopes required by all the dependencies in a single string\n+                separated by spaces, as defined in the OAuth2 specification.\n+                \"\"\"\n+            ),\n+        ] = \" \".join(self.scopes)\n\n@@ -5,16 +5,66 @@ from fastapi.security.base import SecurityBase\n from starlette.exceptions import HTTPException\n from starlette.requests import Request\n from starlette.status import HTTP_403_FORBIDDEN\n+from typing_extensions import Annotated, Doc  # type: ignore [attr-defined]\n \n \n class OpenIdConnect(SecurityBase):\n+    \"\"\"\n+    OpenID Connect authentication class. An instance of it would be used as a\n+    dependency.\n+    \"\"\"\n+\n     def __init__(\n         self,\n         *,\n-        openIdConnectUrl: str,\n-        scheme_name: Optional[str] = None,\n-        description: Optional[str] = None,\n-        auto_error: bool = True,\n+        openIdConnectUrl: Annotated[\n+            str,\n+            Doc(\n+                \"\"\"\n+            The OpenID Connect URL.\n+            \"\"\"\n+            ),\n+        ],\n+        scheme_name: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme name.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        description: Annotated[\n+            Optional[str],\n+            Doc(\n+                \"\"\"\n+                Security scheme description.\n+\n+                It will be included in the generated OpenAPI (e.g. visible at `/docs`).\n+                \"\"\"\n+            ),\n+        ] = None,\n+        auto_error: Annotated[\n+            bool,\n+            Doc(\n+                \"\"\"\n+                By default, if no HTTP Auhtorization header is provided, required for\n+                OpenID Connect authentication, it will automatically cancel the request\n+                and send the client an error.\n+\n+                If `auto_error` is set to `False`, when the HTTP Authorization header\n+                is not available, instead of erroring out, the dependency result will\n+                be `None`.\n+\n+                This is useful when you want to have optional authentication.\n+\n+                It is also useful when you want to have authentication that can be\n+                provided in one of multiple optional ways (for example, with OpenID\n+                Connect or in a cookie).\n+                \"\"\"\n+            ),\n+        ] = True,\n     ):\n         self.model = OpenIdConnectModel(\n             openIdConnectUrl=openIdConnectUrl, description=description\n\n@@ -153,17 +153,21 @@ index_sponsors_template = \"\"\"\n def generate_readme_content() -> str:\n     en_index = en_docs_path / \"docs\" / \"index.md\"\n     content = en_index.read_text(\"utf-8\")\n+    match_pre = re.search(r\"</style>\\n\\n\", content)\n     match_start = re.search(r\"<!-- sponsors -->\", content)\n     match_end = re.search(r\"<!-- /sponsors -->\", content)\n     sponsors_data_path = en_docs_path / \"data\" / \"sponsors.yml\"\n     sponsors = mkdocs.utils.yaml_load(sponsors_data_path.read_text(encoding=\"utf-8\"))\n     if not (match_start and match_end):\n         raise RuntimeError(\"Couldn't auto-generate sponsors section\")\n+    if not match_pre:\n+        raise RuntimeError(\"Couldn't find pre section (<style>) in index.md\")\n+    frontmatter_end = match_pre.end()\n     pre_end = match_start.end()\n     post_start = match_end.start()\n     template = Template(index_sponsors_template)\n     message = template.render(sponsors=sponsors)\n-    pre_content = content[:pre_end]\n+    pre_content = content[frontmatter_end:pre_end]\n     post_content = content[post_start:]\n     new_content = pre_content + message + post_content\n     return new_content\n@@ -286,7 +290,6 @@ def update_config() -> None:\n         else:\n             use_name = alternate_dict[url]\n             new_alternate.append({\"link\": url, \"name\": use_name})\n-    config[\"nav\"][1] = {\"Languages\": languages}\n     config[\"extra\"][\"alternate\"] = new_alternate\n     en_config_path.write_text(\n         yaml.dump(config, sort_keys=False, width=200, allow_unicode=True),\n\n@@ -8,6 +8,11 @@ from mkdocs.structure.files import File, Files\n from mkdocs.structure.nav import Link, Navigation, Section\n from mkdocs.structure.pages import Page\n \n+non_traslated_sections = [\n+    \"reference/\",\n+    \"release-notes.md\",\n+]\n+\n \n @lru_cache()\n def get_missing_translation_content(docs_dir: str) -> str:\n@@ -123,6 +128,9 @@ def on_page_markdown(\n     markdown: str, *, page: Page, config: MkDocsConfig, files: Files\n ) -> str:\n     if isinstance(page.file, EnFile):\n+        for excluded_section in non_traslated_sections:\n+            if page.file.src_path.startswith(excluded_section):\n+                return markdown\n         missing_translation_content = get_missing_translation_content(config.docs_dir)\n         header = \"\"\n         body = markdown\n\n@@ -1,3 +1,4 @@\n+import io\n from pathlib import Path\n from typing import List\n \n@@ -52,3 +53,20 @@ def test_upload_file_is_closed(tmp_path: Path):\n \n     assert testing_file_store\n     assert testing_file_store[0].file.closed\n+\n+\n+# For UploadFile coverage, segments copied from Starlette tests\n+\n+\n+@pytest.mark.anyio\n+async def test_upload_file():\n+    stream = io.BytesIO(b\"data\")\n+    file = UploadFile(filename=\"file\", file=stream, size=4)\n+    assert await file.read() == b\"data\"\n+    assert file.size == 4\n+    await file.write(b\" and more data!\")\n+    assert await file.read() == b\"\"\n+    assert file.size == 19\n+    await file.seek(0)\n+    assert await file.read() == b\"data and more data!\"\n+    await file.close()\n\n@@ -21,6 +21,9 @@ def state() -> State:\n     return State()\n \n \n+@pytest.mark.filterwarnings(\n+    r\"ignore:\\s*on_event is deprecated, use lifespan event handlers instead.*:DeprecationWarning\"\n+)\n def test_router_events(state: State) -> None:\n     app = FastAPI()\n \n\n@@ -1,13 +1,20 @@\n+import pytest\n+from fastapi import FastAPI\n from fastapi.testclient import TestClient\n \n-from docs_src.async_sql_databases.tutorial001 import app\n-\n from ...utils import needs_pydanticv1\n \n \n+@pytest.fixture(name=\"app\", scope=\"module\")\n+def get_app():\n+    with pytest.warns(DeprecationWarning):\n+        from docs_src.async_sql_databases.tutorial001 import app\n+    yield app\n+\n+\n # TODO: pv2 add version with Pydantic v2\n @needs_pydanticv1\n-def test_create_read():\n+def test_create_read(app: FastAPI):\n     with TestClient(app) as client:\n         note = {\"text\": \"Foo bar\", \"completed\": False}\n         response = client.post(\"/notes/\", json=note)\n@@ -21,7 +28,7 @@ def test_create_read():\n         assert data in response.json()\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(app: FastAPI):\n     with TestClient(app) as client:\n         response = client.get(\"/openapi.json\")\n         assert response.status_code == 200, response.text\n\n@@ -1,16 +1,23 @@\n+import pytest\n+from fastapi import FastAPI\n from fastapi.testclient import TestClient\n \n+\n+@pytest.fixture(name=\"app\", scope=\"module\")\n+def get_app():\n+    with pytest.warns(DeprecationWarning):\n         from docs_src.events.tutorial001 import app\n+    yield app\n \n \n-def test_events():\n+def test_events(app: FastAPI):\n     with TestClient(app) as client:\n         response = client.get(\"/items/foo\")\n         assert response.status_code == 200, response.text\n         assert response.json() == {\"name\": \"Fighters\"}\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(app: FastAPI):\n     with TestClient(app) as client:\n         response = client.get(\"/openapi.json\")\n         assert response.status_code == 200, response.text\n\n@@ -1,9 +1,16 @@\n+import pytest\n+from fastapi import FastAPI\n from fastapi.testclient import TestClient\n \n+\n+@pytest.fixture(name=\"app\", scope=\"module\")\n+def get_app():\n+    with pytest.warns(DeprecationWarning):\n         from docs_src.events.tutorial002 import app\n+    yield app\n \n \n-def test_events():\n+def test_events(app: FastAPI):\n     with TestClient(app) as client:\n         response = client.get(\"/items/\")\n         assert response.status_code == 200, response.text\n@@ -12,7 +19,7 @@ def test_events():\n         assert \"Application shutdown\" in log.read()\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(app: FastAPI):\n     with TestClient(app) as client:\n         response = client.get(\"/openapi.json\")\n         assert response.status_code == 200, response.text\n\n@@ -1,5 +1,7 @@\n-from docs_src.app_testing.tutorial003 import test_read_items\n+import pytest\n \n \n def test_main():\n+    with pytest.warns(DeprecationWarning):\n+        from docs_src.app_testing.tutorial003 import test_read_items\n     test_read_items()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
