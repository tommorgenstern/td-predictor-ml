{"custom_id": "fastapi#dcc1e1bcf823927817d8c133962bdb7a29e3d797", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 75 | Lines Deleted: 68 | Files Changed: 9 | Hunks: 66 | Methods Changed: 58 | Complexity Δ (Sum/Max): -18/0 | Churn Δ: 143 | Churn Cumulative: 8060 | Contributors (this commit): 13 | Commits (past 90d): 72 | Contributors (cumulative): 33 | DMM Complexity: 0.14285714285714285\n\nDIFF:\n@@ -1,4 +1,4 @@\n-from typing import Any, Callable, Dict, List, Optional, Set, Type, Union\n+from typing import Any, Callable, Dict, List, Optional, Sequence, Set, Type, Union\n \n from fastapi import routing\n from fastapi.exception_handlers import (\n@@ -130,7 +130,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -152,7 +152,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -176,7 +176,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -199,7 +199,7 @@ class FastAPI(Starlette):\n                 response_model=response_model,\n                 status_code=status_code,\n                 tags=tags or [],\n-                dependencies=dependencies or [],\n+                dependencies=dependencies,\n                 summary=summary,\n                 description=description,\n                 response_description=response_description,\n@@ -237,7 +237,7 @@ class FastAPI(Starlette):\n         *,\n         prefix: str = \"\",\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n     ) -> None:\n         self.router.include_router(\n@@ -255,7 +255,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -275,7 +275,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -298,7 +298,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -318,7 +318,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -341,7 +341,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -361,7 +361,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -384,7 +384,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -404,7 +404,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -427,7 +427,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -447,7 +447,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -470,7 +470,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -490,7 +490,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -513,7 +513,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -533,7 +533,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -556,7 +556,7 @@ class FastAPI(Starlette):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[Depends] = None,\n+        dependencies: Sequence[Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -576,7 +576,7 @@ class FastAPI(Starlette):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n\n@@ -242,7 +242,7 @@ def get_param_field(\n         if isinstance(schema, params.Param) and getattr(schema, \"in_\", None) is None:\n             schema.in_ = default_schema.in_\n         if force_type:\n-            schema.in_ = force_type\n+            schema.in_ = force_type  # type: ignore\n     else:\n         schema = default_schema(default_value)\n     required = default_value == Required\n@@ -422,7 +422,7 @@ def request_params_to_args(\n             value = received_params.getlist(field.alias) or field.default\n         else:\n             value = received_params.get(field.alias)\n-        schema: params.Param = field.schema\n+        schema = field.schema\n         assert isinstance(schema, params.Param), \"Params must be subclasses of Param\"\n         if value is None:\n             if field.required:\n@@ -458,7 +458,7 @@ async def request_body_to_args(\n         if len(required_params) == 1 and not embed:\n             received_body = {field.alias: received_body}\n         for field in required_params:\n-            value = None\n+            value: Any = None\n             if received_body is not None:\n                 if field.shape in sequence_shapes and isinstance(\n                     received_body, FormData\n\n@@ -122,7 +122,7 @@ class Schema(SchemaBase):\n     not_: Optional[List[SchemaBase]] = PSchema(None, alias=\"not\")  # type: ignore\n     items: Optional[SchemaBase] = None\n     properties: Optional[Dict[str, SchemaBase]] = None\n-    additionalProperties: Optional[Union[SchemaBase, bool]] = None\n+    additionalProperties: Optional[Union[SchemaBase, bool]] = None  # type: ignore\n \n \n class Example(BaseModel):\n@@ -149,9 +149,9 @@ class Encoding(BaseModel):\n \n \n class MediaType(BaseModel):\n-    schema_: Optional[Union[Schema, Reference]] = PSchema(\n+    schema_: Optional[Union[Schema, Reference]] = PSchema(  # type: ignore\n         None, alias=\"schema\"\n-    )  # type: ignore\n+    )\n     example: Optional[Any] = None\n     examples: Optional[Dict[str, Union[Example, Reference]]] = None\n     encoding: Optional[Dict[str, Encoding]] = None\n@@ -165,9 +165,9 @@ class ParameterBase(BaseModel):\n     style: Optional[str] = None\n     explode: Optional[bool] = None\n     allowReserved: Optional[bool] = None\n-    schema_: Optional[Union[Schema, Reference]] = PSchema(\n+    schema_: Optional[Union[Schema, Reference]] = PSchema(  # type: ignore\n         None, alias=\"schema\"\n-    )  # type: ignore\n+    )\n     example: Optional[Any] = None\n     examples: Optional[Dict[str, Union[Example, Reference]]] = None\n     # Serialization rules for more complex scenarios\n\n@@ -71,7 +71,8 @@ def get_openapi_operation_parameters(\n     definitions: Dict[str, Dict] = {}\n     parameters = []\n     for param in all_route_params:\n-        schema: Param = param.schema\n+        schema = param.schema\n+        schema = cast(Param, schema)\n         if \"ValidationError\" not in definitions:\n             definitions[\"ValidationError\"] = validation_error_definition\n             definitions[\"HTTPValidationError\"] = validation_error_response_definition\n@@ -90,7 +91,7 @@ def get_openapi_operation_parameters(\n \n \n def get_openapi_operation_request_body(\n-    *, body_field: Field, model_name_map: Dict[Type, str]\n+    *, body_field: Optional[Field], model_name_map: Dict[Type, str]\n ) -> Optional[Dict]:\n     if not body_field:\n         return None\n\n@@ -1,7 +1,7 @@\n import asyncio\n import inspect\n import logging\n-from typing import Any, Callable, Dict, List, Optional, Set, Type, Union\n+from typing import Any, Callable, Dict, List, Optional, Sequence, Set, Type, Union\n \n from fastapi import params\n from fastapi.dependencies.models import Dependant\n@@ -184,14 +184,14 @@ class APIRoute(routing.Route):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         name: str = None,\n-        methods: List[str] = None,\n+        methods: Optional[Union[Set[str], List[str]]] = None,\n         operation_id: str = None,\n         response_model_include: Set[str] = None,\n         response_model_exclude: Set[str] = set(),\n@@ -227,13 +227,18 @@ class APIRoute(routing.Route):\n             # would pass the validation and be returned as is.\n             # By being a new field, no inheritance will be passed as is. A new model\n             # will be always created.\n-            self.secure_cloned_response_field = create_cloned_field(self.response_field)\n+            self.secure_cloned_response_field: Optional[Field] = create_cloned_field(\n+                self.response_field\n+            )\n         else:\n             self.response_field = None\n             self.secure_cloned_response_field = None\n         self.status_code = status_code\n         self.tags = tags or []\n-        self.dependencies = dependencies or []\n+        if dependencies:\n+            self.dependencies = list(dependencies)\n+        else:\n+            self.dependencies = []\n         self.summary = summary\n         self.description = description or inspect.cleandoc(self.endpoint.__doc__ or \"\")\n         self.response_description = response_description\n@@ -264,7 +269,7 @@ class APIRoute(routing.Route):\n         self.deprecated = deprecated\n         if methods is None:\n             methods = [\"GET\"]\n-        self.methods = methods\n+        self.methods = set([method.upper() for method in methods])\n         self.operation_id = operation_id\n         self.response_model_include = response_model_include\n         self.response_model_exclude = response_model_exclude\n@@ -322,13 +327,13 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n-        methods: List[str] = None,\n+        methods: Optional[Union[Set[str], List[str]]] = None,\n         operation_id: str = None,\n         response_model_include: Set[str] = None,\n         response_model_exclude: Set[str] = set(),\n@@ -344,7 +349,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -370,7 +375,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -393,7 +398,7 @@ class APIRouter(routing.Router):\n                 response_model=response_model,\n                 status_code=status_code,\n                 tags=tags or [],\n-                dependencies=dependencies or [],\n+                dependencies=dependencies,\n                 summary=summary,\n                 description=description,\n                 response_description=response_description,\n@@ -432,7 +437,7 @@ class APIRouter(routing.Router):\n         *,\n         prefix: str = \"\",\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n     ) -> None:\n         if prefix:\n@@ -451,7 +456,8 @@ class APIRouter(routing.Router):\n                     response_model=route.response_model,\n                     status_code=route.status_code,\n                     tags=(route.tags or []) + (tags or []),\n-                    dependencies=(dependencies or []) + (route.dependencies or []),\n+                    dependencies=list(dependencies or [])\n+                    + list(route.dependencies or []),\n                     summary=route.summary,\n                     description=route.description,\n                     response_description=route.response_description,\n@@ -471,7 +477,7 @@ class APIRouter(routing.Router):\n                 self.add_route(\n                     prefix + route.path,\n                     route.endpoint,\n-                    methods=route.methods,\n+                    methods=list(route.methods or []),\n                     include_in_schema=route.include_in_schema,\n                     name=route.name,\n                 )\n@@ -491,7 +497,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -512,7 +518,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -536,7 +542,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -556,7 +562,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -580,7 +586,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -600,7 +606,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -624,7 +630,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -644,7 +650,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -668,7 +674,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -688,7 +694,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -712,7 +718,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -732,7 +738,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -756,7 +762,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -776,7 +782,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n@@ -800,7 +806,7 @@ class APIRouter(routing.Router):\n         response_model: Type[Any] = None,\n         status_code: int = 200,\n         tags: List[str] = None,\n-        dependencies: List[params.Depends] = None,\n+        dependencies: Sequence[params.Depends] = None,\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n@@ -820,7 +826,7 @@ class APIRouter(routing.Router):\n             response_model=response_model,\n             status_code=status_code,\n             tags=tags or [],\n-            dependencies=dependencies or [],\n+            dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n\n@@ -54,7 +54,7 @@ class APIKeyCookie(APIKeyBase):\n         self.auto_error = auto_error\n \n     async def __call__(self, request: Request) -> Optional[str]:\n-        api_key: str = request.cookies.get(self.model.name)\n+        api_key = request.cookies.get(self.model.name)\n         if not api_key:\n             if self.auto_error:\n                 raise HTTPException(\n\n@@ -56,7 +56,9 @@ class HTTPBasic(HTTPBase):\n         self.realm = realm\n         self.auto_error = auto_error\n \n-    async def __call__(self, request: Request) -> Optional[HTTPBasicCredentials]:\n+    async def __call__(  # type: ignore\n+        self, request: Request\n+    ) -> Optional[HTTPBasicCredentials]:\n         authorization: str = request.headers.get(\"Authorization\")\n         scheme, param = get_authorization_scheme_param(authorization)\n         if self.realm:\n\n@@ -2,7 +2,7 @@ from typing import List, Optional\n \n from fastapi.exceptions import HTTPException\n from fastapi.openapi.models import OAuth2 as OAuth2Model, OAuthFlows as OAuthFlowsModel\n-from fastapi.params import Form\n+from fastapi.param_functions import Form\n from fastapi.security.base import SecurityBase\n from fastapi.security.utils import get_authorization_scheme_param\n from starlette.requests import Request\n\n@@ -10,9 +10,7 @@ from pydantic.utils import lenient_issubclass\n from starlette.routing import BaseRoute\n \n \n-def get_flat_models_from_routes(\n-    routes: Sequence[Type[BaseRoute]]\n-) -> Set[Type[BaseModel]]:\n+def get_flat_models_from_routes(routes: Sequence[BaseRoute]) -> Set[Type[BaseModel]]:\n     body_fields_from_routes: List[Field] = []\n     responses_from_routes: List[Field] = []\n     for route in routes:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#54368e7b229d16a5e10ee790009cb78f1d58c9c7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 165 | Contributors (this commit): 1 | Commits (past 90d): 28 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.30.0\"\n+__version__ = \"0.30.1\"\n \n from starlette.background import BackgroundTasks\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#b30cca8e9e39461db35cea41967eb206dd51387d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 167 | Contributors (this commit): 1 | Commits (past 90d): 29 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.30.1\"\n+__version__ = \"0.31.0\"\n \n from starlette.background import BackgroundTasks\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#687065509b047a642acd1d281d6d68c6698509b1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 270 | Lines Deleted: 64 | Files Changed: 25 | Hunks: 48 | Methods Changed: 11 | Complexity Δ (Sum/Max): 8/5 | Churn Δ: 334 | Churn Cumulative: 7313 | Contributors (this commit): 10 | Commits (past 90d): 80 | Contributors (cumulative): 38 | DMM Complexity: 0.9032258064516129\n\nDIFF:\n@@ -8,7 +8,11 @@ from fastapi.encoders import jsonable_encoder\n from fastapi.openapi.constants import METHODS_WITH_BODY, REF_PREFIX\n from fastapi.openapi.models import OpenAPI\n from fastapi.params import Body, Param\n-from fastapi.utils import get_flat_models_from_routes, get_model_definitions\n+from fastapi.utils import (\n+    generate_operation_id_for_path,\n+    get_flat_models_from_routes,\n+    get_model_definitions,\n+)\n from pydantic.fields import Field\n from pydantic.schema import field_schema, get_model_name_map\n from pydantic.utils import lenient_issubclass\n@@ -113,10 +117,7 @@ def generate_operation_id(*, route: routing.APIRoute, method: str) -> str:\n     if route.operation_id:\n         return route.operation_id\n     path: str = route.path_format\n-    operation_id = route.name + path\n-    operation_id = operation_id.replace(\"{\", \"_\").replace(\"}\", \"_\").replace(\"/\", \"_\")\n-    operation_id = operation_id + \"_\" + method.lower()\n-    return operation_id\n+    return generate_operation_id_for_path(name=route.name, path=path, method=method)\n \n \n def generate_operation_summary(*, route: routing.APIRoute, method: str) -> str:\n\n@@ -13,7 +13,7 @@ from fastapi.dependencies.utils import (\n )\n from fastapi.encoders import jsonable_encoder\n from fastapi.exceptions import RequestValidationError, WebSocketRequestValidationError\n-from fastapi.utils import create_cloned_field\n+from fastapi.utils import create_cloned_field, generate_operation_id_for_path\n from pydantic import BaseConfig, BaseModel, Schema\n from pydantic.error_wrappers import ErrorWrapper, ValidationError\n from pydantic.fields import Field\n@@ -205,12 +205,19 @@ class APIRoute(routing.Route):\n         self.path = path\n         self.endpoint = endpoint\n         self.name = get_name(endpoint) if name is None else name\n+        self.path_regex, self.path_format, self.param_convertors = compile_path(path)\n+        if methods is None:\n+            methods = [\"GET\"]\n+        self.methods = set([method.upper() for method in methods])\n+        self.unique_id = generate_operation_id_for_path(\n+            name=self.name, path=self.path_format, method=list(methods)[0]\n+        )\n         self.response_model = response_model\n         if self.response_model:\n             assert lenient_issubclass(\n                 response_class, JSONResponse\n             ), \"To declare a type the response must be a JSON response\"\n-            response_name = \"Response_\" + self.name\n+            response_name = \"Response_\" + self.unique_id\n             self.response_field: Optional[Field] = Field(\n                 name=response_name,\n                 type_=self.response_model,\n@@ -251,7 +258,7 @@ class APIRoute(routing.Route):\n                 assert lenient_issubclass(\n                     model, BaseModel\n                 ), \"A response model must be a Pydantic model\"\n-                response_name = f\"Response_{additional_status_code}_{self.name}\"\n+                response_name = f\"Response_{additional_status_code}_{self.unique_id}\"\n                 response_field = Field(\n                     name=response_name,\n                     type_=model,\n@@ -267,9 +274,6 @@ class APIRoute(routing.Route):\n         else:\n             self.response_fields = {}\n         self.deprecated = deprecated\n-        if methods is None:\n-            methods = [\"GET\"]\n-        self.methods = set([method.upper() for method in methods])\n         self.operation_id = operation_id\n         self.response_model_include = response_model_include\n         self.response_model_exclude = response_model_exclude\n@@ -278,7 +282,6 @@ class APIRoute(routing.Route):\n         self.include_in_schema = include_in_schema\n         self.response_class = response_class\n \n-        self.path_regex, self.path_format, self.param_convertors = compile_path(path)\n         assert inspect.isfunction(endpoint) or inspect.ismethod(\n             endpoint\n         ), f\"An endpoint must be a function or method\"\n@@ -288,7 +291,7 @@ class APIRoute(routing.Route):\n                 0,\n                 get_parameterless_sub_dependant(depends=depends, path=self.path_format),\n             )\n-        self.body_field = get_body_field(dependant=self.dependant, name=self.name)\n+        self.body_field = get_body_field(dependant=self.dependant, name=self.unique_id)\n         self.dependency_overrides_provider = dependency_overrides_provider\n         self.app = request_response(\n             get_app(\n\n@@ -93,3 +93,10 @@ def create_cloned_field(field: Field) -> Field:\n     new_field.shape = field.shape\n     new_field._populate_validators()\n     return new_field\n+\n+\n+def generate_operation_id_for_path(*, name: str, path: str, method: str) -> str:\n+    operation_id = name + path\n+    operation_id = operation_id.replace(\"{\", \"_\").replace(\"}\", \"_\").replace(\"/\", \"_\")\n+    operation_id = operation_id + \"_\" + method.lower()\n+    return operation_id\n\n\n\n@@ -0,0 +1,8 @@\n+from fastapi import APIRouter, Body\n+\n+router = APIRouter()\n+\n+\n+@router.post(\"/compute\")\n+def compute(a: int = Body(...), b: str = Body(...)):\n+    return {\"a\": a, \"b\": b}\n\n@@ -0,0 +1,8 @@\n+from fastapi import APIRouter, Body\n+\n+router = APIRouter()\n+\n+\n+@router.post(\"/compute/\")\n+def compute(a: int = Body(...), b: str = Body(...)):\n+    return {\"a\": a, \"b\": b}\n\n@@ -0,0 +1,8 @@\n+from fastapi import FastAPI\n+\n+from . import a, b\n+\n+app = FastAPI()\n+\n+app.include_router(a.router, prefix=\"/a\")\n+app.include_router(b.router, prefix=\"/b\")\n\n@@ -0,0 +1,155 @@\n+from starlette.testclient import TestClient\n+\n+from .app.main import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/a/compute\": {\n+            \"post\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Compute\",\n+                \"operationId\": \"compute_a_compute_post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_compute_a_compute_post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+            }\n+        },\n+        \"/b/compute/\": {\n+            \"post\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Compute\",\n+                \"operationId\": \"compute_b_compute__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_compute_b_compute__post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Body_compute_b_compute__post\": {\n+                \"title\": \"Body_compute_b_compute__post\",\n+                \"required\": [\"a\", \"b\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"a\": {\"title\": \"A\", \"type\": \"integer\"},\n+                    \"b\": {\"title\": \"B\", \"type\": \"string\"},\n+                },\n+            },\n+            \"Body_compute_a_compute_post\": {\n+                \"title\": \"Body_compute_a_compute_post\",\n+                \"required\": [\"a\", \"b\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"a\": {\"title\": \"A\", \"type\": \"integer\"},\n+                    \"b\": {\"title\": \"B\", \"type\": \"string\"},\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+def test_post_a():\n+    data = {\"a\": 2, \"b\": \"foo\"}\n+    response = client.post(\"/a/compute\", json=data)\n+    assert response.status_code == 200\n+    data = response.json()\n+\n+\n+def test_post_a_invalid():\n+    data = {\"a\": \"bar\", \"b\": \"foo\"}\n+    response = client.post(\"/a/compute\", json=data)\n+    assert response.status_code == 422\n+\n+\n+def test_post_b():\n+    data = {\"a\": 2, \"b\": \"foo\"}\n+    response = client.post(\"/b/compute/\", json=data)\n+    assert response.status_code == 200\n+    data = response.json()\n+\n+\n+def test_post_b_invalid():\n+    data = {\"a\": \"bar\", \"b\": \"foo\"}\n+    response = client.post(\"/b/compute/\", json=data)\n+    assert response.status_code == 422\n\n@@ -66,7 +66,7 @@ openapi_schema = {\n                     \"content\": {\n                         \"application/x-www-form-urlencoded\": {\n                             \"schema\": {\n-                                \"$ref\": \"#/components/schemas/Body_read_current_user\"\n+                                \"$ref\": \"#/components/schemas/Body_read_current_user_login_post\"\n                             }\n                         }\n                     },\n@@ -90,8 +90,8 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_read_current_user\": {\n-                \"title\": \"Body_read_current_user\",\n+            \"Body_read_current_user_login_post\": {\n+                \"title\": \"Body_read_current_user_login_post\",\n                 \"required\": [\"grant_type\", \"username\", \"password\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -73,7 +73,7 @@ openapi_schema = {\n                     \"content\": {\n                         \"application/x-www-form-urlencoded\": {\n                             \"schema\": {\n-                                \"$ref\": \"#/components/schemas/Body_read_current_user\"\n+                                \"$ref\": \"#/components/schemas/Body_read_current_user_login_post\"\n                             }\n                         }\n                     },\n@@ -97,8 +97,8 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_read_current_user\": {\n-                \"title\": \"Body_read_current_user\",\n+            \"Body_read_current_user_login_post\": {\n+                \"title\": \"Body_read_current_user_login_post\",\n                 \"required\": [\"grant_type\", \"username\", \"password\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -14,7 +14,7 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"title\": \"Response_Read_Notes\",\n+                                    \"title\": \"Response_Read_Notes_Notes__Get\",\n                                     \"type\": \"array\",\n                                     \"items\": {\"$ref\": \"#/components/schemas/Note\"},\n                                 }\n\n@@ -40,7 +40,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/json\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_update_item\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_update_item_items__item_id__put\"\n+                            }\n                         }\n                     },\n                     \"required\": True,\n@@ -70,8 +72,8 @@ openapi_schema = {\n                     \"full_name\": {\"title\": \"Full_Name\", \"type\": \"string\"},\n                 },\n             },\n-            \"Body_update_item\": {\n-                \"title\": \"Body_update_item\",\n+            \"Body_update_item_items__item_id__put\": {\n+                \"title\": \"Body_update_item_items__item_id__put\",\n                 \"required\": [\"item\", \"user\", \"importance\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -41,7 +41,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/json\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_update_item\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_update_item_items__item_id__put\"\n+                            }\n                         }\n                     },\n                     \"required\": True,\n@@ -71,8 +73,8 @@ openapi_schema = {\n                     \"tax\": {\"title\": \"Tax\", \"type\": \"number\"},\n                 },\n             },\n-            \"Body_update_item\": {\n-                \"title\": \"Body_update_item\",\n+            \"Body_update_item_items__item_id__put\": {\n+                \"title\": \"Body_update_item_items__item_id__put\",\n                 \"required\": [\"item\"],\n                 \"type\": \"object\",\n                 \"properties\": {\"item\": {\"$ref\": \"#/components/schemas/Item\"}},\n\n@@ -44,7 +44,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/json\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_read_items\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n+                            }\n                         }\n                     }\n                 },\n@@ -53,8 +55,8 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_read_items\": {\n-                \"title\": \"Body_read_items\",\n+            \"Body_read_items_items__item_id__put\": {\n+                \"title\": \"Body_read_items_items__item_id__put\",\n                 \"type\": \"object\",\n                 \"properties\": {\n                     \"start_datetime\": {\n\n@@ -16,7 +16,7 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"title\": \"Response_Read_Item\",\n+                                    \"title\": \"Response_Read_Item_Items__Item_Id__Get\",\n                                     \"anyOf\": [\n                                         {\"$ref\": \"#/components/schemas/PlaneItem\"},\n                                         {\"$ref\": \"#/components/schemas/CarItem\"},\n\n@@ -16,7 +16,7 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"title\": \"Response_Read_Items\",\n+                                    \"title\": \"Response_Read_Items_Items__Get\",\n                                     \"type\": \"array\",\n                                     \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n                                 }\n\n@@ -16,7 +16,7 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"title\": \"Response_Read_Keyword_Weights\",\n+                                    \"title\": \"Response_Read_Keyword_Weights_Keyword-Weights__Get\",\n                                     \"type\": \"object\",\n                                     \"additionalProperties\": {\"type\": \"number\"},\n                                 }\n\n@@ -33,7 +33,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"multipart/form-data\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_create_file\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_file_files__post\"\n+                            }\n                         }\n                     },\n                     \"required\": True,\n@@ -64,7 +66,7 @@ openapi_schema = {\n                     \"content\": {\n                         \"multipart/form-data\": {\n                             \"schema\": {\n-                                \"$ref\": \"#/components/schemas/Body_create_upload_file\"\n+                                \"$ref\": \"#/components/schemas/Body_create_upload_file_uploadfile__post\"\n                             }\n                         }\n                     },\n@@ -75,16 +77,16 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_create_file\": {\n-                \"title\": \"Body_create_file\",\n+            \"Body_create_upload_file_uploadfile__post\": {\n+                \"title\": \"Body_create_upload_file_uploadfile__post\",\n                 \"required\": [\"file\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n                     \"file\": {\"title\": \"File\", \"type\": \"string\", \"format\": \"binary\"}\n                 },\n             },\n-            \"Body_create_upload_file\": {\n-                \"title\": \"Body_create_upload_file\",\n+            \"Body_create_file_files__post\": {\n+                \"title\": \"Body_create_file_files__post\",\n                 \"required\": [\"file\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -33,7 +33,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"multipart/form-data\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_create_files\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_files_files__post\"\n+                            }\n                         }\n                     },\n                     \"required\": True,\n@@ -64,7 +66,7 @@ openapi_schema = {\n                     \"content\": {\n                         \"multipart/form-data\": {\n                             \"schema\": {\n-                                \"$ref\": \"#/components/schemas/Body_create_upload_files\"\n+                                \"$ref\": \"#/components/schemas/Body_create_upload_files_uploadfiles__post\"\n                             }\n                         }\n                     },\n@@ -87,8 +89,8 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_create_files\": {\n-                \"title\": \"Body_create_files\",\n+            \"Body_create_upload_files_uploadfiles__post\": {\n+                \"title\": \"Body_create_upload_files_uploadfiles__post\",\n                 \"required\": [\"files\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n@@ -99,8 +101,8 @@ openapi_schema = {\n                     }\n                 },\n             },\n-            \"Body_create_upload_files\": {\n-                \"title\": \"Body_create_upload_files\",\n+            \"Body_create_files_files__post\": {\n+                \"title\": \"Body_create_files_files__post\",\n                 \"required\": [\"files\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -32,7 +32,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/x-www-form-urlencoded\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_login\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_login_login__post\"\n+                            }\n                         }\n                     },\n                     \"required\": True,\n@@ -42,8 +44,8 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_login\": {\n-                \"title\": \"Body_login\",\n+            \"Body_login_login__post\": {\n+                \"title\": \"Body_login_login__post\",\n                 \"required\": [\"username\", \"password\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -34,7 +34,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"multipart/form-data\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_create_file\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_file_files__post\"\n+                            }\n                         }\n                     },\n                     \"required\": True,\n@@ -44,8 +46,8 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_create_file\": {\n-                \"title\": \"Body_create_file\",\n+            \"Body_create_file_files__post\": {\n+                \"title\": \"Body_create_file_files__post\",\n                 \"required\": [\"file\", \"fileb\", \"token\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -31,7 +31,9 @@ openapi_schema = {\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/x-www-form-urlencoded\": {\n-                            \"schema\": {\"$ref\": \"#/components/schemas/Body_login\"}\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_login_token_post\"\n+                            }\n                         }\n                     },\n                     \"required\": True,\n@@ -54,8 +56,8 @@ openapi_schema = {\n     },\n     \"components\": {\n         \"schemas\": {\n-            \"Body_login\": {\n-                \"title\": \"Body_login\",\n+            \"Body_login_token_post\": {\n+                \"title\": \"Body_login_token_post\",\n                 \"required\": [\"username\", \"password\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n\n@@ -42,7 +42,7 @@ openapi_schema = {\n                     \"content\": {\n                         \"application/x-www-form-urlencoded\": {\n                             \"schema\": {\n-                                \"$ref\": \"#/components/schemas/Body_login_for_access_token\"\n+                                \"$ref\": \"#/components/schemas/Body_login_for_access_token_token_post\"\n                             }\n                         }\n                     },\n@@ -116,8 +116,8 @@ openapi_schema = {\n                     \"token_type\": {\"title\": \"Token_Type\", \"type\": \"string\"},\n                 },\n             },\n-            \"Body_login_for_access_token\": {\n-                \"title\": \"Body_login_for_access_token\",\n+            \"Body_login_for_access_token_token_post\": {\n+                \"title\": \"Body_login_for_access_token_token_post\",\n                 \"required\": [\"username\", \"password\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n@@ -177,6 +177,12 @@ openapi_schema = {\n }\n \n \n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n def get_access_token(username=\"johndoe\", password=\"secret\", scope=None):\n     data = {\"username\": username, \"password\": password}\n     if scope:\n@@ -187,12 +193,6 @@ def get_access_token(username=\"johndoe\", password=\"secret\", scope=None):\n     return access_token\n \n \n-def test_openapi_schema():\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200\n-    assert response.json() == openapi_schema\n-\n-\n def test_login():\n     response = client.post(\"/token\", data={\"username\": \"johndoe\", \"password\": \"secret\"})\n     assert response.status_code == 200\n\n@@ -16,7 +16,7 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"title\": \"Response_Read_Users\",\n+                                    \"title\": \"Response_Read_Users_Users__Get\",\n                                     \"type\": \"array\",\n                                     \"items\": {\"$ref\": \"#/components/schemas/User\"},\n                                 }\n@@ -168,7 +168,7 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"title\": \"Response_Read_Items\",\n+                                    \"title\": \"Response_Read_Items_Items__Get\",\n                                     \"type\": \"array\",\n                                     \"items\": {\"$ref\": \"#/components/schemas/Item\"},\n                                 }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
