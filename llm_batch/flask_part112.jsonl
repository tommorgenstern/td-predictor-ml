{"custom_id": "flask#f139024b1ca637cc6df694f49817bdb8ec294561", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1972 | Contributors (this commit): 16 | Commits (past 90d): 1 | Contributors (cumulative): 16 | DMM Complexity: None\n\nDIFF:\n@@ -43,8 +43,6 @@ html_context = {\n         ProjectLink(\"PyPI Releases\", \"https://pypi.org/project/Flask/\"),\n         ProjectLink(\"Source Code\", \"https://github.com/pallets/flask/\"),\n         ProjectLink(\"Issue Tracker\", \"https://github.com/pallets/flask/issues/\"),\n-        ProjectLink(\"Website\", \"https://palletsprojects.com/p/flask/\"),\n-        ProjectLink(\"Twitter\", \"https://twitter.com/PalletsTeam\"),\n         ProjectLink(\"Chat\", \"https://discord.gg/pallets\"),\n     ]\n }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#2e8fe7b2f2b541a60c90c625446647b22c5cacc2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 24 | Files Changed: 4 | Hunks: 11 | Methods Changed: 4 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 29 | Churn Cumulative: 5738 | Contributors (this commit): 40 | Commits (past 90d): 18 | Contributors (cumulative): 54 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,7 +1,5 @@\n from __future__ import annotations\n \n-import functools\n-import inspect\n import logging\n import os\n import sys\n@@ -9,6 +7,7 @@ import typing as t\n import weakref\n from collections.abc import Iterator as _abc_Iterator\n from datetime import timedelta\n+from inspect import iscoroutinefunction\n from itertools import chain\n from types import TracebackType\n from urllib.parse import quote as _url_quote\n@@ -70,7 +69,6 @@ from .wrappers import Request\n from .wrappers import Response\n \n if t.TYPE_CHECKING:  # pragma: no cover\n-    import typing_extensions as te\n     from .blueprints import Blueprint\n     from .testing import FlaskClient\n     from .testing import FlaskCliRunner\n@@ -83,19 +81,6 @@ T_template_filter = t.TypeVar(\"T_template_filter\", bound=ft.TemplateFilterCallab\n T_template_global = t.TypeVar(\"T_template_global\", bound=ft.TemplateGlobalCallable)\n T_template_test = t.TypeVar(\"T_template_test\", bound=ft.TemplateTestCallable)\n \n-if sys.version_info >= (3, 8):\n-    iscoroutinefunction = inspect.iscoroutinefunction\n-else:\n-\n-    def iscoroutinefunction(func: t.Any) -> bool:\n-        while inspect.ismethod(func):\n-            func = func.__func__\n-\n-        while isinstance(func, functools.partial):\n-            func = func.func\n-\n-        return inspect.iscoroutinefunction(func)\n-\n \n def _make_timedelta(value: timedelta | int | None) -> timedelta | None:\n     if value is None or isinstance(value, timedelta):\n@@ -1430,7 +1415,7 @@ class Flask(Scaffold):\n             f\"Exception on {request.path} [{request.method}]\", exc_info=exc_info\n         )\n \n-    def raise_routing_exception(self, request: Request) -> te.NoReturn:\n+    def raise_routing_exception(self, request: Request) -> t.NoReturn:\n         \"\"\"Intercept routing exceptions and possibly do something else.\n \n         In debug mode, intercept a routing redirect and replace it with\n\n@@ -25,7 +25,6 @@ from .signals import message_flashed\n if t.TYPE_CHECKING:  # pragma: no cover\n     from werkzeug.wrappers import Response as BaseResponse\n     from .wrappers import Response\n-    import typing_extensions as te\n \n \n def get_debug_flag() -> bool:\n@@ -257,7 +256,7 @@ def redirect(\n     return _wz_redirect(location, code=code, Response=Response)\n \n \n-def abort(code: int | BaseResponse, *args: t.Any, **kwargs: t.Any) -> te.NoReturn:\n+def abort(code: int | BaseResponse, *args: t.Any, **kwargs: t.Any) -> t.NoReturn:\n     \"\"\"Raise an :exc:`~werkzeug.exceptions.HTTPException` for the given\n     status code.\n \n\n@@ -13,7 +13,6 @@ from werkzeug.datastructures import CallbackDict\n from .json.tag import TaggedJSONSerializer\n \n if t.TYPE_CHECKING:  # pragma: no cover\n-    import typing_extensions as te\n     from .app import Flask\n     from .wrappers import Request, Response\n \n@@ -94,7 +93,7 @@ class NullSession(SecureCookieSession):\n     but fail on setting.\n     \"\"\"\n \n-    def _fail(self, *args: t.Any, **kwargs: t.Any) -> te.NoReturn:\n+    def _fail(self, *args: t.Any, **kwargs: t.Any) -> t.NoReturn:\n         raise RuntimeError(\n             \"The session is unavailable because no secret \"\n             \"key was set.  Set the secret_key on the \"\n\n@@ -3,8 +3,6 @@ from __future__ import annotations\n import typing as t\n from http import HTTPStatus\n \n-import typing_extensions as te\n-\n from flask import Flask\n from flask import jsonify\n from flask import stream_template\n@@ -40,7 +38,7 @@ def hello_json_list() -> t.List[t.Any]:\n     return [{\"message\": \"Hello\"}, {\"message\": \"World\"}]\n \n \n-class StatusJSON(te.TypedDict):\n+class StatusJSON(t.TypedDict):\n     status: str\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#83d777bebfb3031de51d458b47d06e8e612f3a3d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 1976 | Contributors (this commit): 16 | Commits (past 90d): 2 | Contributors (cumulative): 16 | DMM Complexity: None\n\nDIFF:\n@@ -52,8 +52,8 @@ html_sidebars = {\n }\n singlehtml_sidebars = {\"index\": [\"project.html\", \"localtoc.html\", \"ethicalads.html\"]}\n html_static_path = [\"_static\"]\n-html_favicon = \"_static/flask-icon.png\"\n-html_logo = \"_static/flask-icon.png\"\n+html_favicon = \"_static/shortcut-icon.png\"\n+html_logo = \"_static/flask-vertical.png\"\n html_title = f\"Flask Documentation ({version})\"\n html_show_sourcelink = False\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#74e03298200e33951ca350a35aa3a8c0b4ff8177", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 2 | Churn Cumulative: 350 | Contributors (this commit): 6 | Commits (past 90d): 5 | Contributors (cumulative): 6 | DMM Complexity: None\n\nDIFF:\n@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.2.3\"\n+__version__ = \"2.2.4\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#79ebf6c39cba01b240a926b899b7d0828e63fc4b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 3246 | Contributors (this commit): 27 | Commits (past 90d): 9 | Contributors (cumulative): 27 | DMM Complexity: None\n\nDIFF:\n@@ -1852,7 +1852,7 @@ class Flask(Scaffold):\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)  # type: ignore[arg-type]\n+            rv.headers.update(headers)\n \n         return rv\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8728c3e4cd4e929a4327d917acd4b96c75f963d0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 2 | Churn Cumulative: 352 | Contributors (this commit): 6 | Commits (past 90d): 6 | Contributors (cumulative): 6 | DMM Complexity: None\n\nDIFF:\n@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.3.0.dev\"\n+__version__ = \"2.3.0\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#345f18442ceb29f9e365af99fc85bdc5986323d2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 354 | Contributors (this commit): 6 | Commits (past 90d): 7 | Contributors (cumulative): 6 | DMM Complexity: None\n\nDIFF:\n@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.3.0\"\n+__version__ = \"2.3.1.dev\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0ec9192cf25f5187d6521f2539489fa8d55336bb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 356 | Contributors (this commit): 7 | Commits (past 90d): 8 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -76,7 +76,7 @@ def __getattr__(name):\n         )\n         return escape\n \n-    if name == \"escape\":\n+    if name == \"Markup\":\n         import warnings\n         from markupsafe import Markup\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#721abdc3810057269503a72d2db80fb826f3c85c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 358 | Contributors (this commit): 7 | Commits (past 90d): 9 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.3.1.dev\"\n+__version__ = \"2.3.1\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0bc7356ce1ae11e633426902aba76d525f4523da", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 360 | Contributors (this commit): 7 | Commits (past 90d): 10 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.3.1\"\n+__version__ = \"2.3.2.dev\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#9532cba45d2339e90ebf04f178b1e4f2064e7328", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 3248 | Contributors (this commit): 27 | Commits (past 90d): 10 | Contributors (cumulative): 27 | DMM Complexity: None\n\nDIFF:\n@@ -1852,7 +1852,7 @@ class Flask(Scaffold):\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)\n+            rv.headers.update(headers)  # type: ignore[arg-type]\n \n         return rv\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8705dd39c4fa563ea0fe0bf84c85da8fcc98b88d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 29 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 7 | Methods Changed: 6 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 33 | Churn Cumulative: 5264 | Contributors (this commit): 49 | Commits (past 90d): 10 | Contributors (cumulative): 53 | DMM Complexity: 1.0\n\nDIFF:\n@@ -329,6 +329,10 @@ class SecureCookieSessionInterface(SessionInterface):\n         samesite = self.get_cookie_samesite(app)\n         httponly = self.get_cookie_httponly(app)\n \n+        # Add a \"Vary: Cookie\" header if the session was accessed at all.\n+        if session.accessed:\n+            response.vary.add(\"Cookie\")\n+\n         # If the session is modified to be empty, remove the cookie.\n         # If the session is empty, return without setting the cookie.\n         if not session:\n@@ -341,13 +345,10 @@ class SecureCookieSessionInterface(SessionInterface):\n                     samesite=samesite,\n                     httponly=httponly,\n                 )\n+                response.vary.add(\"Cookie\")\n \n             return\n \n-        # Add a \"Vary: Cookie\" header if the session was accessed at all.\n-        if session.accessed:\n-            response.vary.add(\"Cookie\")\n-\n         if not self.should_set_cookie(app, session):\n             return\n \n@@ -363,3 +364,4 @@ class SecureCookieSessionInterface(SessionInterface):\n             secure=secure,\n             samesite=samesite,\n         )\n+        response.vary.add(\"Cookie\")\n\n@@ -501,6 +501,11 @@ def test_session_vary_cookie(app, client):\n     def setdefault():\n         return flask.session.setdefault(\"test\", \"default\")\n \n+    @app.route(\"/clear\")\n+    def clear():\n+        flask.session.clear()\n+        return \"\"\n+\n     @app.route(\"/vary-cookie-header-set\")\n     def vary_cookie_header_set():\n         response = flask.Response()\n@@ -533,11 +538,29 @@ def test_session_vary_cookie(app, client):\n     expect(\"/get\")\n     expect(\"/getitem\")\n     expect(\"/setdefault\")\n+    expect(\"/clear\")\n     expect(\"/vary-cookie-header-set\")\n     expect(\"/vary-header-set\", \"Accept-Encoding, Accept-Language, Cookie\")\n     expect(\"/no-vary-header\", None)\n \n \n+def test_session_refresh_vary(app, client):\n+    @app.get(\"/login\")\n+    def login():\n+        flask.session[\"user_id\"] = 1\n+        flask.session.permanent = True\n+        return \"\"\n+\n+    @app.get(\"/ignored\")\n+    def ignored():\n+        return \"\"\n+\n+    rv = client.get(\"/login\")\n+    assert rv.headers[\"Vary\"] == \"Cookie\"\n+    rv = client.get(\"/ignored\")\n+    assert rv.headers[\"Vary\"] == \"Cookie\"\n+\n+\n def test_flashes(app, req_ctx):\n     assert not flask.session.modified\n     flask.flash(\"Zap\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e1aedecdc689cc9a79131851dbdabf6c3bc49c9e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 14 | Files Changed: 1 | Hunks: 5 | Methods Changed: 1 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 18 | Churn Cumulative: 497 | Contributors (this commit): 3 | Commits (past 90d): 4 | Contributors (cumulative): 3 | DMM Complexity: 1.0\n\nDIFF:\n@@ -138,21 +138,14 @@ class FlaskClient(Client):\n         :meth:`~flask.Flask.test_request_context` which are directly\n         passed through.\n         \"\"\"\n-        # new cookie interface for Werkzeug >= 2.3\n-        cookie_storage = self._cookies if hasattr(self, \"_cookies\") else self.cookie_jar\n-\n-        if cookie_storage is None:\n+        if self._cookies is None:\n             raise TypeError(\n                 \"Cookies are disabled. Create a client with 'use_cookies=True'.\"\n             )\n \n         app = self.application\n         ctx = app.test_request_context(*args, **kwargs)\n-\n-        if hasattr(self, \"_add_cookies_to_wsgi\"):\n         self._add_cookies_to_wsgi(ctx.request.environ)\n-        else:\n-            self.cookie_jar.inject_wsgi(ctx.request.environ)  # type: ignore[union-attr]\n \n         with ctx:\n             sess = app.session_interface.open_session(app, ctx.request)\n@@ -169,13 +162,10 @@ class FlaskClient(Client):\n         with ctx:\n             app.session_interface.save_session(app, sess, resp)\n \n-        if hasattr(self, \"_update_cookies_from_response\"):\n         self._update_cookies_from_response(\n-                ctx.request.host.partition(\":\")[0], resp.headers.getlist(\"Set-Cookie\")\n-            )\n-        else:\n-            self.cookie_jar.extract_wsgi(  # type: ignore[union-attr]\n-                ctx.request.environ, resp.headers\n+            ctx.request.host.partition(\":\")[0],\n+            ctx.request.path,\n+            resp.headers.getlist(\"Set-Cookie\"),\n         )\n \n     def _copy_environ(self, other):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#f3b8f570545200c87465d18386f3fc9f2258307a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 362 | Contributors (this commit): 7 | Commits (past 90d): 11 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.3.2.dev\"\n+__version__ = \"2.3.2\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#726d3f4fa9e8a2960541debc2d2713571da54441", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 2 | Churn Cumulative: 364 | Contributors (this commit): 7 | Commits (past 90d): 12 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.2.4\"\n+__version__ = \"2.2.5.dev\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#3fbfbad79fe294918459b70eb409d555b20de2c8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 13 | Churn Cumulative: 510 | Contributors (this commit): 3 | Commits (past 90d): 5 | Contributors (cumulative): 3 | DMM Complexity: 0.0\n\nDIFF:\n@@ -168,10 +168,21 @@ class FlaskClient(Client):\n             app.session_interface.save_session(app, sess, resp)\n \n         if hasattr(self, \"_update_cookies_from_response\"):\n+            try:\n+                # Werkzeug>=2.3.3\n                 self._update_cookies_from_response(\n-                ctx.request.host.partition(\":\")[0], resp.headers.getlist(\"Set-Cookie\")\n+                    ctx.request.host.partition(\":\")[0],\n+                    ctx.request.path,\n+                    resp.headers.getlist(\"Set-Cookie\"),\n+                )\n+            except TypeError:\n+                # Werkzeug>=2.3.0,<2.3.3\n+                self._update_cookies_from_response(  # type: ignore[call-arg]\n+                    ctx.request.host.partition(\":\")[0],\n+                    resp.headers.getlist(\"Set-Cookie\"),  # type: ignore[arg-type]\n                 )\n         else:\n+            # Werkzeug<2.3.0\n             self.cookie_jar.extract_wsgi(  # type: ignore[union-attr]\n                 ctx.request.environ, resp.headers\n             )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8646edca6f47e2cd57464081b3911218d4734f8d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 29 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 7 | Methods Changed: 6 | Complexity Δ (Sum/Max): 21/15 | Churn Δ: 33 | Churn Cumulative: 5297 | Contributors (this commit): 49 | Commits (past 90d): 12 | Contributors (cumulative): 53 | DMM Complexity: 1.0\n\nDIFF:\n@@ -383,6 +383,10 @@ class SecureCookieSessionInterface(SessionInterface):\n         samesite = self.get_cookie_samesite(app)\n         httponly = self.get_cookie_httponly(app)\n \n+        # Add a \"Vary: Cookie\" header if the session was accessed at all.\n+        if session.accessed:\n+            response.vary.add(\"Cookie\")\n+\n         # If the session is modified to be empty, remove the cookie.\n         # If the session is empty, return without setting the cookie.\n         if not session:\n@@ -395,13 +399,10 @@ class SecureCookieSessionInterface(SessionInterface):\n                     samesite=samesite,\n                     httponly=httponly,\n                 )\n+                response.vary.add(\"Cookie\")\n \n             return\n \n-        # Add a \"Vary: Cookie\" header if the session was accessed at all.\n-        if session.accessed:\n-            response.vary.add(\"Cookie\")\n-\n         if not self.should_set_cookie(app, session):\n             return\n \n@@ -417,3 +418,4 @@ class SecureCookieSessionInterface(SessionInterface):\n             secure=secure,\n             samesite=samesite,\n         )\n+        response.vary.add(\"Cookie\")\n\n@@ -560,6 +560,11 @@ def test_session_vary_cookie(app, client):\n     def setdefault():\n         return flask.session.setdefault(\"test\", \"default\")\n \n+    @app.route(\"/clear\")\n+    def clear():\n+        flask.session.clear()\n+        return \"\"\n+\n     @app.route(\"/vary-cookie-header-set\")\n     def vary_cookie_header_set():\n         response = flask.Response()\n@@ -592,11 +597,29 @@ def test_session_vary_cookie(app, client):\n     expect(\"/get\")\n     expect(\"/getitem\")\n     expect(\"/setdefault\")\n+    expect(\"/clear\")\n     expect(\"/vary-cookie-header-set\")\n     expect(\"/vary-header-set\", \"Accept-Encoding, Accept-Language, Cookie\")\n     expect(\"/no-vary-header\", None)\n \n \n+def test_session_refresh_vary(app, client):\n+    @app.get(\"/login\")\n+    def login():\n+        flask.session[\"user_id\"] = 1\n+        flask.session.permanent = True\n+        return \"\"\n+\n+    @app.get(\"/ignored\")\n+    def ignored():\n+        return \"\"\n+\n+    rv = client.get(\"/login\")\n+    assert rv.headers[\"Vary\"] == \"Cookie\"\n+    rv = client.get(\"/ignored\")\n+    assert rv.headers[\"Vary\"] == \"Cookie\"\n+\n+\n def test_flashes(app, req_ctx):\n     assert not flask.session.modified\n     flask.flash(\"Zap\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#47af817c8fe01045c641b97f8fb784c7ad864eee", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 366 | Contributors (this commit): 7 | Commits (past 90d): 13 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -42,7 +42,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.2.5.dev\"\n+__version__ = \"2.2.5\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1d7281fe0770a97229a2a75189a712cff866b448", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 56 | Files Changed: 3 | Hunks: 5 | Methods Changed: 4 | Complexity Δ (Sum/Max): -5/0 | Churn Δ: 57 | Churn Cumulative: 2862 | Contributors (this commit): 24 | Commits (past 90d): 8 | Contributors (cumulative): 30 | DMM Complexity: 0.0\n\nDIFF:\n@@ -865,7 +865,7 @@ def _find_package_path(import_name):\n     if hasattr(loader, \"get_filename\"):\n         filename = loader.get_filename(root_mod_name)\n     elif hasattr(loader, \"archive\"):\n-        # zipimporter's loader.archive points to the .egg or .zip file.\n+        # zipimporter's loader.archive points to the .zip file.\n         filename = loader.archive\n     else:\n         # At least one loader is missing both get_filename and archive:\n\n@@ -1,7 +1,6 @@\n import os\n import pkgutil\n import sys\n-import textwrap\n \n import pytest\n from _pytest import monkeypatch\n@@ -154,42 +153,6 @@ def site_packages(modules_tmpdir, monkeypatch):\n     return rv\n \n \n-@pytest.fixture\n-def install_egg(modules_tmpdir, monkeypatch):\n-    \"\"\"Generate egg from package name inside base and put the egg into\n-    sys.path.\"\"\"\n-\n-    def inner(name, base=modules_tmpdir):\n-        base.join(name).ensure_dir()\n-        base.join(name).join(\"__init__.py\").ensure()\n-\n-        egg_setup = base.join(\"setup.py\")\n-        egg_setup.write(\n-            textwrap.dedent(\n-                f\"\"\"\n-                from setuptools import setup\n-                setup(\n-                    name=\"{name}\",\n-                    version=\"1.0\",\n-                    packages=[\"site_egg\"],\n-                    zip_safe=True,\n-                )\n-                \"\"\"\n-            )\n-        )\n-\n-        import subprocess\n-\n-        subprocess.check_call(\n-            [sys.executable, \"setup.py\", \"bdist_egg\"], cwd=str(modules_tmpdir)\n-        )\n-        (egg_path,) = modules_tmpdir.join(\"dist/\").listdir()\n-        monkeypatch.syspath_prepend(str(egg_path))\n-        return egg_path\n-\n-    return inner\n-\n-\n @pytest.fixture\n def purge_module(request):\n     def inner(name):\n\n@@ -1,5 +1,3 @@\n-import sys\n-\n import pytest\n \n import flask\n@@ -107,19 +105,3 @@ def test_prefix_package_paths(\n     assert site_package.app.instance_path == modules_tmpdir.join(\"var\").join(\n         \"site_package-instance\"\n     )\n-\n-\n-def test_egg_installed_paths(install_egg, modules_tmpdir, modules_tmpdir_prefix):\n-    modules_tmpdir.mkdir(\"site_egg\").join(\"__init__.py\").write(\n-        \"import flask\\n\\napp = flask.Flask(__name__)\"\n-    )\n-    install_egg(\"site_egg\")\n-    try:\n-        import site_egg\n-\n-        assert site_egg.app.instance_path == str(\n-            modules_tmpdir.join(\"var/\").join(\"site_egg-instance\")\n-        )\n-    finally:\n-        if \"site_egg\" in sys.modules:\n-            del sys.modules[\"site_egg\"]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0a00e1b6085f62fb776a95ef676ea661bff565f6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 59 | Lines Deleted: 64 | Files Changed: 4 | Hunks: 29 | Methods Changed: 25 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 123 | Churn Cumulative: 6043 | Contributors (this commit): 50 | Commits (past 90d): 9 | Contributors (cumulative): 65 | DMM Complexity: 0.0\n\nDIFF:\n@@ -128,28 +128,27 @@ def limit_loader(request, monkeypatch):\n \n \n @pytest.fixture\n-def modules_tmpdir(tmpdir, monkeypatch):\n-    \"\"\"A tmpdir added to sys.path.\"\"\"\n-    rv = tmpdir.mkdir(\"modules_tmpdir\")\n-    monkeypatch.syspath_prepend(str(rv))\n+def modules_tmp_path(tmp_path, monkeypatch):\n+    \"\"\"A temporary directory added to sys.path.\"\"\"\n+    rv = tmp_path / \"modules_tmp\"\n+    rv.mkdir()\n+    monkeypatch.syspath_prepend(os.fspath(rv))\n     return rv\n \n \n @pytest.fixture\n-def modules_tmpdir_prefix(modules_tmpdir, monkeypatch):\n-    monkeypatch.setattr(sys, \"prefix\", str(modules_tmpdir))\n-    return modules_tmpdir\n+def modules_tmp_path_prefix(modules_tmp_path, monkeypatch):\n+    monkeypatch.setattr(sys, \"prefix\", os.fspath(modules_tmp_path))\n+    return modules_tmp_path\n \n \n @pytest.fixture\n-def site_packages(modules_tmpdir, monkeypatch):\n+def site_packages(modules_tmp_path, monkeypatch):\n     \"\"\"Create a fake site-packages.\"\"\"\n-    rv = (\n-        modules_tmpdir.mkdir(\"lib\")\n-        .mkdir(f\"python{sys.version_info.major}.{sys.version_info.minor}\")\n-        .mkdir(\"site-packages\")\n-    )\n-    monkeypatch.syspath_prepend(str(rv))\n+    py_dir = f\"python{sys.version_info.major}.{sys.version_info.minor}\"\n+    rv = modules_tmp_path / \"lib\" / py_dir / \"site-packages\"\n+    rv.mkdir(parents=True)\n+    monkeypatch.syspath_prepend(os.fspath(rv))\n     return rv\n \n \n\n@@ -1,6 +1,5 @@\n import json\n import os\n-import textwrap\n \n import pytest\n \n@@ -242,17 +241,10 @@ def test_get_namespace():\n \n \n @pytest.mark.parametrize(\"encoding\", [\"utf-8\", \"iso-8859-15\", \"latin-1\"])\n-def test_from_pyfile_weird_encoding(tmpdir, encoding):\n-    f = tmpdir.join(\"my_config.py\")\n-    f.write_binary(\n-        textwrap.dedent(\n-            f\"\"\"\n-            # -*- coding: {encoding} -*-\n-            TEST_VALUE = \"föö\"\n-            \"\"\"\n-        ).encode(encoding)\n-    )\n+def test_from_pyfile_weird_encoding(tmp_path, encoding):\n+    f = tmp_path / \"my_config.py\"\n+    f.write_text(f'# -*- coding: {encoding} -*-\\nTEST_VALUE = \"föö\"\\n', encoding)\n     app = flask.Flask(__name__)\n-    app.config.from_pyfile(str(f))\n+    app.config.from_pyfile(os.fspath(f))\n     value = app.config[\"TEST_VALUE\"]\n     assert value == \"föö\"\n\n@@ -218,8 +218,8 @@ class TestNoImports:\n     imp modules in the Python standard library.\n     \"\"\"\n \n-    def test_name_with_import_error(self, modules_tmpdir):\n-        modules_tmpdir.join(\"importerror.py\").write(\"raise NotImplementedError()\")\n+    def test_name_with_import_error(self, modules_tmp_path):\n+        (modules_tmp_path / \"importerror.py\").write_text(\"raise NotImplementedError()\")\n         try:\n             flask.Flask(\"importerror\")\n         except NotImplementedError:\n\n@@ -1,19 +1,20 @@\n+import os\n+\n import pytest\n \n import flask\n \n \n-def test_explicit_instance_paths(modules_tmpdir):\n-    with pytest.raises(ValueError) as excinfo:\n+def test_explicit_instance_paths(modules_tmp_path):\n+    with pytest.raises(ValueError, match=\".*must be absolute\"):\n         flask.Flask(__name__, instance_path=\"instance\")\n-    assert \"must be absolute\" in str(excinfo.value)\n \n-    app = flask.Flask(__name__, instance_path=str(modules_tmpdir))\n-    assert app.instance_path == str(modules_tmpdir)\n+    app = flask.Flask(__name__, instance_path=os.fspath(modules_tmp_path))\n+    assert app.instance_path == os.fspath(modules_tmp_path)\n \n \n-def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n-    app = modules_tmpdir.join(\"config_module_app.py\").write(\n+def test_uninstalled_module_paths(modules_tmp_path, purge_module):\n+    (modules_tmp_path / \"config_module_app.py\").write_text(\n         \"import os\\n\"\n         \"import flask\\n\"\n         \"here = os.path.abspath(os.path.dirname(__file__))\\n\"\n@@ -23,13 +24,13 @@ def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n \n     from config_module_app import app\n \n-    assert app.instance_path == str(modules_tmpdir.join(\"instance\"))\n+    assert app.instance_path == os.fspath(modules_tmp_path / \"instance\")\n \n \n-def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n-    app = modules_tmpdir.mkdir(\"config_package_app\")\n-    init = app.join(\"__init__.py\")\n-    init.write(\n+def test_uninstalled_package_paths(modules_tmp_path, purge_module):\n+    app = modules_tmp_path / \"config_package_app\"\n+    app.mkdir()\n+    (app / \"__init__.py\").write_text(\n         \"import os\\n\"\n         \"import flask\\n\"\n         \"here = os.path.abspath(os.path.dirname(__file__))\\n\"\n@@ -39,16 +40,16 @@ def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n \n     from config_package_app import app\n \n-    assert app.instance_path == str(modules_tmpdir.join(\"instance\"))\n+    assert app.instance_path == os.fspath(modules_tmp_path / \"instance\")\n \n \n-def test_uninstalled_namespace_paths(tmpdir, monkeypatch, purge_module):\n+def test_uninstalled_namespace_paths(tmp_path, monkeypatch, purge_module):\n     def create_namespace(package):\n-        project = tmpdir.join(f\"project-{package}\")\n-        monkeypatch.syspath_prepend(str(project))\n-        project.join(\"namespace\").join(package).join(\"__init__.py\").write(\n-            \"import flask\\napp = flask.Flask(__name__)\\n\", ensure=True\n-        )\n+        project = tmp_path / f\"project-{package}\"\n+        monkeypatch.syspath_prepend(os.fspath(project))\n+        ns = project / \"namespace\" / package\n+        ns.mkdir(parents=True)\n+        (ns / \"__init__.py\").write_text(\"import flask\\napp = flask.Flask(__name__)\\n\")\n         return project\n \n     _ = create_namespace(\"package1\")\n@@ -58,50 +59,53 @@ def test_uninstalled_namespace_paths(tmpdir, monkeypatch, purge_module):\n \n     from namespace.package2 import app\n \n-    assert app.instance_path == str(project2.join(\"instance\"))\n+    assert app.instance_path == os.fspath(project2 / \"instance\")\n \n \n def test_installed_module_paths(\n-    modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages, limit_loader\n+    modules_tmp_path, modules_tmp_path_prefix, purge_module, site_packages, limit_loader\n ):\n-    site_packages.join(\"site_app.py\").write(\n+    (site_packages / \"site_app.py\").write_text(\n         \"import flask\\napp = flask.Flask(__name__)\\n\"\n     )\n     purge_module(\"site_app\")\n \n     from site_app import app\n \n-    assert app.instance_path == modules_tmpdir.join(\"var\").join(\"site_app-instance\")\n+    assert app.instance_path == os.fspath(\n+        modules_tmp_path / \"var\" / \"site_app-instance\"\n+    )\n \n \n def test_installed_package_paths(\n-    limit_loader, modules_tmpdir, modules_tmpdir_prefix, purge_module, monkeypatch\n+    limit_loader, modules_tmp_path, modules_tmp_path_prefix, purge_module, monkeypatch\n ):\n-    installed_path = modules_tmpdir.mkdir(\"path\")\n+    installed_path = modules_tmp_path / \"path\"\n+    installed_path.mkdir()\n     monkeypatch.syspath_prepend(installed_path)\n \n-    app = installed_path.mkdir(\"installed_package\")\n-    init = app.join(\"__init__.py\")\n-    init.write(\"import flask\\napp = flask.Flask(__name__)\")\n+    app = installed_path / \"installed_package\"\n+    app.mkdir()\n+    (app / \"__init__.py\").write_text(\"import flask\\napp = flask.Flask(__name__)\\n\")\n     purge_module(\"installed_package\")\n \n     from installed_package import app\n \n-    assert app.instance_path == modules_tmpdir.join(\"var\").join(\n-        \"installed_package-instance\"\n+    assert app.instance_path == os.fspath(\n+        modules_tmp_path / \"var\" / \"installed_package-instance\"\n     )\n \n \n def test_prefix_package_paths(\n-    limit_loader, modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages\n+    limit_loader, modules_tmp_path, modules_tmp_path_prefix, purge_module, site_packages\n ):\n-    app = site_packages.mkdir(\"site_package\")\n-    init = app.join(\"__init__.py\")\n-    init.write(\"import flask\\napp = flask.Flask(__name__)\")\n+    app = site_packages / \"site_package\"\n+    app.mkdir()\n+    (app / \"__init__.py\").write_text(\"import flask\\napp = flask.Flask(__name__)\\n\")\n     purge_module(\"site_package\")\n \n     import site_package\n \n-    assert site_package.app.instance_path == modules_tmpdir.join(\"var\").join(\n-        \"site_package-instance\"\n+    assert site_package.app.instance_path == os.fspath(\n+        modules_tmp_path / \"var\" / \"site_package-instance\"\n     )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#2abb7513dc52e9d9f2c73dde91f3b89d8f9492e4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 6 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 471 | Contributors (this commit): 7 | Commits (past 90d): 3 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -72,7 +72,9 @@ class Config(dict):\n     :param defaults: an optional dictionary of default values\n     \"\"\"\n \n-    def __init__(self, root_path: str, defaults: dict | None = None) -> None:\n+    def __init__(\n+        self, root_path: str | os.PathLike, defaults: dict | None = None\n+    ) -> None:\n         super().__init__(defaults or {})\n         self.root_path = root_path\n \n@@ -164,7 +166,7 @@ class Config(dict):\n \n         return True\n \n-    def from_pyfile(self, filename: str, silent: bool = False) -> bool:\n+    def from_pyfile(self, filename: str | os.PathLike, silent: bool = False) -> bool:\n         \"\"\"Updates the values in the config from a Python file.  This function\n         behaves as if the file was imported as module with the\n         :meth:`from_object` function.\n@@ -233,7 +235,7 @@ class Config(dict):\n \n     def from_file(\n         self,\n-        filename: str,\n+        filename: str | os.PathLike,\n         load: t.Callable[[t.IO[t.Any]], t.Mapping],\n         silent: bool = False,\n         text: bool = True,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#367e1df785a71e9004d9a87a221652bfc5a964ac", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 2 | Churn Cumulative: 368 | Contributors (this commit): 7 | Commits (past 90d): 11 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -38,7 +38,7 @@ from .templating import render_template_string as render_template_string\n from .templating import stream_template as stream_template\n from .templating import stream_template_string as stream_template_string\n \n-__version__ = \"2.3.2\"\n+__version__ = \"2.3.3.dev\"\n \n \n def __getattr__(name):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#84e11a1e827c0f55f9b9ee15952eddcf8a6492e0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/1 | Churn Δ: 9 | Churn Cumulative: 4066 | Contributors (this commit): 26 | Commits (past 90d): 8 | Contributors (cumulative): 32 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,7 +1,7 @@\n from __future__ import annotations\n \n+import importlib.util\n import os\n-import pkgutil\n import socket\n import sys\n import typing as t\n@@ -575,7 +575,8 @@ def get_root_path(import_name: str) -> str:\n         return os.path.dirname(os.path.abspath(mod.__file__))\n \n     # Next attempt: check the loader.\n-    loader = pkgutil.get_loader(import_name)\n+    spec = importlib.util.find_spec(import_name)\n+    loader = spec.loader if spec is not None else None\n \n     # Loader does not exist or we're referring to an unloaded main\n     # module or a main module without path (interactive sessions), go\n\n@@ -3,7 +3,6 @@ from __future__ import annotations\n import importlib.util\n import os\n import pathlib\n-import pkgutil\n import sys\n import typing as t\n from collections import defaultdict\n@@ -856,7 +855,8 @@ def _find_package_path(import_name):\n             return os.path.dirname(root_spec.origin)\n \n     # we were unable to find the `package_path` using PEP 451 loaders\n-    loader = pkgutil.get_loader(root_mod_name)\n+    spec = importlib.util.find_spec(root_mod_name)\n+    loader = spec.loader if spec is not None else None\n \n     if loader is None or root_mod_name == \"__main__\":\n         # import name is not found, or interactive/main module\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#bda295d37fa3809c95a93d01dd605d0222109889", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 21 | Lines Deleted: 64 | Files Changed: 2 | Hunks: 14 | Methods Changed: 3 | Complexity Δ (Sum/Max): -10/0 | Churn Δ: 85 | Churn Cumulative: 4151 | Contributors (this commit): 26 | Commits (past 90d): 10 | Contributors (cumulative): 32 | DMM Complexity: 0.47368421052631576\n\nDIFF:\n@@ -575,13 +575,20 @@ def get_root_path(import_name: str) -> str:\n         return os.path.dirname(os.path.abspath(mod.__file__))\n \n     # Next attempt: check the loader.\n+    try:\n         spec = importlib.util.find_spec(import_name)\n-    loader = spec.loader if spec is not None else None\n+\n+        if spec is None:\n+            raise ValueError\n+    except (ImportError, ValueError):\n+        loader = None\n+    else:\n+        loader = spec.loader\n \n     # Loader does not exist or we're referring to an unloaded main\n     # module or a main module without path (interactive sessions), go\n     # with the current working directory.\n-    if loader is None or import_name == \"__main__\":\n+    if loader is None:\n         return os.getcwd()\n \n     if hasattr(loader, \"get_filename\"):\n\n@@ -779,31 +779,6 @@ def _endpoint_from_view_func(view_func: t.Callable) -> str:\n     return view_func.__name__\n \n \n-def _matching_loader_thinks_module_is_package(loader, mod_name):\n-    \"\"\"Attempt to figure out if the given name is a package or a module.\n-\n-    :param: loader: The loader that handled the name.\n-    :param mod_name: The name of the package or module.\n-    \"\"\"\n-    # Use loader.is_package if it's available.\n-    if hasattr(loader, \"is_package\"):\n-        return loader.is_package(mod_name)\n-\n-    cls = type(loader)\n-\n-    # NamespaceLoader doesn't implement is_package, but all names it\n-    # loads must be packages.\n-    if cls.__module__ == \"_frozen_importlib\" and cls.__name__ == \"NamespaceLoader\":\n-        return True\n-\n-    # Otherwise we need to fail with an error that explains what went\n-    # wrong.\n-    raise AttributeError(\n-        f\"'{cls.__name__}.is_package()' must be implemented for PEP 302\"\n-        f\" import hooks.\"\n-    )\n-\n-\n def _path_is_relative_to(path: pathlib.PurePath, base: str) -> bool:\n     # Path.is_relative_to doesn't exist until Python 3.9\n     try:\n@@ -822,65 +797,40 @@ def _find_package_path(import_name):\n \n         if root_spec is None:\n             raise ValueError(\"not found\")\n+    except (ImportError, ValueError):\n         # ImportError: the machinery told us it does not exist\n         # ValueError:\n         #    - the module name was invalid\n         #    - the module name is __main__\n-    #    - *we* raised `ValueError` due to `root_spec` being `None`\n-    except (ImportError, ValueError):\n-        pass  # handled below\n-    else:\n-        # namespace package\n+        #    - we raised `ValueError` due to `root_spec` being `None`\n+        return os.getcwd()\n+\n     if root_spec.origin in {\"namespace\", None}:\n+        # namespace package\n         package_spec = importlib.util.find_spec(import_name)\n+\n         if package_spec is not None and package_spec.submodule_search_locations:\n             # Pick the path in the namespace that contains the submodule.\n             package_path = pathlib.Path(\n                 os.path.commonpath(package_spec.submodule_search_locations)\n             )\n-                search_locations = (\n+            search_location = next(\n                 location\n                 for location in root_spec.submodule_search_locations\n                 if _path_is_relative_to(package_path, location)\n             )\n         else:\n             # Pick the first path.\n-                search_locations = iter(root_spec.submodule_search_locations)\n-            return os.path.dirname(next(search_locations))\n-        # a package (with __init__.py)\n+            search_location = root_spec.submodule_search_locations[0]\n+\n+        return os.path.dirname(search_location)\n     elif root_spec.submodule_search_locations:\n+        # package with __init__.py\n         return os.path.dirname(os.path.dirname(root_spec.origin))\n-        # just a normal module\n     else:\n+        # module\n         return os.path.dirname(root_spec.origin)\n \n-    # we were unable to find the `package_path` using PEP 451 loaders\n-    spec = importlib.util.find_spec(root_mod_name)\n-    loader = spec.loader if spec is not None else None\n-\n-    if loader is None or root_mod_name == \"__main__\":\n-        # import name is not found, or interactive/main module\n-        return os.getcwd()\n-\n-    if hasattr(loader, \"get_filename\"):\n-        filename = loader.get_filename(root_mod_name)\n-    elif hasattr(loader, \"archive\"):\n-        # zipimporter's loader.archive points to the .zip file.\n-        filename = loader.archive\n-    else:\n-        # At least one loader is missing both get_filename and archive:\n-        # Google App Engine's HardenedModulesHook, use __file__.\n-        filename = importlib.import_module(root_mod_name).__file__\n-\n-    package_path = os.path.abspath(os.path.dirname(filename))\n-\n-    # If the imported name is a package, filename is currently pointing\n-    # to the root of the package, need to get the current directory.\n-    if _matching_loader_thinks_module_is_package(loader, root_mod_name):\n-        package_path = os.path.dirname(package_path)\n-\n-    return package_path\n-\n \n def find_package(import_name: str):\n     \"\"\"Find the prefix that a package is installed under, and the path\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#17e146ad949b3d80438faf95e81b53c543cb50f5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1270 | Contributors (this commit): 14 | Commits (past 90d): 1 | Contributors (cumulative): 14 | DMM Complexity: None\n\nDIFF:\n@@ -302,7 +302,7 @@ class ScriptInfo:\n         else:\n             if self.app_import_path:\n                 path, name = (\n-                    re.split(r\":(?![\\\\/])\", self.app_import_path, 1) + [None]\n+                    re.split(r\":(?![\\\\/])\", self.app_import_path, maxsplit=1) + [None]\n                 )[:2]\n                 import_name = prepare_import(path)\n                 app = locate_app(import_name, name)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
