{"custom_id": "flask#c9ab9ef5db0bfdec4eb3d819be6d10a365dd6ca6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 291 | Contributors (this commit): 11 | Commits (past 90d): 12 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '1.0.1'\n+__version__ = '1.0.2.dev'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#3fd7abec3c8c4a32da9579d0824b10d5ba0add83", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 524 | Contributors (this commit): 24 | Commits (past 90d): 12 | Contributors (cumulative): 24 | DMM Complexity: None\n\nDIFF:\n@@ -18,8 +18,8 @@ setup(\n     url='https://www.palletsprojects.com/p/flask/',\n     project_urls=OrderedDict((\n         ('Documentation', 'http://flask.pocoo.org/docs/'),\n-        ('Code', 'https://github.com/pallets/pallets-sphinx-themes'),\n-        ('Issue tracker', 'https://github.com/pallets/pallets-sphinx-themes/issues'),\n+        ('Code', 'https://github.com/pallets/flask'),\n+        ('Issue tracker', 'https://github.com/pallets/flask/issues'),\n     )),\n     license='BSD',\n     author='Armin Ronacher',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#f7a3bdc6db7aefeeb974c0b9800bbe64d152f842", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 4 | Churn Cumulative: 1512 | Contributors (this commit): 22 | Commits (past 90d): 12 | Contributors (cumulative): 28 | DMM Complexity: 1.0\n\nDIFF:\n@@ -66,7 +66,10 @@ class BlueprintSetupState(object):\n         blueprint's name.\n         \"\"\"\n         if self.url_prefix is not None:\n+            if rule:\n                 rule = '/'.join((self.url_prefix, rule.lstrip('/')))\n+            else:\n+                rule = self.url_prefix\n         options.setdefault('subdomain', self.subdomain)\n         if endpoint is None:\n             endpoint = _endpoint_from_view_func(view_func)\n\n@@ -116,6 +116,7 @@ def test_blueprint_app_error_handling(app, client):\n \n \n @pytest.mark.parametrize(('prefix', 'rule', 'url'), (\n+    ('/foo', '', '/foo'),\n     ('/foo/', '/bar', '/foo/bar'),\n     ('/foo/', 'bar', '/foo/bar'),\n     ('/foo', '/bar', '/foo/bar'),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b21b4d1608f5d83d7d6f503672f7eff46ed28f95", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 11 | Churn Cumulative: 1523 | Contributors (this commit): 22 | Commits (past 90d): 14 | Contributors (cumulative): 28 | DMM Complexity: 0.0\n\nDIFF:\n@@ -10,6 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from functools import update_wrapper\n+from werkzeug.urls import url_join\n \n from .helpers import _PackageBoundObject, _endpoint_from_view_func\n \n@@ -49,8 +50,6 @@ class BlueprintSetupState(object):\n         url_prefix = self.options.get('url_prefix')\n         if url_prefix is None:\n             url_prefix = self.blueprint.url_prefix\n-        if url_prefix:\n-            url_prefix = url_prefix.rstrip('/')\n         #: The prefix that should be used for all URLs defined on the\n         #: blueprint.\n         self.url_prefix = url_prefix\n@@ -67,7 +66,8 @@ class BlueprintSetupState(object):\n         \"\"\"\n         if self.url_prefix is not None:\n             if rule:\n-                rule = '/'.join((self.url_prefix, rule.lstrip('/')))\n+                rule = '/'.join((\n+                    self.url_prefix.rstrip('/'), rule.lstrip('/')))\n             else:\n                 rule = self.url_prefix\n         options.setdefault('subdomain', self.subdomain)\n\n@@ -116,7 +116,12 @@ def test_blueprint_app_error_handling(app, client):\n \n \n @pytest.mark.parametrize(('prefix', 'rule', 'url'), (\n+    ('', '/', '/'),\n+    ('/', '', '/'),\n+    ('/', '/', '/'),\n     ('/foo', '', '/foo'),\n+    ('/foo/', '', '/foo/'),\n+    ('', '/bar', '/bar'),\n     ('/foo/', '/bar', '/foo/bar'),\n     ('/foo/', 'bar', '/foo/bar'),\n     ('/foo', '/bar', '/foo/bar'),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b4e092600dc2cfd5326a373b4b9fd757a5d8a61a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 4 | Churn Cumulative: 2610 | Contributors (this commit): 29 | Commits (past 90d): 8 | Contributors (cumulative): 29 | DMM Complexity: 0.0\n\nDIFF:\n@@ -825,6 +825,10 @@ def routes_command(sort, all_methods):\n     \"\"\"Show all registered routes with endpoints and methods.\"\"\"\n \n     rules = list(current_app.url_map.iter_rules())\n+    if not rules:\n+        click.echo('No routes were registered.')\n+        return\n+\n     ignored_methods = set(() if all_methods else ('HEAD', 'OPTIONS'))\n \n     if sort in ('endpoint', 'rule'):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#dfd3619d6f8796d48fc4e32f819cec9e8aa59156", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 293 | Contributors (this commit): 11 | Commits (past 90d): 13 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '1.0.2.dev'\n+__version__ = '1.0.2'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#939c77a39ada26395c033d9f84923b02cef2ae56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 295 | Contributors (this commit): 11 | Commits (past 90d): 14 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '1.0.2'\n+__version__ = '1.0.3.dev'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a913b4dafd1d85cfa1d8bafeea5417748de8d487", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 4 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 3573 | Contributors (this commit): 37 | Commits (past 90d): 10 | Contributors (cumulative): 48 | DMM Complexity: None\n\nDIFF:\n@@ -670,7 +670,7 @@ class CertParamType(click.ParamType):\n \n             obj = import_string(value, silent=True)\n \n-            if sys.version_info < (2, 7):\n+            if sys.version_info < (2, 7, 9):\n                 if obj:\n                     return obj\n             else:\n@@ -687,7 +687,7 @@ def _validate_key(ctx, param, value):\n     cert = ctx.params.get('cert')\n     is_adhoc = cert == 'adhoc'\n \n-    if sys.version_info < (2, 7):\n+    if sys.version_info < (2, 7, 9):\n         is_context = cert and not isinstance(cert, (text_type, bytes))\n     else:\n         is_context = isinstance(cert, ssl.SSLContext)\n\n@@ -521,12 +521,12 @@ def test_run_cert_import(monkeypatch):\n         run_command.make_context('run', ['--cert', 'not_here'])\n \n     # not an SSLContext\n-    if sys.version_info >= (2, 7):\n+    if sys.version_info >= (2, 7, 9):\n         with pytest.raises(click.BadParameter):\n             run_command.make_context('run', ['--cert', 'flask'])\n \n     # SSLContext\n-    if sys.version_info < (2, 7):\n+    if sys.version_info < (2, 7, 9):\n         ssl_context = object()\n     else:\n         ssl_context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b51ab3ff2c4af7e592e649e0e97657154b79c11f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 20 | Lines Deleted: 9 | Files Changed: 2 | Hunks: 6 | Methods Changed: 3 | Complexity Δ (Sum/Max): 10/10 | Churn Δ: 29 | Churn Cumulative: 4237 | Contributors (this commit): 65 | Commits (past 90d): 7 | Contributors (cumulative): 79 | DMM Complexity: None\n\nDIFF:\n@@ -506,6 +506,10 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n \n     .. _RFC 2231: https://tools.ietf.org/html/rfc2231#section-4\n \n+    .. versionchanged:: 1.0.3\n+        Filenames are encoded with ASCII instead of Latin-1 for broader\n+        compatibility with WSGI servers.\n+\n     :param filename_or_fp: the filename of the file to send.\n                            This is relative to the :attr:`~Flask.root_path`\n                            if a relative path is specified.\n@@ -564,11 +568,11 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n                             'sending as attachment')\n \n         try:\n-            attachment_filename = attachment_filename.encode('latin-1')\n+            attachment_filename = attachment_filename.encode('ascii')\n         except UnicodeEncodeError:\n             filenames = {\n                 'filename': unicodedata.normalize(\n-                    'NFKD', attachment_filename).encode('latin-1', 'ignore'),\n+                    'NFKD', attachment_filename).encode('ascii', 'ignore'),\n                 'filename*': \"UTF-8''%s\" % url_quote(attachment_filename),\n             }\n         else:\n\n@@ -638,15 +638,22 @@ class TestSendfile(object):\n         assert options['filename'] == 'index.txt'\n         rv.close()\n \n-    def test_attachment_with_utf8_filename(self, app, req_ctx):\n-        rv = flask.send_file('static/index.html', as_attachment=True, attachment_filename=u'Ñandú／pingüino.txt')\n-        content_disposition = set(rv.headers['Content-Disposition'].split('; '))\n-        assert content_disposition == set((\n-            'attachment',\n-            'filename=\"Nandu/pinguino.txt\"',\n-            \"filename*=UTF-8''%C3%91and%C3%BA%EF%BC%8Fping%C3%BCino.txt\"\n+    @pytest.mark.usefixtures('req_ctx')\n+    @pytest.mark.parametrize(('filename', 'ascii', 'utf8'), (\n+        ('index.html', 'index.html', False),\n+        (u'Ñandú／pingüino.txt', '\"Nandu/pinguino.txt\"',\n+        '%C3%91and%C3%BA%EF%BC%8Fping%C3%BCino.txt'),\n+        (u'Vögel.txt', 'Vogel.txt', 'V%C3%B6gel.txt'),\n     ))\n+    def test_attachment_filename_encoding(self, filename, ascii, utf8):\n+        rv = flask.send_file('static/index.html', as_attachment=True, attachment_filename=filename)\n         rv.close()\n+        content_disposition = rv.headers['Content-Disposition']\n+        assert 'filename=%s' % ascii in content_disposition\n+        if utf8:\n+            assert \"filename*=UTF-8''\" + utf8 in content_disposition\n+        else:\n+            assert \"filename*=UTF-8''\" not in content_disposition\n \n     def test_static_file(self, app, req_ctx):\n         # default cache timeout is 12 hours\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8cdd01ea5da2f92c0108803618b168e128084858", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 281 | Contributors (this commit): 10 | Commits (past 90d): 2 | Contributors (cumulative): 10 | DMM Complexity: 1.0\n\nDIFF:\n@@ -159,6 +159,8 @@ def test_app_ctx_globals_methods(app, app_ctx):\n     assert flask.g.pop('bar', 'more cake') == 'more cake'\n     # __iter__\n     assert list(flask.g) == ['foo']\n+    #__repr__\n+    assert flask.g.__repr__() == '<flask.g of \\'flask_test\\'>'\n \n \n def test_custom_app_ctx_globals_class(app):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8fa3ed13bf362a71f942ed3d37efbdbdd5731375", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 283 | Contributors (this commit): 10 | Commits (past 90d): 2 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -160,7 +160,7 @@ def test_app_ctx_globals_methods(app, app_ctx):\n     # __iter__\n     assert list(flask.g) == ['foo']\n     #__repr__\n-    assert flask.g.__repr__() == '<flask.g of \\'flask_test\\'>'\n+    assert repr(flask.g) == \"<flask.g of 'flask_test'>\"\n \n \n def test_custom_app_ctx_globals_class(app):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#4025e27b5714736657f0ac9548170e0ad285c53a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 16 | Churn Cumulative: 975 | Contributors (this commit): 19 | Commits (past 90d): 3 | Contributors (cumulative): 19 | DMM Complexity: 1.0\n\nDIFF:\n@@ -393,6 +393,17 @@ class TestRoutes:\n         cli = FlaskGroup(create_app=create_app)\n         return partial(runner.invoke, cli)\n \n+    @pytest.fixture\n+    def invoke_no_routes(self, runner):\n+        def create_app(info):\n+            app = Flask(__name__, static_folder=None)\n+            app.testing = True\n+\n+            return app\n+\n+        cli = FlaskGroup(create_app=create_app)\n+        return partial(runner.invoke, cli)\n+\n     def expect_order(self, order, output):\n         # skip the header and match the start of each row\n         for expect, line in zip(order, output.splitlines()[2:]):\n@@ -430,6 +441,11 @@ class TestRoutes:\n         output = invoke(['routes', '--all-methods']).output\n         assert 'GET, HEAD, OPTIONS, POST' in output\n \n+    def test_no_routes(self, invoke_no_routes):\n+        result = invoke_no_routes(['routes'])\n+        assert result.exit_code == 0\n+        assert 'No routes were registered.' in result.output\n+\n \n need_dotenv = pytest.mark.skipif(\n     dotenv is None, reason='dotenv is not installed'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#076dddb2e1d36edc35df5beecb9eacdcb0541e58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 2616 | Contributors (this commit): 31 | Commits (past 90d): 9 | Contributors (cumulative): 31 | DMM Complexity: None\n\nDIFF:\n@@ -584,7 +584,7 @@ def load_dotenv(path=None):\n     .. versionadded:: 1.0\n     \"\"\"\n     if dotenv is None:\n-        if path or os.path.exists('.env') or os.path.exists('.flaskenv'):\n+        if path or os.path.isfile('.env') or os.path.isfile('.flaskenv'):\n             click.secho(\n                 ' * Tip: There are .env files present.'\n                 ' Do \"pip install python-dotenv\" to use them.',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#50227f0954e06853bbadf93d1c62dd03429b6711", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 36 | Lines Deleted: 9 | Files Changed: 2 | Hunks: 8 | Methods Changed: 10 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 45 | Churn Cumulative: 3636 | Contributors (this commit): 39 | Commits (past 90d): 16 | Contributors (cumulative): 52 | DMM Complexity: 1.0\n\nDIFF:\n@@ -340,7 +340,8 @@ class ScriptInfo(object):\n     onwards as click object.\n     \"\"\"\n \n-    def __init__(self, app_import_path=None, create_app=None):\n+    def __init__(self, app_import_path=None, create_app=None,\n+                 set_debug_flag=True):\n         #: Optionally the import path for the Flask application.\n         self.app_import_path = app_import_path or os.environ.get('FLASK_APP')\n         #: Optionally a function that is passed the script info to create\n@@ -349,6 +350,7 @@ class ScriptInfo(object):\n         #: A dictionary with arbitrary data that can be associated with\n         #: this script info.\n         self.data = {}\n+        self.set_debug_flag = set_debug_flag\n         self._loaded_app = None\n \n     def load_app(self):\n@@ -386,12 +388,10 @@ class ScriptInfo(object):\n                 '\"app.py\" module was not found in the current directory.'\n             )\n \n-        debug = get_debug_flag()\n-\n-        # Update the app's debug flag through the descriptor so that other\n-        # values repopulate as well.\n-        if debug is not None:\n-            app.debug = debug\n+        if self.set_debug_flag:\n+            # Update the app's debug flag through the descriptor so that\n+            # other values repopulate as well.\n+            app.debug = get_debug_flag()\n \n         self._loaded_app = app\n         return app\n@@ -459,6 +459,8 @@ class FlaskGroup(AppGroup):\n     :param load_dotenv: Load the nearest :file:`.env` and :file:`.flaskenv`\n         files to set environment variables. Will also change the working\n         directory to the directory containing the first file found.\n+    :param set_debug_flag: Set the app's debug flag based on the active\n+        environment\n \n     .. versionchanged:: 1.0\n         If installed, python-dotenv will be used to load environment variables\n@@ -466,7 +468,8 @@ class FlaskGroup(AppGroup):\n     \"\"\"\n \n     def __init__(self, add_default_commands=True, create_app=None,\n-                 add_version_option=True, load_dotenv=True, **extra):\n+                 add_version_option=True, load_dotenv=True,\n+                 set_debug_flag=True, **extra):\n         params = list(extra.pop('params', None) or ())\n \n         if add_version_option:\n@@ -475,6 +478,7 @@ class FlaskGroup(AppGroup):\n         AppGroup.__init__(self, params=params, **extra)\n         self.create_app = create_app\n         self.load_dotenv = load_dotenv\n+        self.set_debug_flag = set_debug_flag\n \n         if add_default_commands:\n             self.add_command(run_command)\n@@ -550,7 +554,8 @@ class FlaskGroup(AppGroup):\n         obj = kwargs.get('obj')\n \n         if obj is None:\n-            obj = ScriptInfo(create_app=self.create_app)\n+            obj = ScriptInfo(create_app=self.create_app,\n+                             set_debug_flag=self.set_debug_flag)\n \n         kwargs['obj'] = obj\n         kwargs.setdefault('auto_envvar_prefix', 'FLASK')\n\n@@ -356,6 +356,28 @@ def test_flaskgroup(runner):\n     assert result.output == 'flaskgroup\\n'\n \n \n+@pytest.mark.parametrize('set_debug_flag', (True, False))\n+def test_flaskgroup_debug(runner, set_debug_flag):\n+    \"\"\"Test FlaskGroup debug flag behavior.\"\"\"\n+\n+    def create_app(info):\n+        app = Flask(\"flaskgroup\")\n+        app.debug = True\n+        return app\n+\n+    @click.group(cls=FlaskGroup, create_app=create_app, set_debug_flag=set_debug_flag)\n+    def cli(**params):\n+        pass\n+\n+    @cli.command()\n+    def test():\n+        click.echo(str(current_app.debug))\n+\n+    result = runner.invoke(cli, ['test'])\n+    assert result.exit_code == 0\n+    assert result.output == '%s\\n' % str(not set_debug_flag)\n+\n+\n def test_print_exceptions(runner):\n     \"\"\"Print the stacktrace if the CLI.\"\"\"\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#f036308442a2123a89dc4e2dfb61c319d9d80cf5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 2641 | Contributors (this commit): 32 | Commits (past 90d): 11 | Contributors (cumulative): 32 | DMM Complexity: None\n\nDIFF:\n@@ -591,7 +591,7 @@ def load_dotenv(path=None):\n     if dotenv is None:\n         if path or os.path.isfile('.env') or os.path.isfile('.flaskenv'):\n             click.secho(\n-                ' * Tip: There are .env files present.'\n+                ' * Tip: There are .env or .flaskenv files present.'\n                 ' Do \"pip install python-dotenv\" to use them.',\n                 fg='yellow')\n         return\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d362399e7ebfe167a27daef20e198ecabed1b49b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 299 | Contributors (this commit): 12 | Commits (past 90d): 14 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -43,7 +43,3 @@ from . import json\n # This was the only thing that Flask used to export at one point and it had\n # a more generic name.\n jsonify = json.jsonify\n-\n-# backwards compat, goes away in 1.0\n-from .sessions import SecureCookieSession as Session\n-json_available = True\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d5c465ddf4125db71a072cf3033533b02290d08f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 2645 | Contributors (this commit): 33 | Commits (past 90d): 11 | Contributors (cumulative): 33 | DMM Complexity: None\n\nDIFF:\n@@ -26,7 +26,7 @@ import click\n from werkzeug.utils import import_string\n \n from . import __version__\n-from ._compat import getargspec, iteritems, reraise, text_type\n+from ._compat import getargspec, itervalues, reraise, text_type\n from .globals import current_app\n from .helpers import get_debug_flag, get_env, get_load_dotenv\n \n@@ -55,7 +55,7 @@ def find_best_app(script_info, module):\n \n     # Otherwise find the only object that is a Flask instance.\n     matches = [\n-        v for k, v in iteritems(module.__dict__) if isinstance(v, Flask)\n+        v for v in itervalues(module.__dict__) if isinstance(v, Flask)\n     ]\n \n     if len(matches) == 1:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#3e86fd25e9638898618cda8352402f4281bf809b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 1370 | Contributors (this commit): 15 | Commits (past 90d): 1 | Contributors (cumulative): 15 | DMM Complexity: None\n\nDIFF:\n@@ -21,6 +21,7 @@ extensions = [\n     'sphinx.ext.autodoc',\n     'sphinx.ext.intersphinx',\n     'sphinxcontrib.log_cabinet',\n+    'pallets_sphinx_themes',\n ]\n \n intersphinx_mapping = {\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#067c772588f69f397eeff70019320506b47bb239", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 7 | Churn Cumulative: 1377 | Contributors (this commit): 15 | Commits (past 90d): 2 | Contributors (cumulative): 15 | DMM Complexity: None\n\nDIFF:\n@@ -4,7 +4,7 @@ from __future__ import print_function\n import inspect\n import re\n \n-from pallets_sphinx_themes import DocVersion, ProjectLink, get_version\n+from pallets_sphinx_themes import ProjectLink, get_version\n \n # Project --------------------------------------------------------------\n \n@@ -47,11 +47,6 @@ html_context = {\n         ProjectLink(\n             'Issue Tracker', 'https://github.com/pallets/flask/issues/'),\n     ],\n-    'versions': [\n-        DocVersion('dev', 'Development', 'unstable'),\n-        DocVersion('1.0', 'Flask 1.0', 'stable'),\n-        DocVersion('0.12', 'Flask 0.12'),\n-    ],\n     'canonical_url': 'http://flask.pocoo.org/docs/{}/'.format(version),\n     'carbon_ads_args': 'zoneid=1673&serve=C6AILKT&placement=pocooorg',\n }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ba868d681aac8273ad785ebf28f4a043b737ab78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 78 | Files Changed: 1 | Hunks: 16 | Methods Changed: 6 | Complexity Δ (Sum/Max): -11/0 | Churn Δ: 89 | Churn Cumulative: 1466 | Contributors (this commit): 15 | Commits (past 90d): 3 | Contributors (cumulative): 15 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,9 +1,5 @@\n-# -*- coding: utf-8 -*-\n from __future__ import print_function\n \n-import inspect\n-import re\n-\n from pallets_sphinx_themes import ProjectLink, get_version\n \n # Project --------------------------------------------------------------\n@@ -16,14 +12,12 @@ release, version = get_version('Flask')\n # General --------------------------------------------------------------\n \n master_doc = 'index'\n-\n extensions = [\n     'sphinx.ext.autodoc',\n     'sphinx.ext.intersphinx',\n     'sphinxcontrib.log_cabinet',\n     'pallets_sphinx_themes',\n ]\n-\n intersphinx_mapping = {\n     'python': ('https://docs.python.org/3/', None),\n     'werkzeug': ('http://werkzeug.pocoo.org/docs/', None),\n@@ -38,45 +32,32 @@ intersphinx_mapping = {\n # HTML -----------------------------------------------------------------\n \n html_theme = 'flask'\n+html_theme_options = {\"index_sidebar_logo\": False}\n html_context = {\n     'project_links': [\n-        ProjectLink('Donate to Pallets', 'https://psfmember.org/civicrm/contribute/transact?reset=1&id=20'),\n+        ProjectLink('Donate to Pallets', 'https://palletsprojects.com/donate'),\n         ProjectLink('Flask Website', 'https://palletsprojects.com/p/flask/'),\n         ProjectLink('PyPI releases', 'https://pypi.org/project/Flask/'),\n         ProjectLink('Source Code', 'https://github.com/pallets/flask/'),\n-        ProjectLink(\n-            'Issue Tracker', 'https://github.com/pallets/flask/issues/'),\n+        ProjectLink('Issue Tracker', 'https://github.com/pallets/flask/issues/'),\n     ],\n-    'canonical_url': 'http://flask.pocoo.org/docs/{}/'.format(version),\n-    'carbon_ads_args': 'zoneid=1673&serve=C6AILKT&placement=pocooorg',\n }\n html_sidebars = {\n-    'index': [\n-        'project.html',\n-        'versions.html',\n-        'carbon_ads.html',\n-        'searchbox.html',\n-    ],\n-    '**': [\n-        'localtoc.html',\n-        'relations.html',\n-        'versions.html',\n-        'carbon_ads.html',\n-        'searchbox.html',\n-    ]\n+    'index': ['project.html', \"localtoc.html\", 'versions.html', 'searchbox.html'],\n+    '**': ['localtoc.html', 'relations.html', 'versions.html', 'searchbox.html']\n }\n+singlehtml_sidebars = {\"index\": [\"project.html\", \"versions.html\", \"localtoc.html\"]}\n html_static_path = ['_static']\n-html_favicon = '_static/flask-favicon.ico'\n-html_logo = '_static/flask.png'\n-html_additional_pages = {\n-    '404': '404.html',\n-}\n+html_favicon = '_static/flask-icon.png'\n+html_logo = '_static/flask-logo-sidebar.png'\n+html_title = \"Flask Documentation ({})\".format(version)\n html_show_sourcelink = False\n+html_domain_indices = False\n \n # LaTeX ----------------------------------------------------------------\n \n latex_documents = [\n-    (master_doc, 'Flask.tex', 'Flask Documentation', 'Pallets Team', 'manual'),\n+    (master_doc, 'Flask-{}.tex'.format(version), html_title, author, 'manual'),\n ]\n latex_use_modindex = False\n latex_elements = {\n@@ -88,54 +69,8 @@ latex_elements = {\n latex_use_parts = True\n latex_additional_files = ['flaskstyle.sty', 'logo.pdf']\n \n-# linkcheck ------------------------------------------------------------\n-\n-linkcheck_anchors = False\n-\n # Local Extensions -----------------------------------------------------\n \n-def unwrap_decorators():\n-    import sphinx.util.inspect as inspect\n-    import functools\n-\n-    old_getargspec = inspect.getargspec\n-    def getargspec(x):\n-        return old_getargspec(getattr(x, '_original_function', x))\n-    inspect.getargspec = getargspec\n-\n-    old_update_wrapper = functools.update_wrapper\n-    def update_wrapper(wrapper, wrapped, *a, **kw):\n-        rv = old_update_wrapper(wrapper, wrapped, *a, **kw)\n-        rv._original_function = wrapped\n-        return rv\n-    functools.update_wrapper = update_wrapper\n-\n-\n-unwrap_decorators()\n-del unwrap_decorators\n-\n-\n-_internal_mark_re = re.compile(r'^\\s*:internal:\\s*$(?m)', re.M)\n-\n-\n-def skip_internal(app, what, name, obj, skip, options):\n-    docstring = inspect.getdoc(obj) or ''\n-\n-    if skip or _internal_mark_re.search(docstring) is not None:\n-        return True\n-\n-\n-def cut_module_meta(app, what, name, obj, options, lines):\n-    \"\"\"Remove metadata from autodoc output.\"\"\"\n-    if what != 'module':\n-        return\n-\n-    lines[:] = [\n-        line for line in lines\n-        if not line.startswith((':copyright:', ':license:'))\n-    ]\n-\n-\n def github_link(\n     name, rawtext, text, lineno, inliner, options=None, content=None\n ):\n@@ -166,6 +101,4 @@ def github_link(\n \n \n def setup(app):\n-    app.connect('autodoc-skip-member', skip_internal)\n-    app.connect('autodoc-process-docstring', cut_module_meta)\n     app.add_role('gh', github_link)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0f4c9f1d57cc72e1407364f1cdac5737ee3c60f5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 48 | Lines Deleted: 47 | Files Changed: 1 | Hunks: 19 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 95 | Churn Cumulative: 1561 | Contributors (this commit): 15 | Commits (past 90d): 4 | Contributors (cumulative): 15 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,55 +1,56 @@\n from __future__ import print_function\n \n-from pallets_sphinx_themes import ProjectLink, get_version\n+from pallets_sphinx_themes import get_version\n+from pallets_sphinx_themes import ProjectLink\n \n # Project --------------------------------------------------------------\n \n-project = 'Flask'\n-copyright = '2010 Pallets Team'\n-author = 'Pallets Team'\n-release, version = get_version('Flask')\n+project = \"Flask\"\n+copyright = \"2010 Pallets Team\"\n+author = \"Pallets Team\"\n+release, version = get_version(\"Flask\")\n \n # General --------------------------------------------------------------\n \n-master_doc = 'index'\n+master_doc = \"index\"\n extensions = [\n-    'sphinx.ext.autodoc',\n-    'sphinx.ext.intersphinx',\n-    'sphinxcontrib.log_cabinet',\n-    'pallets_sphinx_themes',\n+    \"sphinx.ext.autodoc\",\n+    \"sphinx.ext.intersphinx\",\n+    \"sphinxcontrib.log_cabinet\",\n+    \"pallets_sphinx_themes\",\n ]\n intersphinx_mapping = {\n-    'python': ('https://docs.python.org/3/', None),\n-    'werkzeug': ('http://werkzeug.pocoo.org/docs/', None),\n-    'click': ('http://click.pocoo.org/', None),\n-    'jinja': ('http://jinja.pocoo.org/docs/', None),\n-    'itsdangerous': ('https://pythonhosted.org/itsdangerous', None),\n-    'sqlalchemy': ('https://docs.sqlalchemy.org/en/latest/', None),\n-    'wtforms': ('https://wtforms.readthedocs.io/en/latest/', None),\n-    'blinker': ('https://pythonhosted.org/blinker/', None),\n+    \"python\": (\"https://docs.python.org/3/\", None),\n+    \"werkzeug\": (\"http://werkzeug.pocoo.org/docs/\", None),\n+    \"click\": (\"http://click.pocoo.org/\", None),\n+    \"jinja\": (\"http://jinja.pocoo.org/docs/\", None),\n+    \"itsdangerous\": (\"https://pythonhosted.org/itsdangerous\", None),\n+    \"sqlalchemy\": (\"https://docs.sqlalchemy.org/en/latest/\", None),\n+    \"wtforms\": (\"https://wtforms.readthedocs.io/en/latest/\", None),\n+    \"blinker\": (\"https://pythonhosted.org/blinker/\", None),\n }\n \n # HTML -----------------------------------------------------------------\n \n-html_theme = 'flask'\n+html_theme = \"flask\"\n html_theme_options = {\"index_sidebar_logo\": False}\n html_context = {\n-    'project_links': [\n-        ProjectLink('Donate to Pallets', 'https://palletsprojects.com/donate'),\n-        ProjectLink('Flask Website', 'https://palletsprojects.com/p/flask/'),\n-        ProjectLink('PyPI releases', 'https://pypi.org/project/Flask/'),\n-        ProjectLink('Source Code', 'https://github.com/pallets/flask/'),\n-        ProjectLink('Issue Tracker', 'https://github.com/pallets/flask/issues/'),\n-    ],\n+    \"project_links\": [\n+        ProjectLink(\"Donate to Pallets\", \"https://palletsprojects.com/donate\"),\n+        ProjectLink(\"Flask Website\", \"https://palletsprojects.com/p/flask/\"),\n+        ProjectLink(\"PyPI releases\", \"https://pypi.org/project/Flask/\"),\n+        ProjectLink(\"Source Code\", \"https://github.com/pallets/flask/\"),\n+        ProjectLink(\"Issue Tracker\", \"https://github.com/pallets/flask/issues/\"),\n+    ]\n }\n html_sidebars = {\n-    'index': ['project.html', \"localtoc.html\", 'versions.html', 'searchbox.html'],\n-    '**': ['localtoc.html', 'relations.html', 'versions.html', 'searchbox.html']\n+    \"index\": [\"project.html\", \"localtoc.html\", \"versions.html\", \"searchbox.html\"],\n+    \"**\": [\"localtoc.html\", \"relations.html\", \"versions.html\", \"searchbox.html\"],\n }\n singlehtml_sidebars = {\"index\": [\"project.html\", \"versions.html\", \"localtoc.html\"]}\n-html_static_path = ['_static']\n-html_favicon = '_static/flask-icon.png'\n-html_logo = '_static/flask-logo-sidebar.png'\n+html_static_path = [\"_static\"]\n+html_favicon = \"_static/flask-icon.png\"\n+html_logo = \"_static/flask-logo-sidebar.png\"\n html_title = \"Flask Documentation ({})\".format(version)\n html_show_sourcelink = False\n html_domain_indices = False\n@@ -57,43 +58,43 @@ html_domain_indices = False\n # LaTeX ----------------------------------------------------------------\n \n latex_documents = [\n-    (master_doc, 'Flask-{}.tex'.format(version), html_title, author, 'manual'),\n+    (master_doc, \"Flask-{}.tex\".format(version), html_title, author, \"manual\")\n ]\n latex_use_modindex = False\n latex_elements = {\n-    'papersize': 'a4paper',\n-    'pointsize': '12pt',\n-    'fontpkg': r'\\usepackage{mathpazo}',\n-    'preamble': r'\\usepackage{flaskstyle}',\n+    \"papersize\": \"a4paper\",\n+    \"pointsize\": \"12pt\",\n+    \"fontpkg\": r\"\\usepackage{mathpazo}\",\n+    \"preamble\": r\"\\usepackage{flaskstyle}\",\n }\n latex_use_parts = True\n-latex_additional_files = ['flaskstyle.sty', 'logo.pdf']\n+latex_additional_files = [\"flaskstyle.sty\", \"logo.pdf\"]\n \n # Local Extensions -----------------------------------------------------\n \n-def github_link(\n-    name, rawtext, text, lineno, inliner, options=None, content=None\n-):\n+\n+def github_link(name, rawtext, text, lineno, inliner, options=None, content=None):\n     app = inliner.document.settings.env.app\n     release = app.config.release\n-    base_url = 'https://github.com/pallets/flask/tree/'\n+    base_url = \"https://github.com/pallets/flask/tree/\"\n \n-    if text.endswith('>'):\n-        words, text = text[:-1].rsplit('<', 1)\n+    if text.endswith(\">\"):\n+        words, text = text[:-1].rsplit(\"<\", 1)\n         words = words.strip()\n     else:\n         words = None\n \n-    if release.endswith('dev'):\n-        url = '{0}master/{1}'.format(base_url, text)\n+    if release.endswith(\"dev\"):\n+        url = \"{0}master/{1}\".format(base_url, text)\n     else:\n-        url = '{0}{1}/{2}'.format(base_url, release, text)\n+        url = \"{0}{1}/{2}\".format(base_url, release, text)\n \n     if words is None:\n         words = url\n \n     from docutils.nodes import reference\n     from docutils.parsers.rst.roles import set_classes\n+\n     options = options or {}\n     set_classes(options)\n     node = reference(rawtext, words, refuri=url, **options)\n@@ -101,4 +102,4 @@ def github_link(\n \n \n def setup(app):\n-    app.add_role('gh', github_link)\n+    app.add_role(\"gh\", github_link)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#aa7e15dcbab208ca404bcecd94cbe6fc583150dc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 5557 | Contributors (this commit): 91 | Commits (past 90d): 1 | Contributors (cumulative): 91 | DMM Complexity: None\n\nDIFF:\n@@ -1728,9 +1728,7 @@ class Flask(_PackageBoundObject):\n         .. versionadded:: 0.3\n         \"\"\"\n         exc_type, exc_value, tb = sys.exc_info()\n-\n         got_request_exception.send(self, exception=e)\n-        handler = self._find_error_handler(InternalServerError())\n \n         if self.propagate_exceptions:\n             # if we want to repropagate the exception, we can attempt to\n@@ -1743,6 +1741,7 @@ class Flask(_PackageBoundObject):\n                 raise e\n \n         self.log_exception((exc_type, exc_value, tb))\n+        handler = self._find_error_handler(InternalServerError())\n         if handler is None:\n             return InternalServerError()\n         return self.finalize_request(handler(e), from_error_handler=True)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#673772cac931fea88b6134e57643bba9f0b27d44", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 5559 | Contributors (this commit): 92 | Commits (past 90d): 2 | Contributors (cumulative): 92 | DMM Complexity: None\n\nDIFF:\n@@ -1686,7 +1686,7 @@ class Flask(_PackageBoundObject):\n         exception with the same traceback.\n \n         .. versionchanged:: 1.0\n-            Key errors raised from request data like ``form`` show the the bad\n+            Key errors raised from request data like ``form`` show the bad\n             key in debug mode rather than a generic bad request message.\n \n         .. versionadded:: 0.7\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#9bc87d09c64780ccf1c115c216ff689a46d8f82e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 2650 | Contributors (this commit): 34 | Commits (past 90d): 1 | Contributors (cumulative): 34 | DMM Complexity: 0.0\n\nDIFF:\n@@ -206,8 +206,9 @@ def prepare_import(path):\n     \"\"\"\n     path = os.path.realpath(path)\n \n-    if os.path.splitext(path)[1] == '.py':\n-        path = os.path.splitext(path)[0]\n+    fname, ext = os.path.splitext(path)\n+    if ext == '.py':\n+        path = fname\n \n     if os.path.basename(path) == '__init__':\n         path = os.path.dirname(path)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#c38499bbf26cfa9683e30c52139a94dc5a50dcc4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 17 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 21 | Churn Cumulative: 3668 | Contributors (this commit): 41 | Commits (past 90d): 3 | Contributors (cumulative): 55 | DMM Complexity: 1.0\n\nDIFF:\n@@ -369,7 +369,7 @@ class ScriptInfo(object):\n             app = call_factory(self, self.create_app)\n         else:\n             if self.app_import_path:\n-                path, name = (self.app_import_path.split(':', 1) + [None])[:2]\n+                path, name = (re.split(r':(?![\\\\/])', self.app_import_path, 1) + [None])[:2]\n                 import_name = prepare_import(path)\n                 app = locate_app(self, import_name, name)\n             else:\n\n@@ -261,8 +261,21 @@ def test_get_version(test_apps, capsys):\n def test_scriptinfo(test_apps, monkeypatch):\n     \"\"\"Test of ScriptInfo.\"\"\"\n     obj = ScriptInfo(app_import_path=\"cliapp.app:testapp\")\n-    assert obj.load_app().name == \"testapp\"\n-    assert obj.load_app().name == \"testapp\"\n+    app = obj.load_app()\n+    assert app.name == \"testapp\"\n+    assert obj.load_app() is app\n+\n+    # import app with module's absolute path\n+    cli_app_path = os.path.abspath(os.path.join(\n+            os.path.dirname(__file__), 'test_apps', 'cliapp', 'app.py'))\n+    obj = ScriptInfo(app_import_path=cli_app_path)\n+    app = obj.load_app()\n+    assert app.name == 'testapp'\n+    assert obj.load_app() is app\n+    obj = ScriptInfo(app_import_path=cli_app_path + ':testapp')\n+    app = obj.load_app()\n+    assert app.name == 'testapp'\n+    assert obj.load_app() is app\n \n     def create_app(info):\n         return Flask(\"createapp\")\n@@ -270,7 +283,7 @@ def test_scriptinfo(test_apps, monkeypatch):\n     obj = ScriptInfo(create_app=create_app)\n     app = obj.load_app()\n     assert app.name == \"createapp\"\n-    assert obj.load_app() == app\n+    assert obj.load_app() is app\n \n     obj = ScriptInfo()\n     pytest.raises(NoAppException, obj.load_app)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e08bcf9f9700180a09f77f52604ea6de36fb83a8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 6 | Files Changed: 2 | Hunks: 10 | Methods Changed: 10 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 22 | Churn Cumulative: 985 | Contributors (this commit): 20 | Commits (past 90d): 2 | Contributors (cumulative): 24 | DMM Complexity: 1.0\n\nDIFF:\n@@ -122,7 +122,8 @@ def copy_current_request_context(f):\n     \"\"\"A helper function that decorates a function to retain the current\n     request context.  This is useful when working with greenlets.  The moment\n     the function is decorated a copy of the request context is created and\n-    then pushed when the function is called.\n+    then pushed when the function is called.  The current session is also\n+    included in the copied request context.\n \n     Example::\n \n@@ -133,8 +134,8 @@ def copy_current_request_context(f):\n         def index():\n             @copy_current_request_context\n             def do_some_work():\n-                # do some work here, it can access flask.request like you\n-                # would otherwise in the view function.\n+                # do some work here, it can access flask.request or\n+                # flask.session like you would otherwise in the view function.\n                 ...\n             gevent.spawn(do_some_work)\n             return 'Regular response'\n@@ -276,14 +277,14 @@ class RequestContext(object):\n     that situation, otherwise your unittests will leak memory.\n     \"\"\"\n \n-    def __init__(self, app, environ, request=None):\n+    def __init__(self, app, environ, request=None, session=None):\n         self.app = app\n         if request is None:\n             request = app.request_class(environ)\n         self.request = request\n         self.url_adapter = app.create_url_adapter(self.request)\n         self.flashes = None\n-        self.session = None\n+        self.session = session\n \n         # Request contexts can be pushed multiple times and interleaved with\n         # other request contexts.  Now only if the last level is popped we\n@@ -321,10 +322,15 @@ class RequestContext(object):\n         request object is locked.\n \n         .. versionadded:: 0.10\n+\n+        .. versionchanged:: 1.1\n+           The current session object is used instead of reloading the original\n+           data. This prevents `flask.session` pointing to an out-of-date object.\n         \"\"\"\n         return self.__class__(self.app,\n             environ=self.request.environ,\n-            request=self.request\n+            request=self.request,\n+            session=self.session\n         )\n \n     def match_request(self):\n\n@@ -156,6 +156,7 @@ class TestGreenletContextCopying(object):\n \n         @app.route('/')\n         def index():\n+            flask.session['fizz'] = 'buzz'\n             reqctx = flask._request_ctx_stack.top.copy()\n \n             def g():\n@@ -166,6 +167,7 @@ class TestGreenletContextCopying(object):\n                     assert flask.current_app == app\n                     assert flask.request.path == '/'\n                     assert flask.request.args['foo'] == 'bar'\n+                    assert flask.session.get('fizz') == 'buzz'\n                 assert not flask.request\n                 return 42\n \n@@ -183,6 +185,7 @@ class TestGreenletContextCopying(object):\n \n         @app.route('/')\n         def index():\n+            flask.session['fizz'] = 'buzz'\n             reqctx = flask._request_ctx_stack.top.copy()\n \n             @flask.copy_current_request_context\n@@ -191,6 +194,7 @@ class TestGreenletContextCopying(object):\n                 assert flask.current_app == app\n                 assert flask.request.path == '/'\n                 assert flask.request.args['foo'] == 'bar'\n+                assert flask.session.get('fizz') == 'buzz'\n                 return 42\n \n             greenlets.append(greenlet(g))\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
