{"custom_id": "keras#182e84d09b618722632245e2b5a00ab6892c1c4e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 16 | Files Changed: 2 | Hunks: 15 | Methods Changed: 6 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 32 | Churn Cumulative: 357 | Contributors (this commit): 2 | Commits (past 90d): 6 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -15,13 +15,13 @@ def get_test_data(nb_train=1000, nb_test=500, input_shape=(10,), output_shape=(2\n         y = np.random.randint(0, nb_class, size=(nb_sample, 1))\n         X = np.zeros((nb_sample,) + input_shape)\n         for i in range(nb_sample):\n-            X[i] = np.random.normal(loc=y[i], scale=1.0, size=input_shape)\n+            X[i] = np.random.normal(loc=y[i], scale=0.7, size=input_shape)\n     else:\n         y_loc = np.random.random((nb_sample,))\n         X = np.zeros((nb_sample,) + input_shape)\n         y = np.zeros((nb_sample,) + output_shape)\n         for i in range(nb_sample):\n-            X[i] = np.random.normal(loc=y_loc[i], scale=1.0, size=input_shape)\n-            y[i] = np.random.normal(loc=y_loc[i], scale=1.0, size=output_shape)\n+            X[i] = np.random.normal(loc=y_loc[i], scale=0.7, size=input_shape)\n+            y[i] = np.random.normal(loc=y_loc[i], scale=0.7, size=output_shape)\n \n     return (X[:nb_train], y[:nb_train]), (X[nb_train:], y[nb_train:])\n\n@@ -14,9 +14,9 @@ from keras.utils.np_utils import to_categorical\n def test_vector_classification():\n     nb_hidden = 10\n \n-    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=1000,\n+    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=500,\n                                                          nb_test=200,\n-                                                         input_shape=(10,),\n+                                                         input_shape=(20,),\n                                                          classification=True,\n                                                          nb_class=2)\n     y_train = to_categorical(y_train)\n@@ -35,9 +35,9 @@ def test_vector_classification():\n \n def test_vector_regression():\n     nb_hidden = 10\n-    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=1000,\n+    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=500,\n                                                          nb_test=200,\n-                                                         input_shape=(10,),\n+                                                         input_shape=(20,),\n                                                          output_shape=(2,),\n                                                          classification=False)\n \n@@ -47,13 +47,13 @@ def test_vector_regression():\n     ])\n \n     model.compile(loss='hinge', optimizer='adagrad')\n-    history = model.fit(X_train, y_train, nb_epoch=12, batch_size=16,\n+    history = model.fit(X_train, y_train, nb_epoch=20, batch_size=16,\n                         validation_data=(X_test, y_test), verbose=0)\n     assert (history.history['val_loss'][-1] < 0.9)\n \n \n def test_temporal_classification():\n-    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=1000,\n+    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=500,\n                                                          nb_test=200,\n                                                          input_shape=(3, 5),\n                                                          classification=True,\n@@ -66,14 +66,14 @@ def test_temporal_classification():\n                   input_shape=(X_train.shape[1], X_train.shape[2]),\n                   activation='softmax'))\n     model.compile(loss='categorical_crossentropy', optimizer='adadelta')\n-    history = model.fit(X_train, y_train, nb_epoch=12, batch_size=16,\n+    history = model.fit(X_train, y_train, nb_epoch=20, batch_size=16,\n                         validation_data=(X_test, y_test),\n                         show_accuracy=True, verbose=0)\n     assert(history.history['val_acc'][-1] > 0.9)\n \n \n def test_temporal_regression():\n-    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=1000,\n+    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=500,\n                                                          nb_test=200,\n                                                          input_shape=(3, 5),\n                                                          output_shape=(2,),\n@@ -82,13 +82,13 @@ def test_temporal_regression():\n     model.add(GRU(y_train.shape[-1],\n               input_shape=(X_train.shape[1], X_train.shape[2])))\n     model.compile(loss='hinge', optimizer='adam')\n-    history = model.fit(X_train, y_train, nb_epoch=12, batch_size=16,\n+    history = model.fit(X_train, y_train, nb_epoch=20, batch_size=16,\n                         validation_data=(X_test, y_test), verbose=0)\n     assert(history.history['val_loss'][-1] < 0.8)\n \n \n def test_sequence_to_sequence():\n-    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=1000,\n+    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=500,\n                                                          nb_test=200,\n                                                          input_shape=(3, 5),\n                                                          output_shape=(3, 5),\n@@ -98,13 +98,13 @@ def test_sequence_to_sequence():\n     model.add(TimeDistributedDense(y_train.shape[-1],\n               input_shape=(X_train.shape[1], X_train.shape[2])))\n     model.compile(loss='hinge', optimizer='rmsprop')\n-    history = model.fit(X_train, y_train, nb_epoch=12, batch_size=16,\n+    history = model.fit(X_train, y_train, nb_epoch=20, batch_size=16,\n                         validation_data=(X_test, y_test), verbose=0)\n     assert(history.history['val_loss'][-1] < 0.8)\n \n \n def test_image_classification():\n-    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=1000,\n+    (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=500,\n                                                          nb_test=200,\n                                                          input_shape=(3, 8, 8),\n                                                          classification=True,\n@@ -118,7 +118,7 @@ def test_image_classification():\n         Dense(y_test.shape[-1], activation='softmax')\n     ])\n     model.compile(loss='categorical_crossentropy', optimizer='sgd')\n-    history = model.fit(X_train, y_train, nb_epoch=12, batch_size=16,\n+    history = model.fit(X_train, y_train, nb_epoch=20, batch_size=16,\n                         validation_data=(X_test, y_test),\n                         show_accuracy=True, verbose=0)\n     assert(history.history['val_acc'][-1] > 0.9)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#5fe40861ceb5cfa1bf10c41373a4d98b12a6a6c6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 558 | Contributors (this commit): 2 | Commits (past 90d): 5 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -14,11 +14,11 @@ import os\n input_dim = 32\n nb_hidden = 16\n nb_class = 4\n-batch_size = 64\n+batch_size = 32\n nb_epoch = 1\n \n-train_samples = 5000\n-test_samples = 1000\n+train_samples = 2000\n+test_samples = 500\n \n (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=train_samples,\n                                                      nb_test=test_samples,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#93718562db01107fef1a725717258bc53793b231", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 325 | Contributors (this commit): 2 | Commits (past 90d): 6 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -53,6 +53,7 @@ def test_vector_regression():\n \n \n def test_temporal_classification():\n+    np.random.seed(1337)\n     (X_train, y_train), (X_test, y_test) = get_test_data(nb_train=500,\n                                                          nb_test=200,\n                                                          input_shape=(3, 5),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#fc6c6aa6f0f0caae151908541e0d6b54c21cc33b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 679 | Contributors (this commit): 2 | Commits (past 90d): 10 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -545,8 +545,8 @@ def conv2d(x, kernel, strides=(1, 1), border_mode='valid', dim_ordering='th',\n     return x\n \n \n-def maxpool2d(x, pool_size, strides=(1, 1),\n-              border_mode='valid', dim_ordering='th'):\n+def pool2d(x, pool_size, strides=(1, 1),\n+              border_mode='valid', dim_ordering='th', pool_mode='max'):\n     '''\n     pool_size: tuple of 2 integers.\n     strides: tuple of 2 integers.\n@@ -575,10 +575,20 @@ def maxpool2d(x, pool_size, strides=(1, 1),\n         # TH kernel shape: (depth, input_depth, rows, cols)\n         # TF kernel shape: (rows, cols, input_depth, depth)\n         x = tf.transpose(x, (0, 2, 3, 1))\n+        if pool_mode=='max':\n             x = tf.nn.max_pool(x, pool_size, strides, padding=padding)\n+        elif pool_mode=='mean':\n+            x = tf.nn.avg_pool(x, pool_size, strides, padding=padding)\n+        else:\n+            raise Exception('Invalid pooling mode: ' + str(pool_mode)\n         x = tf.transpose(x, (0, 3, 1, 2))\n     elif dim_ordering == 'tf':\n+        if pool_mode=='max':\n             x = tf.nn.max_pool(x, pool_size, strides, padding=padding)\n+        elif pool_mode=='mean':\n+            x = tf.nn.avg_pool(x, pool_size, strides, padding=padding)\n+        else:\n+            raise Exception('Invalid pooling mode: ' + str(pool_mode)\n     else:\n         raise Exception('Unknown dim_ordering: ' + str(dim_ordering))\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#47a9735a6dfd8898ffe4b18ae996b1bbe91edcf6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 11 | Files Changed: 1 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 24 | Churn Cumulative: 752 | Contributors (this commit): 2 | Commits (past 90d): 11 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -2,6 +2,7 @@ import theano\n from theano import tensor as T\n from theano.sandbox.rng_mrg import MRG_RandomStreams as RandomStreams\n from theano.tensor.signal import downsample\n+from theano.tensor.nnet.neighbours import images2neibs\n import numpy as np\n from .common import _FLOATX, _EPSILON\n \n@@ -579,8 +580,8 @@ def conv2d(x, kernel, strides=(1, 1), border_mode='valid', dim_ordering='th',\n     return conv_out\n \n \n-def maxpool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n-              dim_ordering='th'):\n+def pool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n+              dim_ordering='th', pool_mode='sum'):\n     if border_mode == 'same':\n         # TODO: add implementation for border_mode=\"same\"\n         raise Exception('border_mode=\"same\" not supported with Theano.')\n@@ -596,17 +597,20 @@ def maxpool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n     if dim_ordering == 'tf':\n         x = x.dimshuffle((0, 3, 1, 2))\n \n-    pool_out = downsample.max_pool_2d(x,\n-                                      ds=pool_size,\n-                                      st=strides,\n-                                      ignore_border=ignore_border,\n-                                      padding=padding,\n-                                      mode='average_exc_pad')\n+    if pool_mode == 'max':\n+        pool_out = downsample.max_pool_2d(x,ds=pool_size,st=strides,ignore_border=ignore_border,padding=padding, mode='average_exc_pad')\n+    elif pool_mode == 'mean':\n+        # Only seems to work with mode='ignore_borders' right now\n+        pool_out = images2neibs(x,neib_shape=pool_size,neib_step=strides, mode='ignore_borders').mean(axis=-1)\n+    #elif pool_mode == 'sum':\n+    #    pool_out = images2neibs(x,neib_shape=pool_size,neib_step=strides, mode='ignore_borders').sum(axis=-1)\n+    else:\n+        raise Exception('Invalid pooling mode: ' + str(pool_mode))\n+\n     if dim_ordering == 'tf':\n         pool_out = pool_out.dimshuffle((0, 2, 3, 1))\n     return pool_out\n \n-\n # RANDOMNESS\n \n def random_normal(shape, mean=0.0, std=1.0, dtype=_FLOATX, seed=None):\n@@ -622,8 +626,6 @@ def random_uniform(shape, low=0.0, high=1.0, dtype=_FLOATX, seed=None):\n     rng = RandomStreams(seed=seed)\n     return rng.uniform(shape, low=low, high=high, dtype=dtype)\n \n-\n-\n '''\n more TODO:\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#5ef38bd25b1e00197fd36411d41a917eb69e334e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 5 | Files Changed: 1 | Hunks: 4 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 377 | Contributors (this commit): 2 | Commits (past 90d): 6 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -291,17 +291,17 @@ class TestBackend(unittest.TestCase):\n     #     check_two_tensor_operation('conv2d', (5, 3, 10, 12), (4, 3, 3, 3),\n     #                                strides=(2, 2), border_mode='valid')\n \n-    # def test_maxpool2d(self):\n-    #     '''maxpool2d works \"properly\" with Theano and TF but outputs different\n+    # def test_pool2d(self):\n+    #     '''pool2d works \"properly\" with Theano and TF but outputs different\n     #     values in each case. Cause unclear (input shape format?)\n     #     '''\n-    #     check_single_tensor_operation('maxpool2d', (5, 3, 10, 12), pool_size=(2, 2),\n+    #     check_single_tensor_operation('pool2d', (5, 3, 10, 12), pool_size=(2, 2),\n     #                                   strides=(1, 1), border_mode='valid')\n \n-    #     check_single_tensor_operation('maxpool2d', (5, 3, 9, 11), pool_size=(2, 2),\n+    #     check_single_tensor_operation('pool2d', (5, 3, 9, 11), pool_size=(2, 2),\n     #                                   strides=(1, 1), border_mode='valid')\n \n-    #     check_single_tensor_operation('maxpool2d', (5, 3, 9, 11), pool_size=(2, 3),\n+    #     check_single_tensor_operation('pool2d', (5, 3, 9, 11), pool_size=(2, 3),\n     #                                   strides=(1, 1), border_mode='valid')\n \n     def test_random_normal(self):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#4259071ce001a91e54912aec55f30b2d96930638", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 24 | Lines Deleted: 5 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 29 | Churn Cumulative: 1866 | Contributors (this commit): 13 | Commits (past 90d): 31 | Contributors (cumulative): 13 | DMM Complexity: 1.0\n\nDIFF:\n@@ -290,9 +290,17 @@ class MaxPooling1D(Pooling1D):\n         super(MaxPooling1D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n-        output = back_end.maxpool2d(inputs, pool_size=self.pool_size, strides=self.st,\n-                border_mode=self.border_mode,\n-                dim_ordering='th')\n+        output = back_end.pool2d(inputs, pool_size=self.pool_size, strides=self.st,\n+                border_mode=self.border_mode, dim_ordering='th', pool_mode='max')\n+        return output\n+\n+class MeanPooling1D(Pooling1D):\n+    def __init__(self, **kwargs):\n+        super(MeanPooling1D, self).__init__(**kwargs)\n+\n+    def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n+        output = back_end.pool2d(inputs, pool_size=self.pool_size, strides=self.st,\n+                border_mode=self.border_mode, dim_ordering='th', pool_mode='mean')\n         return output\n \n \n@@ -362,10 +370,21 @@ class MaxPooling2D(Pooling2D):\n         super(MaxPooling2D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n-        output = back_end.maxpool2d(inputs, pool_size=self.pool_size,\n+        output = back_end.pool2d(inputs, pool_size=self.pool_size,\n                              strides=self.strides,\n                              border_mode=self.border_mode,\n-                             dim_ordering=self.dim_ordering)\n+                             dim_ordering=self.dim_ordering, pool_mode='max')\n+        return output\n+\n+class MeanPooling2D(Pooling2D):\n+    def __init__(self, **kwargs):\n+        super(MeanPooling2D, self).__init__(**kwargs)\n+\n+    def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n+        output = back_end.pool2d(inputs, pool_size=self.pool_size,\n+                             strides=self.strides,\n+                             border_mode=self.border_mode,\n+                             dim_ordering=self.dim_ordering, pool_mode='mean')\n         return output\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#9031b7784361db3a02800a61e41c9b3da9b92c07", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 879 | Contributors (this commit): 13 | Commits (past 90d): 23 | Contributors (cumulative): 13 | DMM Complexity: 1.0\n\nDIFF:\n@@ -335,7 +335,6 @@ class Graph(Layer):\n             else:\n                 raise Exception('Unknown identifier: ' + input)\n         s = Siamese(layer, layers, merge_mode, concat_axis=concat_axis, dot_axes=dot_axes)\n-        s.set_name(name)\n         self.namespace.add(name)\n         self.nodes[name] = s\n         self.node_config.append({'name': name,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#ae375dd63876f33f2123ce0e1dc7b28c1fe84ea7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 12 | Churn Cumulative: 178 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -36,12 +36,14 @@ class TestLayerBase(unittest.TestCase):\n             assert_allclose(K.eval(layer2.get_output(train)), input)\n \n \n-class TestConfigParams(unittest.TestCase):\n+class TestBuildConfigParams(unittest.TestCase):\n     \"\"\"\n-    Test the constructor, config and params functions of all layers in core.\n+    Test the constructor, build, config and params functions of all layers in core.\n     \"\"\"\n \n     def _runner(self, layer):\n+        assert isinstance(layer, core.Layer)\n+        layer.build()\n         conf = layer.get_config()\n         assert (type(conf) == dict)\n \n@@ -49,6 +51,10 @@ class TestConfigParams(unittest.TestCase):\n         # Typically a list or a tuple, but may be any iterable\n         assert hasattr(param, '__iter__')\n \n+        #test the setter for the trainable attribute\n+        layer.trainable = True\n+        layer.trainable = False\n+\n     def test_base(self):\n         layer = core.Layer()\n         self._runner(layer)\n@@ -109,7 +115,7 @@ class TestConfigParams(unittest.TestCase):\n         self._runner(layer)\n \n     def test_maxout_dense(self):\n-        layer = core.MaxoutDense(10, 10)\n+        layer = core.MaxoutDense(10, 10, input_shape=(20,))\n         self._runner(layer)\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#4854042813955a1fbbf4d878ca35264e81338695", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 758 | Contributors (this commit): 2 | Commits (past 90d): 12 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -602,8 +602,10 @@ def pool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n     elif pool_mode == 'mean':\n         # Only seems to work with mode='ignore_borders' right now\n         pool_out = images2neibs(x,neib_shape=pool_size,neib_step=strides, mode='ignore_borders').mean(axis=-1)\n-    #elif pool_mode == 'sum':\n-    #    pool_out = images2neibs(x,neib_shape=pool_size,neib_step=strides, mode='ignore_borders').sum(axis=-1)\n+        pool_out = reshape(pool_out, (x.shape[0], x.shape[1], (x.shape[2]-pool_size[0])/strides[0]+1, (x.shape[3]-pool_size[1])/strides[1]+1))\n+    elif pool_mode == 'sum':\n+        pool_out = images2neibs(x,neib_shape=pool_size,neib_step=strides, mode='ignore_borders').sum(axis=-1)\n+        pool_out = reshape(pool_out, (x.shape[0], x.shape[1], (x.shape[2]-pool_size[0])/strides[0]+1, (x.shape[3]-pool_size[1])/strides[1]+1))\n     else:\n         raise Exception('Invalid pooling mode: ' + str(pool_mode))\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#e99dbf58572b982667b6e5649a83c05c534b52bd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 683 | Contributors (this commit): 2 | Commits (past 90d): 11 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -580,7 +580,7 @@ def pool2d(x, pool_size, strides=(1, 1),\n         elif pool_mode=='mean':\n             x = tf.nn.avg_pool(x, pool_size, strides, padding=padding)\n         else:\n-            raise Exception('Invalid pooling mode: ' + str(pool_mode)\n+            raise Exception('Invalid pooling mode: ' + str(pool_mode))\n         x = tf.transpose(x, (0, 3, 1, 2))\n     elif dim_ordering == 'tf':\n         if pool_mode=='max':\n@@ -588,7 +588,7 @@ def pool2d(x, pool_size, strides=(1, 1),\n         elif pool_mode=='mean':\n             x = tf.nn.avg_pool(x, pool_size, strides, padding=padding)\n         else:\n-            raise Exception('Invalid pooling mode: ' + str(pool_mode)\n+            raise Exception('Invalid pooling mode: ' + str(pool_mode))\n     else:\n         raise Exception('Unknown dim_ordering: ' + str(dim_ordering))\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#362e0e95aa68187cb4ebcb23143ebdccfa1b743a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 12 | Files Changed: 1 | Hunks: 4 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 20 | Churn Cumulative: 1886 | Contributors (this commit): 13 | Commits (past 90d): 29 | Contributors (cumulative): 13 | DMM Complexity: 0.0\n\nDIFF:\n@@ -290,8 +290,8 @@ class MaxPooling1D(Pooling1D):\n         super(MaxPooling1D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n-        output = back_end.pool2d(inputs, pool_size=self.pool_size, strides=self.st,\n-                border_mode=self.border_mode, dim_ordering='th', pool_mode='max')\n+        output = back_end.pool2d(inputs, pool_size, strides,\n+                border_mode, dim_ordering, pool_mode='max')\n         return output\n \n class MeanPooling1D(Pooling1D):\n@@ -299,8 +299,8 @@ class MeanPooling1D(Pooling1D):\n         super(MeanPooling1D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n-        output = back_end.pool2d(inputs, pool_size=self.pool_size, strides=self.st,\n-                border_mode=self.border_mode, dim_ordering='th', pool_mode='mean')\n+        output = back_end.pool2d(inputs, pool_size, strides,\n+                border_mode, dim_ordering, pool_mode='mean')\n         return output\n \n \n@@ -370,10 +370,8 @@ class MaxPooling2D(Pooling2D):\n         super(MaxPooling2D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n-        output = back_end.pool2d(inputs, pool_size=self.pool_size,\n-                             strides=self.strides,\n-                             border_mode=self.border_mode,\n-                             dim_ordering=self.dim_ordering, pool_mode='max')\n+        output = back_end.pool2d(inputs, pool_size, strides,\n+                             border_mode, dim_ordering, pool_mode='max')\n         return output\n \n class MeanPooling2D(Pooling2D):\n@@ -381,10 +379,8 @@ class MeanPooling2D(Pooling2D):\n         super(MeanPooling2D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n-        output = back_end.pool2d(inputs, pool_size=self.pool_size,\n-                             strides=self.strides,\n-                             border_mode=self.border_mode,\n-                             dim_ordering=self.dim_ordering, pool_mode='mean')\n+        output = back_end.pool2d(inputs, pool_size, strides,\n+                             border_mode, dim_ordering, pool_mode='max')\n         return output\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#db0ae8216ce48aabb669e299f5575b4d8fa86b4b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 33 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 11/11 | Churn Δ: 33 | Churn Cumulative: 257 | Contributors (this commit): 2 | Commits (past 90d): 4 | Contributors (cumulative): 2 | DMM Complexity: 0.35714285714285715\n\nDIFF:\n@@ -104,6 +104,18 @@ class TestShapeInference(unittest.TestCase):\n                         input_data = np.random.random(input_data_shape)\n                         check_layer_output_shape(layer, input_data)\n \n+    def test_MeanPooling1D(self):\n+        for ignore_border in [True, False]:\n+            for pool_length in [1,2]:\n+                for stride in [1]:\n+                    for input_data_shape in [(2, 3, 4), (2, 4, 4)]:\n+                        layer = MeanPooling1D(pool_length=pool_length,\n+                                             stride=stride,\n+                                             border_mode='valid')\n+                        input_data = np.random.random(input_data_shape)\n+                        check_layer_output_shape(layer, input_data)\n+\n+\n     def test_MaxPooling2D(self):\n         for ignore_border in [True, False]:\n             for strides in [(1, 1), (2, 2)]:\n@@ -124,6 +136,27 @@ class TestShapeInference(unittest.TestCase):\n                         input_data = np.random.random(input_data_shape)\n                         check_layer_output_shape(layer, input_data)\n \n+    def test_MeanPooling2D(self):\n+        for ignore_border in [True, False]:\n+            for strides in [(1, 1), (2, 2)]:\n+                for pool_size in [(2, 2), (3, 3), (4, 4)]:\n+                    for input_data_shape in [(2, 1, 4, 4), (2, 1, 5, 5), (2, 1, 6, 6)]:\n+                        layer = MeanPooling2D(pool_size=pool_size,\n+                                             strides=strides,\n+                                             border_mode='valid',\n+                                             dim_ordering='th')\n+                        input_data = np.random.random(input_data_shape)\n+                        check_layer_output_shape(layer, input_data)\n+\n+                    for input_data_shape in [(2, 4, 4, 1)]:\n+                        layer = MeanPooling2D(pool_size=pool_size,\n+                                             strides=strides,\n+                                             border_mode='valid',\n+                                             dim_ordering='tf')\n+                        input_data = np.random.random(input_data_shape)\n+                        check_layer_output_shape(layer, input_data)\n+\n+\n     def test_UpSampling1D(self):\n         layer = UpSampling1D(length=2)\n         input_data = np.random.random((2, 2, 3))\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#c19cdf4e60c38765a35435378f91942141bd9302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 31 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 6/6 | Churn Δ: 31 | Churn Cumulative: 197 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -58,6 +58,20 @@ class TestConvolutions(unittest.TestCase):\n                 K.eval(layer.get_output(train))\n             layer.get_config()\n \n+    def test_meanpooling_1d(self):\n+        nb_samples = 9\n+        nb_steps = 7\n+        input_dim = 10\n+\n+        input = np.ones((nb_samples, nb_steps, input_dim))\n+        for stride in [1, 2]:\n+            layer = convolutional.MeanPooling1D(stride=stride,\n+                                               border_mode='valid')\n+            layer.input = K.variable(input)\n+            for train in [True, False]:\n+                K.eval(layer.get_output(train))\n+            layer.get_config()\n+\n     def test_convolution_2d(self):\n         nb_samples = 8\n         nb_filter = 9\n@@ -113,6 +127,23 @@ class TestConvolutions(unittest.TestCase):\n                 K.eval(layer.get_output(train))\n             layer.get_config()\n \n+    def test_meanpooling_2d(self):\n+        nb_samples = 9\n+        stack_size = 7\n+        input_nb_row = 11\n+        input_nb_col = 12\n+        pool_size = (3, 3)\n+\n+        input = np.ones((nb_samples, stack_size, input_nb_row, input_nb_col))\n+        for strides in [(1, 1), (2, 2)]:\n+            layer = convolutional.MeanPooling2D(strides=strides,\n+                                               border_mode='valid',\n+                                               pool_size=pool_size)\n+            layer.input = K.variable(input)\n+            for train in [True, False]:\n+                K.eval(layer.get_output(train))\n+            layer.get_config()\n+\n     def test_zero_padding_2d(self):\n         nb_samples = 9\n         stack_size = 7\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#51c1c94439df45155b11cd5fa7f2b0b3bbdaac1f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 9 | Files Changed: 2 | Hunks: 10 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 27 | Churn Cumulative: 2671 | Contributors (this commit): 13 | Commits (past 90d): 43 | Contributors (cumulative): 15 | DMM Complexity: None\n\nDIFF:\n@@ -2,7 +2,6 @@ import theano\n from theano import tensor as T\n from theano.sandbox.rng_mrg import MRG_RandomStreams as RandomStreams\n from theano.tensor.signal import downsample\n-from theano.tensor.nnet.neighbours import images2neibs\n import numpy as np\n from .common import _FLOATX, _EPSILON\n \n@@ -581,7 +580,7 @@ def conv2d(x, kernel, strides=(1, 1), border_mode='valid', dim_ordering='th',\n \n \n def pool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n-              dim_ordering='th', pool_mode='sum'):\n+           dim_ordering='th', pool_mode='max'):\n     if border_mode == 'same':\n         # TODO: add implementation for border_mode=\"same\"\n         raise Exception('border_mode=\"same\" not supported with Theano.')\n@@ -598,14 +597,21 @@ def pool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n         x = x.dimshuffle((0, 3, 1, 2))\n \n     if pool_mode == 'max':\n-        pool_out = downsample.max_pool_2d(x,ds=pool_size,st=strides,ignore_border=ignore_border,padding=padding, mode='average_exc_pad')\n+        pool_out = downsample.max_pool_2d(x, ds=pool_size, st=strides,\n+                                          ignore_border=ignore_border,\n+                                          padding=padding,\n+                                          mode='max')\n     elif pool_mode == 'mean':\n         # Only seems to work with mode='ignore_borders' right now\n-        pool_out = images2neibs(x,neib_shape=pool_size,neib_step=strides, mode='ignore_borders').mean(axis=-1)\n-        pool_out = reshape(pool_out, (x.shape[0], x.shape[1], (x.shape[2]-pool_size[0])/strides[0]+1, (x.shape[3]-pool_size[1])/strides[1]+1))\n+        pool_out = downsample.max_pool_2d(x, ds=pool_size, st=strides,\n+                                          ignore_border=ignore_border,\n+                                          padding=padding,\n+                                          mode='average_exc_pad')\n     elif pool_mode == 'sum':\n-        pool_out = images2neibs(x,neib_shape=pool_size,neib_step=strides, mode='ignore_borders').sum(axis=-1)\n-        pool_out = reshape(pool_out, (x.shape[0], x.shape[1], (x.shape[2]-pool_size[0])/strides[0]+1, (x.shape[3]-pool_size[1])/strides[1]+1))\n+        pool_out = downsample.max_pool_2d(x, ds=pool_size, st=strides,\n+                                          ignore_border=ignore_border,\n+                                          padding=padding,\n+                                          mode='sum')\n     else:\n         raise Exception('Invalid pooling mode: ' + str(pool_mode))\n \n@@ -615,6 +621,7 @@ def pool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n \n # RANDOMNESS\n \n+\n def random_normal(shape, mean=0.0, std=1.0, dtype=_FLOATX, seed=None):\n     if seed is None:\n         seed = np.random.randint(10e6)\n\n@@ -294,6 +294,7 @@ class MaxPooling1D(Pooling1D):\n                                  border_mode, dim_ordering, pool_mode='max')\n         return output\n \n+\n class MeanPooling1D(Pooling1D):\n     def __init__(self, **kwargs):\n         super(MeanPooling1D, self).__init__(**kwargs)\n@@ -352,7 +353,7 @@ class Pooling2D(Layer):\n         output = self.pooling_function(back_end=K, inputs=X, pool_size=self.pool_size,\n                                        strides=self.strides,\n                                        border_mode=self.border_mode,\n-                dim_ordering='th')\n+                                       dim_ordering=self.dim_ordering)\n         return output\n \n     def get_config(self):\n@@ -374,13 +375,14 @@ class MaxPooling2D(Pooling2D):\n                                  border_mode, dim_ordering, pool_mode='max')\n         return output\n \n+\n class MeanPooling2D(Pooling2D):\n     def __init__(self, **kwargs):\n         super(MeanPooling2D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n         output = back_end.pool2d(inputs, pool_size, strides,\n-                             border_mode, dim_ordering, pool_mode='max')\n+                                 border_mode, dim_ordering, pool_mode='mean')\n         return output\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f200b190562d78c684cf019c1b9c4f3ccc03d3de", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 4 | Methods Changed: 1 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 16 | Churn Cumulative: 102 | Contributors (this commit): 9 | Commits (past 90d): 4 | Contributors (cumulative): 9 | DMM Complexity: 0.0\n\nDIFF:\n@@ -107,10 +107,15 @@ class Progbar(object):\n             else:\n                 info += ' - %ds' % (now - self.start)\n             for k in self.unique_values:\n+                info += ' - %s:' % k\n                 if type(self.sum_values[k]) is list:\n-                    info += ' - %s: %.4f' % (k, self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n+                    avg = self.sum_values[k][0] / max(1, self.sum_values[k][1])\n+                    if avg > 1e-3:\n+                        info += ' %.4f' % avg\n                     else:\n-                    info += ' - %s: %s' % (k, self.sum_values[k])\n+                        info += ' %.4e' % avg\n+                else:\n+                    info += ' %s' % self.sum_values[k]\n \n             self.total_width += len(info)\n             if prev_total_width > self.total_width:\n@@ -126,7 +131,12 @@ class Progbar(object):\n             if current >= self.target:\n                 info = '%ds' % (now - self.start)\n                 for k in self.unique_values:\n-                    info += ' - %s: %.4f' % (k, self.sum_values[k][0] / max(1, self.sum_values[k][1]))\n+                    info += ' - %s:' % k\n+                    avg = self.sum_values[k][0] / max(1, self.sum_values[k][1])\n+                    if avg > 1e-3:\n+                        info += ' %.4f' % avg\n+                    else:\n+                        info += ' %.4e' % avg\n                 sys.stdout.write(info + \"\\n\")\n \n     def add(self, n, values=[]):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#31cf6b16f48d1da338c7af26d64f5104534fe0ab", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 803 | Contributors (this commit): 12 | Commits (past 90d): 8 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -168,7 +168,7 @@ class Adadelta(Optimizer):\n     def get_config(self):\n         return {\"name\": self.__class__.__name__,\n                 \"lr\": float(K.get_value(self.lr)),\n-                \"rho\": float(K.get_value(self.rho)),\n+                \"rho\": self.rho,\n                 \"epsilon\": self.epsilon}\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#313ebae4d2db59d1ac202b82284e496e5756aa47", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 15 | Lines Deleted: 15 | Files Changed: 3 | Hunks: 15 | Methods Changed: 10 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 30 | Churn Cumulative: 2376 | Contributors (this commit): 13 | Commits (past 90d): 39 | Contributors (cumulative): 17 | DMM Complexity: None\n\nDIFF:\n@@ -295,13 +295,13 @@ class MaxPooling1D(Pooling1D):\n         return output\n \n \n-class MeanPooling1D(Pooling1D):\n+class AveragePooling1D(Pooling1D):\n     def __init__(self, **kwargs):\n-        super(MeanPooling1D, self).__init__(**kwargs)\n+        super(AveragePooling1D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n         output = back_end.pool2d(inputs, pool_size, strides,\n-                                 border_mode, dim_ordering, pool_mode='mean')\n+                                 border_mode, dim_ordering, pool_mode='avg')\n         return output\n \n \n@@ -376,13 +376,13 @@ class MaxPooling2D(Pooling2D):\n         return output\n \n \n-class MeanPooling2D(Pooling2D):\n+class AveragePooling2D(Pooling2D):\n     def __init__(self, **kwargs):\n-        super(MeanPooling2D, self).__init__(**kwargs)\n+        super(AveragePooling2D, self).__init__(**kwargs)\n \n     def pooling_function(self, back_end, inputs, pool_size, strides, border_mode, dim_ordering):\n         output = back_end.pool2d(inputs, pool_size, strides,\n-                                 border_mode, dim_ordering, pool_mode='mean')\n+                                 border_mode, dim_ordering, pool_mode='avg')\n         return output\n \n \n\n@@ -58,14 +58,14 @@ class TestConvolutions(unittest.TestCase):\n                 K.eval(layer.get_output(train))\n             layer.get_config()\n \n-    def test_meanpooling_1d(self):\n+    def test_averagepooling_1d(self):\n         nb_samples = 9\n         nb_steps = 7\n         input_dim = 10\n \n         input = np.ones((nb_samples, nb_steps, input_dim))\n         for stride in [1, 2]:\n-            layer = convolutional.MeanPooling1D(stride=stride,\n+            layer = convolutional.AveragePooling1D(stride=stride,\n                                                    border_mode='valid')\n             layer.input = K.variable(input)\n             for train in [True, False]:\n@@ -127,7 +127,7 @@ class TestConvolutions(unittest.TestCase):\n                 K.eval(layer.get_output(train))\n             layer.get_config()\n \n-    def test_meanpooling_2d(self):\n+    def test_averagepooling_2d(self):\n         nb_samples = 9\n         stack_size = 7\n         input_nb_row = 11\n@@ -136,7 +136,7 @@ class TestConvolutions(unittest.TestCase):\n \n         input = np.ones((nb_samples, stack_size, input_nb_row, input_nb_col))\n         for strides in [(1, 1), (2, 2)]:\n-            layer = convolutional.MeanPooling2D(strides=strides,\n+            layer = convolutional.AveragePooling2D(strides=strides,\n                                                    border_mode='valid',\n                                                    pool_size=pool_size)\n             layer.input = K.variable(input)\n\n@@ -112,12 +112,12 @@ def test_MaxPooling1D():\n                     check_layer_output_shape(layer, input_data)\n \n \n-def test_MeanPooling1D(self):\n+def test_AveragePooling1D(self):\n     for ignore_border in [True, False]:\n         for pool_length in [1, 2]:\n             for stride in [1]:\n                 for input_data_shape in [(2, 3, 4), (2, 4, 4)]:\n-                    layer = MeanPooling1D(pool_length=pool_length,\n+                    layer = AveragePooling1D(pool_length=pool_length,\n                                              stride=stride,\n                                              border_mode='valid')\n                     input_data = np.random.random(input_data_shape)\n@@ -145,12 +145,12 @@ def test_MaxPooling2D():\n                     check_layer_output_shape(layer, input_data)\n \n \n-def test_MeanPooling2D(self):\n+def test_AveragePooling2D(self):\n     for ignore_border in [True, False]:\n         for strides in [(1, 1), (2, 2)]:\n             for pool_size in [(2, 2), (3, 3), (4, 4)]:\n                 for input_data_shape in [(2, 1, 4, 4), (2, 1, 5, 5), (2, 1, 6, 6)]:\n-                    layer = MeanPooling2D(pool_size=pool_size,\n+                    layer = AveragePooling2D(pool_size=pool_size,\n                                              strides=strides,\n                                              border_mode='valid',\n                                              dim_ordering='th')\n@@ -158,7 +158,7 @@ def test_MeanPooling2D(self):\n                     check_layer_output_shape(layer, input_data)\n \n                 for input_data_shape in [(2, 4, 4, 1)]:\n-                    layer = MeanPooling2D(pool_size=pool_size,\n+                    layer = AveragePooling2D(pool_size=pool_size,\n                                              strides=strides,\n                                              border_mode='valid',\n                                              dim_ordering='tf')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#075c34d037ec564aa9c923a653c2cc3135c99510", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 8 | Files Changed: 1 | Hunks: 4 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 11 | Churn Cumulative: 694 | Contributors (this commit): 2 | Commits (past 90d): 12 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -567,6 +567,7 @@ def pool2d(x, pool_size, strides=(1, 1),\n         # tf max_pool only supports float32\n         x = tf.cast(x, 'float32')\n \n+    if dim_ordering in {'tf', 'th'}:\n         if dim_ordering == 'th':\n             # TF uses the last dimension as channel dimension,\n             # instead of the 2nd one.\n@@ -577,18 +578,12 @@ def pool2d(x, pool_size, strides=(1, 1),\n             x = tf.transpose(x, (0, 2, 3, 1))\n         if pool_mode == 'max':\n             x = tf.nn.max_pool(x, pool_size, strides, padding=padding)\n-        elif pool_mode=='mean':\n+        elif pool_mode == 'avg':\n             x = tf.nn.avg_pool(x, pool_size, strides, padding=padding)\n         else:\n             raise Exception('Invalid pooling mode: ' + str(pool_mode))\n+        if dim_ordering == 'th':\n             x = tf.transpose(x, (0, 3, 1, 2))\n-    elif dim_ordering == 'tf':\n-        if pool_mode=='max':\n-            x = tf.nn.max_pool(x, pool_size, strides, padding=padding)\n-        elif pool_mode=='mean':\n-            x = tf.nn.avg_pool(x, pool_size, strides, padding=padding)\n-        else:\n-            raise Exception('Invalid pooling mode: ' + str(pool_mode))\n     else:\n         raise Exception('Unknown dim_ordering: ' + str(dim_ordering))\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#7d0ed02cc17ac57e35562526d7998735dee6368f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 787 | Contributors (this commit): 2 | Commits (past 90d): 14 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -601,17 +601,11 @@ def pool2d(x, pool_size, strides=(1, 1), border_mode='valid',\n                                           ignore_border=ignore_border,\n                                           padding=padding,\n                                           mode='max')\n-    elif pool_mode == 'mean':\n-        # Only seems to work with mode='ignore_borders' right now\n+    elif pool_mode == 'avg':\n         pool_out = downsample.max_pool_2d(x, ds=pool_size, st=strides,\n                                           ignore_border=ignore_border,\n                                           padding=padding,\n                                           mode='average_exc_pad')\n-    elif pool_mode == 'sum':\n-        pool_out = downsample.max_pool_2d(x, ds=pool_size, st=strides,\n-                                          ignore_border=ignore_border,\n-                                          padding=padding,\n-                                          mode='sum')\n     else:\n         raise Exception('Invalid pooling mode: ' + str(pool_mode))\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
