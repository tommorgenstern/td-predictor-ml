{"custom_id": "requests#80f304fd30d926bbe9626c4a02146dcb4aa2e2e7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 3218 | Contributors (this commit): 78 | Commits (past 90d): 8 | Contributors (cumulative): 78 | DMM Complexity: None\n\nDIFF:\n@@ -322,7 +322,7 @@ class Session(SessionRedirectMixin):\n         #: SSL Verification default.\n         self.verify = True\n \n-        #: SSL certificate default.\n+        #: SSL client certificate default.\n         self.cert = None\n \n         #: Maximum number of redirects allowed. If the request exceeds this\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#cd056cd62109e1b6af16031cf9bc57cb5c38bbbf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): -2/1 | Churn Δ: 17 | Churn Cumulative: 13021 | Contributors (this commit): 179 | Commits (past 90d): 27 | Contributors (cumulative): 207 | DMM Complexity: 0.0\n\nDIFF:\n@@ -848,7 +848,10 @@ class Response(object):\n \n         http_error_msg = ''\n         if isinstance(self.reason, bytes):\n-            reason = self.reason.decode('utf-8', 'ignore')\n+            try:\n+                reason = self.reason.decode('utf-8')\n+            except UnicodeDecodeError:\n+                reason = self.reason.decode('iso-8859-1')\n         else:\n             reason = self.reason\n \n\n@@ -1022,6 +1022,18 @@ class TestRequests:\n         r.encoding = None\n         assert not r.ok  # old behaviour - crashes here\n \n+    def test_response_reason_unicode_fallback(self):\n+        # check raise_status falls back to ISO-8859-1\n+        r = requests.Response()\n+        r.url = 'some url'\n+        reason = u'Komponenttia ei löydy'\n+        r.reason = reason.encode('latin-1')\n+        r.status_code = 500\n+        r.encoding = None\n+        with pytest.raises(requests.exceptions.HTTPError) as e:\n+            r.raise_for_status()\n+        assert reason in str(e)\n+\n     def test_response_chunk_size_type(self):\n         \"\"\"Ensure that chunk_size is passed as None or an integer, otherwise\n         raise a TypeError.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#dedf9064c6fae669995d0dc04081f93845ca9c42", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 503 | Contributors (this commit): 21 | Commits (past 90d): 1 | Contributors (cumulative): 21 | DMM Complexity: None\n\nDIFF:\n@@ -93,6 +93,6 @@ setup(\n     tests_require=test_requirements,\n     extras_require={\n         'security': ['pyOpenSSL>=0.13', 'ndg-httpsclient', 'pyasn1'],\n-        'socks': ['PySocks>=1.5.6'],\n+        'socks': ['PySocks>=1.5.6, !=1.5.7'],\n     },\n )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#2e1086f5b4fe1caf507abfb6cd2ac0c2ad420e26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 9509 | Contributors (this commit): 162 | Commits (past 90d): 12 | Contributors (cumulative): 162 | DMM Complexity: None\n\nDIFF:\n@@ -848,6 +848,10 @@ class Response(object):\n \n         http_error_msg = ''\n         if isinstance(self.reason, bytes):\n+            # We attempt to decode utf-8 first because some servers\n+            # choose to localize their reason strings. If the string\n+            # isn't utf-8, we fall back to iso-8859-1 for all other\n+            # encodings. (See PR #3538)\n             try:\n                 reason = self.reason.decode('utf-8')\n             except UnicodeDecodeError:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#42d4eaf6eaad8b43e1048b8ac06aec760c2285ab", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 3522 | Contributors (this commit): 45 | Commits (past 90d): 16 | Contributors (cumulative): 45 | DMM Complexity: None\n\nDIFF:\n@@ -1026,13 +1026,13 @@ class TestRequests:\n         # check raise_status falls back to ISO-8859-1\n         r = requests.Response()\n         r.url = 'some url'\n-        reason = u'Komponenttia ei löydy'\n-        r.reason = reason.encode('latin-1')\n+        reason = b'Komponenttia ei l\\xf6ydy'\n+        r.reason = reason\n         r.status_code = 500\n         r.encoding = None\n         with pytest.raises(requests.exceptions.HTTPError) as e:\n             r.raise_for_status()\n-        assert reason in str(e)\n+        assert reason.decode('latin-1') in str(e)\n \n     def test_response_chunk_size_type(self):\n         \"\"\"Ensure that chunk_size is passed as None or an integer, otherwise\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#39e8c0d96f2ea9563fc2bc42d5e0aaf61aa29370", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 3528 | Contributors (this commit): 45 | Commits (past 90d): 17 | Contributors (cumulative): 45 | DMM Complexity: None\n\nDIFF:\n@@ -1026,13 +1026,13 @@ class TestRequests:\n         # check raise_status falls back to ISO-8859-1\n         r = requests.Response()\n         r.url = 'some url'\n-        reason = b'Komponenttia ei l\\xf6ydy'\n-        r.reason = reason\n+        reason = u'Komponenttia ei löydy'\n+        r.reason = reason.encode('latin-1')\n         r.status_code = 500\n         r.encoding = None\n         with pytest.raises(requests.exceptions.HTTPError) as e:\n             r.raise_for_status()\n-        assert reason.decode('latin-1') in str(e)\n+        assert reason in e.value.args[0]\n \n     def test_response_chunk_size_type(self):\n         \"\"\"Ensure that chunk_size is passed as None or an integer, otherwise\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d7227fbb7e07af35f23a0d370ab3b01661af9e40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 9514 | Contributors (this commit): 163 | Commits (past 90d): 13 | Contributors (cumulative): 163 | DMM Complexity: None\n\nDIFF:\n@@ -10,6 +10,11 @@ This module contains the primary objects that power Requests.\n import collections\n import datetime\n \n+# Import encoding now, to avoid implicit import later.\n+# Implicit import within threads may cause LookupError when standard library is in a ZIP,\n+# such as in Embedded Python. See https://github.com/kennethreitz/requests/issues/3578.\n+import encodings.idna\n+\n from io import BytesIO, UnsupportedOperation\n from .hooks import default_hooks\n from .structures import CaseInsensitiveDict\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#08a158f4868004586c6ab2e866b1530124dbd0fe", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 35 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 37 | Churn Cumulative: 6783 | Contributors (this commit): 108 | Commits (past 90d): 25 | Contributors (cumulative): 123 | DMM Complexity: 1.0\n\nDIFF:\n@@ -156,7 +156,7 @@ class SessionRedirectMixin(object):\n             # in the new request. Because we've mutated our copied prepared\n             # request, use the old one that we haven't yet touched.\n             extract_cookies_to_jar(prepared_request._cookies, req, resp.raw)\n-            prepared_request._cookies.update(self.cookies)\n+            merge_cookies(prepared_request._cookies, self.cookies)\n             prepared_request.prepare_cookies(prepared_request._cookies)\n \n             # Rebuild auth and proxy information.\n\n@@ -19,7 +19,8 @@ from requests.auth import HTTPDigestAuth, _basic_auth_str\n from requests.compat import (\n     Morsel, cookielib, getproxies, str, urlparse,\n     builtin_str, OrderedDict)\n-from requests.cookies import cookiejar_from_dict, morsel_to_cookie\n+from requests.cookies import (\n+    cookiejar_from_dict, morsel_to_cookie, merge_cookies)\n from requests.exceptions import (\n     ConnectionError, ConnectTimeout, InvalidSchema, InvalidURL,\n     MissingSchema, ReadTimeout, Timeout, RetryError, TooManyRedirects,\n@@ -344,6 +345,38 @@ class TestRequests:\n         # Make sure the cookie was sent\n         assert r.json()['cookies']['foo'] == 'bar'\n \n+    def test_cookielib_cookiejar_on_redirect(self, httpbin):\n+        \"\"\"Tests resolve_redirect doesn't fail when merging cookies\n+        with non-RequestsCookieJar cookiejar.\n+\n+        See GH #3579\n+        \"\"\"\n+        cj = cookiejar_from_dict({'foo': 'bar'}, cookielib.CookieJar())\n+        s = requests.Session()\n+        s.cookies = cookiejar_from_dict({'cookie': 'tasty'})\n+\n+        # Prepare request without using Session\n+        req = requests.Request('GET', httpbin('headers'), cookies=cj)\n+        prep_req = req.prepare()\n+\n+        # Send request and simulate redirect\n+        resp = s.send(prep_req)\n+        resp.status_code = 302\n+        resp.headers['location'] = httpbin('get')\n+        redirects = s.resolve_redirects(resp, prep_req)\n+        resp = next(redirects)\n+\n+        # Verify CookieJar isn't being converted to RequestsCookieJar\n+        assert isinstance(prep_req._cookies, cookielib.CookieJar)\n+        assert isinstance(resp.request._cookies, cookielib.CookieJar)\n+        assert not isinstance(resp.request._cookies, requests.cookies.RequestsCookieJar)\n+\n+        cookies = {}\n+        for c in resp.request._cookies:\n+            cookies[c.name] = c.value\n+        assert cookies['foo'] == 'bar'\n+        assert cookies['cookie'] == 'tasty'\n+\n     def test_requests_in_history_are_not_overridden(self, httpbin):\n         resp = requests.get(httpbin('redirect/3'))\n         urls = [r.url for r in resp.history]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#31b35ab838dfab92ea199a2688fefb74215aa7e9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 20 | Lines Deleted: 12 | Files Changed: 2 | Hunks: 3 | Methods Changed: 4 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 32 | Churn Cumulative: 13109 | Contributors (this commit): 180 | Commits (past 90d): 32 | Contributors (cumulative): 208 | DMM Complexity: 1.0\n\nDIFF:\n@@ -424,7 +424,6 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         # Nottin' on you.\n         body = None\n         content_type = None\n-        length = None\n \n         if not data and json is not None:\n             # urllib3 requires a bytes-like body. Python 2's json.dumps\n@@ -475,17 +474,16 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         self.body = body\n \n     def prepare_content_length(self, body):\n-        if hasattr(body, 'seek') and hasattr(body, 'tell'):\n-            curr_pos = body.tell()\n-            body.seek(0, 2)\n-            end_pos = body.tell()\n-            self.headers['Content-Length'] = builtin_str(max(0, end_pos - curr_pos))\n-            body.seek(curr_pos, 0)\n-        elif body is not None:\n-            l = super_len(body)\n-            if l:\n-                self.headers['Content-Length'] = builtin_str(l)\n-        elif (self.method not in ('GET', 'HEAD')) and (self.headers.get('Content-Length') is None):\n+        \"\"\"Prepare Content-Length header based on request method and body\"\"\"\n+        if body is not None:\n+            length = super_len(body)\n+            if length:\n+                # If length exists, set it. Otherwise, we fallback\n+                # to Transfer-Encoding: chunked.\n+                self.headers['Content-Length'] = builtin_str(length)\n+        elif self.method not in ('GET', 'HEAD') and self.headers.get('Content-Length') is None:\n+            # Set Content-Length to 0 for methods that can have a body\n+            # but don't provide one. (i.e. not GET or HEAD)\n             self.headers['Content-Length'] = '0'\n \n     def prepare_auth(self, auth, url=''):\n\n@@ -90,6 +90,16 @@ class TestRequests:\n         req = requests.Request(method, httpbin(method.lower())).prepare()\n         assert 'Content-Length' not in req.headers\n \n+    @pytest.mark.parametrize('method', ('POST', 'PUT', 'PATCH', 'OPTIONS'))\n+    def test_no_body_content_length(self, httpbin, method):\n+        req = requests.Request(method, httpbin(method.lower())).prepare()\n+        assert req.headers['Content-Length'] == '0'\n+\n+    @pytest.mark.parametrize('method', ('POST', 'PUT', 'PATCH', 'OPTIONS'))\n+    def test_empty_content_length(self, httpbin, method):\n+        req = requests.Request(method, httpbin(method.lower()), data='').prepare()\n+        assert req.headers['Content-Length'] == '0'\n+\n     def test_override_content_length(self, httpbin):\n         headers = {\n             'Content-Length': 'not zero'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#b28531f4bb43b401e3e37e2da622aee21002e5b2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 10 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 10 | Churn Cumulative: 3583 | Contributors (this commit): 46 | Commits (past 90d): 18 | Contributors (cumulative): 46 | DMM Complexity: 1.0\n\nDIFF:\n@@ -858,6 +858,16 @@ class TestRequests:\n         prep = s.prepare_request(req)\n         assert prep.url == \"https://httpbin.org/\"\n \n+    def test_request_with_bytestring_host(self):\n+        s = requests.Session()\n+        resp = s.request(\n+            'GET',\n+            'http://httpbin.org/cookies/set?cookie=value',\n+            allow_redirects=False,\n+            headers={'Host': b'httpbin.org'}\n+        )\n+        assert resp.cookies.get('cookie') == 'value'\n+\n     def test_links(self):\n         r = requests.Response()\n         r.headers = {\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#01e405c6116c94d92057f7aaea58d51d1d7f90a7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 6 | Churn Cumulative: 1085 | Contributors (this commit): 25 | Commits (past 90d): 5 | Contributors (cumulative): 25 | DMM Complexity: 1.0\n\nDIFF:\n@@ -57,6 +57,12 @@ class MockRequest(object):\n         # If they did set it, retrieve it and reconstruct the expected domain\n         host = self._r.headers['Host']\n         parsed = urlparse(self._r.url)\n+\n+        # If parsed url is str type, ensure that host is also str type\n+        if isinstance(parsed.scheme, str) and not isinstance(host, str)\\\n+                and isinstance(host, bytes):\n+            host = host.decode('ascii')\n+\n         # Reconstruct the URL as we expect it\n         return urlunparse([\n             parsed.scheme, host, parsed.path, parsed.params, parsed.query,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#2af059797a33a1ee2132ed13e456413c18bc7aa2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 10 | Churn Cumulative: 1095 | Contributors (this commit): 25 | Commits (past 90d): 6 | Contributors (cumulative): 25 | DMM Complexity: 0.0\n\nDIFF:\n@@ -13,6 +13,8 @@ import copy\n import time\n import calendar\n import collections\n+\n+from . import utils\n from .compat import cookielib, urlparse, urlunparse, Morsel\n \n try:\n@@ -55,14 +57,8 @@ class MockRequest(object):\n         if not self._r.headers.get('Host'):\n             return self._r.url\n         # If they did set it, retrieve it and reconstruct the expected domain\n-        host = self._r.headers['Host']\n+        host = utils.to_native_string(self._r.headers['Host'], encoding='utf-8')\n         parsed = urlparse(self._r.url)\n-\n-        # If parsed url is str type, ensure that host is also str type\n-        if isinstance(parsed.scheme, str) and not isinstance(host, str)\\\n-                and isinstance(host, bytes):\n-            host = host.decode('ascii')\n-\n         # Reconstruct the URL as we expect it\n         return urlunparse([\n             parsed.scheme, host, parsed.path, parsed.params, parsed.query,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f002b73026bdc136654ba545296898af9a88007a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 23 | Lines Deleted: 21 | Files Changed: 3 | Hunks: 6 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/3 | Churn Δ: 44 | Churn Cumulative: 3757 | Contributors (this commit): 82 | Commits (past 90d): 20 | Contributors (cumulative): 93 | DMM Complexity: None\n\nDIFF:\n@@ -0,0 +1,17 @@\n+from .compat import is_py2, builtin_str\n+\n+\n+def to_native_string(string, encoding='ascii'):\n+    \"\"\"Given a string object, regardless of type, returns a representation of\n+    that string in the native string type, encoding and decoding where\n+    necessary. This assumes ASCII unless told otherwise.\n+    \"\"\"\n+    if isinstance(string, builtin_str):\n+        out = string\n+    else:\n+        if is_py2:\n+            out = string.encode(encoding)\n+        else:\n+            out = string.decode(encoding)\n+\n+    return out\n\n@@ -14,7 +14,7 @@ import time\n import calendar\n import collections\n \n-from . import utils\n+from ._internal_utils import to_native_string\n from .compat import cookielib, urlparse, urlunparse, Morsel\n \n try:\n@@ -57,7 +57,7 @@ class MockRequest(object):\n         if not self._r.headers.get('Host'):\n             return self._r.url\n         # If they did set it, retrieve it and reconstruct the expected domain\n-        host = utils.to_native_string(self._r.headers['Host'], encoding='utf-8')\n+        host = to_native_string(self._r.headers['Host'], encoding='utf-8')\n         parsed = urlparse(self._r.url)\n         # Reconstruct the URL as we expect it\n         return urlunparse([\n\n@@ -20,10 +20,11 @@ import warnings\n \n from . import __version__\n from . import certs\n+# noinspection PyUnresolvedReferences\n+from ._internal_utils import to_native_string\n from .compat import parse_http_list as _parse_list_header\n-from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote, is_py2,\n-                     builtin_str, getproxies, proxy_bypass, urlunparse,\n-                     basestring)\n+from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote,\n+                     getproxies, proxy_bypass, urlunparse, basestring)\n from .cookies import RequestsCookieJar, cookiejar_from_dict\n from .structures import CaseInsensitiveDict\n from .exceptions import InvalidURL, InvalidHeader, FileModeWarning\n@@ -770,22 +771,6 @@ def get_auth_from_url(url):\n     return auth\n \n \n-def to_native_string(string, encoding='ascii'):\n-    \"\"\"Given a string object, regardless of type, returns a representation of\n-    that string in the native string type, encoding and decoding where\n-    necessary. This assumes ASCII unless told otherwise.\n-    \"\"\"\n-    if isinstance(string, builtin_str):\n-        out = string\n-    else:\n-        if is_py2:\n-            out = string.encode(encoding)\n-        else:\n-            out = string.decode(encoding)\n-\n-    return out\n-\n-\n # Moved outside of function to avoid recompile every call\n _CLEAN_HEADER_REGEX_BYTE = re.compile(b'^\\\\S[^\\\\r\\\\n]*$|^$')\n _CLEAN_HEADER_REGEX_STR = re.compile(r'^\\S[^\\r\\n]*$|^$')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3ac70defff233359fbd715ad6e02350c2519291d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 12 | Churn Cumulative: 2670 | Contributors (this commit): 67 | Commits (past 90d): 14 | Contributors (cumulative): 68 | DMM Complexity: None\n\nDIFF:\n@@ -1,3 +1,13 @@\n+# -*- coding: utf-8 -*-\n+\n+\"\"\"\n+requests._internal_utils\n+~~~~~~~~~~~~~~\n+\n+Provides utility functions that are consumed internally by Requests\n+which depend on extremely few external helpers (such as compat)\n+\"\"\"\n+\n from .compat import is_py2, builtin_str\n \n \n\n@@ -20,7 +20,7 @@ import warnings\n \n from . import __version__\n from . import certs\n-# noinspection PyUnresolvedReferences\n+# to_native_string is unused here, but imported here for backwards compatibility\n from ._internal_utils import to_native_string\n from .compat import parse_http_list as _parse_list_header\n from .compat import (quote, urlparse, bytes, str, OrderedDict, unquote,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#087aeacee570e3e3adc6103015d4f8b056705850", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 4 | Files Changed: 3 | Hunks: 4 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 14254 | Contributors (this commit): 228 | Commits (past 90d): 25 | Contributors (cumulative): 286 | DMM Complexity: None\n\nDIFF:\n@@ -17,7 +17,8 @@ from base64 import b64encode\n \n from .compat import urlparse, str\n from .cookies import extract_cookies_to_jar\n-from .utils import parse_dict_header, to_native_string\n+from ._internal_utils import to_native_string\n+from .utils import parse_dict_header\n from .status_codes import codes\n \n CONTENT_TYPE_FORM_URLENCODED = 'application/x-www-form-urlencoded'\n\n@@ -29,11 +29,11 @@ from .packages.urllib3.exceptions import (\n from .exceptions import (\n     HTTPError, MissingSchema, InvalidURL, ChunkedEncodingError,\n     ContentDecodingError, ConnectionError, StreamConsumedError)\n+from ._internal_utils import to_native_string\n from .utils import (\n     guess_filename, get_auth_from_url, requote_uri,\n     stream_decode_response_unicode, to_key_val_list, parse_header_links,\n-    iter_slices, guess_json_utf, super_len, to_native_string,\n-    check_header_validity)\n+    iter_slices, guess_json_utf, super_len, check_header_validity)\n from .compat import (\n     cookielib, urlunparse, urlsplit, urlencode, str, bytes, StringIO,\n     is_py2, chardet, builtin_str, basestring)\n\n@@ -17,7 +17,8 @@ from .cookies import (\n     cookiejar_from_dict, extract_cookies_to_jar, RequestsCookieJar, merge_cookies)\n from .models import Request, PreparedRequest, DEFAULT_REDIRECT_LIMIT\n from .hooks import default_hooks, dispatch_hook\n-from .utils import to_key_val_list, default_headers, to_native_string\n+from ._internal_utils import to_native_string\n+from .utils import to_key_val_list, default_headers\n from .exceptions import (\n     TooManyRedirects, InvalidSchema, ChunkedEncodingError, ContentDecodingError)\n from .packages.urllib3._collections import RecentlyUsedContainer\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#5c15fffaca3573d2a03cc9aeb80af212601a2405", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 3587 | Contributors (this commit): 46 | Commits (past 90d): 16 | Contributors (cumulative): 46 | DMM Complexity: None\n\nDIFF:\n@@ -858,11 +858,11 @@ class TestRequests:\n         prep = s.prepare_request(req)\n         assert prep.url == \"https://httpbin.org/\"\n \n-    def test_request_with_bytestring_host(self):\n+    def test_request_with_bytestring_host(self, httpbin):\n         s = requests.Session()\n         resp = s.request(\n             'GET',\n-            'http://httpbin.org/cookies/set?cookie=value',\n+            httpbin('cookies/set?cookie=value'),\n             allow_redirects=False,\n             headers={'Host': b'httpbin.org'}\n         )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#327512f5ef9eea79a0cb324ba47e7eabf6967b3a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 4 | Churn Cumulative: 9544 | Contributors (this commit): 165 | Commits (past 90d): 13 | Contributors (cumulative): 165 | DMM Complexity: 1.0\n\nDIFF:\n@@ -747,7 +747,6 @@ class Response(object):\n \n         if self._content is False:\n             # Read the contents.\n-            try:\n             if self._content_consumed:\n                 raise RuntimeError(\n                     'The content for this response was already consumed')\n@@ -757,9 +756,6 @@ class Response(object):\n             else:\n                 self._content = bytes().join(self.iter_content(CONTENT_CHUNK_SIZE)) or bytes()\n \n-            except AttributeError:\n-                self._content = None\n-\n         self._content_consumed = True\n         # don't need to release the connection; that's been handled by urllib3\n         # since we exhausted the data.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3c680cc1c6ca3005ae1bee929af330d3187f24c1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9415 | Lines Deleted: 0 | Files Changed: 7 | Hunks: 7 | Methods Changed: 28 | Complexity Δ (Sum/Max): 170/132 | Churn Δ: 9415 | Churn Cumulative: 9415 | Contributors (this commit): 1 | Commits (past 90d): 7 | Contributors (cumulative): 7 | DMM Complexity: 0.25925925925925924\n\nDIFF:\n@@ -0,0 +1 @@\n+from .core import *\n\n@@ -0,0 +1,118 @@\n+from idna.core import encode, decode, alabel, ulabel, IDNAError\n+import codecs\n+import re\n+\n+_unicode_dots_re = re.compile(u'[\\u002e\\u3002\\uff0e\\uff61]')\n+\n+class Codec(codecs.Codec):\n+\n+    def encode(self, data, errors='strict'):\n+\n+        if errors != 'strict':\n+            raise IDNAError(\"Unsupported error handling \\\"{0}\\\"\".format(errors))\n+\n+        if not data:\n+            return \"\", 0\n+\n+        return encode(data), len(data)\n+\n+    def decode(self, data, errors='strict'):\n+\n+        if errors != 'strict':\n+            raise IDNAError(\"Unsupported error handling \\\"{0}\\\"\".format(errors))\n+\n+        if not data:\n+            return u\"\", 0\n+\n+        return decode(data), len(data)\n+\n+class IncrementalEncoder(codecs.BufferedIncrementalEncoder):\n+    def _buffer_encode(self, data, errors, final):\n+        if errors != 'strict':\n+            raise IDNAError(\"Unsupported error handling \\\"{0}\\\"\".format(errors))\n+\n+        if not data:\n+            return (\"\", 0)\n+\n+        labels = _unicode_dots_re.split(data)\n+        trailing_dot = u''\n+        if labels:\n+            if not labels[-1]:\n+                trailing_dot = '.'\n+                del labels[-1]\n+            elif not final:\n+                # Keep potentially unfinished label until the next call\n+                del labels[-1]\n+                if labels:\n+                    trailing_dot = '.'\n+\n+        result = []\n+        size = 0\n+        for label in labels:\n+            result.append(alabel(label))\n+            if size:\n+                size += 1\n+            size += len(label)\n+\n+        # Join with U+002E\n+        result = \".\".join(result) + trailing_dot\n+        size += len(trailing_dot)\n+        return (result, size)\n+\n+class IncrementalDecoder(codecs.BufferedIncrementalDecoder):\n+    def _buffer_decode(self, data, errors, final):\n+        if errors != 'strict':\n+            raise IDNAError(\"Unsupported error handling \\\"{0}\\\"\".format(errors))\n+\n+        if not data:\n+            return (u\"\", 0)\n+\n+        # IDNA allows decoding to operate on Unicode strings, too.\n+        if isinstance(data, unicode):\n+            labels = _unicode_dots_re.split(data)\n+        else:\n+            # Must be ASCII string\n+            data = str(data)\n+            unicode(data, \"ascii\")\n+            labels = data.split(\".\")\n+\n+        trailing_dot = u''\n+        if labels:\n+            if not labels[-1]:\n+                trailing_dot = u'.'\n+                del labels[-1]\n+            elif not final:\n+                # Keep potentially unfinished label until the next call\n+                del labels[-1]\n+                if labels:\n+                    trailing_dot = u'.'\n+\n+        result = []\n+        size = 0\n+        for label in labels:\n+            result.append(ulabel(label))\n+            if size:\n+                size += 1\n+            size += len(label)\n+\n+        result = u\".\".join(result) + trailing_dot\n+        size += len(trailing_dot)\n+        return (result, size)\n+\n+\n+class StreamWriter(Codec, codecs.StreamWriter):\n+    pass\n+\n+class StreamReader(Codec, codecs.StreamReader):\n+    pass\n+\n+def getregentry():\n+    return codecs.CodecInfo(\n+        name='idna',\n+        encode=Codec().encode,\n+        decode=Codec().decode,\n+        incrementalencoder=IncrementalEncoder,\n+        incrementaldecoder=IncrementalDecoder,\n+        streamwriter=StreamWriter,\n+        streamreader=StreamReader,\n+    )\n\n@@ -0,0 +1,12 @@\n+from idna.core import *\n+from idna.codec import *\n+\n+def ToASCII(label):\n+    return encode(label)\n+\n+def ToUnicode(label):\n+    return decode(label)\n+\n+def nameprep(s):\n+    raise NotImplementedError(\"IDNA 2008 does not utilise nameprep protocol\")\n+\n\n@@ -0,0 +1,387 @@\n+from . import idnadata\n+import bisect\n+import unicodedata\n+import re\n+import sys\n+from .intranges import intranges_contain\n+\n+_virama_combining_class = 9\n+_alabel_prefix = b'xn--'\n+_unicode_dots_re = re.compile(u'[\\u002e\\u3002\\uff0e\\uff61]')\n+\n+if sys.version_info[0] == 3:\n+    unicode = str\n+    unichr = chr\n+\n+class IDNAError(UnicodeError):\n+    \"\"\" Base exception for all IDNA-encoding related problems \"\"\"\n+    pass\n+\n+\n+class IDNABidiError(IDNAError):\n+    \"\"\" Exception when bidirectional requirements are not satisfied \"\"\"\n+    pass\n+\n+\n+class InvalidCodepoint(IDNAError):\n+    \"\"\" Exception when a disallowed or unallocated codepoint is used \"\"\"\n+    pass\n+\n+\n+class InvalidCodepointContext(IDNAError):\n+    \"\"\" Exception when the codepoint is not valid in the context it is used \"\"\"\n+    pass\n+\n+\n+def _combining_class(cp):\n+    return unicodedata.combining(unichr(cp))\n+\n+def _is_script(cp, script):\n+    return intranges_contain(ord(cp), idnadata.scripts[script])\n+\n+def _punycode(s):\n+    return s.encode('punycode')\n+\n+def _unot(s):\n+    return 'U+{0:04X}'.format(s)\n+\n+\n+def valid_label_length(label):\n+\n+    if len(label) > 63:\n+        return False\n+    return True\n+\n+\n+def valid_string_length(label, trailing_dot):\n+\n+    if len(label) > (254 if trailing_dot else 253):\n+        return False\n+    return True\n+\n+\n+def check_bidi(label, check_ltr=False):\n+\n+    # Bidi rules should only be applied if string contains RTL characters\n+    bidi_label = False\n+    for (idx, cp) in enumerate(label, 1):\n+        direction = unicodedata.bidirectional(cp)\n+        if direction == '':\n+            # String likely comes from a newer version of Unicode\n+            raise IDNABidiError('Unknown directionality in label {0} at position {1}'.format(repr(label), idx))\n+        if direction in ['R', 'AL', 'AN']:\n+            bidi_label = True\n+            break\n+    if not bidi_label and not check_ltr:\n+        return True\n+\n+    # Bidi rule 1\n+    direction = unicodedata.bidirectional(label[0])\n+    if direction in ['R', 'AL']:\n+        rtl = True\n+    elif direction == 'L':\n+        rtl = False\n+    else:\n+        raise IDNABidiError('First codepoint in label {0} must be directionality L, R or AL'.format(repr(label)))\n+\n+    valid_ending = False\n+    number_type = False\n+    for (idx, cp) in enumerate(label, 1):\n+        direction = unicodedata.bidirectional(cp)\n+\n+        if rtl:\n+            # Bidi rule 2\n+            if not direction in ['R', 'AL', 'AN', 'EN', 'ES', 'CS', 'ET', 'ON', 'BN', 'NSM']:\n+                raise IDNABidiError('Invalid direction for codepoint at position {0} in a right-to-left label'.format(idx))\n+            # Bidi rule 3\n+            if direction in ['R', 'AL', 'EN', 'AN']:\n+                valid_ending = True\n+            elif direction != 'NSM':\n+                valid_ending = False\n+            # Bidi rule 4\n+            if direction in ['AN', 'EN']:\n+                if not number_type:\n+                    number_type = direction\n+                else:\n+                    if number_type != direction:\n+                        raise IDNABidiError('Can not mix numeral types in a right-to-left label')\n+        else:\n+            # Bidi rule 5\n+            if not direction in ['L', 'EN', 'ES', 'CS', 'ET', 'ON', 'BN', 'NSM']:\n+                raise IDNABidiError('Invalid direction for codepoint at position {0} in a left-to-right label'.format(idx))\n+            # Bidi rule 6\n+            if direction in ['L', 'EN']:\n+                valid_ending = True\n+            elif direction != 'NSM':\n+                valid_ending = False\n+\n+    if not valid_ending:\n+        raise IDNABidiError('Label ends with illegal codepoint directionality')\n+\n+    return True\n+\n+\n+def check_initial_combiner(label):\n+\n+    if unicodedata.category(label[0])[0] == 'M':\n+        raise IDNAError('Label begins with an illegal combining character')\n+    return True\n+\n+\n+def check_hyphen_ok(label):\n+\n+    if label[2:4] == '--':\n+        raise IDNAError('Label has disallowed hyphens in 3rd and 4th position')\n+    if label[0] == '-' or label[-1] == '-':\n+        raise IDNAError('Label must not start or end with a hyphen')\n+    return True\n+\n+\n+def check_nfc(label):\n+\n+    if unicodedata.normalize('NFC', label) != label:\n+        raise IDNAError('Label must be in Normalization Form C')\n+\n+\n+def valid_contextj(label, pos):\n+\n+    cp_value = ord(label[pos])\n+\n+    if cp_value == 0x200c:\n+\n+        if pos > 0:\n+            if _combining_class(ord(label[pos - 1])) == _virama_combining_class:\n+                return True\n+\n+        ok = False\n+        for i in range(pos-1, -1, -1):\n+            joining_type = idnadata.joining_types.get(ord(label[i]))\n+            if joining_type == 'T':\n+                continue\n+            if joining_type in ['L', 'D']:\n+                ok = True\n+                break\n+\n+        if not ok:\n+            return False\n+\n+        ok = False\n+        for i in range(pos+1, len(label)):\n+            joining_type = idnadata.joining_types.get(ord(label[i]))\n+            if joining_type == 'T':\n+                continue\n+            if joining_type in ['R', 'D']:\n+                ok = True\n+                break\n+        return ok\n+\n+    if cp_value == 0x200d:\n+\n+        if pos > 0:\n+            if _combining_class(ord(label[pos - 1])) == _virama_combining_class:\n+                return True\n+        return False\n+\n+    else:\n+\n+        return False\n+\n+\n+def valid_contexto(label, pos, exception=False):\n+\n+    cp_value = ord(label[pos])\n+\n+    if cp_value == 0x00b7:\n+        if 0 < pos < len(label)-1:\n+            if ord(label[pos - 1]) == 0x006c and ord(label[pos + 1]) == 0x006c:\n+                return True\n+        return False\n+\n+    elif cp_value == 0x0375:\n+        if pos < len(label)-1 and len(label) > 1:\n+            return _is_script(label[pos + 1], 'Greek')\n+        return False\n+\n+    elif cp_value == 0x05f3 or cp_value == 0x05f4:\n+        if pos > 0:\n+            return _is_script(label[pos - 1], 'Hebrew')\n+        return False\n+\n+    elif cp_value == 0x30fb:\n+        for cp in label:\n+            if cp == u'\\u30fb':\n+                continue\n+            if not _is_script(cp, 'Hiragana') and not _is_script(cp, 'Katakana') and not _is_script(cp, 'Han'):\n+                return False\n+        return True\n+\n+    elif 0x660 <= cp_value <= 0x669:\n+        for cp in label:\n+            if 0x6f0 <= ord(cp) <= 0x06f9:\n+                return False\n+        return True\n+\n+    elif 0x6f0 <= cp_value <= 0x6f9:\n+        for cp in label:\n+            if 0x660 <= ord(cp) <= 0x0669:\n+                return False\n+        return True\n+\n+\n+def check_label(label):\n+\n+    if isinstance(label, (bytes, bytearray)):\n+        label = label.decode('utf-8')\n+    if len(label) == 0:\n+        raise IDNAError('Empty Label')\n+\n+    check_nfc(label)\n+    check_hyphen_ok(label)\n+    check_initial_combiner(label)\n+\n+    for (pos, cp) in enumerate(label):\n+        cp_value = ord(cp)\n+        if intranges_contain(cp_value, idnadata.codepoint_classes['PVALID']):\n+            continue\n+        elif intranges_contain(cp_value, idnadata.codepoint_classes['CONTEXTJ']):\n+            if not valid_contextj(label, pos):\n+                raise InvalidCodepointContext('Joiner {0} not allowed at position {1} in {2}'.format(_unot(cp_value), pos+1, repr(label)))\n+        elif intranges_contain(cp_value, idnadata.codepoint_classes['CONTEXTO']):\n+            if not valid_contexto(label, pos):\n+                raise InvalidCodepointContext('Codepoint {0} not allowed at position {1} in {2}'.format(_unot(cp_value), pos+1, repr(label)))\n+        else:\n+            raise InvalidCodepoint('Codepoint {0} at position {1} of {2} not allowed'.format(_unot(cp_value), pos+1, repr(label)))\n+\n+    check_bidi(label)\n+\n+\n+def alabel(label):\n+\n+    try:\n+        label = label.encode('ascii')\n+        try:\n+            ulabel(label)\n+        except:\n+            raise IDNAError('The label {0} is not a valid A-label'.format(label))\n+        if not valid_label_length(label):\n+            raise IDNAError('Label too long')\n+        return label\n+    except UnicodeError:\n+        pass\n+\n+    if not label:\n+        raise IDNAError('No Input')\n+\n+    label = unicode(label)\n+    check_label(label)\n+    label = _punycode(label)\n+    label = _alabel_prefix + label\n+\n+    if not valid_label_length(label):\n+        raise IDNAError('Label too long')\n+\n+    return label\n+\n+\n+def ulabel(label):\n+\n+    if not isinstance(label, (bytes, bytearray)):\n+        try:\n+            label = label.encode('ascii')\n+        except UnicodeError:\n+            check_label(label)\n+            return label\n+\n+    label = label.lower()\n+    if label.startswith(_alabel_prefix):\n+        label = label[len(_alabel_prefix):]\n+    else:\n+        check_label(label)\n+        return label.decode('ascii')\n+\n+    label = label.decode('punycode')\n+    check_label(label)\n+    return label\n+\n+\n+def uts46_remap(domain, std3_rules=True, transitional=False):\n+    \"\"\"Re-map the characters in the string according to UTS46 processing.\"\"\"\n+    from .uts46data import uts46data\n+    output = u\"\"\n+    try:\n+        for pos, char in enumerate(domain):\n+            code_point = ord(char)\n+            uts46row = uts46data[code_point if code_point < 256 else\n+                bisect.bisect_left(uts46data, (code_point, \"Z\")) - 1]\n+            status = uts46row[1]\n+            replacement = uts46row[2] if len(uts46row) == 3 else None\n+            if (status == \"V\" or\n+                    (status == \"D\" and not transitional) or\n+                    (status == \"3\" and std3_rules and replacement is None)):\n+                output += char\n+            elif replacement is not None and (status == \"M\" or\n+                    (status == \"3\" and std3_rules) or\n+                    (status == \"D\" and transitional)):\n+                output += replacement\n+            elif status != \"I\":\n+                raise IndexError()\n+        return unicodedata.normalize(\"NFC\", output)\n+    except IndexError:\n+        raise InvalidCodepoint(\n+            \"Codepoint {0} not allowed at position {1} in {2}\".format(\n+            _unot(code_point), pos + 1, repr(domain)))\n+\n+\n+def encode(s, strict=False, uts46=False, std3_rules=False, transitional=False):\n+\n+    if isinstance(s, (bytes, bytearray)):\n+        s = s.decode(\"ascii\")\n+    if uts46:\n+        s = uts46_remap(s, std3_rules, transitional)\n+    trailing_dot = False\n+    result = []\n+    if strict:\n+        labels = s.split('.')\n+    else:\n+        labels = _unicode_dots_re.split(s)\n+    while labels and not labels[0]:\n+        del labels[0]\n+    if not labels:\n+        raise IDNAError('Empty domain')\n+    if labels[-1] == '':\n+        del labels[-1]\n+        trailing_dot = True\n+    for label in labels:\n+        result.append(alabel(label))\n+    if trailing_dot:\n+        result.append(b'')\n+    s = b'.'.join(result)\n+    if not valid_string_length(s, trailing_dot):\n+        raise IDNAError('Domain too long')\n+    return s\n+\n+\n+def decode(s, strict=False, uts46=False, std3_rules=False):\n+\n+    if isinstance(s, (bytes, bytearray)):\n+        s = s.decode(\"ascii\")\n+    if uts46:\n+        s = uts46_remap(s, std3_rules, False)\n+    trailing_dot = False\n+    result = []\n+    if not strict:\n+        labels = _unicode_dots_re.split(s)\n+    else:\n+        labels = s.split(u'.')\n+    while labels and not labels[0]:\n+        del labels[0]\n+    if not labels:\n+        raise IDNAError('Empty domain')\n+    if not labels[-1]:\n+        del labels[-1]\n+        trailing_dot = True\n+    for label in labels:\n+        result.append(ulabel(label))\n+    if trailing_dot:\n+        result.append(u'')\n+    return u'.'.join(result)\n\n@@ -0,0 +1,1584 @@\n+# This file is automatically generated by build-idnadata.py\n+\n+scripts = {\n+    'Greek': (\n+        (0x370, 0x374),\n+        (0x375, 0x378),\n+        (0x37a, 0x37e),\n+        (0x384, 0x385),\n+        (0x386, 0x387),\n+        (0x388, 0x38b),\n+        (0x38c, 0x38d),\n+        (0x38e, 0x3a2),\n+        (0x3a3, 0x3e2),\n+        (0x3f0, 0x400),\n+        (0x1d26, 0x1d2b),\n+        (0x1d5d, 0x1d62),\n+        (0x1d66, 0x1d6b),\n+        (0x1dbf, 0x1dc0),\n+        (0x1f00, 0x1f16),\n+        (0x1f18, 0x1f1e),\n+        (0x1f20, 0x1f46),\n+        (0x1f48, 0x1f4e),\n+        (0x1f50, 0x1f58),\n+        (0x1f59, 0x1f5a),\n+        (0x1f5b, 0x1f5c),\n+        (0x1f5d, 0x1f5e),\n+        (0x1f5f, 0x1f7e),\n+        (0x1f80, 0x1fb5),\n+        (0x1fb6, 0x1fc5),\n+        (0x1fc6, 0x1fd4),\n+        (0x1fd6, 0x1fdc),\n+        (0x1fdd, 0x1ff0),\n+        (0x1ff2, 0x1ff5),\n+        (0x1ff6, 0x1fff),\n+        (0x2126, 0x2127),\n+        (0x10140, 0x1018b),\n+        (0x1d200, 0x1d246),\n+    ),\n+    'Han': (\n+        (0x2e80, 0x2e9a),\n+        (0x2e9b, 0x2ef4),\n+        (0x2f00, 0x2fd6),\n+        (0x3005, 0x3006),\n+        (0x3007, 0x3008),\n+        (0x3021, 0x302a),\n+        (0x3038, 0x303c),\n+        (0x3400, 0x4db6),\n+        (0x4e00, 0x9fcd),\n+        (0xf900, 0xfa6e),\n+        (0xfa70, 0xfada),\n+        (0x20000, 0x2a6d7),\n+        (0x2a700, 0x2b735),\n+        (0x2b740, 0x2b81e),\n+        (0x2f800, 0x2fa1e),\n+    ),\n+    'Hebrew': (\n+        (0x591, 0x5c8),\n+        (0x5d0, 0x5eb),\n+        (0x5f0, 0x5f5),\n+        (0xfb1d, 0xfb37),\n+        (0xfb38, 0xfb3d),\n+        (0xfb3e, 0xfb3f),\n+        (0xfb40, 0xfb42),\n+        (0xfb43, 0xfb45),\n+        (0xfb46, 0xfb50),\n+    ),\n+    'Hiragana': (\n+        (0x3041, 0x3097),\n+        (0x309d, 0x30a0),\n+        (0x1b001, 0x1b002),\n+        (0x1f200, 0x1f201),\n+    ),\n+    'Katakana': (\n+        (0x30a1, 0x30fb),\n+        (0x30fd, 0x3100),\n+        (0x31f0, 0x3200),\n+        (0x32d0, 0x32ff),\n+        (0x3300, 0x3358),\n+        (0xff66, 0xff70),\n+        (0xff71, 0xff9e),\n+        (0x1b000, 0x1b001),\n+    ),\n+}\n+joining_types = {\n+    0x600: 'U',\n+    0x601: 'U',\n+    0x602: 'U',\n+    0x603: 'U',\n+    0x604: 'U',\n+    0x608: 'U',\n+    0x60b: 'U',\n+    0x620: 'D',\n+    0x621: 'U',\n+    0x622: 'R',\n+    0x623: 'R',\n+    0x624: 'R',\n+    0x625: 'R',\n+    0x626: 'D',\n+    0x627: 'R',\n+    0x628: 'D',\n+    0x629: 'R',\n+    0x62a: 'D',\n+    0x62b: 'D',\n+    0x62c: 'D',\n+    0x62d: 'D',\n+    0x62e: 'D',\n+    0x62f: 'R',\n+    0x630: 'R',\n+    0x631: 'R',\n+    0x632: 'R',\n+    0x633: 'D',\n+    0x634: 'D',\n+    0x635: 'D',\n+    0x636: 'D',\n+    0x637: 'D',\n+    0x638: 'D',\n+    0x639: 'D',\n+    0x63a: 'D',\n+    0x63b: 'D',\n+    0x63c: 'D',\n+    0x63d: 'D',\n+    0x63e: 'D',\n+    0x63f: 'D',\n+    0x640: 'C',\n+    0x641: 'D',\n+    0x642: 'D',\n+    0x643: 'D',\n+    0x644: 'D',\n+    0x645: 'D',\n+    0x646: 'D',\n+    0x647: 'D',\n+    0x648: 'R',\n+    0x649: 'D',\n+    0x64a: 'D',\n+    0x66e: 'D',\n+    0x66f: 'D',\n+    0x671: 'R',\n+    0x672: 'R',\n+    0x673: 'R',\n+    0x674: 'U',\n+    0x675: 'R',\n+    0x676: 'R',\n+    0x677: 'R',\n+    0x678: 'D',\n+    0x679: 'D',\n+    0x67a: 'D',\n+    0x67b: 'D',\n+    0x67c: 'D',\n+    0x67d: 'D',\n+    0x67e: 'D',\n+    0x67f: 'D',\n+    0x680: 'D',\n+    0x681: 'D',\n+    0x682: 'D',\n+    0x683: 'D',\n+    0x684: 'D',\n+    0x685: 'D',\n+    0x686: 'D',\n+    0x687: 'D',\n+    0x688: 'R',\n+    0x689: 'R',\n+    0x68a: 'R',\n+    0x68b: 'R',\n+    0x68c: 'R',\n+    0x68d: 'R',\n+    0x68e: 'R',\n+    0x68f: 'R',\n+    0x690: 'R',\n+    0x691: 'R',\n+    0x692: 'R',\n+    0x693: 'R',\n+    0x694: 'R',\n+    0x695: 'R',\n+    0x696: 'R',\n+    0x697: 'R',\n+    0x698: 'R',\n+    0x699: 'R',\n+    0x69a: 'D',\n+    0x69b: 'D',\n+    0x69c: 'D',\n+    0x69d: 'D',\n+    0x69e: 'D',\n+    0x69f: 'D',\n+    0x6a0: 'D',\n+    0x6a1: 'D',\n+    0x6a2: 'D',\n+    0x6a3: 'D',\n+    0x6a4: 'D',\n+    0x6a5: 'D',\n+    0x6a6: 'D',\n+    0x6a7: 'D',\n+    0x6a8: 'D',\n+    0x6a9: 'D',\n+    0x6aa: 'D',\n+    0x6ab: 'D',\n+    0x6ac: 'D',\n+    0x6ad: 'D',\n+    0x6ae: 'D',\n+    0x6af: 'D',\n+    0x6b0: 'D',\n+    0x6b1: 'D',\n+    0x6b2: 'D',\n+    0x6b3: 'D',\n+    0x6b4: 'D',\n+    0x6b5: 'D',\n+    0x6b6: 'D',\n+    0x6b7: 'D',\n+    0x6b8: 'D',\n+    0x6b9: 'D',\n+    0x6ba: 'D',\n+    0x6bb: 'D',\n+    0x6bc: 'D',\n+    0x6bd: 'D',\n+    0x6be: 'D',\n+    0x6bf: 'D',\n+    0x6c0: 'R',\n+    0x6c1: 'D',\n+    0x6c2: 'D',\n+    0x6c3: 'R',\n+    0x6c4: 'R',\n+    0x6c5: 'R',\n+    0x6c6: 'R',\n+    0x6c7: 'R',\n+    0x6c8: 'R',\n+    0x6c9: 'R',\n+    0x6ca: 'R',\n+    0x6cb: 'R',\n+    0x6cc: 'D',\n+    0x6cd: 'R',\n+    0x6ce: 'D',\n+    0x6cf: 'R',\n+    0x6d0: 'D',\n+    0x6d1: 'D',\n+    0x6d2: 'R',\n+    0x6d3: 'R',\n+    0x6d5: 'R',\n+    0x6dd: 'U',\n+    0x6ee: 'R',\n+    0x6ef: 'R',\n+    0x6fa: 'D',\n+    0x6fb: 'D',\n+    0x6fc: 'D',\n+    0x6ff: 'D',\n+    0x710: 'R',\n+    0x712: 'D',\n+    0x713: 'D',\n+    0x714: 'D',\n+    0x715: 'R',\n+    0x716: 'R',\n+    0x717: 'R',\n+    0x718: 'R',\n+    0x719: 'R',\n+    0x71a: 'D',\n+    0x71b: 'D',\n+    0x71c: 'D',\n+    0x71d: 'D',\n+    0x71e: 'R',\n+    0x71f: 'D',\n+    0x720: 'D',\n+    0x721: 'D',\n+    0x722: 'D',\n+    0x723: 'D',\n+    0x724: 'D',\n+    0x725: 'D',\n+    0x726: 'D',\n+    0x727: 'D',\n+    0x728: 'R',\n+    0x729: 'D',\n+    0x72a: 'R',\n+    0x72b: 'D',\n+    0x72c: 'R',\n+    0x72d: 'D',\n+    0x72e: 'D',\n+    0x72f: 'R',\n+    0x74d: 'R',\n+    0x74e: 'D',\n+    0x74f: 'D',\n+    0x750: 'D',\n+    0x751: 'D',\n+    0x752: 'D',\n+    0x753: 'D',\n+    0x754: 'D',\n+    0x755: 'D',\n+    0x756: 'D',\n+    0x757: 'D',\n+    0x758: 'D',\n+    0x759: 'R',\n+    0x75a: 'R',\n+    0x75b: 'R',\n+    0x75c: 'D',\n+    0x75d: 'D',\n+    0x75e: 'D',\n+    0x75f: 'D',\n+    0x760: 'D',\n+    0x761: 'D',\n+    0x762: 'D',\n+    0x763: 'D',\n+    0x764: 'D',\n+    0x765: 'D',\n+    0x766: 'D',\n+    0x767: 'D',\n+    0x768: 'D',\n+    0x769: 'D',\n+    0x76a: 'D',\n+    0x76b: 'R',\n+    0x76c: 'R',\n+    0x76d: 'D',\n+    0x76e: 'D',\n+    0x76f: 'D',\n+    0x770: 'D',\n+    0x771: 'R',\n+    0x772: 'D',\n+    0x773: 'R',\n+    0x774: 'R',\n+    0x775: 'D',\n+    0x776: 'D',\n+    0x777: 'D',\n+    0x778: 'R',\n+    0x779: 'R',\n+    0x77a: 'D',\n+    0x77b: 'D',\n+    0x77c: 'D',\n+    0x77d: 'D',\n+    0x77e: 'D',\n+    0x77f: 'D',\n+    0x7ca: 'D',\n+    0x7cb: 'D',\n+    0x7cc: 'D',\n+    0x7cd: 'D',\n+    0x7ce: 'D',\n+    0x7cf: 'D',\n+    0x7d0: 'D',\n+    0x7d1: 'D',\n+    0x7d2: 'D',\n+    0x7d3: 'D',\n+    0x7d4: 'D',\n+    0x7d5: 'D',\n+    0x7d6: 'D',\n+    0x7d7: 'D',\n+    0x7d8: 'D',\n+    0x7d9: 'D',\n+    0x7da: 'D',\n+    0x7db: 'D',\n+    0x7dc: 'D',\n+    0x7dd: 'D',\n+    0x7de: 'D',\n+    0x7df: 'D',\n+    0x7e0: 'D',\n+    0x7e1: 'D',\n+    0x7e2: 'D',\n+    0x7e3: 'D',\n+    0x7e4: 'D',\n+    0x7e5: 'D',\n+    0x7e6: 'D',\n+    0x7e7: 'D',\n+    0x7e8: 'D',\n+    0x7e9: 'D',\n+    0x7ea: 'D',\n+    0x7fa: 'C',\n+    0x840: 'R',\n+    0x841: 'D',\n+    0x842: 'D',\n+    0x843: 'D',\n+    0x844: 'D',\n+    0x845: 'D',\n+    0x846: 'R',\n+    0x847: 'D',\n+    0x848: 'D',\n+    0x849: 'R',\n+    0x84a: 'D',\n+    0x84b: 'D',\n+    0x84c: 'D',\n+    0x84d: 'D',\n+    0x84e: 'D',\n+    0x84f: 'R',\n+    0x850: 'D',\n+    0x851: 'D',\n+    0x852: 'D',\n+    0x853: 'D',\n+    0x854: 'R',\n+    0x855: 'D',\n+    0x856: 'U',\n+    0x857: 'U',\n+    0x858: 'U',\n+    0x8a0: 'D',\n+    0x8a2: 'D',\n+    0x8a3: 'D',\n+    0x8a4: 'D',\n+    0x8a5: 'D',\n+    0x8a6: 'D',\n+    0x8a7: 'D',\n+    0x8a8: 'D',\n+    0x8a9: 'D',\n+    0x8aa: 'R',\n+    0x8ab: 'R',\n+    0x8ac: 'R',\n+    0x1806: 'U',\n+    0x1807: 'D',\n+    0x180a: 'C',\n+    0x180e: 'U',\n+    0x1820: 'D',\n+    0x1821: 'D',\n+    0x1822: 'D',\n+    0x1823: 'D',\n+    0x1824: 'D',\n+    0x1825: 'D',\n+    0x1826: 'D',\n+    0x1827: 'D',\n+    0x1828: 'D',\n+    0x1829: 'D',\n+    0x182a: 'D',\n+    0x182b: 'D',\n+    0x182c: 'D',\n+    0x182d: 'D',\n+    0x182e: 'D',\n+    0x182f: 'D',\n+    0x1830: 'D',\n+    0x1831: 'D',\n+    0x1832: 'D',\n+    0x1833: 'D',\n+    0x1834: 'D',\n+    0x1835: 'D',\n+    0x1836: 'D',\n+    0x1837: 'D',\n+    0x1838: 'D',\n+    0x1839: 'D',\n+    0x183a: 'D',\n+    0x183b: 'D',\n+    0x183c: 'D',\n+    0x183d: 'D',\n+    0x183e: 'D',\n+    0x183f: 'D',\n+    0x1840: 'D',\n+    0x1841: 'D',\n+    0x1842: 'D',\n+    0x1843: 'D',\n+    0x1844: 'D',\n+    0x1845: 'D',\n+    0x1846: 'D',\n+    0x1847: 'D',\n+    0x1848: 'D',\n+    0x1849: 'D',\n+    0x184a: 'D',\n+    0x184b: 'D',\n+    0x184c: 'D',\n+    0x184d: 'D',\n+    0x184e: 'D',\n+    0x184f: 'D',\n+    0x1850: 'D',\n+    0x1851: 'D',\n+    0x1852: 'D',\n+    0x1853: 'D',\n+    0x1854: 'D',\n+    0x1855: 'D',\n+    0x1856: 'D',\n+    0x1857: 'D',\n+    0x1858: 'D',\n+    0x1859: 'D',\n+    0x185a: 'D',\n+    0x185b: 'D',\n+    0x185c: 'D',\n+    0x185d: 'D',\n+    0x185e: 'D',\n+    0x185f: 'D',\n+    0x1860: 'D',\n+    0x1861: 'D',\n+    0x1862: 'D',\n+    0x1863: 'D',\n+    0x1864: 'D',\n+    0x1865: 'D',\n+    0x1866: 'D',\n+    0x1867: 'D',\n+    0x1868: 'D',\n+    0x1869: 'D',\n+    0x186a: 'D',\n+    0x186b: 'D',\n+    0x186c: 'D',\n+    0x186d: 'D',\n+    0x186e: 'D',\n+    0x186f: 'D',\n+    0x1870: 'D',\n+    0x1871: 'D',\n+    0x1872: 'D',\n+    0x1873: 'D',\n+    0x1874: 'D',\n+    0x1875: 'D',\n+    0x1876: 'D',\n+    0x1877: 'D',\n+    0x1880: 'U',\n+    0x1881: 'U',\n+    0x1882: 'U',\n+    0x1883: 'U',\n+    0x1884: 'U',\n+    0x1885: 'U',\n+    0x1886: 'U',\n+    0x1887: 'D',\n+    0x1888: 'D',\n+    0x1889: 'D',\n+    0x188a: 'D',\n+    0x188b: 'D',\n+    0x188c: 'D',\n+    0x188d: 'D',\n+    0x188e: 'D',\n+    0x188f: 'D',\n+    0x1890: 'D',\n+    0x1891: 'D',\n+    0x1892: 'D',\n+    0x1893: 'D',\n+    0x1894: 'D',\n+    0x1895: 'D',\n+    0x1896: 'D',\n+    0x1897: 'D',\n+    0x1898: 'D',\n+    0x1899: 'D',\n+    0x189a: 'D',\n+    0x189b: 'D',\n+    0x189c: 'D',\n+    0x189d: 'D',\n+    0x189e: 'D',\n+    0x189f: 'D',\n+    0x18a0: 'D',\n+    0x18a1: 'D',\n+    0x18a2: 'D',\n+    0x18a3: 'D',\n+    0x18a4: 'D',\n+    0x18a5: 'D',\n+    0x18a6: 'D',\n+    0x18a7: 'D',\n+    0x18a8: 'D',\n+    0x18aa: 'D',\n+    0x200c: 'U',\n+    0x200d: 'C',\n+    0x2066: 'U',\n+    0x2067: 'U',\n+    0x2068: 'U',\n+    0x2069: 'U',\n+    0xa840: 'D',\n+    0xa841: 'D',\n+    0xa842: 'D',\n+    0xa843: 'D',\n+    0xa844: 'D',\n+    0xa845: 'D',\n+    0xa846: 'D',\n+    0xa847: 'D',\n+    0xa848: 'D',\n+    0xa849: 'D',\n+    0xa84a: 'D',\n+    0xa84b: 'D',\n+    0xa84c: 'D',\n+    0xa84d: 'D',\n+    0xa84e: 'D',\n+    0xa84f: 'D',\n+    0xa850: 'D',\n+    0xa851: 'D',\n+    0xa852: 'D',\n+    0xa853: 'D',\n+    0xa854: 'D',\n+    0xa855: 'D',\n+    0xa856: 'D',\n+    0xa857: 'D',\n+    0xa858: 'D',\n+    0xa859: 'D',\n+    0xa85a: 'D',\n+    0xa85b: 'D',\n+    0xa85c: 'D',\n+    0xa85d: 'D',\n+    0xa85e: 'D',\n+    0xa85f: 'D',\n+    0xa860: 'D',\n+    0xa861: 'D',\n+    0xa862: 'D',\n+    0xa863: 'D',\n+    0xa864: 'D',\n+    0xa865: 'D',\n+    0xa866: 'D',\n+    0xa867: 'D',\n+    0xa868: 'D',\n+    0xa869: 'D',\n+    0xa86a: 'D',\n+    0xa86b: 'D',\n+    0xa86c: 'D',\n+    0xa86d: 'D',\n+    0xa86e: 'D',\n+    0xa86f: 'D',\n+    0xa870: 'D',\n+    0xa871: 'D',\n+    0xa872: 'L',\n+    0xa873: 'U',\n+}\n+codepoint_classes = {\n+    'PVALID': (\n+        (0x2d, 0x2e),\n+        (0x30, 0x3a),\n+        (0x61, 0x7b),\n+        (0xdf, 0xf7),\n+        (0xf8, 0x100),\n+        (0x101, 0x102),\n+        (0x103, 0x104),\n+        (0x105, 0x106),\n+        (0x107, 0x108),\n+        (0x109, 0x10a),\n+        (0x10b, 0x10c),\n+        (0x10d, 0x10e),\n+        (0x10f, 0x110),\n+        (0x111, 0x112),\n+        (0x113, 0x114),\n+        (0x115, 0x116),\n+        (0x117, 0x118),\n+        (0x119, 0x11a),\n+        (0x11b, 0x11c),\n+        (0x11d, 0x11e),\n+        (0x11f, 0x120),\n+        (0x121, 0x122),\n+        (0x123, 0x124),\n+        (0x125, 0x126),\n+        (0x127, 0x128),\n+        (0x129, 0x12a),\n+        (0x12b, 0x12c),\n+        (0x12d, 0x12e),\n+        (0x12f, 0x130),\n+        (0x131, 0x132),\n+        (0x135, 0x136),\n+        (0x137, 0x139),\n+        (0x13a, 0x13b),\n+        (0x13c, 0x13d),\n+        (0x13e, 0x13f),\n+        (0x142, 0x143),\n+        (0x144, 0x145),\n+        (0x146, 0x147),\n+        (0x148, 0x149),\n+        (0x14b, 0x14c),\n+        (0x14d, 0x14e),\n+        (0x14f, 0x150),\n+        (0x151, 0x152),\n+        (0x153, 0x154),\n+        (0x155, 0x156),\n+        (0x157, 0x158),\n+        (0x159, 0x15a),\n+        (0x15b, 0x15c),\n+        (0x15d, 0x15e),\n+        (0x15f, 0x160),\n+        (0x161, 0x162),\n+        (0x163, 0x164),\n+        (0x165, 0x166),\n+        (0x167, 0x168),\n+        (0x169, 0x16a),\n+        (0x16b, 0x16c),\n+        (0x16d, 0x16e),\n+        (0x16f, 0x170),\n+        (0x171, 0x172),\n+        (0x173, 0x174),\n+        (0x175, 0x176),\n+        (0x177, 0x178),\n+        (0x17a, 0x17b),\n+        (0x17c, 0x17d),\n+        (0x17e, 0x17f),\n+        (0x180, 0x181),\n+        (0x183, 0x184),\n+        (0x185, 0x186),\n+        (0x188, 0x189),\n+        (0x18c, 0x18e),\n+        (0x192, 0x193),\n+        (0x195, 0x196),\n+        (0x199, 0x19c),\n+        (0x19e, 0x19f),\n+        (0x1a1, 0x1a2),\n+        (0x1a3, 0x1a4),\n+        (0x1a5, 0x1a6),\n+        (0x1a8, 0x1a9),\n+        (0x1aa, 0x1ac),\n+        (0x1ad, 0x1ae),\n+        (0x1b0, 0x1b1),\n+        (0x1b4, 0x1b5),\n+        (0x1b6, 0x1b7),\n+        (0x1b9, 0x1bc),\n+        (0x1bd, 0x1c4),\n+        (0x1ce, 0x1cf),\n+        (0x1d0, 0x1d1),\n+        (0x1d2, 0x1d3),\n+        (0x1d4, 0x1d5),\n+        (0x1d6, 0x1d7),\n+        (0x1d8, 0x1d9),\n+        (0x1da, 0x1db),\n+        (0x1dc, 0x1de),\n+        (0x1df, 0x1e0),\n+        (0x1e1, 0x1e2),\n+        (0x1e3, 0x1e4),\n+        (0x1e5, 0x1e6),\n+        (0x1e7, 0x1e8),\n+        (0x1e9, 0x1ea),\n+        (0x1eb, 0x1ec),\n+        (0x1ed, 0x1ee),\n+        (0x1ef, 0x1f1),\n+        (0x1f5, 0x1f6),\n+        (0x1f9, 0x1fa),\n+        (0x1fb, 0x1fc),\n+        (0x1fd, 0x1fe),\n+        (0x1ff, 0x200),\n+        (0x201, 0x202),\n+        (0x203, 0x204),\n+        (0x205, 0x206),\n+        (0x207, 0x208),\n+        (0x209, 0x20a),\n+        (0x20b, 0x20c),\n+        (0x20d, 0x20e),\n+        (0x20f, 0x210),\n+        (0x211, 0x212),\n+        (0x213, 0x214),\n+        (0x215, 0x216),\n+        (0x217, 0x218),\n+        (0x219, 0x21a),\n+        (0x21b, 0x21c),\n+        (0x21d, 0x21e),\n+        (0x21f, 0x220),\n+        (0x221, 0x222),\n+        (0x223, 0x224),\n+        (0x225, 0x226),\n+        (0x227, 0x228),\n+        (0x229, 0x22a),\n+        (0x22b, 0x22c),\n+        (0x22d, 0x22e),\n+        (0x22f, 0x230),\n+        (0x231, 0x232),\n+        (0x233, 0x23a),\n+        (0x23c, 0x23d),\n+        (0x23f, 0x241),\n+        (0x242, 0x243),\n+        (0x247, 0x248),\n+        (0x249, 0x24a),\n+        (0x24b, 0x24c),\n+        (0x24d, 0x24e),\n+        (0x24f, 0x2b0),\n+        (0x2b9, 0x2c2),\n+        (0x2c6, 0x2d2),\n+        (0x2ec, 0x2ed),\n+        (0x2ee, 0x2ef),\n+        (0x300, 0x340),\n+        (0x342, 0x343),\n+        (0x346, 0x34f),\n+        (0x350, 0x370),\n+        (0x371, 0x372),\n+        (0x373, 0x374),\n+        (0x377, 0x378),\n+        (0x37b, 0x37e),\n+        (0x390, 0x391),\n+        (0x3ac, 0x3cf),\n+        (0x3d7, 0x3d8),\n+        (0x3d9, 0x3da),\n+        (0x3db, 0x3dc),\n+        (0x3dd, 0x3de),\n+        (0x3df, 0x3e0),\n+        (0x3e1, 0x3e2),\n+        (0x3e3, 0x3e4),\n+        (0x3e5, 0x3e6),\n+        (0x3e7, 0x3e8),\n+        (0x3e9, 0x3ea),\n+        (0x3eb, 0x3ec),\n+        (0x3ed, 0x3ee),\n+        (0x3ef, 0x3f0),\n+        (0x3f3, 0x3f4),\n+        (0x3f8, 0x3f9),\n+        (0x3fb, 0x3fd),\n+        (0x430, 0x460),\n+        (0x461, 0x462),\n+        (0x463, 0x464),\n+        (0x465, 0x466),\n+        (0x467, 0x468),\n+        (0x469, 0x46a),\n+        (0x46b, 0x46c),\n+        (0x46d, 0x46e),\n+        (0x46f, 0x470),\n+        (0x471, 0x472),\n+        (0x473, 0x474),\n+        (0x475, 0x476),\n+        (0x477, 0x478),\n+        (0x479, 0x47a),\n+        (0x47b, 0x47c),\n+        (0x47d, 0x47e),\n+        (0x47f, 0x480),\n+        (0x481, 0x482),\n+        (0x483, 0x488),\n+        (0x48b, 0x48c),\n+        (0x48d, 0x48e),\n+        (0x48f, 0x490),\n+        (0x491, 0x492),\n+        (0x493, 0x494),\n+        (0x495, 0x496),\n+        (0x497, 0x498),\n+        (0x499, 0x49a),\n+        (0x49b, 0x49c),\n+        (0x49d, 0x49e),\n+        (0x49f, 0x4a0),\n+        (0x4a1, 0x4a2),\n+        (0x4a3, 0x4a4),\n+        (0x4a5, 0x4a6),\n+        (0x4a7, 0x4a8),\n+        (0x4a9, 0x4aa),\n+        (0x4ab, 0x4ac),\n+        (0x4ad, 0x4ae),\n+        (0x4af, 0x4b0),\n+        (0x4b1, 0x4b2),\n+        (0x4b3, 0x4b4),\n+        (0x4b5, 0x4b6),\n+        (0x4b7, 0x4b8),\n+        (0x4b9, 0x4ba),\n+        (0x4bb, 0x4bc),\n+        (0x4bd, 0x4be),\n+        (0x4bf, 0x4c0),\n+        (0x4c2, 0x4c3),\n+        (0x4c4, 0x4c5),\n+        (0x4c6, 0x4c7),\n+        (0x4c8, 0x4c9),\n+        (0x4ca, 0x4cb),\n+        (0x4cc, 0x4cd),\n+        (0x4ce, 0x4d0),\n+        (0x4d1, 0x4d2),\n+        (0x4d3, 0x4d4),\n+        (0x4d5, 0x4d6),\n+        (0x4d7, 0x4d8),\n+        (0x4d9, 0x4da),\n+        (0x4db, 0x4dc),\n+        (0x4dd, 0x4de),\n+        (0x4df, 0x4e0),\n+        (0x4e1, 0x4e2),\n+        (0x4e3, 0x4e4),\n+        (0x4e5, 0x4e6),\n+        (0x4e7, 0x4e8),\n+        (0x4e9, 0x4ea),\n+        (0x4eb, 0x4ec),\n+        (0x4ed, 0x4ee),\n+        (0x4ef, 0x4f0),\n+        (0x4f1, 0x4f2),\n+        (0x4f3, 0x4f4),\n+        (0x4f5, 0x4f6),\n+        (0x4f7, 0x4f8),\n+        (0x4f9, 0x4fa),\n+        (0x4fb, 0x4fc),\n+        (0x4fd, 0x4fe),\n+        (0x4ff, 0x500),\n+        (0x501, 0x502),\n+        (0x503, 0x504),\n+        (0x505, 0x506),\n+        (0x507, 0x508),\n+        (0x509, 0x50a),\n+        (0x50b, 0x50c),\n+        (0x50d, 0x50e),\n+        (0x50f, 0x510),\n+        (0x511, 0x512),\n+        (0x513, 0x514),\n+        (0x515, 0x516),\n+        (0x517, 0x518),\n+        (0x519, 0x51a),\n+        (0x51b, 0x51c),\n+        (0x51d, 0x51e),\n+        (0x51f, 0x520),\n+        (0x521, 0x522),\n+        (0x523, 0x524),\n+        (0x525, 0x526),\n+        (0x527, 0x528),\n+        (0x559, 0x55a),\n+        (0x561, 0x587),\n+        (0x591, 0x5be),\n+        (0x5bf, 0x5c0),\n+        (0x5c1, 0x5c3),\n+        (0x5c4, 0x5c6),\n+        (0x5c7, 0x5c8),\n+        (0x5d0, 0x5eb),\n+        (0x5f0, 0x5f3),\n+        (0x610, 0x61b),\n+        (0x620, 0x640),\n+        (0x641, 0x660),\n+        (0x66e, 0x675),\n+        (0x679, 0x6d4),\n+        (0x6d5, 0x6dd),\n+        (0x6df, 0x6e9),\n+        (0x6ea, 0x6f0),\n+        (0x6fa, 0x700),\n+        (0x710, 0x74b),\n+        (0x74d, 0x7b2),\n+        (0x7c0, 0x7f6),\n+        (0x800, 0x82e),\n+        (0x840, 0x85c),\n+        (0x8a0, 0x8a1),\n+        (0x8a2, 0x8ad),\n+        (0x8e4, 0x8ff),\n+        (0x900, 0x958),\n+        (0x960, 0x964),\n+        (0x966, 0x970),\n+        (0x971, 0x978),\n+        (0x979, 0x980),\n+        (0x981, 0x984),\n+        (0x985, 0x98d),\n+        (0x98f, 0x991),\n+        (0x993, 0x9a9),\n+        (0x9aa, 0x9b1),\n+        (0x9b2, 0x9b3),\n+        (0x9b6, 0x9ba),\n+        (0x9bc, 0x9c5),\n+        (0x9c7, 0x9c9),\n+        (0x9cb, 0x9cf),\n+        (0x9d7, 0x9d8),\n+        (0x9e0, 0x9e4),\n+        (0x9e6, 0x9f2),\n+        (0xa01, 0xa04),\n+        (0xa05, 0xa0b),\n+        (0xa0f, 0xa11),\n+        (0xa13, 0xa29),\n+        (0xa2a, 0xa31),\n+        (0xa32, 0xa33),\n+        (0xa35, 0xa36),\n+        (0xa38, 0xa3a),\n+        (0xa3c, 0xa3d),\n+        (0xa3e, 0xa43),\n+        (0xa47, 0xa49),\n+        (0xa4b, 0xa4e),\n+        (0xa51, 0xa52),\n+        (0xa5c, 0xa5d),\n+        (0xa66, 0xa76),\n+        (0xa81, 0xa84),\n+        (0xa85, 0xa8e),\n+        (0xa8f, 0xa92),\n+        (0xa93, 0xaa9),\n+        (0xaaa, 0xab1),\n+        (0xab2, 0xab4),\n+        (0xab5, 0xaba),\n+        (0xabc, 0xac6),\n+        (0xac7, 0xaca),\n+        (0xacb, 0xace),\n+        (0xad0, 0xad1),\n+        (0xae0, 0xae4),\n+        (0xae6, 0xaf0),\n+        (0xb01, 0xb04),\n+        (0xb05, 0xb0d),\n+        (0xb0f, 0xb11),\n+        (0xb13, 0xb29),\n+        (0xb2a, 0xb31),\n+        (0xb32, 0xb34),\n+        (0xb35, 0xb3a),\n+        (0xb3c, 0xb45),\n+        (0xb47, 0xb49),\n+        (0xb4b, 0xb4e),\n+        (0xb56, 0xb58),\n+        (0xb5f, 0xb64),\n+        (0xb66, 0xb70),\n+        (0xb71, 0xb72),\n+        (0xb82, 0xb84),\n+        (0xb85, 0xb8b),\n+        (0xb8e, 0xb91),\n+        (0xb92, 0xb96),\n+        (0xb99, 0xb9b),\n+        (0xb9c, 0xb9d),\n+        (0xb9e, 0xba0),\n+        (0xba3, 0xba5),\n+        (0xba8, 0xbab),\n+        (0xbae, 0xbba),\n+        (0xbbe, 0xbc3),\n+        (0xbc6, 0xbc9),\n+        (0xbca, 0xbce),\n+        (0xbd0, 0xbd1),\n+        (0xbd7, 0xbd8),\n+        (0xbe6, 0xbf0),\n+        (0xc01, 0xc04),\n+        (0xc05, 0xc0d),\n+        (0xc0e, 0xc11),\n+        (0xc12, 0xc29),\n+        (0xc2a, 0xc34),\n+        (0xc35, 0xc3a),\n+        (0xc3d, 0xc45),\n+        (0xc46, 0xc49),\n+        (0xc4a, 0xc4e),\n+        (0xc55, 0xc57),\n+        (0xc58, 0xc5a),\n+        (0xc60, 0xc64),\n+        (0xc66, 0xc70),\n+        (0xc82, 0xc84),\n+        (0xc85, 0xc8d),\n+        (0xc8e, 0xc91),\n+        (0xc92, 0xca9),\n+        (0xcaa, 0xcb4),\n+        (0xcb5, 0xcba),\n+        (0xcbc, 0xcc5),\n+        (0xcc6, 0xcc9),\n+        (0xcca, 0xcce),\n+        (0xcd5, 0xcd7),\n+        (0xcde, 0xcdf),\n+        (0xce0, 0xce4),\n+        (0xce6, 0xcf0),\n+        (0xcf1, 0xcf3),\n+        (0xd02, 0xd04),\n+        (0xd05, 0xd0d),\n+        (0xd0e, 0xd11),\n+        (0xd12, 0xd3b),\n+        (0xd3d, 0xd45),\n+        (0xd46, 0xd49),\n+        (0xd4a, 0xd4f),\n+        (0xd57, 0xd58),\n+        (0xd60, 0xd64),\n+        (0xd66, 0xd70),\n+        (0xd7a, 0xd80),\n+        (0xd82, 0xd84),\n+        (0xd85, 0xd97),\n+        (0xd9a, 0xdb2),\n+        (0xdb3, 0xdbc),\n+        (0xdbd, 0xdbe),\n+        (0xdc0, 0xdc7),\n+        (0xdca, 0xdcb),\n+        (0xdcf, 0xdd5),\n+        (0xdd6, 0xdd7),\n+        (0xdd8, 0xde0),\n+        (0xdf2, 0xdf4),\n+        (0xe01, 0xe33),\n+        (0xe34, 0xe3b),\n+        (0xe40, 0xe4f),\n+        (0xe50, 0xe5a),\n+        (0xe81, 0xe83),\n+        (0xe84, 0xe85),\n+        (0xe87, 0xe89),\n+        (0xe8a, 0xe8b),\n+        (0xe8d, 0xe8e),\n+        (0xe94, 0xe98),\n+        (0xe99, 0xea0),\n+        (0xea1, 0xea4),\n+        (0xea5, 0xea6),\n+        (0xea7, 0xea8),\n+        (0xeaa, 0xeac),\n+        (0xead, 0xeb3),\n+        (0xeb4, 0xeba),\n+        (0xebb, 0xebe),\n+        (0xec0, 0xec5),\n+        (0xec6, 0xec7),\n+        (0xec8, 0xece),\n+        (0xed0, 0xeda),\n+        (0xede, 0xee0),\n+        (0xf00, 0xf01),\n+        (0xf0b, 0xf0c),\n+        (0xf18, 0xf1a),\n+        (0xf20, 0xf2a),\n+        (0xf35, 0xf36),\n+        (0xf37, 0xf38),\n+        (0xf39, 0xf3a),\n+        (0xf3e, 0xf43),\n+        (0xf44, 0xf48),\n+        (0xf49, 0xf4d),\n+        (0xf4e, 0xf52),\n+        (0xf53, 0xf57),\n+        (0xf58, 0xf5c),\n+        (0xf5d, 0xf69),\n+        (0xf6a, 0xf6d),\n+        (0xf71, 0xf73),\n+        (0xf74, 0xf75),\n+        (0xf7a, 0xf81),\n+        (0xf82, 0xf85),\n+        (0xf86, 0xf93),\n+        (0xf94, 0xf98),\n+        (0xf99, 0xf9d),\n+        (0xf9e, 0xfa2),\n+        (0xfa3, 0xfa7),\n+        (0xfa8, 0xfac),\n+        (0xfad, 0xfb9),\n+        (0xfba, 0xfbd),\n+        (0xfc6, 0xfc7),\n+        (0x1000, 0x104a),\n+        (0x1050, 0x109e),\n+        (0x10d0, 0x10fb),\n+        (0x10fd, 0x1100),\n+        (0x1200, 0x1249),\n+        (0x124a, 0x124e),\n+        (0x1250, 0x1257),\n+        (0x1258, 0x1259),\n+        (0x125a, 0x125e),\n+        (0x1260, 0x1289),\n+        (0x128a, 0x128e),\n+        (0x1290, 0x12b1),\n+        (0x12b2, 0x12b6),\n+        (0x12b8, 0x12bf),\n+        (0x12c0, 0x12c1),\n+        (0x12c2, 0x12c6),\n+        (0x12c8, 0x12d7),\n+        (0x12d8, 0x1311),\n+        (0x1312, 0x1316),\n+        (0x1318, 0x135b),\n+        (0x135d, 0x1360),\n+        (0x1380, 0x1390),\n+        (0x13a0, 0x13f5),\n+        (0x1401, 0x166d),\n+        (0x166f, 0x1680),\n+        (0x1681, 0x169b),\n+        (0x16a0, 0x16eb),\n+        (0x1700, 0x170d),\n+        (0x170e, 0x1715),\n+        (0x1720, 0x1735),\n+        (0x1740, 0x1754),\n+        (0x1760, 0x176d),\n+        (0x176e, 0x1771),\n+        (0x1772, 0x1774),\n+        (0x1780, 0x17b4),\n+        (0x17b6, 0x17d4),\n+        (0x17d7, 0x17d8),\n+        (0x17dc, 0x17de),\n+        (0x17e0, 0x17ea),\n+        (0x1810, 0x181a),\n+        (0x1820, 0x1878),\n+        (0x1880, 0x18ab),\n+        (0x18b0, 0x18f6),\n+        (0x1900, 0x191d),\n+        (0x1920, 0x192c),\n+        (0x1930, 0x193c),\n+        (0x1946, 0x196e),\n+        (0x1970, 0x1975),\n+        (0x1980, 0x19ac),\n+        (0x19b0, 0x19ca),\n+        (0x19d0, 0x19da),\n+        (0x1a00, 0x1a1c),\n+        (0x1a20, 0x1a5f),\n+        (0x1a60, 0x1a7d),\n+        (0x1a7f, 0x1a8a),\n+        (0x1a90, 0x1a9a),\n+        (0x1aa7, 0x1aa8),\n+        (0x1b00, 0x1b4c),\n+        (0x1b50, 0x1b5a),\n+        (0x1b6b, 0x1b74),\n+        (0x1b80, 0x1bf4),\n+        (0x1c00, 0x1c38),\n+        (0x1c40, 0x1c4a),\n+        (0x1c4d, 0x1c7e),\n+        (0x1cd0, 0x1cd3),\n+        (0x1cd4, 0x1cf7),\n+        (0x1d00, 0x1d2c),\n+        (0x1d2f, 0x1d30),\n+        (0x1d3b, 0x1d3c),\n+        (0x1d4e, 0x1d4f),\n+        (0x1d6b, 0x1d78),\n+        (0x1d79, 0x1d9b),\n+        (0x1dc0, 0x1de7),\n+        (0x1dfc, 0x1e00),\n+        (0x1e01, 0x1e02),\n+        (0x1e03, 0x1e04),\n+        (0x1e05, 0x1e06),\n+        (0x1e07, 0x1e08),\n+        (0x1e09, 0x1e0a),\n+        (0x1e0b, 0x1e0c),\n+        (0x1e0d, 0x1e0e),\n+        (0x1e0f, 0x1e10),\n+        (0x1e11, 0x1e12),\n+        (0x1e13, 0x1e14),\n+        (0x1e15, 0x1e16),\n+        (0x1e17, 0x1e18),\n+        (0x1e19, 0x1e1a),\n+        (0x1e1b, 0x1e1c),\n+        (0x1e1d, 0x1e1e),\n+        (0x1e1f, 0x1e20),\n+        (0x1e21, 0x1e22),\n+        (0x1e23, 0x1e24),\n+        (0x1e25, 0x1e26),\n+        (0x1e27, 0x1e28),\n+        (0x1e29, 0x1e2a),\n+        (0x1e2b, 0x1e2c),\n+        (0x1e2d, 0x1e2e),\n+        (0x1e2f, 0x1e30),\n+        (0x1e31, 0x1e32),\n+        (0x1e33, 0x1e34),\n+        (0x1e35, 0x1e36),\n+        (0x1e37, 0x1e38),\n+        (0x1e39, 0x1e3a),\n+        (0x1e3b, 0x1e3c),\n+        (0x1e3d, 0x1e3e),\n+        (0x1e3f, 0x1e40),\n+        (0x1e41, 0x1e42),\n+        (0x1e43, 0x1e44),\n+        (0x1e45, 0x1e46),\n+        (0x1e47, 0x1e48),\n+        (0x1e49, 0x1e4a),\n+        (0x1e4b, 0x1e4c),\n+        (0x1e4d, 0x1e4e),\n+        (0x1e4f, 0x1e50),\n+        (0x1e51, 0x1e52),\n+        (0x1e53, 0x1e54),\n+        (0x1e55, 0x1e56),\n+        (0x1e57, 0x1e58),\n+        (0x1e59, 0x1e5a),\n+        (0x1e5b, 0x1e5c),\n+        (0x1e5d, 0x1e5e),\n+        (0x1e5f, 0x1e60),\n+        (0x1e61, 0x1e62),\n+        (0x1e63, 0x1e64),\n+        (0x1e65, 0x1e66),\n+        (0x1e67, 0x1e68),\n+        (0x1e69, 0x1e6a),\n+        (0x1e6b, 0x1e6c),\n+        (0x1e6d, 0x1e6e),\n+        (0x1e6f, 0x1e70),\n+        (0x1e71, 0x1e72),\n+        (0x1e73, 0x1e74),\n+        (0x1e75, 0x1e76),\n+        (0x1e77, 0x1e78),\n+        (0x1e79, 0x1e7a),\n+        (0x1e7b, 0x1e7c),\n+        (0x1e7d, 0x1e7e),\n+        (0x1e7f, 0x1e80),\n+        (0x1e81, 0x1e82),\n+        (0x1e83, 0x1e84),\n+        (0x1e85, 0x1e86),\n+        (0x1e87, 0x1e88),\n+        (0x1e89, 0x1e8a),\n+        (0x1e8b, 0x1e8c),\n+        (0x1e8d, 0x1e8e),\n+        (0x1e8f, 0x1e90),\n+        (0x1e91, 0x1e92),\n+        (0x1e93, 0x1e94),\n+        (0x1e95, 0x1e9a),\n+        (0x1e9c, 0x1e9e),\n+        (0x1e9f, 0x1ea0),\n+        (0x1ea1, 0x1ea2),\n+        (0x1ea3, 0x1ea4),\n+        (0x1ea5, 0x1ea6),\n+        (0x1ea7, 0x1ea8),\n+        (0x1ea9, 0x1eaa),\n+        (0x1eab, 0x1eac),\n+        (0x1ead, 0x1eae),\n+        (0x1eaf, 0x1eb0),\n+        (0x1eb1, 0x1eb2),\n+        (0x1eb3, 0x1eb4),\n+        (0x1eb5, 0x1eb6),\n+        (0x1eb7, 0x1eb8),\n+        (0x1eb9, 0x1eba),\n+        (0x1ebb, 0x1ebc),\n+        (0x1ebd, 0x1ebe),\n+        (0x1ebf, 0x1ec0),\n+        (0x1ec1, 0x1ec2),\n+        (0x1ec3, 0x1ec4),\n+        (0x1ec5, 0x1ec6),\n+        (0x1ec7, 0x1ec8),\n+        (0x1ec9, 0x1eca),\n+        (0x1ecb, 0x1ecc),\n+        (0x1ecd, 0x1ece),\n+        (0x1ecf, 0x1ed0),\n+        (0x1ed1, 0x1ed2),\n+        (0x1ed3, 0x1ed4),\n+        (0x1ed5, 0x1ed6),\n+        (0x1ed7, 0x1ed8),\n+        (0x1ed9, 0x1eda),\n+        (0x1edb, 0x1edc),\n+        (0x1edd, 0x1ede),\n+        (0x1edf, 0x1ee0),\n+        (0x1ee1, 0x1ee2),\n+        (0x1ee3, 0x1ee4),\n+        (0x1ee5, 0x1ee6),\n+        (0x1ee7, 0x1ee8),\n+        (0x1ee9, 0x1eea),\n+        (0x1eeb, 0x1eec),\n+        (0x1eed, 0x1eee),\n+        (0x1eef, 0x1ef0),\n+        (0x1ef1, 0x1ef2),\n+        (0x1ef3, 0x1ef4),\n+        (0x1ef5, 0x1ef6),\n+        (0x1ef7, 0x1ef8),\n+        (0x1ef9, 0x1efa),\n+        (0x1efb, 0x1efc),\n+        (0x1efd, 0x1efe),\n+        (0x1eff, 0x1f08),\n+        (0x1f10, 0x1f16),\n+        (0x1f20, 0x1f28),\n+        (0x1f30, 0x1f38),\n+        (0x1f40, 0x1f46),\n+        (0x1f50, 0x1f58),\n+        (0x1f60, 0x1f68),\n+        (0x1f70, 0x1f71),\n+        (0x1f72, 0x1f73),\n+        (0x1f74, 0x1f75),\n+        (0x1f76, 0x1f77),\n+        (0x1f78, 0x1f79),\n+        (0x1f7a, 0x1f7b),\n+        (0x1f7c, 0x1f7d),\n+        (0x1fb0, 0x1fb2),\n+        (0x1fb6, 0x1fb7),\n+        (0x1fc6, 0x1fc7),\n+        (0x1fd0, 0x1fd3),\n+        (0x1fd6, 0x1fd8),\n+        (0x1fe0, 0x1fe3),\n+        (0x1fe4, 0x1fe8),\n+        (0x1ff6, 0x1ff7),\n+        (0x214e, 0x214f),\n+        (0x2184, 0x2185),\n+        (0x2c30, 0x2c5f),\n+        (0x2c61, 0x2c62),\n+        (0x2c65, 0x2c67),\n+        (0x2c68, 0x2c69),\n+        (0x2c6a, 0x2c6b),\n+        (0x2c6c, 0x2c6d),\n+        (0x2c71, 0x2c72),\n+        (0x2c73, 0x2c75),\n+        (0x2c76, 0x2c7c),\n+        (0x2c81, 0x2c82),\n+        (0x2c83, 0x2c84),\n+        (0x2c85, 0x2c86),\n+        (0x2c87, 0x2c88),\n+        (0x2c89, 0x2c8a),\n+        (0x2c8b, 0x2c8c),\n+        (0x2c8d, 0x2c8e),\n+        (0x2c8f, 0x2c90),\n+        (0x2c91, 0x2c92),\n+        (0x2c93, 0x2c94),\n+        (0x2c95, 0x2c96),\n+        (0x2c97, 0x2c98),\n+        (0x2c99, 0x2c9a),\n+        (0x2c9b, 0x2c9c),\n+        (0x2c9d, 0x2c9e),\n+        (0x2c9f, 0x2ca0),\n+        (0x2ca1, 0x2ca2),\n+        (0x2ca3, 0x2ca4),\n+        (0x2ca5, 0x2ca6),\n+        (0x2ca7, 0x2ca8),\n+        (0x2ca9, 0x2caa),\n+        (0x2cab, 0x2cac),\n+        (0x2cad, 0x2cae),\n+        (0x2caf, 0x2cb0),\n+        (0x2cb1, 0x2cb2),\n+        (0x2cb3, 0x2cb4),\n+        (0x2cb5, 0x2cb6),\n+        (0x2cb7, 0x2cb8),\n+        (0x2cb9, 0x2cba),\n+        (0x2cbb, 0x2cbc),\n+        (0x2cbd, 0x2cbe),\n+        (0x2cbf, 0x2cc0),\n+        (0x2cc1, 0x2cc2),\n+        (0x2cc3, 0x2cc4),\n+        (0x2cc5, 0x2cc6),\n+        (0x2cc7, 0x2cc8),\n+        (0x2cc9, 0x2cca),\n+        (0x2ccb, 0x2ccc),\n+        (0x2ccd, 0x2cce),\n+        (0x2ccf, 0x2cd0),\n+        (0x2cd1, 0x2cd2),\n+        (0x2cd3, 0x2cd4),\n+        (0x2cd5, 0x2cd6),\n+        (0x2cd7, 0x2cd8),\n+        (0x2cd9, 0x2cda),\n+        (0x2cdb, 0x2cdc),\n+        (0x2cdd, 0x2cde),\n+        (0x2cdf, 0x2ce0),\n+        (0x2ce1, 0x2ce2),\n+        (0x2ce3, 0x2ce5),\n+        (0x2cec, 0x2ced),\n+        (0x2cee, 0x2cf2),\n+        (0x2cf3, 0x2cf4),\n+        (0x2d00, 0x2d26),\n+        (0x2d27, 0x2d28),\n+        (0x2d2d, 0x2d2e),\n+        (0x2d30, 0x2d68),\n+        (0x2d7f, 0x2d97),\n+        (0x2da0, 0x2da7),\n+        (0x2da8, 0x2daf),\n+        (0x2db0, 0x2db7),\n+        (0x2db8, 0x2dbf),\n+        (0x2dc0, 0x2dc7),\n+        (0x2dc8, 0x2dcf),\n+        (0x2dd0, 0x2dd7),\n+        (0x2dd8, 0x2ddf),\n+        (0x2de0, 0x2e00),\n+        (0x2e2f, 0x2e30),\n+        (0x3005, 0x3008),\n+        (0x302a, 0x302e),\n+        (0x303c, 0x303d),\n+        (0x3041, 0x3097),\n+        (0x3099, 0x309b),\n+        (0x309d, 0x309f),\n+        (0x30a1, 0x30fb),\n+        (0x30fc, 0x30ff),\n+        (0x3105, 0x312e),\n+        (0x31a0, 0x31bb),\n+        (0x31f0, 0x3200),\n+        (0x3400, 0x4db6),\n+        (0x4e00, 0x9fcd),\n+        (0xa000, 0xa48d),\n+        (0xa4d0, 0xa4fe),\n+        (0xa500, 0xa60d),\n+        (0xa610, 0xa62c),\n+        (0xa641, 0xa642),\n+        (0xa643, 0xa644),\n+        (0xa645, 0xa646),\n+        (0xa647, 0xa648),\n+        (0xa649, 0xa64a),\n+        (0xa64b, 0xa64c),\n+        (0xa64d, 0xa64e),\n+        (0xa64f, 0xa650),\n+        (0xa651, 0xa652),\n+        (0xa653, 0xa654),\n+        (0xa655, 0xa656),\n+        (0xa657, 0xa658),\n+        (0xa659, 0xa65a),\n+        (0xa65b, 0xa65c),\n+        (0xa65d, 0xa65e),\n+        (0xa65f, 0xa660),\n+        (0xa661, 0xa662),\n+        (0xa663, 0xa664),\n+        (0xa665, 0xa666),\n+        (0xa667, 0xa668),\n+        (0xa669, 0xa66a),\n+        (0xa66b, 0xa66c),\n+        (0xa66d, 0xa670),\n+        (0xa674, 0xa67e),\n+        (0xa67f, 0xa680),\n+        (0xa681, 0xa682),\n+        (0xa683, 0xa684),\n+        (0xa685, 0xa686),\n+        (0xa687, 0xa688),\n+        (0xa689, 0xa68a),\n+        (0xa68b, 0xa68c),\n+        (0xa68d, 0xa68e),\n+        (0xa68f, 0xa690),\n+        (0xa691, 0xa692),\n+        (0xa693, 0xa694),\n+        (0xa695, 0xa696),\n+        (0xa697, 0xa698),\n+        (0xa69f, 0xa6e6),\n+        (0xa6f0, 0xa6f2),\n+        (0xa717, 0xa720),\n+        (0xa723, 0xa724),\n+        (0xa725, 0xa726),\n+        (0xa727, 0xa728),\n+        (0xa729, 0xa72a),\n+        (0xa72b, 0xa72c),\n+        (0xa72d, 0xa72e),\n+        (0xa72f, 0xa732),\n+        (0xa733, 0xa734),\n+        (0xa735, 0xa736),\n+        (0xa737, 0xa738),\n+        (0xa739, 0xa73a),\n+        (0xa73b, 0xa73c),\n+        (0xa73d, 0xa73e),\n+        (0xa73f, 0xa740),\n+        (0xa741, 0xa742),\n+        (0xa743, 0xa744),\n+        (0xa745, 0xa746),\n+        (0xa747, 0xa748),\n+        (0xa749, 0xa74a),\n+        (0xa74b, 0xa74c),\n+        (0xa74d, 0xa74e),\n+        (0xa74f, 0xa750),\n+        (0xa751, 0xa752),\n+        (0xa753, 0xa754),\n+        (0xa755, 0xa756),\n+        (0xa757, 0xa758),\n+        (0xa759, 0xa75a),\n+        (0xa75b, 0xa75c),\n+        (0xa75d, 0xa75e),\n+        (0xa75f, 0xa760),\n+        (0xa761, 0xa762),\n+        (0xa763, 0xa764),\n+        (0xa765, 0xa766),\n+        (0xa767, 0xa768),\n+        (0xa769, 0xa76a),\n+        (0xa76b, 0xa76c),\n+        (0xa76d, 0xa76e),\n+        (0xa76f, 0xa770),\n+        (0xa771, 0xa779),\n+        (0xa77a, 0xa77b),\n+        (0xa77c, 0xa77d),\n+        (0xa77f, 0xa780),\n+        (0xa781, 0xa782),\n+        (0xa783, 0xa784),\n+        (0xa785, 0xa786),\n+        (0xa787, 0xa789),\n+        (0xa78c, 0xa78d),\n+        (0xa78e, 0xa78f),\n+        (0xa791, 0xa792),\n+        (0xa793, 0xa794),\n+        (0xa7a1, 0xa7a2),\n+        (0xa7a3, 0xa7a4),\n+        (0xa7a5, 0xa7a6),\n+        (0xa7a7, 0xa7a8),\n+        (0xa7a9, 0xa7aa),\n+        (0xa7fa, 0xa828),\n+        (0xa840, 0xa874),\n+        (0xa880, 0xa8c5),\n+        (0xa8d0, 0xa8da),\n+        (0xa8e0, 0xa8f8),\n+        (0xa8fb, 0xa8fc),\n+        (0xa900, 0xa92e),\n+        (0xa930, 0xa954),\n+        (0xa980, 0xa9c1),\n+        (0xa9cf, 0xa9da),\n+        (0xaa00, 0xaa37),\n+        (0xaa40, 0xaa4e),\n+        (0xaa50, 0xaa5a),\n+        (0xaa60, 0xaa77),\n+        (0xaa7a, 0xaa7c),\n+        (0xaa80, 0xaac3),\n+        (0xaadb, 0xaade),\n+        (0xaae0, 0xaaf0),\n+        (0xaaf2, 0xaaf7),\n+        (0xab01, 0xab07),\n+        (0xab09, 0xab0f),\n+        (0xab11, 0xab17),\n+        (0xab20, 0xab27),\n+        (0xab28, 0xab2f),\n+        (0xabc0, 0xabeb),\n+        (0xabec, 0xabee),\n+        (0xabf0, 0xabfa),\n+        (0xac00, 0xd7a4),\n+        (0xfa0e, 0xfa10),\n+        (0xfa11, 0xfa12),\n+        (0xfa13, 0xfa15),\n+        (0xfa1f, 0xfa20),\n+        (0xfa21, 0xfa22),\n+        (0xfa23, 0xfa25),\n+        (0xfa27, 0xfa2a),\n+        (0xfb1e, 0xfb1f),\n+        (0xfe20, 0xfe27),\n+        (0xfe73, 0xfe74),\n+        (0x10000, 0x1000c),\n+        (0x1000d, 0x10027),\n+        (0x10028, 0x1003b),\n+        (0x1003c, 0x1003e),\n+        (0x1003f, 0x1004e),\n+        (0x10050, 0x1005e),\n+        (0x10080, 0x100fb),\n+        (0x101fd, 0x101fe),\n+        (0x10280, 0x1029d),\n+        (0x102a0, 0x102d1),\n+        (0x10300, 0x1031f),\n+        (0x10330, 0x10341),\n+        (0x10342, 0x1034a),\n+        (0x10380, 0x1039e),\n+        (0x103a0, 0x103c4),\n+        (0x103c8, 0x103d0),\n+        (0x10428, 0x1049e),\n+        (0x104a0, 0x104aa),\n+        (0x10800, 0x10806),\n+        (0x10808, 0x10809),\n+        (0x1080a, 0x10836),\n+        (0x10837, 0x10839),\n+        (0x1083c, 0x1083d),\n+        (0x1083f, 0x10856),\n+        (0x10900, 0x10916),\n+        (0x10920, 0x1093a),\n+        (0x10980, 0x109b8),\n+        (0x109be, 0x109c0),\n+        (0x10a00, 0x10a04),\n+        (0x10a05, 0x10a07),\n+        (0x10a0c, 0x10a14),\n+        (0x10a15, 0x10a18),\n+        (0x10a19, 0x10a34),\n+        (0x10a38, 0x10a3b),\n+        (0x10a3f, 0x10a40),\n+        (0x10a60, 0x10a7d),\n+        (0x10b00, 0x10b36),\n+        (0x10b40, 0x10b56),\n+        (0x10b60, 0x10b73),\n+        (0x10c00, 0x10c49),\n+        (0x11000, 0x11047),\n+        (0x11066, 0x11070),\n+        (0x11080, 0x110bb),\n+        (0x110d0, 0x110e9),\n+        (0x110f0, 0x110fa),\n+        (0x11100, 0x11135),\n+        (0x11136, 0x11140),\n+        (0x11180, 0x111c5),\n+        (0x111d0, 0x111da),\n+        (0x11680, 0x116b8),\n+        (0x116c0, 0x116ca),\n+        (0x12000, 0x1236f),\n+        (0x13000, 0x1342f),\n+        (0x16800, 0x16a39),\n+        (0x16f00, 0x16f45),\n+        (0x16f50, 0x16f7f),\n+        (0x16f8f, 0x16fa0),\n+        (0x1b000, 0x1b002),\n+        (0x20000, 0x2a6d7),\n+        (0x2a700, 0x2b735),\n+        (0x2b740, 0x2b81e),\n+    ),\n+    'CONTEXTJ': (\n+        (0x200c, 0x200e),\n+    ),\n+    'CONTEXTO': (\n+        (0xb7, 0xb8),\n+        (0x375, 0x376),\n+        (0x5f3, 0x5f5),\n+        (0x660, 0x66a),\n+        (0x6f0, 0x6fa),\n+        (0x30fb, 0x30fc),\n+    ),\n+}\n\n@@ -0,0 +1,46 @@\n+\"\"\"\n+Given a list of integers, made up of (hopefully) a small number of long runs\n+of consecutive integers, compute a representation of the form\n+((start1, end1), (start2, end2) ...). Then answer the question \"was x present\n+in the original list?\" in time O(log(# runs)).\n+\"\"\"\n+\n+import bisect\n+\n+def intranges_from_list(list_):\n+    \"\"\"Represent a list of integers as a sequence of ranges:\n+    ((start_0, end_0), (start_1, end_1), ...), such that the original\n+    integers are exactly those x such that start_i <= x < end_i for some i.\n+    \"\"\"\n+\n+    sorted_list = sorted(list_)\n+    ranges = []\n+    last_write = -1\n+    for i in range(len(sorted_list)):\n+        if i+1 < len(sorted_list):\n+            if sorted_list[i] == sorted_list[i+1]-1:\n+                continue\n+        current_range = sorted_list[last_write+1:i+1]\n+        range_tuple = (current_range[0], current_range[-1] + 1)\n+        ranges.append(range_tuple)\n+        last_write = i\n+\n+    return tuple(ranges)\n+\n+\n+def intranges_contain(int_, ranges):\n+    \"\"\"Determine if `int_` falls into one of the ranges in `ranges`.\"\"\"\n+    tuple_ = (int_, int_)\n+    pos = bisect.bisect_left(ranges, tuple_)\n+    # we could be immediately ahead of a tuple (start, end)\n+    # with start < int_ <= end\n+    if pos > 0:\n+        left, right = ranges[pos-1]\n+        if left <= int_ < right:\n+            return True\n+    # or we could be immediately behind a tuple (int_, end)\n+    if pos < len(ranges):\n+        left, _ = ranges[pos]\n+        if left == int_:\n+            return True\n+    return False\n\n@@ -0,0 +1,7267 @@\n+# This file is automatically generated by tools/build-uts46data.py\n+# vim: set fileencoding=utf-8 :\n+\n+\"\"\"IDNA Mapping Table from UTS46.\"\"\"\n+\n+uts46data = (\n+    (0x0, '3'),\n+    (0x1, '3'),\n+    (0x2, '3'),\n+    (0x3, '3'),\n+    (0x4, '3'),\n+    (0x5, '3'),\n+    (0x6, '3'),\n+    (0x7, '3'),\n+    (0x8, '3'),\n+    (0x9, '3'),\n+    (0xA, '3'),\n+    (0xB, '3'),\n+    (0xC, '3'),\n+    (0xD, '3'),\n+    (0xE, '3'),\n+    (0xF, '3'),\n+    (0x10, '3'),\n+    (0x11, '3'),\n+    (0x12, '3'),\n+    (0x13, '3'),\n+    (0x14, '3'),\n+    (0x15, '3'),\n+    (0x16, '3'),\n+    (0x17, '3'),\n+    (0x18, '3'),\n+    (0x19, '3'),\n+    (0x1A, '3'),\n+    (0x1B, '3'),\n+    (0x1C, '3'),\n+    (0x1D, '3'),\n+    (0x1E, '3'),\n+    (0x1F, '3'),\n+    (0x20, '3'),\n+    (0x21, '3'),\n+    (0x22, '3'),\n+    (0x23, '3'),\n+    (0x24, '3'),\n+    (0x25, '3'),\n+    (0x26, '3'),\n+    (0x27, '3'),\n+    (0x28, '3'),\n+    (0x29, '3'),\n+    (0x2A, '3'),\n+    (0x2B, '3'),\n+    (0x2C, '3'),\n+    (0x2D, 'V'),\n+    (0x2E, 'V'),\n+    (0x2F, '3'),\n+    (0x30, 'V'),\n+    (0x31, 'V'),\n+    (0x32, 'V'),\n+    (0x33, 'V'),\n+    (0x34, 'V'),\n+    (0x35, 'V'),\n+    (0x36, 'V'),\n+    (0x37, 'V'),\n+    (0x38, 'V'),\n+    (0x39, 'V'),\n+    (0x3A, '3'),\n+    (0x3B, '3'),\n+    (0x3C, '3'),\n+    (0x3D, '3'),\n+    (0x3E, '3'),\n+    (0x3F, '3'),\n+    (0x40, '3'),\n+    (0x41, 'M', u'a'),\n+    (0x42, 'M', u'b'),\n+    (0x43, 'M', u'c'),\n+    (0x44, 'M', u'd'),\n+    (0x45, 'M', u'e'),\n+    (0x46, 'M', u'f'),\n+    (0x47, 'M', u'g'),\n+    (0x48, 'M', u'h'),\n+    (0x49, 'M', u'i'),\n+    (0x4A, 'M', u'j'),\n+    (0x4B, 'M', u'k'),\n+    (0x4C, 'M', u'l'),\n+    (0x4D, 'M', u'm'),\n+    (0x4E, 'M', u'n'),\n+    (0x4F, 'M', u'o'),\n+    (0x50, 'M', u'p'),\n+    (0x51, 'M', u'q'),\n+    (0x52, 'M', u'r'),\n+    (0x53, 'M', u's'),\n+    (0x54, 'M', u't'),\n+    (0x55, 'M', u'u'),\n+    (0x56, 'M', u'v'),\n+    (0x57, 'M', u'w'),\n+    (0x58, 'M', u'x'),\n+    (0x59, 'M', u'y'),\n+    (0x5A, 'M', u'z'),\n+    (0x5B, '3'),\n+    (0x5C, '3'),\n+    (0x5D, '3'),\n+    (0x5E, '3'),\n+    (0x5F, '3'),\n+    (0x60, '3'),\n+    (0x61, 'V'),\n+    (0x62, 'V'),\n+    (0x63, 'V'),\n+    (0x64, 'V'),\n+    (0x65, 'V'),\n+    (0x66, 'V'),\n+    (0x67, 'V'),\n+    (0x68, 'V'),\n+    (0x69, 'V'),\n+    (0x6A, 'V'),\n+    (0x6B, 'V'),\n+    (0x6C, 'V'),\n+    (0x6D, 'V'),\n+    (0x6E, 'V'),\n+    (0x6F, 'V'),\n+    (0x70, 'V'),\n+    (0x71, 'V'),\n+    (0x72, 'V'),\n+    (0x73, 'V'),\n+    (0x74, 'V'),\n+    (0x75, 'V'),\n+    (0x76, 'V'),\n+    (0x77, 'V'),\n+    (0x78, 'V'),\n+    (0x79, 'V'),\n+    (0x7A, 'V'),\n+    (0x7B, '3'),\n+    (0x7C, '3'),\n+    (0x7D, '3'),\n+    (0x7E, '3'),\n+    (0x7F, '3'),\n+    (0x80, 'X'),\n+    (0x81, 'X'),\n+    (0x82, 'X'),\n+    (0x83, 'X'),\n+    (0x84, 'X'),\n+    (0x85, 'X'),\n+    (0x86, 'X'),\n+    (0x87, 'X'),\n+    (0x88, 'X'),\n+    (0x89, 'X'),\n+    (0x8A, 'X'),\n+    (0x8B, 'X'),\n+    (0x8C, 'X'),\n+    (0x8D, 'X'),\n+    (0x8E, 'X'),\n+    (0x8F, 'X'),\n+    (0x90, 'X'),\n+    (0x91, 'X'),\n+    (0x92, 'X'),\n+    (0x93, 'X'),\n+    (0x94, 'X'),\n+    (0x95, 'X'),\n+    (0x96, 'X'),\n+    (0x97, 'X'),\n+    (0x98, 'X'),\n+    (0x99, 'X'),\n+    (0x9A, 'X'),\n+    (0x9B, 'X'),\n+    (0x9C, 'X'),\n+    (0x9D, 'X'),\n+    (0x9E, 'X'),\n+    (0x9F, 'X'),\n+    (0xA0, '3', u' '),\n+    (0xA1, 'V'),\n+    (0xA2, 'V'),\n+    (0xA3, 'V'),\n+    (0xA4, 'V'),\n+    (0xA5, 'V'),\n+    (0xA6, 'V'),\n+    (0xA7, 'V'),\n+    (0xA8, '3', u' ̈'),\n+    (0xA9, 'V'),\n+    (0xAA, 'M', u'a'),\n+    (0xAB, 'V'),\n+    (0xAC, 'V'),\n+    (0xAD, 'I'),\n+    (0xAE, 'V'),\n+    (0xAF, '3', u' ̄'),\n+    (0xB0, 'V'),\n+    (0xB1, 'V'),\n+    (0xB2, 'M', u'2'),\n+    (0xB3, 'M', u'3'),\n+    (0xB4, '3', u' ́'),\n+    (0xB5, 'M', u'μ'),\n+    (0xB6, 'V'),\n+    (0xB7, 'V'),\n+    (0xB8, '3', u' ̧'),\n+    (0xB9, 'M', u'1'),\n+    (0xBA, 'M', u'o'),\n+    (0xBB, 'V'),\n+    (0xBC, 'M', u'1⁄4'),\n+    (0xBD, 'M', u'1⁄2'),\n+    (0xBE, 'M', u'3⁄4'),\n+    (0xBF, 'V'),\n+    (0xC0, 'M', u'à'),\n+    (0xC1, 'M', u'á'),\n+    (0xC2, 'M', u'â'),\n+    (0xC3, 'M', u'ã'),\n+    (0xC4, 'M', u'ä'),\n+    (0xC5, 'M', u'å'),\n+    (0xC6, 'M', u'æ'),\n+    (0xC7, 'M', u'ç'),\n+    (0xC8, 'M', u'è'),\n+    (0xC9, 'M', u'é'),\n+    (0xCA, 'M', u'ê'),\n+    (0xCB, 'M', u'ë'),\n+    (0xCC, 'M', u'ì'),\n+    (0xCD, 'M', u'í'),\n+    (0xCE, 'M', u'î'),\n+    (0xCF, 'M', u'ï'),\n+    (0xD0, 'M', u'ð'),\n+    (0xD1, 'M', u'ñ'),\n+    (0xD2, 'M', u'ò'),\n+    (0xD3, 'M', u'ó'),\n+    (0xD4, 'M', u'ô'),\n+    (0xD5, 'M', u'õ'),\n+    (0xD6, 'M', u'ö'),\n+    (0xD7, 'V'),\n+    (0xD8, 'M', u'ø'),\n+    (0xD9, 'M', u'ù'),\n+    (0xDA, 'M', u'ú'),\n+    (0xDB, 'M', u'û'),\n+    (0xDC, 'M', u'ü'),\n+    (0xDD, 'M', u'ý'),\n+    (0xDE, 'M', u'þ'),\n+    (0xDF, 'D', u'ss'),\n+    (0xE0, 'V'),\n+    (0xE1, 'V'),\n+    (0xE2, 'V'),\n+    (0xE3, 'V'),\n+    (0xE4, 'V'),\n+    (0xE5, 'V'),\n+    (0xE6, 'V'),\n+    (0xE7, 'V'),\n+    (0xE8, 'V'),\n+    (0xE9, 'V'),\n+    (0xEA, 'V'),\n+    (0xEB, 'V'),\n+    (0xEC, 'V'),\n+    (0xED, 'V'),\n+    (0xEE, 'V'),\n+    (0xEF, 'V'),\n+    (0xF0, 'V'),\n+    (0xF1, 'V'),\n+    (0xF2, 'V'),\n+    (0xF3, 'V'),\n+    (0xF4, 'V'),\n+    (0xF5, 'V'),\n+    (0xF6, 'V'),\n+    (0xF7, 'V'),\n+    (0xF8, 'V'),\n+    (0xF9, 'V'),\n+    (0xFA, 'V'),\n+    (0xFB, 'V'),\n+    (0xFC, 'V'),\n+    (0xFD, 'V'),\n+    (0xFE, 'V'),\n+    (0xFF, 'V'),\n+    (0x100, 'M', u'ā'),\n+    (0x101, 'V'),\n+    (0x102, 'M', u'ă'),\n+    (0x103, 'V'),\n+    (0x104, 'M', u'ą'),\n+    (0x105, 'V'),\n+    (0x106, 'M', u'ć'),\n+    (0x107, 'V'),\n+    (0x108, 'M', u'ĉ'),\n+    (0x109, 'V'),\n+    (0x10A, 'M', u'ċ'),\n+    (0x10B, 'V'),\n+    (0x10C, 'M', u'č'),\n+    (0x10D, 'V'),\n+    (0x10E, 'M', u'ď'),\n+    (0x10F, 'V'),\n+    (0x110, 'M', u'đ'),\n+    (0x111, 'V'),\n+    (0x112, 'M', u'ē'),\n+    (0x113, 'V'),\n+    (0x114, 'M', u'ĕ'),\n+    (0x115, 'V'),\n+    (0x116, 'M', u'ė'),\n+    (0x117, 'V'),\n+    (0x118, 'M', u'ę'),\n+    (0x119, 'V'),\n+    (0x11A, 'M', u'ě'),\n+    (0x11B, 'V'),\n+    (0x11C, 'M', u'ĝ'),\n+    (0x11D, 'V'),\n+    (0x11E, 'M', u'ğ'),\n+    (0x11F, 'V'),\n+    (0x120, 'M', u'ġ'),\n+    (0x121, 'V'),\n+    (0x122, 'M', u'ģ'),\n+    (0x123, 'V'),\n+    (0x124, 'M', u'ĥ'),\n+    (0x125, 'V'),\n+    (0x126, 'M', u'ħ'),\n+    (0x127, 'V'),\n+    (0x128, 'M', u'ĩ'),\n+    (0x129, 'V'),\n+    (0x12A, 'M', u'ī'),\n+    (0x12B, 'V'),\n+    (0x12C, 'M', u'ĭ'),\n+    (0x12D, 'V'),\n+    (0x12E, 'M', u'į'),\n+    (0x12F, 'V'),\n+    (0x130, 'M', u'i̇'),\n+    (0x131, 'V'),\n+    (0x132, 'M', u'ij'),\n+    (0x134, 'M', u'ĵ'),\n+    (0x135, 'V'),\n+    (0x136, 'M', u'ķ'),\n+    (0x137, 'V'),\n+    (0x139, 'M', u'ĺ'),\n+    (0x13A, 'V'),\n+    (0x13B, 'M', u'ļ'),\n+    (0x13C, 'V'),\n+    (0x13D, 'M', u'ľ'),\n+    (0x13E, 'V'),\n+    (0x13F, 'M', u'l·'),\n+    (0x141, 'M', u'ł'),\n+    (0x142, 'V'),\n+    (0x143, 'M', u'ń'),\n+    (0x144, 'V'),\n+    (0x145, 'M', u'ņ'),\n+    (0x146, 'V'),\n+    (0x147, 'M', u'ň'),\n+    (0x148, 'V'),\n+    (0x149, 'M', u'ʼn'),\n+    (0x14A, 'M', u'ŋ'),\n+    (0x14B, 'V'),\n+    (0x14C, 'M', u'ō'),\n+    (0x14D, 'V'),\n+    (0x14E, 'M', u'ŏ'),\n+    (0x14F, 'V'),\n+    (0x150, 'M', u'ő'),\n+    (0x151, 'V'),\n+    (0x152, 'M', u'œ'),\n+    (0x153, 'V'),\n+    (0x154, 'M', u'ŕ'),\n+    (0x155, 'V'),\n+    (0x156, 'M', u'ŗ'),\n+    (0x157, 'V'),\n+    (0x158, 'M', u'ř'),\n+    (0x159, 'V'),\n+    (0x15A, 'M', u'ś'),\n+    (0x15B, 'V'),\n+    (0x15C, 'M', u'ŝ'),\n+    (0x15D, 'V'),\n+    (0x15E, 'M', u'ş'),\n+    (0x15F, 'V'),\n+    (0x160, 'M', u'š'),\n+    (0x161, 'V'),\n+    (0x162, 'M', u'ţ'),\n+    (0x163, 'V'),\n+    (0x164, 'M', u'ť'),\n+    (0x165, 'V'),\n+    (0x166, 'M', u'ŧ'),\n+    (0x167, 'V'),\n+    (0x168, 'M', u'ũ'),\n+    (0x169, 'V'),\n+    (0x16A, 'M', u'ū'),\n+    (0x16B, 'V'),\n+    (0x16C, 'M', u'ŭ'),\n+    (0x16D, 'V'),\n+    (0x16E, 'M', u'ů'),\n+    (0x16F, 'V'),\n+    (0x170, 'M', u'ű'),\n+    (0x171, 'V'),\n+    (0x172, 'M', u'ų'),\n+    (0x173, 'V'),\n+    (0x174, 'M', u'ŵ'),\n+    (0x175, 'V'),\n+    (0x176, 'M', u'ŷ'),\n+    (0x177, 'V'),\n+    (0x178, 'M', u'ÿ'),\n+    (0x179, 'M', u'ź'),\n+    (0x17A, 'V'),\n+    (0x17B, 'M', u'ż'),\n+    (0x17C, 'V'),\n+    (0x17D, 'M', u'ž'),\n+    (0x17E, 'V'),\n+    (0x17F, 'M', u's'),\n+    (0x180, 'V'),\n+    (0x181, 'M', u'ɓ'),\n+    (0x182, 'M', u'ƃ'),\n+    (0x183, 'V'),\n+    (0x184, 'M', u'ƅ'),\n+    (0x185, 'V'),\n+    (0x186, 'M', u'ɔ'),\n+    (0x187, 'M', u'ƈ'),\n+    (0x188, 'V'),\n+    (0x189, 'M', u'ɖ'),\n+    (0x18A, 'M', u'ɗ'),\n+    (0x18B, 'M', u'ƌ'),\n+    (0x18C, 'V'),\n+    (0x18E, 'M', u'ǝ'),\n+    (0x18F, 'M', u'ə'),\n+    (0x190, 'M', u'ɛ'),\n+    (0x191, 'M', u'ƒ'),\n+    (0x192, 'V'),\n+    (0x193, 'M', u'ɠ'),\n+    (0x194, 'M', u'ɣ'),\n+    (0x195, 'V'),\n+    (0x196, 'M', u'ɩ'),\n+    (0x197, 'M', u'ɨ'),\n+    (0x198, 'M', u'ƙ'),\n+    (0x199, 'V'),\n+    (0x19C, 'M', u'ɯ'),\n+    (0x19D, 'M', u'ɲ'),\n+    (0x19E, 'V'),\n+    (0x19F, 'M', u'ɵ'),\n+    (0x1A0, 'M', u'ơ'),\n+    (0x1A1, 'V'),\n+    (0x1A2, 'M', u'ƣ'),\n+    (0x1A3, 'V'),\n+    (0x1A4, 'M', u'ƥ'),\n+    (0x1A5, 'V'),\n+    (0x1A6, 'M', u'ʀ'),\n+    (0x1A7, 'M', u'ƨ'),\n+    (0x1A8, 'V'),\n+    (0x1A9, 'M', u'ʃ'),\n+    (0x1AA, 'V'),\n+    (0x1AC, 'M', u'ƭ'),\n+    (0x1AD, 'V'),\n+    (0x1AE, 'M', u'ʈ'),\n+    (0x1AF, 'M', u'ư'),\n+    (0x1B0, 'V'),\n+    (0x1B1, 'M', u'ʊ'),\n+    (0x1B2, 'M', u'ʋ'),\n+    (0x1B3, 'M', u'ƴ'),\n+    (0x1B4, 'V'),\n+    (0x1B5, 'M', u'ƶ'),\n+    (0x1B6, 'V'),\n+    (0x1B7, 'M', u'ʒ'),\n+    (0x1B8, 'M', u'ƹ'),\n+    (0x1B9, 'V'),\n+    (0x1BC, 'M', u'ƽ'),\n+    (0x1BD, 'V'),\n+    (0x1C4, 'M', u'dž'),\n+    (0x1C7, 'M', u'lj'),\n+    (0x1CA, 'M', u'nj'),\n+    (0x1CD, 'M', u'ǎ'),\n+    (0x1CE, 'V'),\n+    (0x1CF, 'M', u'ǐ'),\n+    (0x1D0, 'V'),\n+    (0x1D1, 'M', u'ǒ'),\n+    (0x1D2, 'V'),\n+    (0x1D3, 'M', u'ǔ'),\n+    (0x1D4, 'V'),\n+    (0x1D5, 'M', u'ǖ'),\n+    (0x1D6, 'V'),\n+    (0x1D7, 'M', u'ǘ'),\n+    (0x1D8, 'V'),\n+    (0x1D9, 'M', u'ǚ'),\n+    (0x1DA, 'V'),\n+    (0x1DB, 'M', u'ǜ'),\n+    (0x1DC, 'V'),\n+    (0x1DE, 'M', u'ǟ'),\n+    (0x1DF, 'V'),\n+    (0x1E0, 'M', u'ǡ'),\n+    (0x1E1, 'V'),\n+    (0x1E2, 'M', u'ǣ'),\n+    (0x1E3, 'V'),\n+    (0x1E4, 'M', u'ǥ'),\n+    (0x1E5, 'V'),\n+    (0x1E6, 'M', u'ǧ'),\n+    (0x1E7, 'V'),\n+    (0x1E8, 'M', u'ǩ'),\n+    (0x1E9, 'V'),\n+    (0x1EA, 'M', u'ǫ'),\n+    (0x1EB, 'V'),\n+    (0x1EC, 'M', u'ǭ'),\n+    (0x1ED, 'V'),\n+    (0x1EE, 'M', u'ǯ'),\n+    (0x1EF, 'V'),\n+    (0x1F1, 'M', u'dz'),\n+    (0x1F4, 'M', u'ǵ'),\n+    (0x1F5, 'V'),\n+    (0x1F6, 'M', u'ƕ'),\n+    (0x1F7, 'M', u'ƿ'),\n+    (0x1F8, 'M', u'ǹ'),\n+    (0x1F9, 'V'),\n+    (0x1FA, 'M', u'ǻ'),\n+    (0x1FB, 'V'),\n+    (0x1FC, 'M', u'ǽ'),\n+    (0x1FD, 'V'),\n+    (0x1FE, 'M', u'ǿ'),\n+    (0x1FF, 'V'),\n+    (0x200, 'M', u'ȁ'),\n+    (0x201, 'V'),\n+    (0x202, 'M', u'ȃ'),\n+    (0x203, 'V'),\n+    (0x204, 'M', u'ȅ'),\n+    (0x205, 'V'),\n+    (0x206, 'M', u'ȇ'),\n+    (0x207, 'V'),\n+    (0x208, 'M', u'ȉ'),\n+    (0x209, 'V'),\n+    (0x20A, 'M', u'ȋ'),\n+    (0x20B, 'V'),\n+    (0x20C, 'M', u'ȍ'),\n+    (0x20D, 'V'),\n+    (0x20E, 'M', u'ȏ'),\n+    (0x20F, 'V'),\n+    (0x210, 'M', u'ȑ'),\n+    (0x211, 'V'),\n+    (0x212, 'M', u'ȓ'),\n+    (0x213, 'V'),\n+    (0x214, 'M', u'ȕ'),\n+    (0x215, 'V'),\n+    (0x216, 'M', u'ȗ'),\n+    (0x217, 'V'),\n+    (0x218, 'M', u'ș'),\n+    (0x219, 'V'),\n+    (0x21A, 'M', u'ț'),\n+    (0x21B, 'V'),\n+    (0x21C, 'M', u'ȝ'),\n+    (0x21D, 'V'),\n+    (0x21E, 'M', u'ȟ'),\n+    (0x21F, 'V'),\n+    (0x220, 'M', u'ƞ'),\n+    (0x221, 'V'),\n+    (0x222, 'M', u'ȣ'),\n+    (0x223, 'V'),\n+    (0x224, 'M', u'ȥ'),\n+    (0x225, 'V'),\n+    (0x226, 'M', u'ȧ'),\n+    (0x227, 'V'),\n+    (0x228, 'M', u'ȩ'),\n+    (0x229, 'V'),\n+    (0x22A, 'M', u'ȫ'),\n+    (0x22B, 'V'),\n+    (0x22C, 'M', u'ȭ'),\n+    (0x22D, 'V'),\n+    (0x22E, 'M', u'ȯ'),\n+    (0x22F, 'V'),\n+    (0x230, 'M', u'ȱ'),\n+    (0x231, 'V'),\n+    (0x232, 'M', u'ȳ'),\n+    (0x233, 'V'),\n+    (0x23A, 'M', u'ⱥ'),\n+    (0x23B, 'M', u'ȼ'),\n+    (0x23C, 'V'),\n+    (0x23D, 'M', u'ƚ'),\n+    (0x23E, 'M', u'ⱦ'),\n+    (0x23F, 'V'),\n+    (0x241, 'M', u'ɂ'),\n+    (0x242, 'V'),\n+    (0x243, 'M', u'ƀ'),\n+    (0x244, 'M', u'ʉ'),\n+    (0x245, 'M', u'ʌ'),\n+    (0x246, 'M', u'ɇ'),\n+    (0x247, 'V'),\n+    (0x248, 'M', u'ɉ'),\n+    (0x249, 'V'),\n+    (0x24A, 'M', u'ɋ'),\n+    (0x24B, 'V'),\n+    (0x24C, 'M', u'ɍ'),\n+    (0x24D, 'V'),\n+    (0x24E, 'M', u'ɏ'),\n+    (0x24F, 'V'),\n+    (0x2B0, 'M', u'h'),\n+    (0x2B1, 'M', u'ɦ'),\n+    (0x2B2, 'M', u'j'),\n+    (0x2B3, 'M', u'r'),\n+    (0x2B4, 'M', u'ɹ'),\n+    (0x2B5, 'M', u'ɻ'),\n+    (0x2B6, 'M', u'ʁ'),\n+    (0x2B7, 'M', u'w'),\n+    (0x2B8, 'M', u'y'),\n+    (0x2B9, 'V'),\n+    (0x2D8, '3', u' ̆'),\n+    (0x2D9, '3', u' ̇'),\n+    (0x2DA, '3', u' ̊'),\n+    (0x2DB, '3', u' ̨'),\n+    (0x2DC, '3', u' ̃'),\n+    (0x2DD, '3', u' ̋'),\n+    (0x2DE, 'V'),\n+    (0x2E0, 'M', u'ɣ'),\n+    (0x2E1, 'M', u'l'),\n+    (0x2E2, 'M', u's'),\n+    (0x2E3, 'M', u'x'),\n+    (0x2E4, 'M', u'ʕ'),\n+    (0x2E5, 'V'),\n+    (0x340, 'M', u'̀'),\n+    (0x341, 'M', u'́'),\n+    (0x342, 'V'),\n+    (0x343, 'M', u'̓'),\n+    (0x344, 'M', u'̈́'),\n+    (0x345, 'M', u'ι'),\n+    (0x346, 'V'),\n+    (0x34F, 'I'),\n+    (0x350, 'V'),\n+    (0x370, 'M', u'ͱ'),\n+    (0x371, 'V'),\n+    (0x372, 'M', u'ͳ'),\n+    (0x373, 'V'),\n+    (0x374, 'M', u'ʹ'),\n+    (0x375, 'V'),\n+    (0x376, 'M', u'ͷ'),\n+    (0x377, 'V'),\n+    (0x378, 'X'),\n+    (0x37A, '3', u' ι'),\n+    (0x37B, 'V'),\n+    (0x37E, '3', u';'),\n+    (0x37F, 'X'),\n+    (0x384, '3', u' ́'),\n+    (0x385, '3', u' ̈́'),\n+    (0x386, 'M', u'ά'),\n+    (0x387, 'M', u'·'),\n+    (0x388, 'M', u'έ'),\n+    (0x389, 'M', u'ή'),\n+    (0x38A, 'M', u'ί'),\n+    (0x38B, 'X'),\n+    (0x38C, 'M', u'ό'),\n+    (0x38D, 'X'),\n+    (0x38E, 'M', u'ύ'),\n+    (0x38F, 'M', u'ώ'),\n+    (0x390, 'V'),\n+    (0x391, 'M', u'α'),\n+    (0x392, 'M', u'β'),\n+    (0x393, 'M', u'γ'),\n+    (0x394, 'M', u'δ'),\n+    (0x395, 'M', u'ε'),\n+    (0x396, 'M', u'ζ'),\n+    (0x397, 'M', u'η'),\n+    (0x398, 'M', u'θ'),\n+    (0x399, 'M', u'ι'),\n+    (0x39A, 'M', u'κ'),\n+    (0x39B, 'M', u'λ'),\n+    (0x39C, 'M', u'μ'),\n+    (0x39D, 'M', u'ν'),\n+    (0x39E, 'M', u'ξ'),\n+    (0x39F, 'M', u'ο'),\n+    (0x3A0, 'M', u'π'),\n+    (0x3A1, 'M', u'ρ'),\n+    (0x3A2, 'X'),\n+    (0x3A3, 'M', u'σ'),\n+    (0x3A4, 'M', u'τ'),\n+    (0x3A5, 'M', u'υ'),\n+    (0x3A6, 'M', u'φ'),\n+    (0x3A7, 'M', u'χ'),\n+    (0x3A8, 'M', u'ψ'),\n+    (0x3A9, 'M', u'ω'),\n+    (0x3AA, 'M', u'ϊ'),\n+    (0x3AB, 'M', u'ϋ'),\n+    (0x3AC, 'V'),\n+    (0x3C2, 'D', u'σ'),\n+    (0x3C3, 'V'),\n+    (0x3CF, 'M', u'ϗ'),\n+    (0x3D0, 'M', u'β'),\n+    (0x3D1, 'M', u'θ'),\n+    (0x3D2, 'M', u'υ'),\n+    (0x3D3, 'M', u'ύ'),\n+    (0x3D4, 'M', u'ϋ'),\n+    (0x3D5, 'M', u'φ'),\n+    (0x3D6, 'M', u'π'),\n+    (0x3D7, 'V'),\n+    (0x3D8, 'M', u'ϙ'),\n+    (0x3D9, 'V'),\n+    (0x3DA, 'M', u'ϛ'),\n+    (0x3DB, 'V'),\n+    (0x3DC, 'M', u'ϝ'),\n+    (0x3DD, 'V'),\n+    (0x3DE, 'M', u'ϟ'),\n+    (0x3DF, 'V'),\n+    (0x3E0, 'M', u'ϡ'),\n+    (0x3E1, 'V'),\n+    (0x3E2, 'M', u'ϣ'),\n+    (0x3E3, 'V'),\n+    (0x3E4, 'M', u'ϥ'),\n+    (0x3E5, 'V'),\n+    (0x3E6, 'M', u'ϧ'),\n+    (0x3E7, 'V'),\n+    (0x3E8, 'M', u'ϩ'),\n+    (0x3E9, 'V'),\n+    (0x3EA, 'M', u'ϫ'),\n+    (0x3EB, 'V'),\n+    (0x3EC, 'M', u'ϭ'),\n+    (0x3ED, 'V'),\n+    (0x3EE, 'M', u'ϯ'),\n+    (0x3EF, 'V'),\n+    (0x3F0, 'M', u'κ'),\n+    (0x3F1, 'M', u'ρ'),\n+    (0x3F2, 'M', u'σ'),\n+    (0x3F3, 'V'),\n+    (0x3F4, 'M', u'θ'),\n+    (0x3F5, 'M', u'ε'),\n+    (0x3F6, 'V'),\n+    (0x3F7, 'M', u'ϸ'),\n+    (0x3F8, 'V'),\n+    (0x3F9, 'M', u'σ'),\n+    (0x3FA, 'M', u'ϻ'),\n+    (0x3FB, 'V'),\n+    (0x3FD, 'M', u'ͻ'),\n+    (0x3FE, 'M', u'ͼ'),\n+    (0x3FF, 'M', u'ͽ'),\n+    (0x400, 'M', u'ѐ'),\n+    (0x401, 'M', u'ё'),\n+    (0x402, 'M', u'ђ'),\n+    (0x403, 'M', u'ѓ'),\n+    (0x404, 'M', u'є'),\n+    (0x405, 'M', u'ѕ'),\n+    (0x406, 'M', u'і'),\n+    (0x407, 'M', u'ї'),\n+    (0x408, 'M', u'ј'),\n+    (0x409, 'M', u'љ'),\n+    (0x40A, 'M', u'њ'),\n+    (0x40B, 'M', u'ћ'),\n+    (0x40C, 'M', u'ќ'),\n+    (0x40D, 'M', u'ѝ'),\n+    (0x40E, 'M', u'ў'),\n+    (0x40F, 'M', u'џ'),\n+    (0x410, 'M', u'а'),\n+    (0x411, 'M', u'б'),\n+    (0x412, 'M', u'в'),\n+    (0x413, 'M', u'г'),\n+    (0x414, 'M', u'д'),\n+    (0x415, 'M', u'е'),\n+    (0x416, 'M', u'ж'),\n+    (0x417, 'M', u'з'),\n+    (0x418, 'M', u'и'),\n+    (0x419, 'M', u'й'),\n+    (0x41A, 'M', u'к'),\n+    (0x41B, 'M', u'л'),\n+    (0x41C, 'M', u'м'),\n+    (0x41D, 'M', u'н'),\n+    (0x41E, 'M', u'о'),\n+    (0x41F, 'M', u'п'),\n+    (0x420, 'M', u'р'),\n+    (0x421, 'M', u'с'),\n+    (0x422, 'M', u'т'),\n+    (0x423, 'M', u'у'),\n+    (0x424, 'M', u'ф'),\n+    (0x425, 'M', u'х'),\n+    (0x426, 'M', u'ц'),\n+    (0x427, 'M', u'ч'),\n+    (0x428, 'M', u'ш'),\n+    (0x429, 'M', u'щ'),\n+    (0x42A, 'M', u'ъ'),\n+    (0x42B, 'M', u'ы'),\n+    (0x42C, 'M', u'ь'),\n+    (0x42D, 'M', u'э'),\n+    (0x42E, 'M', u'ю'),\n+    (0x42F, 'M', u'я'),\n+    (0x430, 'V'),\n+    (0x460, 'M', u'ѡ'),\n+    (0x461, 'V'),\n+    (0x462, 'M', u'ѣ'),\n+    (0x463, 'V'),\n+    (0x464, 'M', u'ѥ'),\n+    (0x465, 'V'),\n+    (0x466, 'M', u'ѧ'),\n+    (0x467, 'V'),\n+    (0x468, 'M', u'ѩ'),\n+    (0x469, 'V'),\n+    (0x46A, 'M', u'ѫ'),\n+    (0x46B, 'V'),\n+    (0x46C, 'M', u'ѭ'),\n+    (0x46D, 'V'),\n+    (0x46E, 'M', u'ѯ'),\n+    (0x46F, 'V'),\n+    (0x470, 'M', u'ѱ'),\n+    (0x471, 'V'),\n+    (0x472, 'M', u'ѳ'),\n+    (0x473, 'V'),\n+    (0x474, 'M', u'ѵ'),\n+    (0x475, 'V'),\n+    (0x476, 'M', u'ѷ'),\n+    (0x477, 'V'),\n+    (0x478, 'M', u'ѹ'),\n+    (0x479, 'V'),\n+    (0x47A, 'M', u'ѻ'),\n+    (0x47B, 'V'),\n+    (0x47C, 'M', u'ѽ'),\n+    (0x47D, 'V'),\n+    (0x47E, 'M', u'ѿ'),\n+    (0x47F, 'V'),\n+    (0x480, 'M', u'ҁ'),\n+    (0x481, 'V'),\n+    (0x48A, 'M', u'ҋ'),\n+    (0x48B, 'V'),\n+    (0x48C, 'M', u'ҍ'),\n+    (0x48D, 'V'),\n+    (0x48E, 'M', u'ҏ'),\n+    (0x48F, 'V'),\n+    (0x490, 'M', u'ґ'),\n+    (0x491, 'V'),\n+    (0x492, 'M', u'ғ'),\n+    (0x493, 'V'),\n+    (0x494, 'M', u'ҕ'),\n+    (0x495, 'V'),\n+    (0x496, 'M', u'җ'),\n+    (0x497, 'V'),\n+    (0x498, 'M', u'ҙ'),\n+    (0x499, 'V'),\n+    (0x49A, 'M', u'қ'),\n+    (0x49B, 'V'),\n+    (0x49C, 'M', u'ҝ'),\n+    (0x49D, 'V'),\n+    (0x49E, 'M', u'ҟ'),\n+    (0x49F, 'V'),\n+    (0x4A0, 'M', u'ҡ'),\n+    (0x4A1, 'V'),\n+    (0x4A2, 'M', u'ң'),\n+    (0x4A3, 'V'),\n+    (0x4A4, 'M', u'ҥ'),\n+    (0x4A5, 'V'),\n+    (0x4A6, 'M', u'ҧ'),\n+    (0x4A7, 'V'),\n+    (0x4A8, 'M', u'ҩ'),\n+    (0x4A9, 'V'),\n+    (0x4AA, 'M', u'ҫ'),\n+    (0x4AB, 'V'),\n+    (0x4AC, 'M', u'ҭ'),\n+    (0x4AD, 'V'),\n+    (0x4AE, 'M', u'ү'),\n+    (0x4AF, 'V'),\n+    (0x4B0, 'M', u'ұ'),\n+    (0x4B1, 'V'),\n+    (0x4B2, 'M', u'ҳ'),\n+    (0x4B3, 'V'),\n+    (0x4B4, 'M', u'ҵ'),\n+    (0x4B5, 'V'),\n+    (0x4B6, 'M', u'ҷ'),\n+    (0x4B7, 'V'),\n+    (0x4B8, 'M', u'ҹ'),\n+    (0x4B9, 'V'),\n+    (0x4BA, 'M', u'һ'),\n+    (0x4BB, 'V'),\n+    (0x4BC, 'M', u'ҽ'),\n+    (0x4BD, 'V'),\n+    (0x4BE, 'M', u'ҿ'),\n+    (0x4BF, 'V'),\n+    (0x4C0, 'X'),\n+    (0x4C1, 'M', u'ӂ'),\n+    (0x4C2, 'V'),\n+    (0x4C3, 'M', u'ӄ'),\n+    (0x4C4, 'V'),\n+    (0x4C5, 'M', u'ӆ'),\n+    (0x4C6, 'V'),\n+    (0x4C7, 'M', u'ӈ'),\n+    (0x4C8, 'V'),\n+    (0x4C9, 'M', u'ӊ'),\n+    (0x4CA, 'V'),\n+    (0x4CB, 'M', u'ӌ'),\n+    (0x4CC, 'V'),\n+    (0x4CD, 'M', u'ӎ'),\n+    (0x4CE, 'V'),\n+    (0x4D0, 'M', u'ӑ'),\n+    (0x4D1, 'V'),\n+    (0x4D2, 'M', u'ӓ'),\n+    (0x4D3, 'V'),\n+    (0x4D4, 'M', u'ӕ'),\n+    (0x4D5, 'V'),\n+    (0x4D6, 'M', u'ӗ'),\n+    (0x4D7, 'V'),\n+    (0x4D8, 'M', u'ә'),\n+    (0x4D9, 'V'),\n+    (0x4DA, 'M', u'ӛ'),\n+    (0x4DB, 'V'),\n+    (0x4DC, 'M', u'ӝ'),\n+    (0x4DD, 'V'),\n+    (0x4DE, 'M', u'ӟ'),\n+    (0x4DF, 'V'),\n+    (0x4E0, 'M', u'ӡ'),\n+    (0x4E1, 'V'),\n+    (0x4E2, 'M', u'ӣ'),\n+    (0x4E3, 'V'),\n+    (0x4E4, 'M', u'ӥ'),\n+    (0x4E5, 'V'),\n+    (0x4E6, 'M', u'ӧ'),\n+    (0x4E7, 'V'),\n+    (0x4E8, 'M', u'ө'),\n+    (0x4E9, 'V'),\n+    (0x4EA, 'M', u'ӫ'),\n+    (0x4EB, 'V'),\n+    (0x4EC, 'M', u'ӭ'),\n+    (0x4ED, 'V'),\n+    (0x4EE, 'M', u'ӯ'),\n+    (0x4EF, 'V'),\n+    (0x4F0, 'M', u'ӱ'),\n+    (0x4F1, 'V'),\n+    (0x4F2, 'M', u'ӳ'),\n+    (0x4F3, 'V'),\n+    (0x4F4, 'M', u'ӵ'),\n+    (0x4F5, 'V'),\n+    (0x4F6, 'M', u'ӷ'),\n+    (0x4F7, 'V'),\n+    (0x4F8, 'M', u'ӹ'),\n+    (0x4F9, 'V'),\n+    (0x4FA, 'M', u'ӻ'),\n+    (0x4FB, 'V'),\n+    (0x4FC, 'M', u'ӽ'),\n+    (0x4FD, 'V'),\n+    (0x4FE, 'M', u'ӿ'),\n+    (0x4FF, 'V'),\n+    (0x500, 'M', u'ԁ'),\n+    (0x501, 'V'),\n+    (0x502, 'M', u'ԃ'),\n+    (0x503, 'V'),\n+    (0x504, 'M', u'ԅ'),\n+    (0x505, 'V'),\n+    (0x506, 'M', u'ԇ'),\n+    (0x507, 'V'),\n+    (0x508, 'M', u'ԉ'),\n+    (0x509, 'V'),\n+    (0x50A, 'M', u'ԋ'),\n+    (0x50B, 'V'),\n+    (0x50C, 'M', u'ԍ'),\n+    (0x50D, 'V'),\n+    (0x50E, 'M', u'ԏ'),\n+    (0x50F, 'V'),\n+    (0x510, 'M', u'ԑ'),\n+    (0x511, 'V'),\n+    (0x512, 'M', u'ԓ'),\n+    (0x513, 'V'),\n+    (0x514, 'M', u'ԕ'),\n+    (0x515, 'V'),\n+    (0x516, 'M', u'ԗ'),\n+    (0x517, 'V'),\n+    (0x518, 'M', u'ԙ'),\n+    (0x519, 'V'),\n+    (0x51A, 'M', u'ԛ'),\n+    (0x51B, 'V'),\n+    (0x51C, 'M', u'ԝ'),\n+    (0x51D, 'V'),\n+    (0x51E, 'M', u'ԟ'),\n+    (0x51F, 'V'),\n+    (0x520, 'M', u'ԡ'),\n+    (0x521, 'V'),\n+    (0x522, 'M', u'ԣ'),\n+    (0x523, 'V'),\n+    (0x524, 'M', u'ԥ'),\n+    (0x525, 'V'),\n+    (0x526, 'M', u'ԧ'),\n+    (0x527, 'V'),\n+    (0x528, 'X'),\n+    (0x531, 'M', u'ա'),\n+    (0x532, 'M', u'բ'),\n+    (0x533, 'M', u'գ'),\n+    (0x534, 'M', u'դ'),\n+    (0x535, 'M', u'ե'),\n+    (0x536, 'M', u'զ'),\n+    (0x537, 'M', u'է'),\n+    (0x538, 'M', u'ը'),\n+    (0x539, 'M', u'թ'),\n+    (0x53A, 'M', u'ժ'),\n+    (0x53B, 'M', u'ի'),\n+    (0x53C, 'M', u'լ'),\n+    (0x53D, 'M', u'խ'),\n+    (0x53E, 'M', u'ծ'),\n+    (0x53F, 'M', u'կ'),\n+    (0x540, 'M', u'հ'),\n+    (0x541, 'M', u'ձ'),\n+    (0x542, 'M', u'ղ'),\n+    (0x543, 'M', u'ճ'),\n+    (0x544, 'M', u'մ'),\n+    (0x545, 'M', u'յ'),\n+    (0x546, 'M', u'ն'),\n+    (0x547, 'M', u'շ'),\n+    (0x548, 'M', u'ո'),\n+    (0x549, 'M', u'չ'),\n+    (0x54A, 'M', u'պ'),\n+    (0x54B, 'M', u'ջ'),\n+    (0x54C, 'M', u'ռ'),\n+    (0x54D, 'M', u'ս'),\n+    (0x54E, 'M', u'վ'),\n+    (0x54F, 'M', u'տ'),\n+    (0x550, 'M', u'ր'),\n+    (0x551, 'M', u'ց'),\n+    (0x552, 'M', u'ւ'),\n+    (0x553, 'M', u'փ'),\n+    (0x554, 'M', u'ք'),\n+    (0x555, 'M', u'օ'),\n+    (0x556, 'M', u'ֆ'),\n+    (0x557, 'X'),\n+    (0x559, 'V'),\n+    (0x560, 'X'),\n+    (0x561, 'V'),\n+    (0x587, 'M', u'եւ'),\n+    (0x588, 'X'),\n+    (0x589, 'V'),\n+    (0x58B, 'X'),\n+    (0x58F, 'V'),\n+    (0x590, 'X'),\n+    (0x591, 'V'),\n+    (0x5C8, 'X'),\n+    (0x5D0, 'V'),\n+    (0x5EB, 'X'),\n+    (0x5F0, 'V'),\n+    (0x5F5, 'X'),\n+    (0x606, 'V'),\n+    (0x61C, 'X'),\n+    (0x61E, 'V'),\n+    (0x675, 'M', u'اٴ'),\n+    (0x676, 'M', u'وٴ'),\n+    (0x677, 'M', u'ۇٴ'),\n+    (0x678, 'M', u'يٴ'),\n+    (0x679, 'V'),\n+    (0x6DD, 'X'),\n+    (0x6DE, 'V'),\n+    (0x70E, 'X'),\n+    (0x710, 'V'),\n+    (0x74B, 'X'),\n+    (0x74D, 'V'),\n+    (0x7B2, 'X'),\n+    (0x7C0, 'V'),\n+    (0x7FB, 'X'),\n+    (0x800, 'V'),\n+    (0x82E, 'X'),\n+    (0x830, 'V'),\n+    (0x83F, 'X'),\n+    (0x840, 'V'),\n+    (0x85C, 'X'),\n+    (0x85E, 'V'),\n+    (0x85F, 'X'),\n+    (0x8A0, 'V'),\n+    (0x8A1, 'X'),\n+    (0x8A2, 'V'),\n+    (0x8AD, 'X'),\n+    (0x8E4, 'V'),\n+    (0x8FF, 'X'),\n+    (0x900, 'V'),\n+    (0x958, 'M', u'क़'),\n+    (0x959, 'M', u'ख़'),\n+    (0x95A, 'M', u'ग़'),\n+    (0x95B, 'M', u'ज़'),\n+    (0x95C, 'M', u'ड़'),\n+    (0x95D, 'M', u'ढ़'),\n+    (0x95E, 'M', u'फ़'),\n+    (0x95F, 'M', u'य़'),\n+    (0x960, 'V'),\n+    (0x978, 'X'),\n+    (0x979, 'V'),\n+    (0x980, 'X'),\n+    (0x981, 'V'),\n+    (0x984, 'X'),\n+    (0x985, 'V'),\n+    (0x98D, 'X'),\n+    (0x98F, 'V'),\n+    (0x991, 'X'),\n+    (0x993, 'V'),\n+    (0x9A9, 'X'),\n+    (0x9AA, 'V'),\n+    (0x9B1, 'X'),\n+    (0x9B2, 'V'),\n+    (0x9B3, 'X'),\n+    (0x9B6, 'V'),\n+    (0x9BA, 'X'),\n+    (0x9BC, 'V'),\n+    (0x9C5, 'X'),\n+    (0x9C7, 'V'),\n+    (0x9C9, 'X'),\n+    (0x9CB, 'V'),\n+    (0x9CF, 'X'),\n+    (0x9D7, 'V'),\n+    (0x9D8, 'X'),\n+    (0x9DC, 'M', u'ড়'),\n+    (0x9DD, 'M', u'ঢ়'),\n+    (0x9DE, 'X'),\n+    (0x9DF, 'M', u'য়'),\n+    (0x9E0, 'V'),\n+    (0x9E4, 'X'),\n+    (0x9E6, 'V'),\n+    (0x9FC, 'X'),\n+    (0xA01, 'V'),\n+    (0xA04, 'X'),\n+    (0xA05, 'V'),\n+    (0xA0B, 'X'),\n+    (0xA0F, 'V'),\n+    (0xA11, 'X'),\n+    (0xA13, 'V'),\n+    (0xA29, 'X'),\n+    (0xA2A, 'V'),\n+    (0xA31, 'X'),\n+    (0xA32, 'V'),\n+    (0xA33, 'M', u'ਲ਼'),\n+    (0xA34, 'X'),\n+    (0xA35, 'V'),\n+    (0xA36, 'M', u'ਸ਼'),\n+    (0xA37, 'X'),\n+    (0xA38, 'V'),\n+    (0xA3A, 'X'),\n+    (0xA3C, 'V'),\n+    (0xA3D, 'X'),\n+    (0xA3E, 'V'),\n+    (0xA43, 'X'),\n+    (0xA47, 'V'),\n+    (0xA49, 'X'),\n+    (0xA4B, 'V'),\n+    (0xA4E, 'X'),\n+    (0xA51, 'V'),\n+    (0xA52, 'X'),\n+    (0xA59, 'M', u'ਖ਼'),\n+    (0xA5A, 'M', u'ਗ਼'),\n+    (0xA5B, 'M', u'ਜ਼'),\n+    (0xA5C, 'V'),\n+    (0xA5D, 'X'),\n+    (0xA5E, 'M', u'ਫ਼'),\n+    (0xA5F, 'X'),\n+    (0xA66, 'V'),\n+    (0xA76, 'X'),\n+    (0xA81, 'V'),\n+    (0xA84, 'X'),\n+    (0xA85, 'V'),\n+    (0xA8E, 'X'),\n+    (0xA8F, 'V'),\n+    (0xA92, 'X'),\n+    (0xA93, 'V'),\n+    (0xAA9, 'X'),\n+    (0xAAA, 'V'),\n+    (0xAB1, 'X'),\n+    (0xAB2, 'V'),\n+    (0xAB4, 'X'),\n+    (0xAB5, 'V'),\n+    (0xABA, 'X'),\n+    (0xABC, 'V'),\n+    (0xAC6, 'X'),\n+    (0xAC7, 'V'),\n+    (0xACA, 'X'),\n+    (0xACB, 'V'),\n+    (0xACE, 'X'),\n+    (0xAD0, 'V'),\n+    (0xAD1, 'X'),\n+    (0xAE0, 'V'),\n+    (0xAE4, 'X'),\n+    (0xAE6, 'V'),\n+    (0xAF2, 'X'),\n+    (0xB01, 'V'),\n+    (0xB04, 'X'),\n+    (0xB05, 'V'),\n+    (0xB0D, 'X'),\n+    (0xB0F, 'V'),\n+    (0xB11, 'X'),\n+    (0xB13, 'V'),\n+    (0xB29, 'X'),\n+    (0xB2A, 'V'),\n+    (0xB31, 'X'),\n+    (0xB32, 'V'),\n+    (0xB34, 'X'),\n+    (0xB35, 'V'),\n+    (0xB3A, 'X'),\n+    (0xB3C, 'V'),\n+    (0xB45, 'X'),\n+    (0xB47, 'V'),\n+    (0xB49, 'X'),\n+    (0xB4B, 'V'),\n+    (0xB4E, 'X'),\n+    (0xB56, 'V'),\n+    (0xB58, 'X'),\n+    (0xB5C, 'M', u'ଡ଼'),\n+    (0xB5D, 'M', u'ଢ଼'),\n+    (0xB5E, 'X'),\n+    (0xB5F, 'V'),\n+    (0xB64, 'X'),\n+    (0xB66, 'V'),\n+    (0xB78, 'X'),\n+    (0xB82, 'V'),\n+    (0xB84, 'X'),\n+    (0xB85, 'V'),\n+    (0xB8B, 'X'),\n+    (0xB8E, 'V'),\n+    (0xB91, 'X'),\n+    (0xB92, 'V'),\n+    (0xB96, 'X'),\n+    (0xB99, 'V'),\n+    (0xB9B, 'X'),\n+    (0xB9C, 'V'),\n+    (0xB9D, 'X'),\n+    (0xB9E, 'V'),\n+    (0xBA0, 'X'),\n+    (0xBA3, 'V'),\n+    (0xBA5, 'X'),\n+    (0xBA8, 'V'),\n+    (0xBAB, 'X'),\n+    (0xBAE, 'V'),\n+    (0xBBA, 'X'),\n+    (0xBBE, 'V'),\n+    (0xBC3, 'X'),\n+    (0xBC6, 'V'),\n+    (0xBC9, 'X'),\n+    (0xBCA, 'V'),\n+    (0xBCE, 'X'),\n+    (0xBD0, 'V'),\n+    (0xBD1, 'X'),\n+    (0xBD7, 'V'),\n+    (0xBD8, 'X'),\n+    (0xBE6, 'V'),\n+    (0xBFB, 'X'),\n+    (0xC01, 'V'),\n+    (0xC04, 'X'),\n+    (0xC05, 'V'),\n+    (0xC0D, 'X'),\n+    (0xC0E, 'V'),\n+    (0xC11, 'X'),\n+    (0xC12, 'V'),\n+    (0xC29, 'X'),\n+    (0xC2A, 'V'),\n+    (0xC34, 'X'),\n+    (0xC35, 'V'),\n+    (0xC3A, 'X'),\n+    (0xC3D, 'V'),\n+    (0xC45, 'X'),\n+    (0xC46, 'V'),\n+    (0xC49, 'X'),\n+    (0xC4A, 'V'),\n+    (0xC4E, 'X'),\n+    (0xC55, 'V'),\n+    (0xC57, 'X'),\n+    (0xC58, 'V'),\n+    (0xC5A, 'X'),\n+    (0xC60, 'V'),\n+    (0xC64, 'X'),\n+    (0xC66, 'V'),\n+    (0xC70, 'X'),\n+    (0xC78, 'V'),\n+    (0xC80, 'X'),\n+    (0xC82, 'V'),\n+    (0xC84, 'X'),\n+    (0xC85, 'V'),\n+    (0xC8D, 'X'),\n+    (0xC8E, 'V'),\n+    (0xC91, 'X'),\n+    (0xC92, 'V'),\n+    (0xCA9, 'X'),\n+    (0xCAA, 'V'),\n+    (0xCB4, 'X'),\n+    (0xCB5, 'V'),\n+    (0xCBA, 'X'),\n+    (0xCBC, 'V'),\n+    (0xCC5, 'X'),\n+    (0xCC6, 'V'),\n+    (0xCC9, 'X'),\n+    (0xCCA, 'V'),\n+    (0xCCE, 'X'),\n+    (0xCD5, 'V'),\n+    (0xCD7, 'X'),\n+    (0xCDE, 'V'),\n+    (0xCDF, 'X'),\n+    (0xCE0, 'V'),\n+    (0xCE4, 'X'),\n+    (0xCE6, 'V'),\n+    (0xCF0, 'X'),\n+    (0xCF1, 'V'),\n+    (0xCF3, 'X'),\n+    (0xD02, 'V'),\n+    (0xD04, 'X'),\n+    (0xD05, 'V'),\n+    (0xD0D, 'X'),\n+    (0xD0E, 'V'),\n+    (0xD11, 'X'),\n+    (0xD12, 'V'),\n+    (0xD3B, 'X'),\n+    (0xD3D, 'V'),\n+    (0xD45, 'X'),\n+    (0xD46, 'V'),\n+    (0xD49, 'X'),\n+    (0xD4A, 'V'),\n+    (0xD4F, 'X'),\n+    (0xD57, 'V'),\n+    (0xD58, 'X'),\n+    (0xD60, 'V'),\n+    (0xD64, 'X'),\n+    (0xD66, 'V'),\n+    (0xD76, 'X'),\n+    (0xD79, 'V'),\n+    (0xD80, 'X'),\n+    (0xD82, 'V'),\n+    (0xD84, 'X'),\n+    (0xD85, 'V'),\n+    (0xD97, 'X'),\n+    (0xD9A, 'V'),\n+    (0xDB2, 'X'),\n+    (0xDB3, 'V'),\n+    (0xDBC, 'X'),\n+    (0xDBD, 'V'),\n+    (0xDBE, 'X'),\n+    (0xDC0, 'V'),\n+    (0xDC7, 'X'),\n+    (0xDCA, 'V'),\n+    (0xDCB, 'X'),\n+    (0xDCF, 'V'),\n+    (0xDD5, 'X'),\n+    (0xDD6, 'V'),\n+    (0xDD7, 'X'),\n+    (0xDD8, 'V'),\n+    (0xDE0, 'X'),\n+    (0xDF2, 'V'),\n+    (0xDF5, 'X'),\n+    (0xE01, 'V'),\n+    (0xE33, 'M', u'ํา'),\n+    (0xE34, 'V'),\n+    (0xE3B, 'X'),\n+    (0xE3F, 'V'),\n+    (0xE5C, 'X'),\n+    (0xE81, 'V'),\n+    (0xE83, 'X'),\n+    (0xE84, 'V'),\n+    (0xE85, 'X'),\n+    (0xE87, 'V'),\n+    (0xE89, 'X'),\n+    (0xE8A, 'V'),\n+    (0xE8B, 'X'),\n+    (0xE8D, 'V'),\n+    (0xE8E, 'X'),\n+    (0xE94, 'V'),\n+    (0xE98, 'X'),\n+    (0xE99, 'V'),\n+    (0xEA0, 'X'),\n+    (0xEA1, 'V'),\n+    (0xEA4, 'X'),\n+    (0xEA5, 'V'),\n+    (0xEA6, 'X'),\n+    (0xEA7, 'V'),\n+    (0xEA8, 'X'),\n+    (0xEAA, 'V'),\n+    (0xEAC, 'X'),\n+    (0xEAD, 'V'),\n+    (0xEB3, 'M', u'ໍາ'),\n+    (0xEB4, 'V'),\n+    (0xEBA, 'X'),\n+    (0xEBB, 'V'),\n+    (0xEBE, 'X'),\n+    (0xEC0, 'V'),\n+    (0xEC5, 'X'),\n+    (0xEC6, 'V'),\n+    (0xEC7, 'X'),\n+    (0xEC8, 'V'),\n+    (0xECE, 'X'),\n+    (0xED0, 'V'),\n+    (0xEDA, 'X'),\n+    (0xEDC, 'M', u'ຫນ'),\n+    (0xEDD, 'M', u'ຫມ'),\n+    (0xEDE, 'V'),\n+    (0xEE0, 'X'),\n+    (0xF00, 'V'),\n+    (0xF0C, 'M', u'་'),\n+    (0xF0D, 'V'),\n+    (0xF43, 'M', u'གྷ'),\n+    (0xF44, 'V'),\n+    (0xF48, 'X'),\n+    (0xF49, 'V'),\n+    (0xF4D, 'M', u'ཌྷ'),\n+    (0xF4E, 'V'),\n+    (0xF52, 'M', u'དྷ'),\n+    (0xF53, 'V'),\n+    (0xF57, 'M', u'བྷ'),\n+    (0xF58, 'V'),\n+    (0xF5C, 'M', u'ཛྷ'),\n+    (0xF5D, 'V'),\n+    (0xF69, 'M', u'ཀྵ'),\n+    (0xF6A, 'V'),\n+    (0xF6D, 'X'),\n+    (0xF71, 'V'),\n+    (0xF73, 'M', u'ཱི'),\n+    (0xF74, 'V'),\n+    (0xF75, 'M', u'ཱུ'),\n+    (0xF76, 'M', u'ྲྀ'),\n+    (0xF77, 'M', u'ྲཱྀ'),\n+    (0xF78, 'M', u'ླྀ'),\n+    (0xF79, 'M', u'ླཱྀ'),\n+    (0xF7A, 'V'),\n+    (0xF81, 'M', u'ཱྀ'),\n+    (0xF82, 'V'),\n+    (0xF93, 'M', u'ྒྷ'),\n+    (0xF94, 'V'),\n+    (0xF98, 'X'),\n+    (0xF99, 'V'),\n+    (0xF9D, 'M', u'ྜྷ'),\n+    (0xF9E, 'V'),\n+    (0xFA2, 'M', u'ྡྷ'),\n+    (0xFA3, 'V'),\n+    (0xFA7, 'M', u'ྦྷ'),\n+    (0xFA8, 'V'),\n+    (0xFAC, 'M', u'ྫྷ'),\n+    (0xFAD, 'V'),\n+    (0xFB9, 'M', u'ྐྵ'),\n+    (0xFBA, 'V'),\n+    (0xFBD, 'X'),\n+    (0xFBE, 'V'),\n+    (0xFCD, 'X'),\n+    (0xFCE, 'V'),\n+    (0xFDB, 'X'),\n+    (0x1000, 'V'),\n+    (0x10A0, 'X'),\n+    (0x10C7, 'M', u'ⴧ'),\n+    (0x10C8, 'X'),\n+    (0x10CD, 'M', u'ⴭ'),\n+    (0x10CE, 'X'),\n+    (0x10D0, 'V'),\n+    (0x10FC, 'M', u'ნ'),\n+    (0x10FD, 'V'),\n+    (0x115F, 'X'),\n+    (0x1161, 'V'),\n+    (0x1249, 'X'),\n+    (0x124A, 'V'),\n+    (0x124E, 'X'),\n+    (0x1250, 'V'),\n+    (0x1257, 'X'),\n+    (0x1258, 'V'),\n+    (0x1259, 'X'),\n+    (0x125A, 'V'),\n+    (0x125E, 'X'),\n+    (0x1260, 'V'),\n+    (0x1289, 'X'),\n+    (0x128A, 'V'),\n+    (0x128E, 'X'),\n+    (0x1290, 'V'),\n+    (0x12B1, 'X'),\n+    (0x12B2, 'V'),\n+    (0x12B6, 'X'),\n+    (0x12B8, 'V'),\n+    (0x12BF, 'X'),\n+    (0x12C0, 'V'),\n+    (0x12C1, 'X'),\n+    (0x12C2, 'V'),\n+    (0x12C6, 'X'),\n+    (0x12C8, 'V'),\n+    (0x12D7, 'X'),\n+    (0x12D8, 'V'),\n+    (0x1311, 'X'),\n+    (0x1312, 'V'),\n+    (0x1316, 'X'),\n+    (0x1318, 'V'),\n+    (0x135B, 'X'),\n+    (0x135D, 'V'),\n+    (0x137D, 'X'),\n+    (0x1380, 'V'),\n+    (0x139A, 'X'),\n+    (0x13A0, 'V'),\n+    (0x13F5, 'X'),\n+    (0x1400, 'V'),\n+    (0x1680, 'X'),\n+    (0x1681, 'V'),\n+    (0x169D, 'X'),\n+    (0x16A0, 'V'),\n+    (0x16F1, 'X'),\n+    (0x1700, 'V'),\n+    (0x170D, 'X'),\n+    (0x170E, 'V'),\n+    (0x1715, 'X'),\n+    (0x1720, 'V'),\n+    (0x1737, 'X'),\n+    (0x1740, 'V'),\n+    (0x1754, 'X'),\n+    (0x1760, 'V'),\n+    (0x176D, 'X'),\n+    (0x176E, 'V'),\n+    (0x1771, 'X'),\n+    (0x1772, 'V'),\n+    (0x1774, 'X'),\n+    (0x1780, 'V'),\n+    (0x17B4, 'X'),\n+    (0x17B6, 'V'),\n+    (0x17DE, 'X'),\n+    (0x17E0, 'V'),\n+    (0x17EA, 'X'),\n+    (0x17F0, 'V'),\n+    (0x17FA, 'X'),\n+    (0x1800, 'V'),\n+    (0x1806, 'X'),\n+    (0x1807, 'V'),\n+    (0x180B, 'I'),\n+    (0x180E, 'X'),\n+    (0x1810, 'V'),\n+    (0x181A, 'X'),\n+    (0x1820, 'V'),\n+    (0x1878, 'X'),\n+    (0x1880, 'V'),\n+    (0x18AB, 'X'),\n+    (0x18B0, 'V'),\n+    (0x18F6, 'X'),\n+    (0x1900, 'V'),\n+    (0x191D, 'X'),\n+    (0x1920, 'V'),\n+    (0x192C, 'X'),\n+    (0x1930, 'V'),\n+    (0x193C, 'X'),\n+    (0x1940, 'V'),\n+    (0x1941, 'X'),\n+    (0x1944, 'V'),\n+    (0x196E, 'X'),\n+    (0x1970, 'V'),\n+    (0x1975, 'X'),\n+    (0x1980, 'V'),\n+    (0x19AC, 'X'),\n+    (0x19B0, 'V'),\n+    (0x19CA, 'X'),\n+    (0x19D0, 'V'),\n+    (0x19DB, 'X'),\n+    (0x19DE, 'V'),\n+    (0x1A1C, 'X'),\n+    (0x1A1E, 'V'),\n+    (0x1A5F, 'X'),\n+    (0x1A60, 'V'),\n+    (0x1A7D, 'X'),\n+    (0x1A7F, 'V'),\n+    (0x1A8A, 'X'),\n+    (0x1A90, 'V'),\n+    (0x1A9A, 'X'),\n+    (0x1AA0, 'V'),\n+    (0x1AAE, 'X'),\n+    (0x1B00, 'V'),\n+    (0x1B4C, 'X'),\n+    (0x1B50, 'V'),\n+    (0x1B7D, 'X'),\n+    (0x1B80, 'V'),\n+    (0x1BF4, 'X'),\n+    (0x1BFC, 'V'),\n+    (0x1C38, 'X'),\n+    (0x1C3B, 'V'),\n+    (0x1C4A, 'X'),\n+    (0x1C4D, 'V'),\n+    (0x1C80, 'X'),\n+    (0x1CC0, 'V'),\n+    (0x1CC8, 'X'),\n+    (0x1CD0, 'V'),\n+    (0x1CF7, 'X'),\n+    (0x1D00, 'V'),\n+    (0x1D2C, 'M', u'a'),\n+    (0x1D2D, 'M', u'æ'),\n+    (0x1D2E, 'M', u'b'),\n+    (0x1D2F, 'V'),\n+    (0x1D30, 'M', u'd'),\n+    (0x1D31, 'M', u'e'),\n+    (0x1D32, 'M', u'ǝ'),\n+    (0x1D33, 'M', u'g'),\n+    (0x1D34, 'M', u'h'),\n+    (0x1D35, 'M', u'i'),\n+    (0x1D36, 'M', u'j'),\n+    (0x1D37, 'M', u'k'),\n+    (0x1D38, 'M', u'l'),\n+    (0x1D39, 'M', u'm'),\n+    (0x1D3A, 'M', u'n'),\n+    (0x1D3B, 'V'),\n+    (0x1D3C, 'M', u'o'),\n+    (0x1D3D, 'M', u'ȣ'),\n+    (0x1D3E, 'M', u'p'),\n+    (0x1D3F, 'M', u'r'),\n+    (0x1D40, 'M', u't'),\n+    (0x1D41, 'M', u'u'),\n+    (0x1D42, 'M', u'w'),\n+    (0x1D43, 'M', u'a'),\n+    (0x1D44, 'M', u'ɐ'),\n+    (0x1D45, 'M', u'ɑ'),\n+    (0x1D46, 'M', u'ᴂ'),\n+    (0x1D47, 'M', u'b'),\n+    (0x1D48, 'M', u'd'),\n+    (0x1D49, 'M', u'e'),\n+    (0x1D4A, 'M', u'ə'),\n+    (0x1D4B, 'M', u'ɛ'),\n+    (0x1D4C, 'M', u'ɜ'),\n+    (0x1D4D, 'M', u'g'),\n+    (0x1D4E, 'V'),\n+    (0x1D4F, 'M', u'k'),\n+    (0x1D50, 'M', u'm'),\n+    (0x1D51, 'M', u'ŋ'),\n+    (0x1D52, 'M', u'o'),\n+    (0x1D53, 'M', u'ɔ'),\n+    (0x1D54, 'M', u'ᴖ'),\n+    (0x1D55, 'M', u'ᴗ'),\n+    (0x1D56, 'M', u'p'),\n+    (0x1D57, 'M', u't'),\n+    (0x1D58, 'M', u'u'),\n+    (0x1D59, 'M', u'ᴝ'),\n+    (0x1D5A, 'M', u'ɯ'),\n+    (0x1D5B, 'M', u'v'),\n+    (0x1D5C, 'M', u'ᴥ'),\n+    (0x1D5D, 'M', u'β'),\n+    (0x1D5E, 'M', u'γ'),\n+    (0x1D5F, 'M', u'δ'),\n+    (0x1D60, 'M', u'φ'),\n+    (0x1D61, 'M', u'χ'),\n+    (0x1D62, 'M', u'i'),\n+    (0x1D63, 'M', u'r'),\n+    (0x1D64, 'M', u'u'),\n+    (0x1D65, 'M', u'v'),\n+    (0x1D66, 'M', u'β'),\n+    (0x1D67, 'M', u'γ'),\n+    (0x1D68, 'M', u'ρ'),\n+    (0x1D69, 'M', u'φ'),\n+    (0x1D6A, 'M', u'χ'),\n+    (0x1D6B, 'V'),\n+    (0x1D78, 'M', u'н'),\n+    (0x1D79, 'V'),\n+    (0x1D9B, 'M', u'ɒ'),\n+    (0x1D9C, 'M', u'c'),\n+    (0x1D9D, 'M', u'ɕ'),\n+    (0x1D9E, 'M', u'ð'),\n+    (0x1D9F, 'M', u'ɜ'),\n+    (0x1DA0, 'M', u'f'),\n+    (0x1DA1, 'M', u'ɟ'),\n+    (0x1DA2, 'M', u'ɡ'),\n+    (0x1DA3, 'M', u'ɥ'),\n+    (0x1DA4, 'M', u'ɨ'),\n+    (0x1DA5, 'M', u'ɩ'),\n+    (0x1DA6, 'M', u'ɪ'),\n+    (0x1DA7, 'M', u'ᵻ'),\n+    (0x1DA8, 'M', u'ʝ'),\n+    (0x1DA9, 'M', u'ɭ'),\n+    (0x1DAA, 'M', u'ᶅ'),\n+    (0x1DAB, 'M', u'ʟ'),\n+    (0x1DAC, 'M', u'ɱ'),\n+    (0x1DAD, 'M', u'ɰ'),\n+    (0x1DAE, 'M', u'ɲ'),\n+    (0x1DAF, 'M', u'ɳ'),\n+    (0x1DB0, 'M', u'ɴ'),\n+    (0x1DB1, 'M', u'ɵ'),\n+    (0x1DB2, 'M', u'ɸ'),\n+    (0x1DB3, 'M', u'ʂ'),\n+    (0x1DB4, 'M', u'ʃ'),\n+    (0x1DB5, 'M', u'ƫ'),\n+    (0x1DB6, 'M', u'ʉ'),\n+    (0x1DB7, 'M', u'ʊ'),\n+    (0x1DB8, 'M', u'ᴜ'),\n+    (0x1DB9, 'M', u'ʋ'),\n+    (0x1DBA, 'M', u'ʌ'),\n+    (0x1DBB, 'M', u'z'),\n+    (0x1DBC, 'M', u'ʐ'),\n+    (0x1DBD, 'M', u'ʑ'),\n+    (0x1DBE, 'M', u'ʒ'),\n+    (0x1DBF, 'M', u'θ'),\n+    (0x1DC0, 'V'),\n+    (0x1DE7, 'X'),\n+    (0x1DFC, 'V'),\n+    (0x1E00, 'M', u'ḁ'),\n+    (0x1E01, 'V'),\n+    (0x1E02, 'M', u'ḃ'),\n+    (0x1E03, 'V'),\n+    (0x1E04, 'M', u'ḅ'),\n+    (0x1E05, 'V'),\n+    (0x1E06, 'M', u'ḇ'),\n+    (0x1E07, 'V'),\n+    (0x1E08, 'M', u'ḉ'),\n+    (0x1E09, 'V'),\n+    (0x1E0A, 'M', u'ḋ'),\n+    (0x1E0B, 'V'),\n+    (0x1E0C, 'M', u'ḍ'),\n+    (0x1E0D, 'V'),\n+    (0x1E0E, 'M', u'ḏ'),\n+    (0x1E0F, 'V'),\n+    (0x1E10, 'M', u'ḑ'),\n+    (0x1E11, 'V'),\n+    (0x1E12, 'M', u'ḓ'),\n+    (0x1E13, 'V'),\n+    (0x1E14, 'M', u'ḕ'),\n+    (0x1E15, 'V'),\n+    (0x1E16, 'M', u'ḗ'),\n+    (0x1E17, 'V'),\n+    (0x1E18, 'M', u'ḙ'),\n+    (0x1E19, 'V'),\n+    (0x1E1A, 'M', u'ḛ'),\n+    (0x1E1B, 'V'),\n+    (0x1E1C, 'M', u'ḝ'),\n+    (0x1E1D, 'V'),\n+    (0x1E1E, 'M', u'ḟ'),\n+    (0x1E1F, 'V'),\n+    (0x1E20, 'M', u'ḡ'),\n+    (0x1E21, 'V'),\n+    (0x1E22, 'M', u'ḣ'),\n+    (0x1E23, 'V'),\n+    (0x1E24, 'M', u'ḥ'),\n+    (0x1E25, 'V'),\n+    (0x1E26, 'M', u'ḧ'),\n+    (0x1E27, 'V'),\n+    (0x1E28, 'M', u'ḩ'),\n+    (0x1E29, 'V'),\n+    (0x1E2A, 'M', u'ḫ'),\n+    (0x1E2B, 'V'),\n+    (0x1E2C, 'M', u'ḭ'),\n+    (0x1E2D, 'V'),\n+    (0x1E2E, 'M', u'ḯ'),\n+    (0x1E2F, 'V'),\n+    (0x1E30, 'M', u'ḱ'),\n+    (0x1E31, 'V'),\n+    (0x1E32, 'M', u'ḳ'),\n+    (0x1E33, 'V'),\n+    (0x1E34, 'M', u'ḵ'),\n+    (0x1E35, 'V'),\n+    (0x1E36, 'M', u'ḷ'),\n+    (0x1E37, 'V'),\n+    (0x1E38, 'M', u'ḹ'),\n+    (0x1E39, 'V'),\n+    (0x1E3A, 'M', u'ḻ'),\n+    (0x1E3B, 'V'),\n+    (0x1E3C, 'M', u'ḽ'),\n+    (0x1E3D, 'V'),\n+    (0x1E3E, 'M', u'ḿ'),\n+    (0x1E3F, 'V'),\n+    (0x1E40, 'M', u'ṁ'),\n+    (0x1E41, 'V'),\n+    (0x1E42, 'M', u'ṃ'),\n+    (0x1E43, 'V'),\n+    (0x1E44, 'M', u'ṅ'),\n+    (0x1E45, 'V'),\n+    (0x1E46, 'M', u'ṇ'),\n+    (0x1E47, 'V'),\n+    (0x1E48, 'M', u'ṉ'),\n+    (0x1E49, 'V'),\n+    (0x1E4A, 'M', u'ṋ'),\n+    (0x1E4B, 'V'),\n+    (0x1E4C, 'M', u'ṍ'),\n+    (0x1E4D, 'V'),\n+    (0x1E4E, 'M', u'ṏ'),\n+    (0x1E4F, 'V'),\n+    (0x1E50, 'M', u'ṑ'),\n+    (0x1E51, 'V'),\n+    (0x1E52, 'M', u'ṓ'),\n+    (0x1E53, 'V'),\n+    (0x1E54, 'M', u'ṕ'),\n+    (0x1E55, 'V'),\n+    (0x1E56, 'M', u'ṗ'),\n+    (0x1E57, 'V'),\n+    (0x1E58, 'M', u'ṙ'),\n+    (0x1E59, 'V'),\n+    (0x1E5A, 'M', u'ṛ'),\n+    (0x1E5B, 'V'),\n+    (0x1E5C, 'M', u'ṝ'),\n+    (0x1E5D, 'V'),\n+    (0x1E5E, 'M', u'ṟ'),\n+    (0x1E5F, 'V'),\n+    (0x1E60, 'M', u'ṡ'),\n+    (0x1E61, 'V'),\n+    (0x1E62, 'M', u'ṣ'),\n+    (0x1E63, 'V'),\n+    (0x1E64, 'M', u'ṥ'),\n+    (0x1E65, 'V'),\n+    (0x1E66, 'M', u'ṧ'),\n+    (0x1E67, 'V'),\n+    (0x1E68, 'M', u'ṩ'),\n+    (0x1E69, 'V'),\n+    (0x1E6A, 'M', u'ṫ'),\n+    (0x1E6B, 'V'),\n+    (0x1E6C, 'M', u'ṭ'),\n+    (0x1E6D, 'V'),\n+    (0x1E6E, 'M', u'ṯ'),\n+    (0x1E6F, 'V'),\n+    (0x1E70, 'M', u'ṱ'),\n+    (0x1E71, 'V'),\n+    (0x1E72, 'M', u'ṳ'),\n+    (0x1E73, 'V'),\n+    (0x1E74, 'M', u'ṵ'),\n+    (0x1E75, 'V'),\n+    (0x1E76, 'M', u'ṷ'),\n+    (0x1E77, 'V'),\n+    (0x1E78, 'M', u'ṹ'),\n+    (0x1E79, 'V'),\n+    (0x1E7A, 'M', u'ṻ'),\n+    (0x1E7B, 'V'),\n+    (0x1E7C, 'M', u'ṽ'),\n+    (0x1E7D, 'V'),\n+    (0x1E7E, 'M', u'ṿ'),\n+    (0x1E7F, 'V'),\n+    (0x1E80, 'M', u'ẁ'),\n+    (0x1E81, 'V'),\n+    (0x1E82, 'M', u'ẃ'),\n+    (0x1E83, 'V'),\n+    (0x1E84, 'M', u'ẅ'),\n+    (0x1E85, 'V'),\n+    (0x1E86, 'M', u'ẇ'),\n+    (0x1E87, 'V'),\n+    (0x1E88, 'M', u'ẉ'),\n+    (0x1E89, 'V'),\n+    (0x1E8A, 'M', u'ẋ'),\n+    (0x1E8B, 'V'),\n+    (0x1E8C, 'M', u'ẍ'),\n+    (0x1E8D, 'V'),\n+    (0x1E8E, 'M', u'ẏ'),\n+    (0x1E8F, 'V'),\n+    (0x1E90, 'M', u'ẑ'),\n+    (0x1E91, 'V'),\n+    (0x1E92, 'M', u'ẓ'),\n+    (0x1E93, 'V'),\n+    (0x1E94, 'M', u'ẕ'),\n+    (0x1E95, 'V'),\n+    (0x1E9A, 'M', u'aʾ'),\n+    (0x1E9B, 'M', u'ṡ'),\n+    (0x1E9C, 'V'),\n+    (0x1E9E, 'M', u'ss'),\n+    (0x1E9F, 'V'),\n+    (0x1EA0, 'M', u'ạ'),\n+    (0x1EA1, 'V'),\n+    (0x1EA2, 'M', u'ả'),\n+    (0x1EA3, 'V'),\n+    (0x1EA4, 'M', u'ấ'),\n+    (0x1EA5, 'V'),\n+    (0x1EA6, 'M', u'ầ'),\n+    (0x1EA7, 'V'),\n+    (0x1EA8, 'M', u'ẩ'),\n+    (0x1EA9, 'V'),\n+    (0x1EAA, 'M', u'ẫ'),\n+    (0x1EAB, 'V'),\n+    (0x1EAC, 'M', u'ậ'),\n+    (0x1EAD, 'V'),\n+    (0x1EAE, 'M', u'ắ'),\n+    (0x1EAF, 'V'),\n+    (0x1EB0, 'M', u'ằ'),\n+    (0x1EB1, 'V'),\n+    (0x1EB2, 'M', u'ẳ'),\n+    (0x1EB3, 'V'),\n+    (0x1EB4, 'M', u'ẵ'),\n+    (0x1EB5, 'V'),\n+    (0x1EB6, 'M', u'ặ'),\n+    (0x1EB7, 'V'),\n+    (0x1EB8, 'M', u'ẹ'),\n+    (0x1EB9, 'V'),\n+    (0x1EBA, 'M', u'ẻ'),\n+    (0x1EBB, 'V'),\n+    (0x1EBC, 'M', u'ẽ'),\n+    (0x1EBD, 'V'),\n+    (0x1EBE, 'M', u'ế'),\n+    (0x1EBF, 'V'),\n+    (0x1EC0, 'M', u'ề'),\n+    (0x1EC1, 'V'),\n+    (0x1EC2, 'M', u'ể'),\n+    (0x1EC3, 'V'),\n+    (0x1EC4, 'M', u'ễ'),\n+    (0x1EC5, 'V'),\n+    (0x1EC6, 'M', u'ệ'),\n+    (0x1EC7, 'V'),\n+    (0x1EC8, 'M', u'ỉ'),\n+    (0x1EC9, 'V'),\n+    (0x1ECA, 'M', u'ị'),\n+    (0x1ECB, 'V'),\n+    (0x1ECC, 'M', u'ọ'),\n+    (0x1ECD, 'V'),\n+    (0x1ECE, 'M', u'ỏ'),\n+    (0x1ECF, 'V'),\n+    (0x1ED0, 'M', u'ố'),\n+    (0x1ED1, 'V'),\n+    (0x1ED2, 'M', u'ồ'),\n+    (0x1ED3, 'V'),\n+    (0x1ED4, 'M', u'ổ'),\n+    (0x1ED5, 'V'),\n+    (0x1ED6, 'M', u'ỗ'),\n+    (0x1ED7, 'V'),\n+    (0x1ED8, 'M', u'ộ'),\n+    (0x1ED9, 'V'),\n+    (0x1EDA, 'M', u'ớ'),\n+    (0x1EDB, 'V'),\n+    (0x1EDC, 'M', u'ờ'),\n+    (0x1EDD, 'V'),\n+    (0x1EDE, 'M', u'ở'),\n+    (0x1EDF, 'V'),\n+    (0x1EE0, 'M', u'ỡ'),\n+    (0x1EE1, 'V'),\n+    (0x1EE2, 'M', u'ợ'),\n+    (0x1EE3, 'V'),\n+    (0x1EE4, 'M', u'ụ'),\n+    (0x1EE5, 'V'),\n+    (0x1EE6, 'M', u'ủ'),\n+    (0x1EE7, 'V'),\n+    (0x1EE8, 'M', u'ứ'),\n+    (0x1EE9, 'V'),\n+    (0x1EEA, 'M', u'ừ'),\n+    (0x1EEB, 'V'),\n+    (0x1EEC, 'M', u'ử'),\n+    (0x1EED, 'V'),\n+    (0x1EEE, 'M', u'ữ'),\n+    (0x1EEF, 'V'),\n+    (0x1EF0, 'M', u'ự'),\n+    (0x1EF1, 'V'),\n+    (0x1EF2, 'M', u'ỳ'),\n+    (0x1EF3, 'V'),\n+    (0x1EF4, 'M', u'ỵ'),\n+    (0x1EF5, 'V'),\n+    (0x1EF6, 'M', u'ỷ'),\n+    (0x1EF7, 'V'),\n+    (0x1EF8, 'M', u'ỹ'),\n+    (0x1EF9, 'V'),\n+    (0x1EFA, 'M', u'ỻ'),\n+    (0x1EFB, 'V'),\n+    (0x1EFC, 'M', u'ỽ'),\n+    (0x1EFD, 'V'),\n+    (0x1EFE, 'M', u'ỿ'),\n+    (0x1EFF, 'V'),\n+    (0x1F08, 'M', u'ἀ'),\n+    (0x1F09, 'M', u'ἁ'),\n+    (0x1F0A, 'M', u'ἂ'),\n+    (0x1F0B, 'M', u'ἃ'),\n+    (0x1F0C, 'M', u'ἄ'),\n+    (0x1F0D, 'M', u'ἅ'),\n+    (0x1F0E, 'M', u'ἆ'),\n+    (0x1F0F, 'M', u'ἇ'),\n+    (0x1F10, 'V'),\n+    (0x1F16, 'X'),\n+    (0x1F18, 'M', u'ἐ'),\n+    (0x1F19, 'M', u'ἑ'),\n+    (0x1F1A, 'M', u'ἒ'),\n+    (0x1F1B, 'M', u'ἓ'),\n+    (0x1F1C, 'M', u'ἔ'),\n+    (0x1F1D, 'M', u'ἕ'),\n+    (0x1F1E, 'X'),\n+    (0x1F20, 'V'),\n+    (0x1F28, 'M', u'ἠ'),\n+    (0x1F29, 'M', u'ἡ'),\n+    (0x1F2A, 'M', u'ἢ'),\n+    (0x1F2B, 'M', u'ἣ'),\n+    (0x1F2C, 'M', u'ἤ'),\n+    (0x1F2D, 'M', u'ἥ'),\n+    (0x1F2E, 'M', u'ἦ'),\n+    (0x1F2F, 'M', u'ἧ'),\n+    (0x1F30, 'V'),\n+    (0x1F38, 'M', u'ἰ'),\n+    (0x1F39, 'M', u'ἱ'),\n+    (0x1F3A, 'M', u'ἲ'),\n+    (0x1F3B, 'M', u'ἳ'),\n+    (0x1F3C, 'M', u'ἴ'),\n+    (0x1F3D, 'M', u'ἵ'),\n+    (0x1F3E, 'M', u'ἶ'),\n+    (0x1F3F, 'M', u'ἷ'),\n+    (0x1F40, 'V'),\n+    (0x1F46, 'X'),\n+    (0x1F48, 'M', u'ὀ'),\n+    (0x1F49, 'M', u'ὁ'),\n+    (0x1F4A, 'M', u'ὂ'),\n+    (0x1F4B, 'M', u'ὃ'),\n+    (0x1F4C, 'M', u'ὄ'),\n+    (0x1F4D, 'M', u'ὅ'),\n+    (0x1F4E, 'X'),\n+    (0x1F50, 'V'),\n+    (0x1F58, 'X'),\n+    (0x1F59, 'M', u'ὑ'),\n+    (0x1F5A, 'X'),\n+    (0x1F5B, 'M', u'ὓ'),\n+    (0x1F5C, 'X'),\n+    (0x1F5D, 'M', u'ὕ'),\n+    (0x1F5E, 'X'),\n+    (0x1F5F, 'M', u'ὗ'),\n+    (0x1F60, 'V'),\n+    (0x1F68, 'M', u'ὠ'),\n+    (0x1F69, 'M', u'ὡ'),\n+    (0x1F6A, 'M', u'ὢ'),\n+    (0x1F6B, 'M', u'ὣ'),\n+    (0x1F6C, 'M', u'ὤ'),\n+    (0x1F6D, 'M', u'ὥ'),\n+    (0x1F6E, 'M', u'ὦ'),\n+    (0x1F6F, 'M', u'ὧ'),\n+    (0x1F70, 'V'),\n+    (0x1F71, 'M', u'ά'),\n+    (0x1F72, 'V'),\n+    (0x1F73, 'M', u'έ'),\n+    (0x1F74, 'V'),\n+    (0x1F75, 'M', u'ή'),\n+    (0x1F76, 'V'),\n+    (0x1F77, 'M', u'ί'),\n+    (0x1F78, 'V'),\n+    (0x1F79, 'M', u'ό'),\n+    (0x1F7A, 'V'),\n+    (0x1F7B, 'M', u'ύ'),\n+    (0x1F7C, 'V'),\n+    (0x1F7D, 'M', u'ώ'),\n+    (0x1F7E, 'X'),\n+    (0x1F80, 'M', u'ἀι'),\n+    (0x1F81, 'M', u'ἁι'),\n+    (0x1F82, 'M', u'ἂι'),\n+    (0x1F83, 'M', u'ἃι'),\n+    (0x1F84, 'M', u'ἄι'),\n+    (0x1F85, 'M', u'ἅι'),\n+    (0x1F86, 'M', u'ἆι'),\n+    (0x1F87, 'M', u'ἇι'),\n+    (0x1F88, 'M', u'ἀι'),\n+    (0x1F89, 'M', u'ἁι'),\n+    (0x1F8A, 'M', u'ἂι'),\n+    (0x1F8B, 'M', u'ἃι'),\n+    (0x1F8C, 'M', u'ἄι'),\n+    (0x1F8D, 'M', u'ἅι'),\n+    (0x1F8E, 'M', u'ἆι'),\n+    (0x1F8F, 'M', u'ἇι'),\n+    (0x1F90, 'M', u'ἠι'),\n+    (0x1F91, 'M', u'ἡι'),\n+    (0x1F92, 'M', u'ἢι'),\n+    (0x1F93, 'M', u'ἣι'),\n+    (0x1F94, 'M', u'ἤι'),\n+    (0x1F95, 'M', u'ἥι'),\n+    (0x1F96, 'M', u'ἦι'),\n+    (0x1F97, 'M', u'ἧι'),\n+    (0x1F98, 'M', u'ἠι'),\n+    (0x1F99, 'M', u'ἡι'),\n+    (0x1F9A, 'M', u'ἢι'),\n+    (0x1F9B, 'M', u'ἣι'),\n+    (0x1F9C, 'M', u'ἤι'),\n+    (0x1F9D, 'M', u'ἥι'),\n+    (0x1F9E, 'M', u'ἦι'),\n+    (0x1F9F, 'M', u'ἧι'),\n+    (0x1FA0, 'M', u'ὠι'),\n+    (0x1FA1, 'M', u'ὡι'),\n+    (0x1FA2, 'M', u'ὢι'),\n+    (0x1FA3, 'M', u'ὣι'),\n+    (0x1FA4, 'M', u'ὤι'),\n+    (0x1FA5, 'M', u'ὥι'),\n+    (0x1FA6, 'M', u'ὦι'),\n+    (0x1FA7, 'M', u'ὧι'),\n+    (0x1FA8, 'M', u'ὠι'),\n+    (0x1FA9, 'M', u'ὡι'),\n+    (0x1FAA, 'M', u'ὢι'),\n+    (0x1FAB, 'M', u'ὣι'),\n+    (0x1FAC, 'M', u'ὤι'),\n+    (0x1FAD, 'M', u'ὥι'),\n+    (0x1FAE, 'M', u'ὦι'),\n+    (0x1FAF, 'M', u'ὧι'),\n+    (0x1FB0, 'V'),\n+    (0x1FB2, 'M', u'ὰι'),\n+    (0x1FB3, 'M', u'αι'),\n+    (0x1FB4, 'M', u'άι'),\n+    (0x1FB5, 'X'),\n+    (0x1FB6, 'V'),\n+    (0x1FB7, 'M', u'ᾶι'),\n+    (0x1FB8, 'M', u'ᾰ'),\n+    (0x1FB9, 'M', u'ᾱ'),\n+    (0x1FBA, 'M', u'ὰ'),\n+    (0x1FBB, 'M', u'ά'),\n+    (0x1FBC, 'M', u'αι'),\n+    (0x1FBD, '3', u' ̓'),\n+    (0x1FBE, 'M', u'ι'),\n+    (0x1FBF, '3', u' ̓'),\n+    (0x1FC0, '3', u' ͂'),\n+    (0x1FC1, '3', u' ̈͂'),\n+    (0x1FC2, 'M', u'ὴι'),\n+    (0x1FC3, 'M', u'ηι'),\n+    (0x1FC4, 'M', u'ήι'),\n+    (0x1FC5, 'X'),\n+    (0x1FC6, 'V'),\n+    (0x1FC7, 'M', u'ῆι'),\n+    (0x1FC8, 'M', u'ὲ'),\n+    (0x1FC9, 'M', u'έ'),\n+    (0x1FCA, 'M', u'ὴ'),\n+    (0x1FCB, 'M', u'ή'),\n+    (0x1FCC, 'M', u'ηι'),\n+    (0x1FCD, '3', u' ̓̀'),\n+    (0x1FCE, '3', u' ̓́'),\n+    (0x1FCF, '3', u' ̓͂'),\n+    (0x1FD0, 'V'),\n+    (0x1FD3, 'M', u'ΐ'),\n+    (0x1FD4, 'X'),\n+    (0x1FD6, 'V'),\n+    (0x1FD8, 'M', u'ῐ'),\n+    (0x1FD9, 'M', u'ῑ'),\n+    (0x1FDA, 'M', u'ὶ'),\n+    (0x1FDB, 'M', u'ί'),\n+    (0x1FDC, 'X'),\n+    (0x1FDD, '3', u' ̔̀'),\n+    (0x1FDE, '3', u' ̔́'),\n+    (0x1FDF, '3', u' ̔͂'),\n+    (0x1FE0, 'V'),\n+    (0x1FE3, 'M', u'ΰ'),\n+    (0x1FE4, 'V'),\n+    (0x1FE8, 'M', u'ῠ'),\n+    (0x1FE9, 'M', u'ῡ'),\n+    (0x1FEA, 'M', u'ὺ'),\n+    (0x1FEB, 'M', u'ύ'),\n+    (0x1FEC, 'M', u'ῥ'),\n+    (0x1FED, '3', u' ̈̀'),\n+    (0x1FEE, '3', u' ̈́'),\n+    (0x1FEF, '3', u'`'),\n+    (0x1FF0, 'X'),\n+    (0x1FF2, 'M', u'ὼι'),\n+    (0x1FF3, 'M', u'ωι'),\n+    (0x1FF4, 'M', u'ώι'),\n+    (0x1FF5, 'X'),\n+    (0x1FF6, 'V'),\n+    (0x1FF7, 'M', u'ῶι'),\n+    (0x1FF8, 'M', u'ὸ'),\n+    (0x1FF9, 'M', u'ό'),\n+    (0x1FFA, 'M', u'ὼ'),\n+    (0x1FFB, 'M', u'ώ'),\n+    (0x1FFC, 'M', u'ωι'),\n+    (0x1FFD, '3', u' ́'),\n+    (0x1FFE, '3', u' ̔'),\n+    (0x1FFF, 'X'),\n+    (0x2000, '3', u' '),\n+    (0x200B, 'I'),\n+    (0x200C, 'D', u''),\n+    (0x200E, 'X'),\n+    (0x2010, 'V'),\n+    (0x2011, 'M', u'‐'),\n+    (0x2012, 'V'),\n+    (0x2017, '3', u' ̳'),\n+    (0x2018, 'V'),\n+    (0x2024, 'X'),\n+    (0x2027, 'V'),\n+    (0x2028, 'X'),\n+    (0x202F, '3', u' '),\n+    (0x2030, 'V'),\n+    (0x2033, 'M', u'′′'),\n+    (0x2034, 'M', u'′′′'),\n+    (0x2035, 'V'),\n+    (0x2036, 'M', u'‵‵'),\n+    (0x2037, 'M', u'‵‵‵'),\n+    (0x2038, 'V'),\n+    (0x203C, '3', u'!!'),\n+    (0x203D, 'V'),\n+    (0x203E, '3', u' ̅'),\n+    (0x203F, 'V'),\n+    (0x2047, '3', u'??'),\n+    (0x2048, '3', u'?!'),\n+    (0x2049, '3', u'!?'),\n+    (0x204A, 'V'),\n+    (0x2057, 'M', u'′′′′'),\n+    (0x2058, 'V'),\n+    (0x205F, '3', u' '),\n+    (0x2060, 'I'),\n+    (0x2061, 'X'),\n+    (0x2064, 'I'),\n+    (0x2065, 'X'),\n+    (0x2070, 'M', u'0'),\n+    (0x2071, 'M', u'i'),\n+    (0x2072, 'X'),\n+    (0x2074, 'M', u'4'),\n+    (0x2075, 'M', u'5'),\n+    (0x2076, 'M', u'6'),\n+    (0x2077, 'M', u'7'),\n+    (0x2078, 'M', u'8'),\n+    (0x2079, 'M', u'9'),\n+    (0x207A, '3', u'+'),\n+    (0x207B, 'M', u'−'),\n+    (0x207C, '3', u'='),\n+    (0x207D, '3', u'('),\n+    (0x207E, '3', u')'),\n+    (0x207F, 'M', u'n'),\n+    (0x2080, 'M', u'0'),\n+    (0x2081, 'M', u'1'),\n+    (0x2082, 'M', u'2'),\n+    (0x2083, 'M', u'3'),\n+    (0x2084, 'M', u'4'),\n+    (0x2085, 'M', u'5'),\n+    (0x2086, 'M', u'6'),\n+    (0x2087, 'M', u'7'),\n+    (0x2088, 'M', u'8'),\n+    (0x2089, 'M', u'9'),\n+    (0x208A, '3', u'+'),\n+    (0x208B, 'M', u'−'),\n+    (0x208C, '3', u'='),\n+    (0x208D, '3', u'('),\n+    (0x208E, '3', u')'),\n+    (0x208F, 'X'),\n+    (0x2090, 'M', u'a'),\n+    (0x2091, 'M', u'e'),\n+    (0x2092, 'M', u'o'),\n+    (0x2093, 'M', u'x'),\n+    (0x2094, 'M', u'ə'),\n+    (0x2095, 'M', u'h'),\n+    (0x2096, 'M', u'k'),\n+    (0x2097, 'M', u'l'),\n+    (0x2098, 'M', u'm'),\n+    (0x2099, 'M', u'n'),\n+    (0x209A, 'M', u'p'),\n+    (0x209B, 'M', u's'),\n+    (0x209C, 'M', u't'),\n+    (0x209D, 'X'),\n+    (0x20A0, 'V'),\n+    (0x20A8, 'M', u'rs'),\n+    (0x20A9, 'V'),\n+    (0x20BB, 'X'),\n+    (0x20D0, 'V'),\n+    (0x20F1, 'X'),\n+    (0x2100, '3', u'a/c'),\n+    (0x2101, '3', u'a/s'),\n+    (0x2102, 'M', u'c'),\n+    (0x2103, 'M', u'°c'),\n+    (0x2104, 'V'),\n+    (0x2105, '3', u'c/o'),\n+    (0x2106, '3', u'c/u'),\n+    (0x2107, 'M', u'ɛ'),\n+    (0x2108, 'V'),\n+    (0x2109, 'M', u'°f'),\n+    (0x210A, 'M', u'g'),\n+    (0x210B, 'M', u'h'),\n+    (0x210F, 'M', u'ħ'),\n+    (0x2110, 'M', u'i'),\n+    (0x2112, 'M', u'l'),\n+    (0x2114, 'V'),\n+    (0x2115, 'M', u'n'),\n+    (0x2116, 'M', u'no'),\n+    (0x2117, 'V'),\n+    (0x2119, 'M', u'p'),\n+    (0x211A, 'M', u'q'),\n+    (0x211B, 'M', u'r'),\n+    (0x211E, 'V'),\n+    (0x2120, 'M', u'sm'),\n+    (0x2121, 'M', u'tel'),\n+    (0x2122, 'M', u'tm'),\n+    (0x2123, 'V'),\n+    (0x2124, 'M', u'z'),\n+    (0x2125, 'V'),\n+    (0x2126, 'M', u'ω'),\n+    (0x2127, 'V'),\n+    (0x2128, 'M', u'z'),\n+    (0x2129, 'V'),\n+    (0x212A, 'M', u'k'),\n+    (0x212B, 'M', u'å'),\n+    (0x212C, 'M', u'b'),\n+    (0x212D, 'M', u'c'),\n+    (0x212E, 'V'),\n+    (0x212F, 'M', u'e'),\n+    (0x2131, 'M', u'f'),\n+    (0x2132, 'X'),\n+    (0x2133, 'M', u'm'),\n+    (0x2134, 'M', u'o'),\n+    (0x2135, 'M', u'א'),\n+    (0x2136, 'M', u'ב'),\n+    (0x2137, 'M', u'ג'),\n+    (0x2138, 'M', u'ד'),\n+    (0x2139, 'M', u'i'),\n+    (0x213A, 'V'),\n+    (0x213B, 'M', u'fax'),\n+    (0x213C, 'M', u'π'),\n+    (0x213D, 'M', u'γ'),\n+    (0x213F, 'M', u'π'),\n+    (0x2140, 'M', u'∑'),\n+    (0x2141, 'V'),\n+    (0x2145, 'M', u'd'),\n+    (0x2147, 'M', u'e'),\n+    (0x2148, 'M', u'i'),\n+    (0x2149, 'M', u'j'),\n+    (0x214A, 'V'),\n+    (0x2150, 'M', u'1⁄7'),\n+    (0x2151, 'M', u'1⁄9'),\n+    (0x2152, 'M', u'1⁄10'),\n+    (0x2153, 'M', u'1⁄3'),\n+    (0x2154, 'M', u'2⁄3'),\n+    (0x2155, 'M', u'1⁄5'),\n+    (0x2156, 'M', u'2⁄5'),\n+    (0x2157, 'M', u'3⁄5'),\n+    (0x2158, 'M', u'4⁄5'),\n+    (0x2159, 'M', u'1⁄6'),\n+    (0x215A, 'M', u'5⁄6'),\n+    (0x215B, 'M', u'1⁄8'),\n+    (0x215C, 'M', u'3⁄8'),\n+    (0x215D, 'M', u'5⁄8'),\n+    (0x215E, 'M', u'7⁄8'),\n+    (0x215F, 'M', u'1⁄'),\n+    (0x2160, 'M', u'i'),\n+    (0x2161, 'M', u'ii'),\n+    (0x2162, 'M', u'iii'),\n+    (0x2163, 'M', u'iv'),\n+    (0x2164, 'M', u'v'),\n+    (0x2165, 'M', u'vi'),\n+    (0x2166, 'M', u'vii'),\n+    (0x2167, 'M', u'viii'),\n+    (0x2168, 'M', u'ix'),\n+    (0x2169, 'M', u'x'),\n+    (0x216A, 'M', u'xi'),\n+    (0x216B, 'M', u'xii'),\n+    (0x216C, 'M', u'l'),\n+    (0x216D, 'M', u'c'),\n+    (0x216E, 'M', u'd'),\n+    (0x216F, 'M', u'm'),\n+    (0x2170, 'M', u'i'),\n+    (0x2171, 'M', u'ii'),\n+    (0x2172, 'M', u'iii'),\n+    (0x2173, 'M', u'iv'),\n+    (0x2174, 'M', u'v'),\n+    (0x2175, 'M', u'vi'),\n+    (0x2176, 'M', u'vii'),\n+    (0x2177, 'M', u'viii'),\n+    (0x2178, 'M', u'ix'),\n+    (0x2179, 'M', u'x'),\n+    (0x217A, 'M', u'xi'),\n+    (0x217B, 'M', u'xii'),\n+    (0x217C, 'M', u'l'),\n+    (0x217D, 'M', u'c'),\n+    (0x217E, 'M', u'd'),\n+    (0x217F, 'M', u'm'),\n+    (0x2180, 'V'),\n+    (0x2183, 'X'),\n+    (0x2184, 'V'),\n+    (0x2189, 'M', u'0⁄3'),\n+    (0x218A, 'X'),\n+    (0x2190, 'V'),\n+    (0x222C, 'M', u'∫∫'),\n+    (0x222D, 'M', u'∫∫∫'),\n+    (0x222E, 'V'),\n+    (0x222F, 'M', u'∮∮'),\n+    (0x2230, 'M', u'∮∮∮'),\n+    (0x2231, 'V'),\n+    (0x2260, '3'),\n+    (0x2261, 'V'),\n+    (0x226E, '3'),\n+    (0x2270, 'V'),\n+    (0x2329, 'M', u'〈'),\n+    (0x232A, 'M', u'〉'),\n+    (0x232B, 'V'),\n+    (0x23F4, 'X'),\n+    (0x2400, 'V'),\n+    (0x2427, 'X'),\n+    (0x2440, 'V'),\n+    (0x244B, 'X'),\n+    (0x2460, 'M', u'1'),\n+    (0x2461, 'M', u'2'),\n+    (0x2462, 'M', u'3'),\n+    (0x2463, 'M', u'4'),\n+    (0x2464, 'M', u'5'),\n+    (0x2465, 'M', u'6'),\n+    (0x2466, 'M', u'7'),\n+    (0x2467, 'M', u'8'),\n+    (0x2468, 'M', u'9'),\n+    (0x2469, 'M', u'10'),\n+    (0x246A, 'M', u'11'),\n+    (0x246B, 'M', u'12'),\n+    (0x246C, 'M', u'13'),\n+    (0x246D, 'M', u'14'),\n+    (0x246E, 'M', u'15'),\n+    (0x246F, 'M', u'16'),\n+    (0x2470, 'M', u'17'),\n+    (0x2471, 'M', u'18'),\n+    (0x2472, 'M', u'19'),\n+    (0x2473, 'M', u'20'),\n+    (0x2474, '3', u'(1)'),\n+    (0x2475, '3', u'(2)'),\n+    (0x2476, '3', u'(3)'),\n+    (0x2477, '3', u'(4)'),\n+    (0x2478, '3', u'(5)'),\n+    (0x2479, '3', u'(6)'),\n+    (0x247A, '3', u'(7)'),\n+    (0x247B, '3', u'(8)'),\n+    (0x247C, '3', u'(9)'),\n+    (0x247D, '3', u'(10)'),\n+    (0x247E, '3', u'(11)'),\n+    (0x247F, '3', u'(12)'),\n+    (0x2480, '3', u'(13)'),\n+    (0x2481, '3', u'(14)'),\n+    (0x2482, '3', u'(15)'),\n+    (0x2483, '3', u'(16)'),\n+    (0x2484, '3', u'(17)'),\n+    (0x2485, '3', u'(18)'),\n+    (0x2486, '3', u'(19)'),\n+    (0x2487, '3', u'(20)'),\n+    (0x2488, 'X'),\n+    (0x249C, '3', u'(a)'),\n+    (0x249D, '3', u'(b)'),\n+    (0x249E, '3', u'(c)'),\n+    (0x249F, '3', u'(d)'),\n+    (0x24A0, '3', u'(e)'),\n+    (0x24A1, '3', u'(f)'),\n+    (0x24A2, '3', u'(g)'),\n+    (0x24A3, '3', u'(h)'),\n+    (0x24A4, '3', u'(i)'),\n+    (0x24A5, '3', u'(j)'),\n+    (0x24A6, '3', u'(k)'),\n+    (0x24A7, '3', u'(l)'),\n+    (0x24A8, '3', u'(m)'),\n+    (0x24A9, '3', u'(n)'),\n+    (0x24AA, '3', u'(o)'),\n+    (0x24AB, '3', u'(p)'),\n+    (0x24AC, '3', u'(q)'),\n+    (0x24AD, '3', u'(r)'),\n+    (0x24AE, '3', u'(s)'),\n+    (0x24AF, '3', u'(t)'),\n+    (0x24B0, '3', u'(u)'),\n+    (0x24B1, '3', u'(v)'),\n+    (0x24B2, '3', u'(w)'),\n+    (0x24B3, '3', u'(x)'),\n+    (0x24B4, '3', u'(y)'),\n+    (0x24B5, '3', u'(z)'),\n+    (0x24B6, 'M', u'a'),\n+    (0x24B7, 'M', u'b'),\n+    (0x24B8, 'M', u'c'),\n+    (0x24B9, 'M', u'd'),\n+    (0x24BA, 'M', u'e'),\n+    (0x24BB, 'M', u'f'),\n+    (0x24BC, 'M', u'g'),\n+    (0x24BD, 'M', u'h'),\n+    (0x24BE, 'M', u'i'),\n+    (0x24BF, 'M', u'j'),\n+    (0x24C0, 'M', u'k'),\n+    (0x24C1, 'M', u'l'),\n+    (0x24C2, 'M', u'm'),\n+    (0x24C3, 'M', u'n'),\n+    (0x24C4, 'M', u'o'),\n+    (0x24C5, 'M', u'p'),\n+    (0x24C6, 'M', u'q'),\n+    (0x24C7, 'M', u'r'),\n+    (0x24C8, 'M', u's'),\n+    (0x24C9, 'M', u't'),\n+    (0x24CA, 'M', u'u'),\n+    (0x24CB, 'M', u'v'),\n+    (0x24CC, 'M', u'w'),\n+    (0x24CD, 'M', u'x'),\n+    (0x24CE, 'M', u'y'),\n+    (0x24CF, 'M', u'z'),\n+    (0x24D0, 'M', u'a'),\n+    (0x24D1, 'M', u'b'),\n+    (0x24D2, 'M', u'c'),\n+    (0x24D3, 'M', u'd'),\n+    (0x24D4, 'M', u'e'),\n+    (0x24D5, 'M', u'f'),\n+    (0x24D6, 'M', u'g'),\n+    (0x24D7, 'M', u'h'),\n+    (0x24D8, 'M', u'i'),\n+    (0x24D9, 'M', u'j'),\n+    (0x24DA, 'M', u'k'),\n+    (0x24DB, 'M', u'l'),\n+    (0x24DC, 'M', u'm'),\n+    (0x24DD, 'M', u'n'),\n+    (0x24DE, 'M', u'o'),\n+    (0x24DF, 'M', u'p'),\n+    (0x24E0, 'M', u'q'),\n+    (0x24E1, 'M', u'r'),\n+    (0x24E2, 'M', u's'),\n+    (0x24E3, 'M', u't'),\n+    (0x24E4, 'M', u'u'),\n+    (0x24E5, 'M', u'v'),\n+    (0x24E6, 'M', u'w'),\n+    (0x24E7, 'M', u'x'),\n+    (0x24E8, 'M', u'y'),\n+    (0x24E9, 'M', u'z'),\n+    (0x24EA, 'M', u'0'),\n+    (0x24EB, 'V'),\n+    (0x2700, 'X'),\n+    (0x2701, 'V'),\n+    (0x2A0C, 'M', u'∫∫∫∫'),\n+    (0x2A0D, 'V'),\n+    (0x2A74, '3', u'::='),\n+    (0x2A75, '3', u'=='),\n+    (0x2A76, '3', u'==='),\n+    (0x2A77, 'V'),\n+    (0x2ADC, 'M', u'⫝̸'),\n+    (0x2ADD, 'V'),\n+    (0x2B4D, 'X'),\n+    (0x2B50, 'V'),\n+    (0x2B5A, 'X'),\n+    (0x2C00, 'M', u'ⰰ'),\n+    (0x2C01, 'M', u'ⰱ'),\n+    (0x2C02, 'M', u'ⰲ'),\n+    (0x2C03, 'M', u'ⰳ'),\n+    (0x2C04, 'M', u'ⰴ'),\n+    (0x2C05, 'M', u'ⰵ'),\n+    (0x2C06, 'M', u'ⰶ'),\n+    (0x2C07, 'M', u'ⰷ'),\n+    (0x2C08, 'M', u'ⰸ'),\n+    (0x2C09, 'M', u'ⰹ'),\n+    (0x2C0A, 'M', u'ⰺ'),\n+    (0x2C0B, 'M', u'ⰻ'),\n+    (0x2C0C, 'M', u'ⰼ'),\n+    (0x2C0D, 'M', u'ⰽ'),\n+    (0x2C0E, 'M', u'ⰾ'),\n+    (0x2C0F, 'M', u'ⰿ'),\n+    (0x2C10, 'M', u'ⱀ'),\n+    (0x2C11, 'M', u'ⱁ'),\n+    (0x2C12, 'M', u'ⱂ'),\n+    (0x2C13, 'M', u'ⱃ'),\n+    (0x2C14, 'M', u'ⱄ'),\n+    (0x2C15, 'M', u'ⱅ'),\n+    (0x2C16, 'M', u'ⱆ'),\n+    (0x2C17, 'M', u'ⱇ'),\n+    (0x2C18, 'M', u'ⱈ'),\n+    (0x2C19, 'M', u'ⱉ'),\n+    (0x2C1A, 'M', u'ⱊ'),\n+    (0x2C1B, 'M', u'ⱋ'),\n+    (0x2C1C, 'M', u'ⱌ'),\n+    (0x2C1D, 'M', u'ⱍ'),\n+    (0x2C1E, 'M', u'ⱎ'),\n+    (0x2C1F, 'M', u'ⱏ'),\n+    (0x2C20, 'M', u'ⱐ'),\n+    (0x2C21, 'M', u'ⱑ'),\n+    (0x2C22, 'M', u'ⱒ'),\n+    (0x2C23, 'M', u'ⱓ'),\n+    (0x2C24, 'M', u'ⱔ'),\n+    (0x2C25, 'M', u'ⱕ'),\n+    (0x2C26, 'M', u'ⱖ'),\n+    (0x2C27, 'M', u'ⱗ'),\n+    (0x2C28, 'M', u'ⱘ'),\n+    (0x2C29, 'M', u'ⱙ'),\n+    (0x2C2A, 'M', u'ⱚ'),\n+    (0x2C2B, 'M', u'ⱛ'),\n+    (0x2C2C, 'M', u'ⱜ'),\n+    (0x2C2D, 'M', u'ⱝ'),\n+    (0x2C2E, 'M', u'ⱞ'),\n+    (0x2C2F, 'X'),\n+    (0x2C30, 'V'),\n+    (0x2C5F, 'X'),\n+    (0x2C60, 'M', u'ⱡ'),\n+    (0x2C61, 'V'),\n+    (0x2C62, 'M', u'ɫ'),\n+    (0x2C63, 'M', u'ᵽ'),\n+    (0x2C64, 'M', u'ɽ'),\n+    (0x2C65, 'V'),\n+    (0x2C67, 'M', u'ⱨ'),\n+    (0x2C68, 'V'),\n+    (0x2C69, 'M', u'ⱪ'),\n+    (0x2C6A, 'V'),\n+    (0x2C6B, 'M', u'ⱬ'),\n+    (0x2C6C, 'V'),\n+    (0x2C6D, 'M', u'ɑ'),\n+    (0x2C6E, 'M', u'ɱ'),\n+    (0x2C6F, 'M', u'ɐ'),\n+    (0x2C70, 'M', u'ɒ'),\n+    (0x2C71, 'V'),\n+    (0x2C72, 'M', u'ⱳ'),\n+    (0x2C73, 'V'),\n+    (0x2C75, 'M', u'ⱶ'),\n+    (0x2C76, 'V'),\n+    (0x2C7C, 'M', u'j'),\n+    (0x2C7D, 'M', u'v'),\n+    (0x2C7E, 'M', u'ȿ'),\n+    (0x2C7F, 'M', u'ɀ'),\n+    (0x2C80, 'M', u'ⲁ'),\n+    (0x2C81, 'V'),\n+    (0x2C82, 'M', u'ⲃ'),\n+    (0x2C83, 'V'),\n+    (0x2C84, 'M', u'ⲅ'),\n+    (0x2C85, 'V'),\n+    (0x2C86, 'M', u'ⲇ'),\n+    (0x2C87, 'V'),\n+    (0x2C88, 'M', u'ⲉ'),\n+    (0x2C89, 'V'),\n+    (0x2C8A, 'M', u'ⲋ'),\n+    (0x2C8B, 'V'),\n+    (0x2C8C, 'M', u'ⲍ'),\n+    (0x2C8D, 'V'),\n+    (0x2C8E, 'M', u'ⲏ'),\n+    (0x2C8F, 'V'),\n+    (0x2C90, 'M', u'ⲑ'),\n+    (0x2C91, 'V'),\n+    (0x2C92, 'M', u'ⲓ'),\n+    (0x2C93, 'V'),\n+    (0x2C94, 'M', u'ⲕ'),\n+    (0x2C95, 'V'),\n+    (0x2C96, 'M', u'ⲗ'),\n+    (0x2C97, 'V'),\n+    (0x2C98, 'M', u'ⲙ'),\n+    (0x2C99, 'V'),\n+    (0x2C9A, 'M', u'ⲛ'),\n+    (0x2C9B, 'V'),\n+    (0x2C9C, 'M', u'ⲝ'),\n+    (0x2C9D, 'V'),\n+    (0x2C9E, 'M', u'ⲟ'),\n+    (0x2C9F, 'V'),\n+    (0x2CA0, 'M', u'ⲡ'),\n+    (0x2CA1, 'V'),\n+    (0x2CA2, 'M', u'ⲣ'),\n+    (0x2CA3, 'V'),\n+    (0x2CA4, 'M', u'ⲥ'),\n+    (0x2CA5, 'V'),\n+    (0x2CA6, 'M', u'ⲧ'),\n+    (0x2CA7, 'V'),\n+    (0x2CA8, 'M', u'ⲩ'),\n+    (0x2CA9, 'V'),\n+    (0x2CAA, 'M', u'ⲫ'),\n+    (0x2CAB, 'V'),\n+    (0x2CAC, 'M', u'ⲭ'),\n+    (0x2CAD, 'V'),\n+    (0x2CAE, 'M', u'ⲯ'),\n+    (0x2CAF, 'V'),\n+    (0x2CB0, 'M', u'ⲱ'),\n+    (0x2CB1, 'V'),\n+    (0x2CB2, 'M', u'ⲳ'),\n+    (0x2CB3, 'V'),\n+    (0x2CB4, 'M', u'ⲵ'),\n+    (0x2CB5, 'V'),\n+    (0x2CB6, 'M', u'ⲷ'),\n+    (0x2CB7, 'V'),\n+    (0x2CB8, 'M', u'ⲹ'),\n+    (0x2CB9, 'V'),\n+    (0x2CBA, 'M', u'ⲻ'),\n+    (0x2CBB, 'V'),\n+    (0x2CBC, 'M', u'ⲽ'),\n+    (0x2CBD, 'V'),\n+    (0x2CBE, 'M', u'ⲿ'),\n+    (0x2CBF, 'V'),\n+    (0x2CC0, 'M', u'ⳁ'),\n+    (0x2CC1, 'V'),\n+    (0x2CC2, 'M', u'ⳃ'),\n+    (0x2CC3, 'V'),\n+    (0x2CC4, 'M', u'ⳅ'),\n+    (0x2CC5, 'V'),\n+    (0x2CC6, 'M', u'ⳇ'),\n+    (0x2CC7, 'V'),\n+    (0x2CC8, 'M', u'ⳉ'),\n+    (0x2CC9, 'V'),\n+    (0x2CCA, 'M', u'ⳋ'),\n+    (0x2CCB, 'V'),\n+    (0x2CCC, 'M', u'ⳍ'),\n+    (0x2CCD, 'V'),\n+    (0x2CCE, 'M', u'ⳏ'),\n+    (0x2CCF, 'V'),\n+    (0x2CD0, 'M', u'ⳑ'),\n+    (0x2CD1, 'V'),\n+    (0x2CD2, 'M', u'ⳓ'),\n+    (0x2CD3, 'V'),\n+    (0x2CD4, 'M', u'ⳕ'),\n+    (0x2CD5, 'V'),\n+    (0x2CD6, 'M', u'ⳗ'),\n+    (0x2CD7, 'V'),\n+    (0x2CD8, 'M', u'ⳙ'),\n+    (0x2CD9, 'V'),\n+    (0x2CDA, 'M', u'ⳛ'),\n+    (0x2CDB, 'V'),\n+    (0x2CDC, 'M', u'ⳝ'),\n+    (0x2CDD, 'V'),\n+    (0x2CDE, 'M', u'ⳟ'),\n+    (0x2CDF, 'V'),\n+    (0x2CE0, 'M', u'ⳡ'),\n+    (0x2CE1, 'V'),\n+    (0x2CE2, 'M', u'ⳣ'),\n+    (0x2CE3, 'V'),\n+    (0x2CEB, 'M', u'ⳬ'),\n+    (0x2CEC, 'V'),\n+    (0x2CED, 'M', u'ⳮ'),\n+    (0x2CEE, 'V'),\n+    (0x2CF2, 'M', u'ⳳ'),\n+    (0x2CF3, 'V'),\n+    (0x2CF4, 'X'),\n+    (0x2CF9, 'V'),\n+    (0x2D26, 'X'),\n+    (0x2D27, 'V'),\n+    (0x2D28, 'X'),\n+    (0x2D2D, 'V'),\n+    (0x2D2E, 'X'),\n+    (0x2D30, 'V'),\n+    (0x2D68, 'X'),\n+    (0x2D6F, 'M', u'ⵡ'),\n+    (0x2D70, 'V'),\n+    (0x2D71, 'X'),\n+    (0x2D7F, 'V'),\n+    (0x2D97, 'X'),\n+    (0x2DA0, 'V'),\n+    (0x2DA7, 'X'),\n+    (0x2DA8, 'V'),\n+    (0x2DAF, 'X'),\n+    (0x2DB0, 'V'),\n+    (0x2DB7, 'X'),\n+    (0x2DB8, 'V'),\n+    (0x2DBF, 'X'),\n+    (0x2DC0, 'V'),\n+    (0x2DC7, 'X'),\n+    (0x2DC8, 'V'),\n+    (0x2DCF, 'X'),\n+    (0x2DD0, 'V'),\n+    (0x2DD7, 'X'),\n+    (0x2DD8, 'V'),\n+    (0x2DDF, 'X'),\n+    (0x2DE0, 'V'),\n+    (0x2E3C, 'X'),\n+    (0x2E80, 'V'),\n+    (0x2E9A, 'X'),\n+    (0x2E9B, 'V'),\n+    (0x2E9F, 'M', u'母'),\n+    (0x2EA0, 'V'),\n+    (0x2EF3, 'M', u'龟'),\n+    (0x2EF4, 'X'),\n+    (0x2F00, 'M', u'一'),\n+    (0x2F01, 'M', u'丨'),\n+    (0x2F02, 'M', u'丶'),\n+    (0x2F03, 'M', u'丿'),\n+    (0x2F04, 'M', u'乙'),\n+    (0x2F05, 'M', u'亅'),\n+    (0x2F06, 'M', u'二'),\n+    (0x2F07, 'M', u'亠'),\n+    (0x2F08, 'M', u'人'),\n+    (0x2F09, 'M', u'儿'),\n+    (0x2F0A, 'M', u'入'),\n+    (0x2F0B, 'M', u'八'),\n+    (0x2F0C, 'M', u'冂'),\n+    (0x2F0D, 'M', u'冖'),\n+    (0x2F0E, 'M', u'冫'),\n+    (0x2F0F, 'M', u'几'),\n+    (0x2F10, 'M', u'凵'),\n+    (0x2F11, 'M', u'刀'),\n+    (0x2F12, 'M', u'力'),\n+    (0x2F13, 'M', u'勹'),\n+    (0x2F14, 'M', u'匕'),\n+    (0x2F15, 'M', u'匚'),\n+    (0x2F16, 'M', u'匸'),\n+    (0x2F17, 'M', u'十'),\n+    (0x2F18, 'M', u'卜'),\n+    (0x2F19, 'M', u'卩'),\n+    (0x2F1A, 'M', u'厂'),\n+    (0x2F1B, 'M', u'厶'),\n+    (0x2F1C, 'M', u'又'),\n+    (0x2F1D, 'M', u'口'),\n+    (0x2F1E, 'M', u'囗'),\n+    (0x2F1F, 'M', u'土'),\n+    (0x2F20, 'M', u'士'),\n+    (0x2F21, 'M', u'夂'),\n+    (0x2F22, 'M', u'夊'),\n+    (0x2F23, 'M', u'夕'),\n+    (0x2F24, 'M', u'大'),\n+    (0x2F25, 'M', u'女'),\n+    (0x2F26, 'M', u'子'),\n+    (0x2F27, 'M', u'宀'),\n+    (0x2F28, 'M', u'寸'),\n+    (0x2F29, 'M', u'小'),\n+    (0x2F2A, 'M', u'尢'),\n+    (0x2F2B, 'M', u'尸'),\n+    (0x2F2C, 'M', u'屮'),\n+    (0x2F2D, 'M', u'山'),\n+    (0x2F2E, 'M', u'巛'),\n+    (0x2F2F, 'M', u'工'),\n+    (0x2F30, 'M', u'己'),\n+    (0x2F31, 'M', u'巾'),\n+    (0x2F32, 'M', u'干'),\n+    (0x2F33, 'M', u'幺'),\n+    (0x2F34, 'M', u'广'),\n+    (0x2F35, 'M', u'廴'),\n+    (0x2F36, 'M', u'廾'),\n+    (0x2F37, 'M', u'弋'),\n+    (0x2F38, 'M', u'弓'),\n+    (0x2F39, 'M', u'彐'),\n+    (0x2F3A, 'M', u'彡'),\n+    (0x2F3B, 'M', u'彳'),\n+    (0x2F3C, 'M', u'心'),\n+    (0x2F3D, 'M', u'戈'),\n+    (0x2F3E, 'M', u'戶'),\n+    (0x2F3F, 'M', u'手'),\n+    (0x2F40, 'M', u'支'),\n+    (0x2F41, 'M', u'攴'),\n+    (0x2F42, 'M', u'文'),\n+    (0x2F43, 'M', u'斗'),\n+    (0x2F44, 'M', u'斤'),\n+    (0x2F45, 'M', u'方'),\n+    (0x2F46, 'M', u'无'),\n+    (0x2F47, 'M', u'日'),\n+    (0x2F48, 'M', u'曰'),\n+    (0x2F49, 'M', u'月'),\n+    (0x2F4A, 'M', u'木'),\n+    (0x2F4B, 'M', u'欠'),\n+    (0x2F4C, 'M', u'止'),\n+    (0x2F4D, 'M', u'歹'),\n+    (0x2F4E, 'M', u'殳'),\n+    (0x2F4F, 'M', u'毋'),\n+    (0x2F50, 'M', u'比'),\n+    (0x2F51, 'M', u'毛'),\n+    (0x2F52, 'M', u'氏'),\n+    (0x2F53, 'M', u'气'),\n+    (0x2F54, 'M', u'水'),\n+    (0x2F55, 'M', u'火'),\n+    (0x2F56, 'M', u'爪'),\n+    (0x2F57, 'M', u'父'),\n+    (0x2F58, 'M', u'爻'),\n+    (0x2F59, 'M', u'爿'),\n+    (0x2F5A, 'M', u'片'),\n+    (0x2F5B, 'M', u'牙'),\n+    (0x2F5C, 'M', u'牛'),\n+    (0x2F5D, 'M', u'犬'),\n+    (0x2F5E, 'M', u'玄'),\n+    (0x2F5F, 'M', u'玉'),\n+    (0x2F60, 'M', u'瓜'),\n+    (0x2F61, 'M', u'瓦'),\n+    (0x2F62, 'M', u'甘'),\n+    (0x2F63, 'M', u'生'),\n+    (0x2F64, 'M', u'用'),\n+    (0x2F65, 'M', u'田'),\n+    (0x2F66, 'M', u'疋'),\n+    (0x2F67, 'M', u'疒'),\n+    (0x2F68, 'M', u'癶'),\n+    (0x2F69, 'M', u'白'),\n+    (0x2F6A, 'M', u'皮'),\n+    (0x2F6B, 'M', u'皿'),\n+    (0x2F6C, 'M', u'目'),\n+    (0x2F6D, 'M', u'矛'),\n+    (0x2F6E, 'M', u'矢'),\n+    (0x2F6F, 'M', u'石'),\n+    (0x2F70, 'M', u'示'),\n+    (0x2F71, 'M', u'禸'),\n+    (0x2F72, 'M', u'禾'),\n+    (0x2F73, 'M', u'穴'),\n+    (0x2F74, 'M', u'立'),\n+    (0x2F75, 'M', u'竹'),\n+    (0x2F76, 'M', u'米'),\n+    (0x2F77, 'M', u'糸'),\n+    (0x2F78, 'M', u'缶'),\n+    (0x2F79, 'M', u'网'),\n+    (0x2F7A, 'M', u'羊'),\n+    (0x2F7B, 'M', u'羽'),\n+    (0x2F7C, 'M', u'老'),\n+    (0x2F7D, 'M', u'而'),\n+    (0x2F7E, 'M', u'耒'),\n+    (0x2F7F, 'M', u'耳'),\n+    (0x2F80, 'M', u'聿'),\n+    (0x2F81, 'M', u'肉'),\n+    (0x2F82, 'M', u'臣'),\n+    (0x2F83, 'M', u'自'),\n+    (0x2F84, 'M', u'至'),\n+    (0x2F85, 'M', u'臼'),\n+    (0x2F86, 'M', u'舌'),\n+    (0x2F87, 'M', u'舛'),\n+    (0x2F88, 'M', u'舟'),\n+    (0x2F89, 'M', u'艮'),\n+    (0x2F8A, 'M', u'色'),\n+    (0x2F8B, 'M', u'艸'),\n+    (0x2F8C, 'M', u'虍'),\n+    (0x2F8D, 'M', u'虫'),\n+    (0x2F8E, 'M', u'血'),\n+    (0x2F8F, 'M', u'行'),\n+    (0x2F90, 'M', u'衣'),\n+    (0x2F91, 'M', u'襾'),\n+    (0x2F92, 'M', u'見'),\n+    (0x2F93, 'M', u'角'),\n+    (0x2F94, 'M', u'言'),\n+    (0x2F95, 'M', u'谷'),\n+    (0x2F96, 'M', u'豆'),\n+    (0x2F97, 'M', u'豕'),\n+    (0x2F98, 'M', u'豸'),\n+    (0x2F99, 'M', u'貝'),\n+    (0x2F9A, 'M', u'赤'),\n+    (0x2F9B, 'M', u'走'),\n+    (0x2F9C, 'M', u'足'),\n+    (0x2F9D, 'M', u'身'),\n+    (0x2F9E, 'M', u'車'),\n+    (0x2F9F, 'M', u'辛'),\n+    (0x2FA0, 'M', u'辰'),\n+    (0x2FA1, 'M', u'辵'),\n+    (0x2FA2, 'M', u'邑'),\n+    (0x2FA3, 'M', u'酉'),\n+    (0x2FA4, 'M', u'釆'),\n+    (0x2FA5, 'M', u'里'),\n+    (0x2FA6, 'M', u'金'),\n+    (0x2FA7, 'M', u'長'),\n+    (0x2FA8, 'M', u'門'),\n+    (0x2FA9, 'M', u'阜'),\n+    (0x2FAA, 'M', u'隶'),\n+    (0x2FAB, 'M', u'隹'),\n+    (0x2FAC, 'M', u'雨'),\n+    (0x2FAD, 'M', u'靑'),\n+    (0x2FAE, 'M', u'非'),\n+    (0x2FAF, 'M', u'面'),\n+    (0x2FB0, 'M', u'革'),\n+    (0x2FB1, 'M', u'韋'),\n+    (0x2FB2, 'M', u'韭'),\n+    (0x2FB3, 'M', u'音'),\n+    (0x2FB4, 'M', u'頁'),\n+    (0x2FB5, 'M', u'風'),\n+    (0x2FB6, 'M', u'飛'),\n+    (0x2FB7, 'M', u'食'),\n+    (0x2FB8, 'M', u'首'),\n+    (0x2FB9, 'M', u'香'),\n+    (0x2FBA, 'M', u'馬'),\n+    (0x2FBB, 'M', u'骨'),\n+    (0x2FBC, 'M', u'高'),\n+    (0x2FBD, 'M', u'髟'),\n+    (0x2FBE, 'M', u'鬥'),\n+    (0x2FBF, 'M', u'鬯'),\n+    (0x2FC0, 'M', u'鬲'),\n+    (0x2FC1, 'M', u'鬼'),\n+    (0x2FC2, 'M', u'魚'),\n+    (0x2FC3, 'M', u'鳥'),\n+    (0x2FC4, 'M', u'鹵'),\n+    (0x2FC5, 'M', u'鹿'),\n+    (0x2FC6, 'M', u'麥'),\n+    (0x2FC7, 'M', u'麻'),\n+    (0x2FC8, 'M', u'黃'),\n+    (0x2FC9, 'M', u'黍'),\n+    (0x2FCA, 'M', u'黑'),\n+    (0x2FCB, 'M', u'黹'),\n+    (0x2FCC, 'M', u'黽'),\n+    (0x2FCD, 'M', u'鼎'),\n+    (0x2FCE, 'M', u'鼓'),\n+    (0x2FCF, 'M', u'鼠'),\n+    (0x2FD0, 'M', u'鼻'),\n+    (0x2FD1, 'M', u'齊'),\n+    (0x2FD2, 'M', u'齒'),\n+    (0x2FD3, 'M', u'龍'),\n+    (0x2FD4, 'M', u'龜'),\n+    (0x2FD5, 'M', u'龠'),\n+    (0x2FD6, 'X'),\n+    (0x3000, '3', u' '),\n+    (0x3001, 'V'),\n+    (0x3002, 'M', u'.'),\n+    (0x3003, 'V'),\n+    (0x3036, 'M', u'〒'),\n+    (0x3037, 'V'),\n+    (0x3038, 'M', u'十'),\n+    (0x3039, 'M', u'卄'),\n+    (0x303A, 'M', u'卅'),\n+    (0x303B, 'V'),\n+    (0x3040, 'X'),\n+    (0x3041, 'V'),\n+    (0x3097, 'X'),\n+    (0x3099, 'V'),\n+    (0x309B, '3', u' ゙'),\n+    (0x309C, '3', u' ゚'),\n+    (0x309D, 'V'),\n+    (0x309F, 'M', u'より'),\n+    (0x30A0, 'V'),\n+    (0x30FF, 'M', u'コト'),\n+    (0x3100, 'X'),\n+    (0x3105, 'V'),\n+    (0x312E, 'X'),\n+    (0x3131, 'M', u'ᄀ'),\n+    (0x3132, 'M', u'ᄁ'),\n+    (0x3133, 'M', u'ᆪ'),\n+    (0x3134, 'M', u'ᄂ'),\n+    (0x3135, 'M', u'ᆬ'),\n+    (0x3136, 'M', u'ᆭ'),\n+    (0x3137, 'M', u'ᄃ'),\n+    (0x3138, 'M', u'ᄄ'),\n+    (0x3139, 'M', u'ᄅ'),\n+    (0x313A, 'M', u'ᆰ'),\n+    (0x313B, 'M', u'ᆱ'),\n+    (0x313C, 'M', u'ᆲ'),\n+    (0x313D, 'M', u'ᆳ'),\n+    (0x313E, 'M', u'ᆴ'),\n+    (0x313F, 'M', u'ᆵ'),\n+    (0x3140, 'M', u'ᄚ'),\n+    (0x3141, 'M', u'ᄆ'),\n+    (0x3142, 'M', u'ᄇ'),\n+    (0x3143, 'M', u'ᄈ'),\n+    (0x3144, 'M', u'ᄡ'),\n+    (0x3145, 'M', u'ᄉ'),\n+    (0x3146, 'M', u'ᄊ'),\n+    (0x3147, 'M', u'ᄋ'),\n+    (0x3148, 'M', u'ᄌ'),\n+    (0x3149, 'M', u'ᄍ'),\n+    (0x314A, 'M', u'ᄎ'),\n+    (0x314B, 'M', u'ᄏ'),\n+    (0x314C, 'M', u'ᄐ'),\n+    (0x314D, 'M', u'ᄑ'),\n+    (0x314E, 'M', u'ᄒ'),\n+    (0x314F, 'M', u'ᅡ'),\n+    (0x3150, 'M', u'ᅢ'),\n+    (0x3151, 'M', u'ᅣ'),\n+    (0x3152, 'M', u'ᅤ'),\n+    (0x3153, 'M', u'ᅥ'),\n+    (0x3154, 'M', u'ᅦ'),\n+    (0x3155, 'M', u'ᅧ'),\n+    (0x3156, 'M', u'ᅨ'),\n+    (0x3157, 'M', u'ᅩ'),\n+    (0x3158, 'M', u'ᅪ'),\n+    (0x3159, 'M', u'ᅫ'),\n+    (0x315A, 'M', u'ᅬ'),\n+    (0x315B, 'M', u'ᅭ'),\n+    (0x315C, 'M', u'ᅮ'),\n+    (0x315D, 'M', u'ᅯ'),\n+    (0x315E, 'M', u'ᅰ'),\n+    (0x315F, 'M', u'ᅱ'),\n+    (0x3160, 'M', u'ᅲ'),\n+    (0x3161, 'M', u'ᅳ'),\n+    (0x3162, 'M', u'ᅴ'),\n+    (0x3163, 'M', u'ᅵ'),\n+    (0x3164, 'X'),\n+    (0x3165, 'M', u'ᄔ'),\n+    (0x3166, 'M', u'ᄕ'),\n+    (0x3167, 'M', u'ᇇ'),\n+    (0x3168, 'M', u'ᇈ'),\n+    (0x3169, 'M', u'ᇌ'),\n+    (0x316A, 'M', u'ᇎ'),\n+    (0x316B, 'M', u'ᇓ'),\n+    (0x316C, 'M', u'ᇗ'),\n+    (0x316D, 'M', u'ᇙ'),\n+    (0x316E, 'M', u'ᄜ'),\n+    (0x316F, 'M', u'ᇝ'),\n+    (0x3170, 'M', u'ᇟ'),\n+    (0x3171, 'M', u'ᄝ'),\n+    (0x3172, 'M', u'ᄞ'),\n+    (0x3173, 'M', u'ᄠ'),\n+    (0x3174, 'M', u'ᄢ'),\n+    (0x3175, 'M', u'ᄣ'),\n+    (0x3176, 'M', u'ᄧ'),\n+    (0x3177, 'M', u'ᄩ'),\n+    (0x3178, 'M', u'ᄫ'),\n+    (0x3179, 'M', u'ᄬ'),\n+    (0x317A, 'M', u'ᄭ'),\n+    (0x317B, 'M', u'ᄮ'),\n+    (0x317C, 'M', u'ᄯ'),\n+    (0x317D, 'M', u'ᄲ'),\n+    (0x317E, 'M', u'ᄶ'),\n+    (0x317F, 'M', u'ᅀ'),\n+    (0x3180, 'M', u'ᅇ'),\n+    (0x3181, 'M', u'ᅌ'),\n+    (0x3182, 'M', u'ᇱ'),\n+    (0x3183, 'M', u'ᇲ'),\n+    (0x3184, 'M', u'ᅗ'),\n+    (0x3185, 'M', u'ᅘ'),\n+    (0x3186, 'M', u'ᅙ'),\n+    (0x3187, 'M', u'ᆄ'),\n+    (0x3188, 'M', u'ᆅ'),\n+    (0x3189, 'M', u'ᆈ'),\n+    (0x318A, 'M', u'ᆑ'),\n+    (0x318B, 'M', u'ᆒ'),\n+    (0x318C, 'M', u'ᆔ'),\n+    (0x318D, 'M', u'ᆞ'),\n+    (0x318E, 'M', u'ᆡ'),\n+    (0x318F, 'X'),\n+    (0x3190, 'V'),\n+    (0x3192, 'M', u'一'),\n+    (0x3193, 'M', u'二'),\n+    (0x3194, 'M', u'三'),\n+    (0x3195, 'M', u'四'),\n+    (0x3196, 'M', u'上'),\n+    (0x3197, 'M', u'中'),\n+    (0x3198, 'M', u'下'),\n+    (0x3199, 'M', u'甲'),\n+    (0x319A, 'M', u'乙'),\n+    (0x319B, 'M', u'丙'),\n+    (0x319C, 'M', u'丁'),\n+    (0x319D, 'M', u'天'),\n+    (0x319E, 'M', u'地'),\n+    (0x319F, 'M', u'人'),\n+    (0x31A0, 'V'),\n+    (0x31BB, 'X'),\n+    (0x31C0, 'V'),\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
