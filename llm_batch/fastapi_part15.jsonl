{"custom_id": "fastapi#c6d28c8209bed6bd4a3914d3cb38a655a60521ab", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 23 | Lines Deleted: 23 | Files Changed: 2 | Hunks: 23 | Methods Changed: 46 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 46 | Churn Cumulative: 3584 | Contributors (this commit): 4 | Commits (past 90d): 12 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -115,7 +115,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             methods: List[str] = None,\n             operation_id: str = None,\n@@ -151,7 +151,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             methods: List[str] = None,\n             operation_id: str = None,\n@@ -187,7 +187,7 @@ class FastAPI(Starlette):\n             *,\n             prefix: str = \"\",\n             tags: List[str] = None,\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n     ) -> None:\n         self.router.include_router(router, prefix=prefix, tags=tags, additional_responses=additional_responses,)\n \n@@ -201,7 +201,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -234,7 +234,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -267,7 +267,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -300,7 +300,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -333,7 +333,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -366,7 +366,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -399,7 +399,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -432,7 +432,7 @@ class FastAPI(Starlette):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n\n@@ -105,7 +105,7 @@ class APIRoute(routing.Route):\n         summary: str = None,\n         description: str = None,\n         response_description: str = \"Successful Response\",\n-        additional_responses: AdditionalResponse = [],\n+        additional_responses: List[AdditionalResponse] = [],\n         deprecated: bool = None,\n         name: str = None,\n         methods: List[str] = None,\n@@ -226,7 +226,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             methods: List[str] = None,\n             operation_id: str = None,\n@@ -263,7 +263,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             methods: List[str] = None,\n             operation_id: str = None,\n@@ -299,7 +299,7 @@ class APIRouter(routing.Router):\n             *,\n             prefix: str = \"\",\n             tags: List[str] = None,\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n     ) -> None:\n         if prefix:\n             assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n@@ -391,7 +391,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -425,7 +425,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -459,7 +459,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -493,7 +493,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -527,7 +527,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -561,7 +561,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -595,7 +595,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n@@ -629,7 +629,7 @@ class APIRouter(routing.Router):\n             summary: str = None,\n             description: str = None,\n             response_description: str = \"Successful Response\",\n-            additional_responses: AdditionalResponse = [],\n+            additional_responses: List[AdditionalResponse] = [],\n             deprecated: bool = None,\n             operation_id: str = None,\n             include_in_schema: bool = True,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#84a300ef842bc41b4955973a280366952097fd32", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 148 | Lines Deleted: 293 | Files Changed: 6 | Hunks: 90 | Methods Changed: 7 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 441 | Churn Cumulative: 5823 | Contributors (this commit): 4 | Commits (past 90d): 26 | Contributors (cumulative): 15 | DMM Complexity: 0.23076923076923078\n\nDIFF:\n@@ -2,8 +2,8 @@ from typing import Any, Callable, Dict, List, Optional, Type\n \n from fastapi import routing\n from fastapi.openapi.docs import get_redoc_html, get_swagger_ui_html\n-from fastapi.openapi.utils import get_openapi\n from fastapi.openapi.models import AdditionalResponse, AdditionalResponseDescription\n+from fastapi.openapi.utils import get_openapi\n from pydantic import BaseModel\n from starlette.applications import Starlette\n from starlette.exceptions import ExceptionMiddleware, HTTPException\n@@ -189,7 +189,9 @@ class FastAPI(Starlette):\n         tags: List[str] = None,\n         additional_responses: List[AdditionalResponse] = [],\n     ) -> None:\n-        self.router.include_router(router, prefix=prefix, tags=tags, additional_responses=additional_responses,)\n+        self.router.include_router(\n+            router, prefix=prefix, tags=tags, additional_responses=additional_responses\n+        )\n \n     def get(\n         self,\n\n@@ -1,10 +1,10 @@\n import logging\n from enum import Enum\n-from typing import Any, Dict, List, Optional, Union, Type, ClassVar, Callable\n+from typing import Any, Callable, ClassVar, Dict, List, Optional, Type, Union\n \n from pydantic import BaseModel, Schema as PSchema\n-from pydantic.types import UrlStr\n from pydantic.fields import Field\n+from pydantic.types import UrlStr\n \n try:\n     import email_validator\n@@ -351,19 +351,12 @@ class BaseAdditionalResponse(BaseModel):\n \n class AdditionalResponse(BaseAdditionalResponse):\n     status_code: int = PSchema(\n-        ...,\n-        ge=100,\n-        le=540,\n-        title='Status Code',\n-        description='HTTP status code',\n+        ..., ge=100, le=540, title=\"Status Code\", description=\"HTTP status code\"\n     )\n     # NOTE: waiting for pydantic to allow `typing.Type[BasicModel]` type\n     # so, going for `Any` and extra validation on\n     # routing methods\n-    models: Optional[List[Any]] = PSchema(\n-        [],\n-        title='Additional Response Models',\n-    )\n+    models: Optional[List[Any]] = PSchema([], title=\"Additional Response Models\")\n \n \n class AdditionalResponseDescription(BaseAdditionalResponse):\n\n@@ -207,21 +207,19 @@ def get_openapi_path(\n                 }\n             for add_response_code, add_response in route.additional_responses.items():\n                 add_response_schema = {}\n-                if (add_response.content_type or route.content_type.media_type\n-                    ) == 'application/json' and add_response.schema_field is not None:\n+                if (\n+                    add_response.content_type or route.content_type.media_type\n+                ) == \"application/json\" and add_response.schema_field is not None:\n                     add_response_schema, _ = field_schema(\n                         add_response.schema_field,\n                         model_name_map=model_name_map,\n                         ref_prefix=REF_PREFIX,\n                     )\n                 add_content = {\n-                    add_response.content_type or\n-                    route.content_type.media_type: {\n-                        \"schema\": add_response_schema,\n-                    },\n+                    add_response.content_type\n+                    or route.content_type.media_type: {\"schema\": add_response_schema}\n                 }\n-                operation[\"responses\"][str(add_response_code)] = \\\n-                    {\n+                operation[\"responses\"][str(add_response_code)] = {\n                     \"description\": add_response.description,\n                     \"content\": add_content,\n                 }\n\n@@ -1,14 +1,14 @@\n import asyncio\n import inspect\n import logging\n-from typing import Any, Callable, List, Optional, Type, Dict, Union\n+from typing import Any, Callable, Dict, List, Optional, Type, Union\n \n from fastapi import params\n from fastapi.dependencies.models import Dependant\n from fastapi.dependencies.utils import get_body_field, get_dependant, solve_dependencies\n from fastapi.encoders import jsonable_encoder\n-from fastapi.utils import UnconstrainedConfig\n from fastapi.openapi.models import AdditionalResponse, AdditionalResponseDescription\n+from fastapi.utils import UnconstrainedConfig\n from pydantic import BaseModel, Schema\n from pydantic.error_wrappers import ErrorWrapper, ValidationError\n from pydantic.fields import Field\n@@ -146,31 +146,30 @@ class APIRoute(routing.Route):\n         for add_response in additional_responses:\n             if isinstance(add_response, int):\n                 continue\n-            assert add_response.status_code not in existed_codes, f\"(Duplicated Status Code): Response with status code [{add_response.status_code}] already defined!\"\n+            assert (\n+                add_response.status_code not in existed_codes\n+            ), f\"(Duplicated Status Code): Response with status code [{add_response.status_code}] already defined!\"\n             existed_codes.append(add_response.status_code)\n-            response_models = [\n-                m for m in\\\n-                    add_response.models\n-            ]\n+            response_models = [m for m in add_response.models]\n             valid_response_models = True\n             try:\n-                valid_response_models = all([\n-                    issubclass(m, BaseModel)\n-                        for m in response_models\n-                ])\n+                valid_response_models = all(\n+                    [issubclass(m, BaseModel) for m in response_models]\n+                )\n             except TypeError as te:\n                 valid_response_models = False\n             if not valid_response_models:\n                 raise ValueError(\n                     \"All response models must be \"\n                     \"a subclass of `pydantic.BaseModel` \"\n-                    \"model.\",\n+                    \"model.\"\n                 )\n-            if (add_response.content_type == 'application/json' or lenient_issubclass(\n-                    content_type, JSONResponse)):\n+            if add_response.content_type == \"application/json\" or lenient_issubclass(\n+                content_type, JSONResponse\n+            ):\n                 if len(response_models):\n                     schema_field = Field(\n-                        name=f'Additional_response_{add_response.status_code}',\n+                        name=f\"Additional_response_{add_response.status_code}\",\n                         type_=Union[tuple(response_models)],\n                         class_validators=[],\n                         default=None,\n@@ -187,8 +186,7 @@ class APIRoute(routing.Route):\n                 content_type=add_response.content_type,\n                 schema_field=schema_field,\n             )\n-            self.additional_responses[add_response.status_code] = \\\n-                add_resp_description\n+            self.additional_responses[add_response.status_code] = add_resp_description\n         self.deprecated = deprecated\n         if methods is None:\n             methods = [\"GET\"]\n@@ -310,20 +308,20 @@ class APIRouter(routing.Router):\n             if isinstance(route, APIRoute):\n                 # really ugly hack and repitition\n                 prev_add_resp = route.additional_responses\n-                existed_codes = [422, route.status_code\n-                                 ] + [int(c) for c in prev_add_resp.keys()]\n-                for add_response in additional_responses:\n-                    assert add_response.status_code not in existed_codes, f\"(Duplicated Status Code): Response with status code [{add_response.status_code}] already defined!\"\n-                    existed_codes.append(add_response.status_code)\n-                    response_models = [\n-                        m for m in\\\n-                            add_response.models\n+                existed_codes = [422, route.status_code] + [\n+                    int(c) for c in prev_add_resp.keys()\n                 ]\n+                for add_response in additional_responses:\n+                    assert (\n+                        add_response.status_code not in existed_codes\n+                    ), f\"(Duplicated Status Code): Response with status code [{add_response.status_code}] already defined!\"\n+                    existed_codes.append(add_response.status_code)\n+                    response_models = [m for m in add_response.models]\n                     valid_response_models = True\n                     try:\n-                        valid_response_models = all([\n-                            issubclass(m, BaseModel) for m in response_models\n-                        ])\n+                        valid_response_models = all(\n+                            [issubclass(m, BaseModel) for m in response_models]\n+                        )\n                     except AttributeError as ae:\n                         valid_response_models = False\n                     if not valid_response_models:\n@@ -332,11 +330,13 @@ class APIRouter(routing.Router):\n                             \"a subclass of `pydantic.BaseModel`\"\n                             \"model.\"\n                         )\n-                    if (add_response.content_type == 'application/json' or lenient_issubclass(\n-                    route.content_type, JSONResponse)):\n+                    if (\n+                        add_response.content_type == \"application/json\"\n+                        or lenient_issubclass(route.content_type, JSONResponse)\n+                    ):\n                         if len(response_models):\n                             schema_field = Field(\n-                                name=f'Additional_response_{add_response.status_code}',\n+                                name=f\"Additional_response_{add_response.status_code}\",\n                                 type_=Union[tuple(response_models)],\n                                 class_validators=[],\n                                 default=None,\n@@ -353,8 +353,9 @@ class APIRouter(routing.Router):\n                         content_type=add_response.content_type,\n                         schema_field=schema_field,\n                     )\n-                    route.additional_responses[add_response.status_code] = \\\n-                        add_resp_description\n+                    route.additional_responses[\n+                        add_response.status_code\n+                    ] = add_resp_description\n                 self.add_api_route(\n                     prefix + route.path,\n                     route.endpoint,\n\n@@ -33,9 +33,7 @@ def get_flat_models_from_routes(\n             if route.additional_responses:\n                 for _, add_response in route.additional_responses.items():\n                     if add_response.schema_field is not None:\n-                        responses_from_routes.append(\n-                            add_response.schema_field,\n-                        )\n+                        responses_from_routes.append(add_response.schema_field)\n     flat_models = get_flat_models_from_fields(\n         body_fields_from_routes + responses_from_routes\n     )\n\n@@ -13,28 +13,22 @@ class Item(BaseModel):\n \n \n class Response400(BaseModel):\n-    '''HTTP 4xx Response Schema'''\n+    \"\"\"HTTP 4xx Response Schema\"\"\"\n+\n     title: str\n     detail: str\n     error_code: int  # functional error ref\n \n \n response_403 = AdditionalResponse(\n-    status_code = 403,\n-    description = 'Forbidden',\n-    models = [\n-        Response400,\n-    ],\n+    status_code=403, description=\"Forbidden\", models=[Response400]\n )\n \n-additional_responses = [\n-    response_403,\n-]\n+additional_responses = [response_403]\n+\n \n @app.api_route(\n-    \"/items/{item_id}\",\n-    methods=[\"GET\"],\n-    additional_responses=additional_responses,\n+    \"/items/{item_id}\", methods=[\"GET\"], additional_responses=additional_responses\n )\n def get_items(item_id: str):\n     return {\"item_id\": item_id}\n@@ -51,42 +45,27 @@ app.add_api_route(\n )\n \n \n-@app.delete(\n-    \"/items/{item_id}\",\n-    additional_responses=additional_responses,\n-)\n+@app.delete(\"/items/{item_id}\", additional_responses=additional_responses)\n def delete_item(item_id: str, item: Item):\n     return {\"item_id\": item_id, \"item\": item}\n \n \n-@app.head(\n-    \"/items/{item_id}\",\n-    additional_responses=additional_responses,\n-)\n+@app.head(\"/items/{item_id}\", additional_responses=additional_responses)\n def head_item(item_id: str):\n     return JSONResponse(headers={\"x-fastapi-item-id\": item_id})\n \n \n-@app.options(\n-    \"/items/{item_id}\",\n-    additional_responses=additional_responses,\n-)\n+@app.options(\"/items/{item_id}\", additional_responses=additional_responses)\n def options_item(item_id: str):\n     return JSONResponse(headers={\"x-fastapi-item-id\": item_id})\n \n \n-@app.patch(\n-    \"/items/{item_id}\",\n-    additional_responses=additional_responses,\n-)\n+@app.patch(\"/items/{item_id}\", additional_responses=additional_responses)\n def patch_item(item_id: str, item: Item):\n     return {\"item_id\": item_id, \"item\": item}\n \n \n-@app.trace(\n-    \"/items/{item_id}\",\n-    additional_responses=additional_responses,\n-)\n+@app.trace(\"/items/{item_id}\", additional_responses=additional_responses)\n def trace_item(item_id: str):\n     return JSONResponse(media_type=\"message/http\")\n \n@@ -95,29 +74,20 @@ client = TestClient(app)\n \n openapi_schema = {\n     \"openapi\": \"3.0.2\",\n-    \"info\": {\n-        \"title\": \"Fast API\",\n-        \"version\": \"0.1.0\"\n-    },\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n     \"paths\": {\n         \"/items/{item_id}\": {\n             \"get\": {\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {}\n-                            }\n-                        },\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n                     },\n                     \"403\": {\n                         \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -126,44 +96,34 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"$ref\":\n-                                    \"#/components/schemas/HTTPValidationError\"\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                 }\n                             }\n                         },\n                     },\n                 },\n-                \"summary\":\n-                \"Get Items Get\",\n-                \"operationId\":\n-                \"get_items_items__item_id__get\",\n-                \"parameters\": [{\n+                \"summary\": \"Get Items Get\",\n+                \"operationId\": \"get_items_items__item_id__get\",\n+                \"parameters\": [\n+                    {\n                         \"required\": True,\n-                    \"schema\": {\n-                        \"title\": \"Item_Id\",\n-                        \"type\": \"string\"\n-                    },\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n-                }],\n+                    }\n+                ],\n             },\n             \"delete\": {\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {}\n-                            }\n-                        },\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n                     },\n                     \"403\": {\n                         \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -172,32 +132,26 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"$ref\":\n-                                    \"#/components/schemas/HTTPValidationError\"\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                 }\n                             }\n                         },\n                     },\n                 },\n-                \"summary\":\n-                \"Delete Item Delete\",\n-                \"operationId\":\n-                \"delete_item_items__item_id__delete\",\n-                \"parameters\": [{\n+                \"summary\": \"Delete Item Delete\",\n+                \"operationId\": \"delete_item_items__item_id__delete\",\n+                \"parameters\": [\n+                    {\n                         \"required\": True,\n-                    \"schema\": {\n-                        \"title\": \"Item_Id\",\n-                        \"type\": \"string\"\n-                    },\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n-                }],\n+                    }\n+                ],\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/json\": {\n-                            \"schema\": {\n-                                \"$ref\": \"#/components/schemas/Item\"\n-                            }\n+                            \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                         }\n                     },\n                     \"required\": True,\n@@ -207,9 +161,13 @@ openapi_schema = {\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"403\": {\n+                        \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {}\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -217,19 +175,7 @@ openapi_schema = {\n                         \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n-                            }\n-                        },\n-                    },\n-                    \"403\": {\n-                        \"description\": \"Forbidden\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -238,44 +184,34 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"$ref\":\n-                                    \"#/components/schemas/HTTPValidationError\"\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                 }\n                             }\n                         },\n                     },\n                 },\n-                \"summary\":\n-                \"Options Item Options\",\n-                \"operationId\":\n-                \"options_item_items__item_id__options\",\n-                \"parameters\": [{\n+                \"summary\": \"Options Item Options\",\n+                \"operationId\": \"options_item_items__item_id__options\",\n+                \"parameters\": [\n+                    {\n                         \"required\": True,\n-                    \"schema\": {\n-                        \"title\": \"Item_Id\",\n-                        \"type\": \"string\"\n-                    },\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n-                }],\n+                    }\n+                ],\n             },\n             \"head\": {\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {}\n-                            }\n-                        },\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n                     },\n                     \"403\": {\n                         \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -284,44 +220,34 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"$ref\":\n-                                    \"#/components/schemas/HTTPValidationError\"\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                 }\n                             }\n                         },\n                     },\n                 },\n-                \"summary\":\n-                \"Head Item Head\",\n-                \"operationId\":\n-                \"head_item_items__item_id__head\",\n-                \"parameters\": [{\n+                \"summary\": \"Head Item Head\",\n+                \"operationId\": \"head_item_items__item_id__head\",\n+                \"parameters\": [\n+                    {\n                         \"required\": True,\n-                    \"schema\": {\n-                        \"title\": \"Item_Id\",\n-                        \"type\": \"string\"\n-                    },\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n-                }],\n+                    }\n+                ],\n             },\n             \"patch\": {\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {}\n-                            }\n-                        },\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n                     },\n                     \"403\": {\n                         \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -330,32 +256,26 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"$ref\":\n-                                    \"#/components/schemas/HTTPValidationError\"\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                 }\n                             }\n                         },\n                     },\n                 },\n-                \"summary\":\n-                \"Patch Item Patch\",\n-                \"operationId\":\n-                \"patch_item_items__item_id__patch\",\n-                \"parameters\": [{\n+                \"summary\": \"Patch Item Patch\",\n+                \"operationId\": \"patch_item_items__item_id__patch\",\n+                \"parameters\": [\n+                    {\n                         \"required\": True,\n-                    \"schema\": {\n-                        \"title\": \"Item_Id\",\n-                        \"type\": \"string\"\n-                    },\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n-                }],\n+                    }\n+                ],\n                 \"requestBody\": {\n                     \"content\": {\n                         \"application/json\": {\n-                            \"schema\": {\n-                                \"$ref\": \"#/components/schemas/Item\"\n-                            }\n+                            \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n                         }\n                     },\n                     \"required\": True,\n@@ -365,19 +285,13 @@ openapi_schema = {\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {}\n-                            }\n-                        },\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n                     },\n                     \"403\": {\n                         \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -386,26 +300,22 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"$ref\":\n-                                    \"#/components/schemas/HTTPValidationError\"\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                 }\n                             }\n                         },\n                     },\n                 },\n-                \"summary\":\n-                \"Trace Item Trace\",\n-                \"operationId\":\n-                \"trace_item_items__item_id__trace\",\n-                \"parameters\": [{\n+                \"summary\": \"Trace Item Trace\",\n+                \"operationId\": \"trace_item_items__item_id__trace\",\n+                \"parameters\": [\n+                    {\n                         \"required\": True,\n-                    \"schema\": {\n-                        \"title\": \"Item_Id\",\n-                        \"type\": \"string\"\n-                    },\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n-                }],\n+                    }\n+                ],\n             },\n         },\n         \"/items-not-decorated/{item_id}\": {\n@@ -413,19 +323,13 @@ openapi_schema = {\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": {}\n-                            }\n-                        },\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n                     },\n                     \"403\": {\n                         \"description\": \"Forbidden\",\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\n-                                    \"$ref\": \"#/components/schemas/Response400\"\n-                                }\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Response400\"}\n                             }\n                         },\n                     },\n@@ -434,26 +338,22 @@ openapi_schema = {\n                         \"content\": {\n                             \"application/json\": {\n                                 \"schema\": {\n-                                    \"$ref\":\n-                                    \"#/components/schemas/HTTPValidationError\"\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                 }\n                             }\n                         },\n                     },\n                 },\n-                \"summary\":\n-                \"Get Not Decorated Get\",\n-                \"operationId\":\n-                \"get_not_decorated_items-not-decorated__item_id__get\",\n-                \"parameters\": [{\n+                \"summary\": \"Get Not Decorated Get\",\n+                \"operationId\": \"get_not_decorated_items-not-decorated__item_id__get\",\n+                \"parameters\": [\n+                    {\n                         \"required\": True,\n-                    \"schema\": {\n-                        \"title\": \"Item_Id\",\n-                        \"type\": \"string\"\n-                    },\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n-                }],\n+                    }\n+                ],\n             }\n         },\n     },\n@@ -464,14 +364,8 @@ openapi_schema = {\n                 \"required\": [\"name\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n-                    \"name\": {\n-                        \"title\": \"Name\",\n-                        \"type\": \"string\"\n-                    },\n-                    \"price\": {\n-                        \"title\": \"Price\",\n-                        \"type\": \"number\"\n-                    },\n+                    \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n+                    \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n                 },\n             },\n             \"Response400\": {\n@@ -480,18 +374,9 @@ openapi_schema = {\n                 \"required\": [\"title\", \"detail\", \"error_code\"],\n                 \"type\": \"object\",\n                 \"properties\": {\n-                    \"title\": {\n-                        \"title\": \"Title\",\n-                        \"type\": \"string\"\n-                    },\n-                    \"detail\": {\n-                        \"title\": \"Detail\",\n-                        \"type\": \"string\"\n-                    },\n-                    \"error_code\": {\n-                        \"title\": \"Error_Code\",\n-                        \"type\": \"integer\"\n-                    },\n+                    \"title\": {\"title\": \"Title\", \"type\": \"string\"},\n+                    \"detail\": {\"title\": \"Detail\", \"type\": \"string\"},\n+                    \"error_code\": {\"title\": \"Error_Code\", \"type\": \"integer\"},\n                 },\n             },\n             \"ValidationError\": {\n@@ -502,18 +387,10 @@ openapi_schema = {\n                     \"loc\": {\n                         \"title\": \"Location\",\n                         \"type\": \"array\",\n-                        \"items\": {\n-                            \"type\": \"string\"\n-                        },\n-                    },\n-                    \"msg\": {\n-                        \"title\": \"Message\",\n-                        \"type\": \"string\"\n-                    },\n-                    \"type\": {\n-                        \"title\": \"Error Type\",\n-                        \"type\": \"string\"\n+                        \"items\": {\"type\": \"string\"},\n                     },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n                 },\n             },\n             \"HTTPValidationError\": {\n@@ -523,9 +400,7 @@ openapi_schema = {\n                     \"detail\": {\n                         \"title\": \"Detail\",\n                         \"type\": \"array\",\n-                        \"items\": {\n-                            \"$ref\": \"#/components/schemas/ValidationError\"\n-                        },\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n                     }\n                 },\n             },\n@@ -555,13 +430,7 @@ def test_get_api_route_not_decorated():\n def test_delete():\n     response = client.delete(\"/items/foo\", json={\"name\": \"Foo\"})\n     assert response.status_code == 200\n-    assert response.json() == {\n-        \"item_id\": \"foo\",\n-        \"item\": {\n-            \"name\": \"Foo\",\n-            \"price\": None\n-        }\n-    }\n+    assert response.json() == {\"item_id\": \"foo\", \"item\": {\"name\": \"Foo\", \"price\": None}}\n \n \n def test_head():\n@@ -579,13 +448,7 @@ def test_options():\n def test_patch():\n     response = client.patch(\"/items/foo\", json={\"name\": \"Foo\"})\n     assert response.status_code == 200\n-    assert response.json() == {\n-        \"item_id\": \"foo\",\n-        \"item\": {\n-            \"name\": \"Foo\",\n-            \"price\": None\n-        }\n-    }\n+    assert response.json() == {\"item_id\": \"foo\", \"item\": {\"name\": \"Foo\", \"price\": None}}\n \n \n def test_trace():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#95679ca5e66a115f088cf87383510f9596ecdfe0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 55 | Files Changed: 3 | Hunks: 6 | Methods Changed: 3 | Complexity Δ (Sum/Max): -9/0 | Churn Δ: 60 | Churn Cumulative: 3388 | Contributors (this commit): 4 | Commits (past 90d): 17 | Contributors (cumulative): 8 | DMM Complexity: 1.0\n\nDIFF:\n@@ -346,7 +346,7 @@ class Tag(BaseModel):\n \n class BaseAdditionalResponse(BaseModel):\n     description: str\n-    content_type: str = None\n+    content_type: Optional[str] = None\n \n \n class AdditionalResponse(BaseAdditionalResponse):\n@@ -356,7 +356,7 @@ class AdditionalResponse(BaseAdditionalResponse):\n     # NOTE: waiting for pydantic to allow `typing.Type[BasicModel]` type\n     # so, going for `Any` and extra validation on\n     # routing methods\n-    models: Optional[List[Any]] = PSchema([], title=\"Additional Response Models\")\n+    models: List[Any] = PSchema([], title=\"Additional Response Models\")\n \n \n class AdditionalResponseDescription(BaseAdditionalResponse):\n\n@@ -206,7 +206,7 @@ def get_openapi_path(\n                     },\n                 }\n             for add_response_code, add_response in route.additional_responses.items():\n-                add_response_schema = {}\n+                add_response_schema: Dict[str, Any] = {}\n                 if (\n                     add_response.content_type or route.content_type.media_type\n                 ) == \"application/json\" and add_response.schema_field is not None:\n\n@@ -150,7 +150,7 @@ class APIRoute(routing.Route):\n                 add_response.status_code not in existed_codes\n             ), f\"(Duplicated Status Code): Response with status code [{add_response.status_code}] already defined!\"\n             existed_codes.append(add_response.status_code)\n-            response_models = [m for m in add_response.models]\n+            response_models: List[Any] = [m for m in add_response.models]\n             valid_response_models = True\n             try:\n                 valid_response_models = all(\n@@ -306,56 +306,6 @@ class APIRouter(routing.Router):\n             ), \"A path prefix must not end with '/', as the routes will start with '/'\"\n         for route in router.routes:\n             if isinstance(route, APIRoute):\n-                # really ugly hack and repitition\n-                prev_add_resp = route.additional_responses\n-                existed_codes = [422, route.status_code] + [\n-                    int(c) for c in prev_add_resp.keys()\n-                ]\n-                for add_response in additional_responses:\n-                    assert (\n-                        add_response.status_code not in existed_codes\n-                    ), f\"(Duplicated Status Code): Response with status code [{add_response.status_code}] already defined!\"\n-                    existed_codes.append(add_response.status_code)\n-                    response_models = [m for m in add_response.models]\n-                    valid_response_models = True\n-                    try:\n-                        valid_response_models = all(\n-                            [issubclass(m, BaseModel) for m in response_models]\n-                        )\n-                    except AttributeError as ae:\n-                        valid_response_models = False\n-                    if not valid_response_models:\n-                        raise ValueError(\n-                            \"All response models must be\"\n-                            \"a subclass of `pydantic.BaseModel`\"\n-                            \"model.\"\n-                        )\n-                    if (\n-                        add_response.content_type == \"application/json\"\n-                        or lenient_issubclass(route.content_type, JSONResponse)\n-                    ):\n-                        if len(response_models):\n-                            schema_field = Field(\n-                                name=f\"Additional_response_{add_response.status_code}\",\n-                                type_=Union[tuple(response_models)],\n-                                class_validators=[],\n-                                default=None,\n-                                required=False,\n-                                model_config=UnconstrainedConfig,\n-                                schema=Schema(None),\n-                            )\n-                        else:\n-                            schema_field = None\n-                    else:\n-                        schema_field = None\n-                    add_resp_description = AdditionalResponseDescription(\n-                        description=add_response.description,\n-                        content_type=add_response.content_type,\n-                        schema_field=schema_field,\n-                    )\n-                    route.additional_responses[\n-                        add_response.status_code\n-                    ] = add_resp_description\n                 self.add_api_route(\n                     prefix + route.path,\n                     route.endpoint,\n@@ -365,7 +315,7 @@ class APIRouter(routing.Router):\n                     summary=route.summary,\n                     description=route.description,\n                     response_description=route.response_description,\n-                    additional_responses=route.additional_responses,\n+                    additional_responses=additional_responses,\n                     deprecated=route.deprecated,\n                     methods=route.methods,\n                     operation_id=route.operation_id,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
