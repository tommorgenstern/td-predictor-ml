{"custom_id": "fastapi#f2bd2c44e2e568576ad92f49b82c99bf686dc658", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 217 | Contributors (this commit): 1 | Commits (past 90d): 10 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.49.2\"\n+__version__ = \"0.50.0\"\n \n from starlette.background import BackgroundTasks\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#0ac9b3ee5ce85b9ebc23698f8515e07017d9b9aa", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 562 | Lines Deleted: 273 | Files Changed: 237 | Hunks: 304 | Methods Changed: 34 | Complexity Δ (Sum/Max): 27/3 | Churn Δ: 835 | Churn Cumulative: 24267 | Contributors (this commit): 39 | Commits (past 90d): 286 | Contributors (cumulative): 372 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI\n+from fastapi.responses import JSONResponse\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse\n \n \n class Item(BaseModel):\n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI\n+from fastapi.responses import FileResponse\n from pydantic import BaseModel\n-from starlette.responses import FileResponse\n \n \n class Item(BaseModel):\n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI\n+from fastapi.responses import JSONResponse\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse\n \n \n class Item(BaseModel):\n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI\n+from fastapi.responses import FileResponse\n from pydantic import BaseModel\n-from starlette.responses import FileResponse\n \n \n class Item(BaseModel):\n\n@@ -1,6 +1,5 @@\n-from fastapi import Body, FastAPI\n-from starlette.responses import JSONResponse\n-from starlette.status import HTTP_201_CREATED\n+from fastapi import Body, FastAPI, status\n+from fastapi.responses import JSONResponse\n \n app = FastAPI()\n \n@@ -17,4 +16,4 @@ async def upsert_item(item_id: str, name: str = Body(None), size: int = Body(Non\n     else:\n         item = {\"name\": name, \"size\": size}\n         items[item_id] = item\n-        return JSONResponse(status_code=HTTP_201_CREATED, content=item)\n+        return JSONResponse(status_code=status.HTTP_201_CREATED, content=item)\n\n@@ -0,0 +1,11 @@\n+from fastapi import FastAPI\n+from fastapi.middleware.httpsredirect import HTTPSRedirectMiddleware\n+\n+app = FastAPI()\n+\n+app.add_middleware(HTTPSRedirectMiddleware)\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    return {\"message\": \"Hello World\"}\n\n@@ -0,0 +1,13 @@\n+from fastapi import FastAPI\n+from fastapi.middleware.trustedhost import TrustedHostMiddleware\n+\n+app = FastAPI()\n+\n+app.add_middleware(\n+    TrustedHostMiddleware, allowed_hosts=[\"example.com\", \"*.example.com\"]\n+)\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    return {\"message\": \"Hello World\"}\n\n@@ -0,0 +1,11 @@\n+from fastapi import FastAPI\n+from fastapi.middleware.gzip import GZipMiddleware\n+\n+app = FastAPI()\n+\n+app.add_middleware(GZipMiddleware, minimum_size=1000)\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    return \"somebigcontent\"\n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from .main import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from .main_b import app\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n-from starlette.websockets import WebSocket\n+from fastapi.testclient import TestClient\n+from fastapi.websockets import WebSocket\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.middleware.cors import CORSMiddleware\n+from fastapi.middleware.cors import CORSMiddleware\n \n app = FastAPI()\n \n@@ -17,3 +17,8 @@ app.add_middleware(\n     allow_methods=[\"*\"],\n     allow_headers=[\"*\"],\n )\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    return {\"message\": \"Hello World\"}\n\n@@ -1,10 +1,8 @@\n import gzip\n from typing import Callable, List\n \n-from fastapi import Body, FastAPI\n+from fastapi import Body, FastAPI, Request, Response\n from fastapi.routing import APIRoute\n-from starlette.requests import Request\n-from starlette.responses import Response\n \n \n class GzipRequest(Request):\n\n@@ -1,10 +1,8 @@\n from typing import Callable, List\n \n-from fastapi import Body, FastAPI, HTTPException\n+from fastapi import Body, FastAPI, HTTPException, Request, Response\n from fastapi.exceptions import RequestValidationError\n from fastapi.routing import APIRoute\n-from starlette.requests import Request\n-from starlette.responses import Response\n \n \n class ValidationErrorLoggingRoute(APIRoute):\n\n@@ -1,10 +1,8 @@\n import time\n from typing import Callable\n \n-from fastapi import APIRouter, FastAPI\n+from fastapi import APIRouter, FastAPI, Request, Response\n from fastapi.routing import APIRoute\n-from starlette.requests import Request\n-from starlette.responses import Response\n \n \n class TimedRoute(APIRoute):\n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.responses import UJSONResponse\n+from fastapi.responses import UJSONResponse\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.responses import HTMLResponse\n+from fastapi.responses import HTMLResponse\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.responses import HTMLResponse\n+from fastapi.responses import HTMLResponse\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.responses import HTMLResponse\n+from fastapi.responses import HTMLResponse\n \n app = FastAPI()\n \n\n@@ -0,0 +1,9 @@\n+from fastapi import FastAPI\n+from fastapi.responses import PlainTextResponse\n+\n+app = FastAPI()\n+\n+\n+@app.get(\"/\", response_class=PlainTextResponse)\n+async def main():\n+    return \"Hello World\"\n\n@@ -0,0 +1,9 @@\n+from fastapi import FastAPI\n+from fastapi.responses import RedirectResponse\n+\n+app = FastAPI()\n+\n+\n+@app.get(\"/typer\")\n+async def read_typer():\n+    return RedirectResponse(\"https://typer.tiangolo.com\")\n\n@@ -0,0 +1,14 @@\n+from fastapi import FastAPI\n+from fastapi.responses import StreamingResponse\n+\n+app = FastAPI()\n+\n+\n+async def fake_video_streamer():\n+    for i in range(10):\n+        yield b\"some fake video bytes\"\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    return StreamingResponse(fake_video_streamer())\n\n@@ -0,0 +1,11 @@\n+from fastapi import FastAPI\n+from fastapi.responses import StreamingResponse\n+\n+some_file_path = \"large-video-file.mp4\"\n+app = FastAPI()\n+\n+\n+@app.get(\"/\")\n+def main():\n+    file_like = open(some_file_path, mode=\"rb\")\n+    return StreamingResponse(file_like, media_type=\"video/mp4\")\n\n@@ -0,0 +1,10 @@\n+from fastapi import FastAPI\n+from fastapi.responses import FileResponse\n+\n+some_file_path = \"large-video-file.mp4\"\n+app = FastAPI()\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    return FileResponse(some_file_path)\n\n@@ -1,5 +1,5 @@\n from fastapi import Depends, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -4,7 +4,7 @@ from fastapi.openapi.docs import (\n     get_swagger_ui_html,\n     get_swagger_ui_oauth2_redirect_html,\n )\n-from starlette.staticfiles import StaticFiles\n+from fastapi.staticfiles import StaticFiles\n \n app = FastAPI(docs_url=None, redoc_url=None)\n \n\n@@ -1,6 +1,5 @@\n-from fastapi import FastAPI\n-from starlette.requests import Request\n-from starlette.responses import JSONResponse\n+from fastapi import FastAPI, Request\n+from fastapi.responses import JSONResponse\n \n \n class UnicornException(Exception):\n\n@@ -1,7 +1,7 @@\n from fastapi import FastAPI, HTTPException\n from fastapi.exceptions import RequestValidationError\n+from fastapi.responses import PlainTextResponse\n from starlette.exceptions import HTTPException as StarletteHTTPException\n-from starlette.responses import PlainTextResponse\n \n app = FastAPI()\n \n\n@@ -1,10 +1,8 @@\n-from fastapi import FastAPI\n+from fastapi import FastAPI, Request, status\n from fastapi.encoders import jsonable_encoder\n from fastapi.exceptions import RequestValidationError\n+from fastapi.responses import JSONResponse\n from pydantic import BaseModel\n-from starlette import status\n-from starlette.requests import Request\n-from starlette.responses import JSONResponse\n \n app = FastAPI()\n \n\n@@ -1,7 +1,6 @@\n import time\n \n-from fastapi import FastAPI\n-from starlette.requests import Request\n+from fastapi import FastAPI, Request\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n from fastapi import APIRouter, FastAPI\n+from fastapi.responses import JSONResponse\n from pydantic import BaseModel, HttpUrl\n-from starlette.responses import JSONResponse\n \n app = FastAPI()\n \n\n@@ -1,8 +1,7 @@\n from typing import Set\n \n-from fastapi import FastAPI\n+from fastapi import FastAPI, status\n from pydantic import BaseModel\n-from starlette.status import HTTP_201_CREATED\n \n app = FastAPI()\n \n@@ -15,6 +14,6 @@ class Item(BaseModel):\n     tags: Set[str] = []\n \n \n-@app.post(\"/items/\", response_model=Item, status_code=HTTP_201_CREATED)\n+@app.post(\"/items/\", response_model=Item, status_code=status.HTTP_201_CREATED)\n async def create_item(*, item: Item):\n     return item\n\n@@ -1,7 +1,7 @@\n from typing import List\n \n from fastapi import FastAPI, File, UploadFile\n-from starlette.responses import HTMLResponse\n+from fastapi.responses import HTMLResponse\n \n app = FastAPI()\n \n\n@@ -1,6 +1,4 @@\n-from fastapi import FastAPI\n-from starlette.responses import Response\n-from starlette.status import HTTP_201_CREATED\n+from fastapi import FastAPI, Response, status\n \n app = FastAPI()\n \n@@ -11,5 +9,5 @@ tasks = {\"foo\": \"Listen to the Bar Fighters\"}\n def get_or_create_task(task_id: str, response: Response):\n     if task_id not in tasks:\n         tasks[task_id] = \"This didn't exist before\"\n-        response.status_code = HTTP_201_CREATED\n+        response.status_code = status.HTTP_201_CREATED\n     return tasks[task_id]\n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.responses import JSONResponse\n+from fastapi.responses import JSONResponse\n \n app = FastAPI()\n \n\n@@ -1,5 +1,4 @@\n-from fastapi import FastAPI\n-from starlette.responses import Response\n+from fastapi import FastAPI, Response\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ from datetime import datetime\n \n from fastapi import FastAPI\n from fastapi.encoders import jsonable_encoder\n+from fastapi.responses import JSONResponse\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse\n \n \n class Item(BaseModel):\n\n@@ -1,5 +1,4 @@\n-from fastapi import FastAPI\n-from starlette.responses import Response\n+from fastapi import FastAPI, Response\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.responses import JSONResponse\n+from fastapi.responses import JSONResponse\n \n app = FastAPI()\n \n\n@@ -1,5 +1,4 @@\n-from fastapi import FastAPI\n-from starlette.responses import Response\n+from fastapi import FastAPI, Response\n \n app = FastAPI()\n \n\n@@ -1,9 +1,8 @@\n-from fastapi import FastAPI\n-from starlette.status import HTTP_201_CREATED\n+from fastapi import FastAPI, status\n \n app = FastAPI()\n \n \n-@app.post(\"/items/\", status_code=HTTP_201_CREATED)\n+@app.post(\"/items/\", status_code=status.HTTP_201_CREATED)\n async def create_item(name: str):\n     return {\"name\": name}\n\n@@ -1,7 +1,6 @@\n-from fastapi import Depends, FastAPI, HTTPException\n+from fastapi import Depends, FastAPI, HTTPException, status\n from fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\n from pydantic import BaseModel\n-from starlette.status import HTTP_401_UNAUTHORIZED\n \n fake_users_db = {\n     \"johndoe\": {\n@@ -58,7 +57,7 @@ async def get_current_user(token: str = Depends(oauth2_scheme)):\n     user = fake_decode_token(token)\n     if not user:\n         raise HTTPException(\n-            status_code=HTTP_401_UNAUTHORIZED,\n+            status_code=status.HTTP_401_UNAUTHORIZED,\n             detail=\"Invalid authentication credentials\",\n             headers={\"WWW-Authenticate\": \"Bearer\"},\n         )\n\n@@ -1,12 +1,11 @@\n from datetime import datetime, timedelta\n \n import jwt\n-from fastapi import Depends, FastAPI, HTTPException\n+from fastapi import Depends, FastAPI, HTTPException, status\n from fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\n from jwt import PyJWTError\n from passlib.context import CryptContext\n from pydantic import BaseModel\n-from starlette.status import HTTP_401_UNAUTHORIZED\n \n # to get a string like this run:\n # openssl rand -hex 32\n@@ -89,7 +88,7 @@ def create_access_token(*, data: dict, expires_delta: timedelta = None):\n \n async def get_current_user(token: str = Depends(oauth2_scheme)):\n     credentials_exception = HTTPException(\n-        status_code=HTTP_401_UNAUTHORIZED,\n+        status_code=status.HTTP_401_UNAUTHORIZED,\n         detail=\"Could not validate credentials\",\n         headers={\"WWW-Authenticate\": \"Bearer\"},\n     )\n@@ -118,7 +117,7 @@ async def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(\n     user = authenticate_user(fake_users_db, form_data.username, form_data.password)\n     if not user:\n         raise HTTPException(\n-            status_code=HTTP_401_UNAUTHORIZED,\n+            status_code=status.HTTP_401_UNAUTHORIZED,\n             detail=\"Incorrect username or password\",\n             headers={\"WWW-Authenticate\": \"Bearer\"},\n         )\n\n@@ -2,7 +2,7 @@ from datetime import datetime, timedelta\n from typing import List\n \n import jwt\n-from fastapi import Depends, FastAPI, HTTPException, Security\n+from fastapi import Depends, FastAPI, HTTPException, Security, status\n from fastapi.security import (\n     OAuth2PasswordBearer,\n     OAuth2PasswordRequestForm,\n@@ -11,7 +11,6 @@ from fastapi.security import (\n from jwt import PyJWTError\n from passlib.context import CryptContext\n from pydantic import BaseModel, ValidationError\n-from starlette.status import HTTP_401_UNAUTHORIZED\n \n # to get a string like this run:\n # openssl rand -hex 32\n@@ -111,7 +110,7 @@ async def get_current_user(\n     else:\n         authenticate_value = f\"Bearer\"\n     credentials_exception = HTTPException(\n-        status_code=HTTP_401_UNAUTHORIZED,\n+        status_code=status.HTTP_401_UNAUTHORIZED,\n         detail=\"Could not validate credentials\",\n         headers={\"WWW-Authenticate\": authenticate_value},\n     )\n@@ -130,7 +129,7 @@ async def get_current_user(\n     for scope in security_scopes.scopes:\n         if scope not in token_data.scopes:\n             raise HTTPException(\n-                status_code=HTTP_401_UNAUTHORIZED,\n+                status_code=status.HTTP_401_UNAUTHORIZED,\n                 detail=\"Not enough permissions\",\n                 headers={\"WWW-Authenticate\": authenticate_value},\n             )\n\n@@ -1,8 +1,7 @@\n import secrets\n \n-from fastapi import Depends, FastAPI, HTTPException\n+from fastapi import Depends, FastAPI, HTTPException, status\n from fastapi.security import HTTPBasic, HTTPBasicCredentials\n-from starlette.status import HTTP_401_UNAUTHORIZED\n \n app = FastAPI()\n \n@@ -14,7 +13,7 @@ def get_current_username(credentials: HTTPBasicCredentials = Depends(security)):\n     correct_password = secrets.compare_digest(credentials.password, \"swordfish\")\n     if not (correct_username and correct_password):\n         raise HTTPException(\n-            status_code=HTTP_401_UNAUTHORIZED,\n+            status_code=status.HTTP_401_UNAUTHORIZED,\n             detail=\"Incorrect email or password\",\n             headers={\"WWW-Authenticate\": \"Basic\"},\n         )\n\n@@ -1,9 +1,7 @@\n from typing import List\n \n-from fastapi import Depends, FastAPI, HTTPException\n+from fastapi import Depends, FastAPI, HTTPException, Request, Response\n from sqlalchemy.orm import Session\n-from starlette.requests import Request\n-from starlette.responses import Response\n \n from . import crud, models, schemas\n from .database import SessionLocal, engine\n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.staticfiles import StaticFiles\n+from fastapi.staticfiles import StaticFiles\n \n app = FastAPI()\n \n\n@@ -1,7 +1,6 @@\n-from fastapi import FastAPI\n-from starlette.requests import Request\n-from starlette.staticfiles import StaticFiles\n-from starlette.templating import Jinja2Templates\n+from fastapi import FastAPI, Request\n+from fastapi.staticfiles import StaticFiles\n+from fastapi.templating import Jinja2Templates\n \n app = FastAPI()\n \n\n@@ -1,5 +1,4 @@\n-from fastapi import FastAPI\n-from starlette.requests import Request\n+from fastapi import FastAPI, Request\n \n app = FastAPI()\n \n\n@@ -1,6 +1,5 @@\n-from fastapi import FastAPI\n-from starlette.responses import HTMLResponse\n-from starlette.websockets import WebSocket\n+from fastapi import FastAPI, WebSocket\n+from fastapi.responses import HTMLResponse\n \n app = FastAPI()\n \n\n@@ -1,7 +1,5 @@\n-from fastapi import Cookie, Depends, FastAPI, Header\n-from starlette.responses import HTMLResponse\n-from starlette.status import WS_1008_POLICY_VIOLATION\n-from starlette.websockets import WebSocket\n+from fastapi import Cookie, Depends, FastAPI, Header, WebSocket, status\n+from fastapi.responses import HTMLResponse\n \n app = FastAPI()\n \n@@ -56,7 +54,7 @@ async def get_cookie_or_client(\n     websocket: WebSocket, session: str = Cookie(None), x_client: str = Header(None)\n ):\n     if session is None and x_client is None:\n-        await websocket.close(code=WS_1008_POLICY_VIOLATION)\n+        await websocket.close(code=status.WS_1008_POLICY_VIOLATION)\n     return session or x_client\n \n \n\n@@ -0,0 +1,22 @@\n+from flask import Flask, escape, request\n+from fastapi import FastAPI\n+from fastapi.middleware.wsgi import WSGIMiddleware\n+\n+flask_app = Flask(__name__)\n+\n+\n+@flask_app.route(\"/\")\n+def flask_main():\n+    name = request.args.get(\"name\", \"World\")\n+    return f\"Hello, {escape(name)} from Flask!\"\n+\n+\n+app = FastAPI()\n+\n+\n+@app.get(\"/v2\")\n+def read_main():\n+    return {\"message\": \"Hello World\"}\n+\n+\n+app.mount(\"/v1\", WSGIMiddleware(flask_app))\n\n@@ -2,9 +2,10 @@\n \n __version__ = \"0.50.0\"\n \n-from starlette.background import BackgroundTasks\n+from starlette import status\n \n from .applications import FastAPI\n+from .background import BackgroundTasks\n from .datastructures import UploadFile\n from .exceptions import HTTPException\n from .param_functions import (\n@@ -18,4 +19,7 @@ from .param_functions import (\n     Query,\n     Security,\n )\n+from .requests import Request\n+from .responses import Response\n from .routing import APIRouter\n+from .websockets import WebSocket\n\n@@ -0,0 +1 @@\n+from starlette.background import BackgroundTasks  # noqa\n\n@@ -1,7 +1,8 @@\n from typing import Any, Callable\n \n from starlette.concurrency import iterate_in_threadpool  # noqa\n-from starlette.concurrency import run_in_threadpool\n+from starlette.concurrency import run_in_threadpool  # noqa\n+from starlette.concurrency import run_until_first_complete  # noqa\n \n asynccontextmanager_error_message = \"\"\"\n FastAPI's contextmanager_in_threadpool require Python 3.7 or above,\n\n@@ -0,0 +1 @@\n+from starlette.middleware import Middleware\n\n@@ -0,0 +1 @@\n+from starlette.middleware.cors import CORSMiddleware  # noqa\n\n@@ -0,0 +1 @@\n+from starlette.middleware.gzip import GZipMiddleware  # noqa\n\n@@ -0,0 +1 @@\n+from starlette.middleware.httpsredirect import HTTPSRedirectMiddleware  # noqa\n\n@@ -0,0 +1 @@\n+from starlette.middleware.trustedhost import TrustedHostMiddleware  # noqa\n\n@@ -0,0 +1 @@\n+from starlette.middleware.wsgi import WSGIMiddleware  # noqa\n\n@@ -0,0 +1 @@\n+from starlette.requests import Request  # noqa\n\n@@ -0,0 +1,8 @@\n+from starlette.responses import FileResponse  # noqa\n+from starlette.responses import HTMLResponse  # noqa\n+from starlette.responses import JSONResponse  # noqa\n+from starlette.responses import PlainTextResponse  # noqa\n+from starlette.responses import RedirectResponse  # noqa\n+from starlette.responses import Response  # noqa\n+from starlette.responses import StreamingResponse  # noqa\n+from starlette.responses import UJSONResponse  # noqa\n\n@@ -29,6 +29,7 @@ from starlette.concurrency import run_in_threadpool\n from starlette.exceptions import HTTPException\n from starlette.requests import Request\n from starlette.responses import JSONResponse, Response\n+from starlette.routing import Mount  # noqa\n from starlette.routing import (\n     compile_path,\n     get_name,\n\n@@ -0,0 +1 @@\n+from starlette.staticfiles import StaticFiles  # noqa\n\n@@ -0,0 +1 @@\n+from starlette.templating import Jinja2Templates  # noqa\n\n@@ -0,0 +1 @@\n+from starlette.testclient import TestClient  # noqa\n\n@@ -0,0 +1,2 @@\n+from starlette.websockets import WebSocket  # noqa\n+from starlette.websockets import WebSocketDisconnect  # noqa\n\n@@ -1,8 +1,8 @@\n from typing import Dict\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import APIRouter, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n router = APIRouter()\n \n\n@@ -1,6 +1,6 @@\n import pytest\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,9 +1,9 @@\n import typing\n \n from fastapi import FastAPI\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,9 +1,9 @@\n import typing\n \n from fastapi import FastAPI\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import APIRouter, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n router = APIRouter()\n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from .main import app\n \n\n@@ -1,7 +1,7 @@\n from functools import partial\n \n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n \n def main(some_arg, q: str = None):\n\n@@ -1,7 +1,7 @@\n import pytest\n from fastapi import APIRouter, FastAPI\n from fastapi.routing import APIRoute\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n swagger_ui_oauth2_redirect_url = \"/docs/redirect\"\n \n\n@@ -1,8 +1,8 @@\n from datetime import datetime, timezone\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n \n class ModelWithDatetimeField(BaseModel):\n\n@@ -2,8 +2,8 @@ from typing import Any\n \n import orjson\n from fastapi import APIRouter, FastAPI\n-from starlette.responses import HTMLResponse, JSONResponse, PlainTextResponse\n-from starlette.testclient import TestClient\n+from fastapi.responses import HTMLResponse, JSONResponse, PlainTextResponse\n+from fastapi.testclient import TestClient\n \n \n class ORJSONResponse(JSONResponse):\n\n@@ -1,6 +1,6 @@\n from fastapi import APIRouter, FastAPI\n-from starlette.responses import HTMLResponse, JSONResponse, PlainTextResponse\n-from starlette.testclient import TestClient\n+from fastapi.responses import HTMLResponse, JSONResponse, PlainTextResponse\n+from fastapi.testclient import TestClient\n \n \n class OverrideResponse(JSONResponse):\n\n@@ -1,5 +1,5 @@\n from fastapi import Depends, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n import pytest\n from fastapi import Depends, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,7 +2,7 @@ from typing import Dict\n \n import pytest\n from fastapi import BackgroundTasks, Depends, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n state = {\n\n@@ -1,6 +1,6 @@\n import pytest\n from fastapi import APIRouter, Depends, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n import pytest\n from fastapi import APIRouter, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n from fastapi import FastAPI\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n import pytest\n from fastapi import Depends, FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel, ValidationError, validator\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI, Form\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,6 @@\n-from fastapi import APIRouter, FastAPI\n-from starlette.requests import Request\n-from starlette.responses import JSONResponse\n-from starlette.testclient import TestClient\n+from fastapi import APIRouter, FastAPI, Request\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n router = APIRouter()\n\n@@ -1,5 +1,5 @@\n from fastapi import APIRouter, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ import uuid\n \n import pytest\n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from .app.main import app\n \n\n@@ -2,8 +2,8 @@ from decimal import Decimal\n from typing import List\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel, condecimal\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n from typing import List\n \n from fastapi import FastAPI, Query\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI(swagger_ui_oauth2_redirect_url=None)\n \n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI\n from fastapi.params import Param\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import Depends, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from .main import app\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from .main import app\n \n\n@@ -1,6 +1,5 @@\n-from fastapi import Depends, FastAPI, Header\n-from starlette.status import HTTP_200_OK\n-from starlette.testclient import TestClient\n+from fastapi import Depends, FastAPI, Header, status\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n@@ -89,7 +88,7 @@ schema = {\n \n def test_schema():\n     response = client.get(\"/openapi.json\")\n-    assert response.status_code == HTTP_200_OK\n+    assert response.status_code == status.HTTP_200_OK\n     actual_schema = response.json()\n     assert actual_schema == schema\n     assert (\n@@ -99,5 +98,5 @@ def test_schema():\n \n def test_response():\n     response = client.get(\"/\", headers={\"someheader\": \"hello\"})\n-    assert response.status_code == HTTP_200_OK\n+    assert response.status_code == status.HTTP_200_OK\n     assert response.json() == {\"dep1\": \"hello\", \"dep2\": \"hello123\"}\n\n@@ -1,8 +1,8 @@\n import typing\n \n from fastapi import Body, FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,5 @@\n-from fastapi import Depends, FastAPI\n-from starlette.responses import Response\n-from starlette.testclient import TestClient\n+from fastapi import Depends, FastAPI, Response\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,9 +1,9 @@\n import typing\n \n-from fastapi import FastAPI\n+from fastapi import FastAPI, Response\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse, Response\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,9 +1,9 @@\n import typing\n \n from fastapi import FastAPI\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.responses import JSONResponse\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,8 +1,8 @@\n from typing import List\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n \n class Model(BaseModel):\n\n@@ -1,6 +1,6 @@\n from fastapi import APIRouter, FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n \n class State(BaseModel):\n\n@@ -1,5 +1,5 @@\n from fastapi import APIRouter, FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n from fastapi import Depends, FastAPI, Security\n from fastapi.security import APIKeyCookie\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ from typing import Optional\n \n from fastapi import Depends, FastAPI, Security\n from fastapi.security import APIKeyCookie\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n from fastapi import Depends, FastAPI, Security\n from fastapi.security import APIKeyHeader\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ from typing import Optional\n \n from fastapi import Depends, FastAPI, Security\n from fastapi.security import APIKeyHeader\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n from fastapi import Depends, FastAPI, Security\n from fastapi.security import APIKeyQuery\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ from typing import Optional\n \n from fastapi import Depends, FastAPI, Security\n from fastapi.security import APIKeyQuery\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI, Security\n from fastapi.security.http import HTTPAuthorizationCredentials, HTTPBase\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,7 +2,7 @@ from typing import Optional\n \n from fastapi import FastAPI, Security\n from fastapi.security.http import HTTPAuthorizationCredentials, HTTPBase\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -3,8 +3,8 @@ from typing import Optional\n \n from fastapi import FastAPI, Security\n from fastapi.security import HTTPBasic, HTTPBasicCredentials\n+from fastapi.testclient import TestClient\n from requests.auth import HTTPBasicAuth\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ from base64 import b64encode\n \n from fastapi import FastAPI, Security\n from fastapi.security import HTTPBasic, HTTPBasicCredentials\n+from fastapi.testclient import TestClient\n from requests.auth import HTTPBasicAuth\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI, Security\n from fastapi.security import HTTPAuthorizationCredentials, HTTPBearer\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,7 +2,7 @@ from typing import Optional\n \n from fastapi import FastAPI, Security\n from fastapi.security import HTTPAuthorizationCredentials, HTTPBearer\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI, Security\n from fastapi.security import HTTPAuthorizationCredentials, HTTPDigest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,7 +2,7 @@ from typing import Optional\n \n from fastapi import FastAPI, Security\n from fastapi.security import HTTPAuthorizationCredentials, HTTPDigest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ import pytest\n from fastapi import Depends, FastAPI, Security\n from fastapi.security import OAuth2\n from fastapi.security.oauth2 import OAuth2PasswordRequestFormStrict\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,7 +2,7 @@ from typing import Optional\n \n from fastapi import FastAPI, Security\n from fastapi.security import OAuth2AuthorizationCodeBearer\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -4,8 +4,8 @@ import pytest\n from fastapi import Depends, FastAPI, Security\n from fastapi.security import OAuth2\n from fastapi.security.oauth2 import OAuth2PasswordRequestFormStrict\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,7 +2,7 @@ from typing import Optional\n \n from fastapi import FastAPI, Security\n from fastapi.security import OAuth2PasswordBearer\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n from fastapi import Depends, FastAPI, Security\n from fastapi.security.open_id_connect_url import OpenIdConnect\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,8 +2,8 @@ from typing import Optional\n \n from fastapi import Depends, FastAPI, Security\n from fastapi.security.open_id_connect_url import OpenIdConnect\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,8 +1,8 @@\n from typing import List\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,8 +1,8 @@\n from typing import List\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic.dataclasses import dataclass\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,8 +1,8 @@\n from typing import Optional\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,6 @@\n from fastapi import FastAPI, HTTPException\n+from fastapi.testclient import TestClient\n from starlette.exceptions import HTTPException as StarletteHTTPException\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI, Path\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,7 +1,7 @@\n from fastapi import APIRouter, FastAPI\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel, HttpUrl\n-from starlette.responses import JSONResponse\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,5 +1,5 @@\n from fastapi import FastAPI\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n swagger_ui_init_oauth = {\"clientId\": \"the-foo-clients\", \"appName\": \"The Predendapp\"}\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from additional_responses.tutorial001 import app\n \n\n@@ -1,7 +1,7 @@\n import os\n import shutil\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from additional_responses.tutorial002 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from additional_responses.tutorial003 import app\n \n\n@@ -1,7 +1,7 @@\n import os\n import shutil\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from additional_responses.tutorial004 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from additional_status_codes.tutorial001 import app\n \n\n\n@@ -0,0 +1,14 @@\n+from fastapi.testclient import TestClient\n+\n+from advanced_middleware.tutorial001 import app\n+\n+\n+def test_middleware():\n+    client = TestClient(app, base_url=\"https://testserver\")\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n+\n+    client = TestClient(app)\n+    response = client.get(\"/\", allow_redirects=False)\n+    assert response.status_code == 307\n+    assert response.headers[\"location\"] == \"https://testserver/\"\n\n@@ -0,0 +1,15 @@\n+from fastapi.testclient import TestClient\n+\n+from advanced_middleware.tutorial002 import app\n+\n+\n+def test_middleware():\n+    client = TestClient(app, base_url=\"http://example.com\")\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n+    client = TestClient(app, base_url=\"http://subdomain.example.com\")\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n+    client = TestClient(app, base_url=\"http://invalidhost\")\n+    response = client.get(\"/\")\n+    assert response.status_code == 400\n\n@@ -0,0 +1,22 @@\n+from fastapi.responses import PlainTextResponse\n+from fastapi.testclient import TestClient\n+\n+from advanced_middleware.tutorial003 import app\n+\n+\n+@app.get(\"/large\")\n+async def large():\n+    return PlainTextResponse(\"x\" * 4000, status_code=200)\n+\n+\n+client = TestClient(app)\n+\n+\n+def test_middleware():\n+    response = client.get(\"/large\", headers={\"accept-encoding\": \"gzip\"})\n+    assert response.status_code == 200\n+    assert response.text == \"x\" * 4000\n+    assert response.headers[\"Content-Encoding\"] == \"gzip\"\n+    assert int(response.headers[\"Content-Length\"]) < 4000\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from application_configuration.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from async_sql_databases.tutorial001 import app\n \n\n@@ -1,7 +1,7 @@\n import os\n from pathlib import Path\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from background_tasks.tutorial001 import app\n \n\n@@ -1,7 +1,7 @@\n import os\n from pathlib import Path\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from background_tasks.tutorial002 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from bigger_applications.app.main import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from body.tutorial001 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from body_fields.tutorial001 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from body_multiple_params.tutorial001 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from body_multiple_params.tutorial003 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from body_nested_models.tutorial009 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from body_updates.tutorial001 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from cookie_params.tutorial001 import app\n \n\n\n@@ -0,0 +1,37 @@\n+from fastapi.testclient import TestClient\n+\n+from cors.tutorial001 import app\n+\n+\n+def test_cors():\n+    client = TestClient(app)\n+    # Test pre-flight response\n+    headers = {\n+        \"Origin\": \"https://localhost.tiangolo.com\",\n+        \"Access-Control-Request-Method\": \"GET\",\n+        \"Access-Control-Request-Headers\": \"X-Example\",\n+    }\n+    response = client.options(\"/\", headers=headers)\n+    assert response.status_code == 200\n+    assert response.text == \"OK\"\n+    assert (\n+        response.headers[\"access-control-allow-origin\"]\n+        == \"https://localhost.tiangolo.com\"\n+    )\n+    assert response.headers[\"access-control-allow-headers\"] == \"X-Example\"\n+\n+    # Test standard response\n+    headers = {\"Origin\": \"https://localhost.tiangolo.com\"}\n+    response = client.get(\"/\", headers=headers)\n+    assert response.status_code == 200\n+    assert response.json() == {\"message\": \"Hello World\"}\n+    assert (\n+        response.headers[\"access-control-allow-origin\"]\n+        == \"https://localhost.tiangolo.com\"\n+    )\n+\n+    # Test non-CORS response\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n+    assert response.json() == {\"message\": \"Hello World\"}\n+    assert \"access-control-allow-origin\" not in response.headers\n\n@@ -2,8 +2,8 @@ import gzip\n import json\n \n import pytest\n-from starlette.requests import Request\n-from starlette.testclient import TestClient\n+from fastapi import Request\n+from fastapi.testclient import TestClient\n \n from custom_request_and_route.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from custom_request_and_route.tutorial002 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from custom_request_and_route.tutorial003 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from custom_response.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from custom_response.tutorial004 import app\n \n\n@@ -0,0 +1,36 @@\n+from fastapi.testclient import TestClient\n+\n+from custom_response.tutorial005 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/\": {\n+            \"get\": {\n+                \"summary\": \"Main\",\n+                \"operationId\": \"main__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"text/plain\": {\"schema\": {\"type\": \"string\"}}},\n+                    }\n+                },\n+            }\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+def test_get():\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n+    assert response.text == \"Hello World\"\n\n@@ -0,0 +1,11 @@\n+from fastapi.testclient import TestClient\n+\n+from custom_response.tutorial006 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_get():\n+    response = client.get(\"/typer\", allow_redirects=False)\n+    assert response.status_code == 307\n+    assert response.headers[\"location\"] == \"https://typer.tiangolo.com\"\n\n@@ -0,0 +1,11 @@\n+from fastapi.testclient import TestClient\n+\n+from custom_response.tutorial007 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_get():\n+    fake_content = b\"some fake video bytes\"\n+    response = client.get(\"/\")\n+    assert response.content == fake_content * 10\n\n@@ -0,0 +1,17 @@\n+from pathlib import Path\n+\n+from fastapi.testclient import TestClient\n+\n+from custom_response import tutorial008\n+from custom_response.tutorial008 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_get(tmp_path: Path):\n+    file_path: Path = tmp_path / \"large-video-file.mp4\"\n+    tutorial008.some_file_path = str(file_path)\n+    test_content = b\"Fake video bytes\"\n+    file_path.write_bytes(test_content)\n+    response = client.get(\"/\")\n+    assert response.content == test_content\n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from dependencies.tutorial001 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from dependencies.tutorial004 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from dependencies.tutorial006 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from events.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from events.tutorial002 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from extending_openapi.tutorial001 import app\n \n\n@@ -2,7 +2,7 @@ import os\n from pathlib import Path\n \n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n \n @pytest.fixture(scope=\"module\")\n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from extra_data_types.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from extra_models.tutorial003 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from extra_models.tutorial004 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from extra_models.tutorial005 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from first_steps.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from handling_errors.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from handling_errors.tutorial002 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from handling_errors.tutorial003 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from handling_errors.tutorial004 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from handling_errors.tutorial005 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from handling_errors.tutorial006 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from header_params.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from openapi_callbacks.tutorial001 import app, invoice_notification\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_operation_advanced_configuration.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_operation_advanced_configuration.tutorial002 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_operation_advanced_configuration.tutorial003 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_operation_advanced_configuration.tutorial004 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_operation_configuration.tutorial005 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_operation_configuration.tutorial006 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_params.tutorial004 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from path_params.tutorial005 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from query_params.tutorial005 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from query_params.tutorial006 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from query_params.tutorial007 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from query_params_str_validations.tutorial010 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from query_params_str_validations.tutorial011 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from query_params_str_validations.tutorial012 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from query_params_str_validations.tutorial013 import app\n \n\n@@ -1,6 +1,6 @@\n import os\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from request_files.tutorial001 import app\n \n\n@@ -1,6 +1,6 @@\n import os\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from request_files.tutorial002 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from request_forms.tutorial001 import app\n \n\n@@ -1,7 +1,7 @@\n import os\n from pathlib import Path\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from request_forms_and_files.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_change_status_code.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_cookies.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_cookies.tutorial002 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_headers.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_headers.tutorial002 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_model.tutorial003 import app\n \n\n@@ -1,5 +1,5 @@\n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_model.tutorial004 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_model.tutorial005 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from response_model.tutorial006 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from security.tutorial001 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from security.tutorial003 import app\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from security.tutorial005 import (\n     app,\n\n@@ -1,7 +1,7 @@\n from base64 import b64encode\n \n+from fastapi.testclient import TestClient\n from requests.auth import HTTPBasicAuth\n-from starlette.testclient import TestClient\n \n from security.tutorial006 import app\n \n\n@@ -1,7 +1,7 @@\n from pathlib import Path\n \n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n openapi_schema = {\n     \"openapi\": \"3.0.2\",\n\n@@ -1,7 +1,7 @@\n from pathlib import Path\n \n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n openapi_schema = {\n     \"openapi\": \"3.0.2\",\n\n@@ -3,7 +3,7 @@ from pathlib import Path\n from unittest.mock import MagicMock\n \n import pytest\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from ...utils import skip_py36\n \n\n@@ -1,4 +1,4 @@\n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n from sub_applications.tutorial001 import app\n \n\n@@ -1,6 +1,6 @@\n import shutil\n \n-from starlette.testclient import TestClient\n+from fastapi.testclient import TestClient\n \n \n def test_main():\n\n@@ -1,6 +1,6 @@\n import pytest\n-from starlette.testclient import TestClient\n-from starlette.websockets import WebSocketDisconnect\n+from fastapi.testclient import TestClient\n+from fastapi.websockets import WebSocketDisconnect\n from websockets.tutorial001 import app\n \n client = TestClient(app)\n\n@@ -1,6 +1,6 @@\n import pytest\n-from starlette.testclient import TestClient\n-from starlette.websockets import WebSocketDisconnect\n+from fastapi.testclient import TestClient\n+from fastapi.websockets import WebSocketDisconnect\n from websockets.tutorial002 import app\n \n client = TestClient(app)\n\n\n@@ -0,0 +1,17 @@\n+from fastapi.testclient import TestClient\n+\n+from wsgi.tutorial001 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_flask():\n+    response = client.get(\"/v1/\")\n+    assert response.status_code == 200\n+    assert response.text == \"Hello, World from Flask!\"\n+\n+\n+def test_app():\n+    response = client.get(\"/v2\")\n+    assert response.status_code == 200\n+    assert response.json() == {\"message\": \"Hello World\"}\n\n@@ -1,8 +1,8 @@\n from typing import Optional, Union\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,8 +1,8 @@\n from typing import Optional, Union\n \n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel\n-from starlette.testclient import TestClient\n \n from .utils import skip_py36\n \n\n@@ -2,8 +2,8 @@ from typing import List\n \n import pytest\n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import BaseModel, ValidationError\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -2,9 +2,9 @@ from typing import List\n \n import pytest\n from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n from pydantic import ValidationError\n from pydantic.dataclasses import dataclass\n-from starlette.testclient import TestClient\n \n app = FastAPI()\n \n\n@@ -1,6 +1,5 @@\n-from fastapi import APIRouter, FastAPI\n-from starlette.testclient import TestClient\n-from starlette.websockets import WebSocket\n+from fastapi import APIRouter, FastAPI, WebSocket\n+from fastapi.testclient import TestClient\n \n router = APIRouter()\n prefix_router = APIRouter()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
