{"custom_id": "fastapi#b268c39758f5d04a11fbe4fe3b37d143aa3fca5c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 63 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 63 | Churn Cumulative: 63 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -0,0 +1,63 @@\n+import logging\n+from datetime import datetime\n+from pathlib import Path\n+from typing import List, Optional\n+\n+import httpx\n+from pydantic import BaseModel, BaseSettings, SecretStr\n+\n+github_api = \"https://api.github.com\"\n+netlify_api = \"https://api.netlify.com\"\n+\n+\n+class Settings(BaseSettings):\n+    input_name: str\n+    input_token: SecretStr\n+    input_path: str\n+    github_repository: str\n+    github_event_path: Path\n+    github_event_name: Optional[str] = None\n+\n+\n+class Artifact(BaseModel):\n+    id: int\n+    node_id: str\n+    name: str\n+    size_in_bytes: int\n+    url: str\n+    archive_download_url: str\n+    expired: bool\n+    created_at: datetime\n+    updated_at: datetime\n+\n+\n+class ArtifactResponse(BaseModel):\n+    total_count: int\n+    artifacts: List[Artifact]\n+\n+\n+if __name__ == \"__main__\":\n+    logging.basicConfig(level=logging.INFO)\n+    settings = Settings()\n+    logging.info(f\"Using config: {settings.json()}\")\n+    github_headers = {\n+        \"Authorization\": f\"token {settings.input_token.get_secret_value()}\"\n+    }\n+    response = httpx.get(\n+        f\"{github_api}/repos/{settings.github_repository}/actions/artifacts\",\n+        headers=github_headers,\n+    )\n+    data = response.json()\n+    artifacts_response = ArtifactResponse.parse_obj(data)\n+    use_artifact: Optional[Artifact] = None\n+    for artifact in artifacts_response.artifacts:\n+        if artifact.name == settings.input_name:\n+            use_artifact = artifact\n+            break\n+    assert use_artifact\n+    file_response = httpx.get(\n+        use_artifact.archive_download_url, headers=github_headers, timeout=30\n+    )\n+    zip_file = Path(settings.input_path)\n+    zip_file.write_bytes(file_response.content)\n+    logging.info(\"Finished\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#7032dfb4f1f53554fd26c1b28169eb63c1d4f1de", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 94 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 94 | Churn Cumulative: 94 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -0,0 +1,94 @@\n+import logging\n+from datetime import datetime\n+from pathlib import Path\n+from typing import List, Optional\n+\n+import httpx\n+from github import Github\n+from github.NamedUser import NamedUser\n+from pydantic import BaseModel, BaseSettings, SecretStr\n+\n+github_api = \"https://api.github.com\"\n+netlify_api = \"https://api.netlify.com\"\n+\n+\n+class Settings(BaseSettings):\n+    input_token: SecretStr\n+    github_repository: str\n+    github_event_path: Path\n+    github_event_name: Optional[str] = None\n+\n+\n+class Artifact(BaseModel):\n+    id: int\n+    node_id: str\n+    name: str\n+    size_in_bytes: int\n+    url: str\n+    archive_download_url: str\n+    expired: bool\n+    created_at: datetime\n+    updated_at: datetime\n+\n+\n+class ArtifactResponse(BaseModel):\n+    total_count: int\n+    artifacts: List[Artifact]\n+\n+\n+def get_message(commit: str) -> str:\n+    return f\"Docs preview for commit {commit} at\"\n+\n+\n+if __name__ == \"__main__\":\n+    logging.basicConfig(level=logging.INFO)\n+    settings = Settings()\n+    logging.info(f\"Using config: {settings.json()}\")\n+    g = Github(settings.input_token.get_secret_value())\n+    repo = g.get_repo(settings.github_repository)\n+    owner: NamedUser = repo.owner\n+    headers = {\"Authorization\": f\"token {settings.input_token.get_secret_value()}\"}\n+    prs = list(repo.get_pulls(state=\"open\"))\n+    for pr in prs:\n+        logging.info(\"-----\")\n+        logging.info(f\"Processing PR #{pr.number}: {pr.title}\")\n+        pr_comments = list(pr.get_issue_comments())\n+        pr_commits = list(pr.get_commits())\n+        last_commit = pr_commits[0]\n+        for pr_commit in pr_commits:\n+            if pr_commit.commit.author.date > last_commit.commit.author.date:\n+                last_commit = pr_commit\n+        commit = last_commit.commit.sha\n+        logging.info(f\"Last commit: {commit}\")\n+        message = get_message(commit)\n+        notified = False\n+        for pr_comment in pr_comments:\n+            if message in pr_comment.body:\n+                notified = True\n+        logging.info(f\"Docs preview was notified: {notified}\")\n+        if not notified:\n+            response = httpx.get(\n+                f\"{github_api}/repos/{settings.github_repository}/actions/artifacts\",\n+                headers=headers,\n+            )\n+            data = response.json()\n+            artifacts_response = ArtifactResponse.parse_obj(data)\n+            use_artifact: Optional[Artifact] = None\n+            for artifact in artifacts_response.artifacts:\n+                if artifact.name == settings.input_name:\n+                    use_artifact = artifact\n+                    break\n+            if use_artifact:\n+                logging.info(f\"Existing artifact: {use_artifact.name}\")\n+                response = httpx.post(\n+                    \"https://api.github.com/repos/tiangolo/fastapi/actions/workflows/preview-docs.yml/dispatches\",\n+                    headers=headers,\n+                    json={\n+                        \"ref\": \"master\",\n+                        \"inputs\": {\"pr\": f\"{pr.number}\", \"name\": f\"docs-zip-{commit}\"},\n+                    },\n+                )\n+                logging.info(\n+                    f\"Trigger sent, response status: {response.status_code} - content: {response.content}\"\n+                )\n+    logging.info(\"Finished\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#e0080e5f75b3f58309222591c529e4dbf1dcc895", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 99 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -67,6 +67,7 @@ if __name__ == \"__main__\":\n                 notified = True\n         logging.info(f\"Docs preview was notified: {notified}\")\n         if not notified:\n+            artifact_name = f\"docs-zip-{commit}\"\n             response = httpx.get(\n                 f\"{github_api}/repos/{settings.github_repository}/actions/artifacts\",\n                 headers=headers,\n@@ -75,7 +76,7 @@ if __name__ == \"__main__\":\n             artifacts_response = ArtifactResponse.parse_obj(data)\n             use_artifact: Optional[Artifact] = None\n             for artifact in artifacts_response.artifacts:\n-                if artifact.name == settings.input_name:\n+                if artifact.name == artifact_name:\n                     use_artifact = artifact\n                     break\n             if use_artifact:\n@@ -85,7 +86,7 @@ if __name__ == \"__main__\":\n                     headers=headers,\n                     json={\n                         \"ref\": \"master\",\n-                        \"inputs\": {\"pr\": f\"{pr.number}\", \"name\": f\"docs-zip-{commit}\"},\n+                        \"inputs\": {\"pr\": f\"{pr.number}\", \"name\": artifact_name},\n                     },\n                 )\n                 logging.info(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#7b3ef431274f1223abc8a4343319fb9315f82199", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 101 | Contributors (this commit): 1 | Commits (past 90d): 3 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -86,7 +86,7 @@ if __name__ == \"__main__\":\n                     headers=headers,\n                     json={\n                         \"ref\": \"master\",\n-                        \"inputs\": {\"pr\": f\"{pr.number}\", \"name\": artifact_name},\n+                        \"inputs\": {\"pr\": f\"{pr.number}\", \"name\": artifact_name, \"commit\": commit},\n                     },\n                 )\n                 logging.info(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#11c05beecea6e06d35379834855598e013accdb3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 111 | Contributors (this commit): 1 | Commits (past 90d): 4 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -79,14 +79,20 @@ if __name__ == \"__main__\":\n                 if artifact.name == artifact_name:\n                     use_artifact = artifact\n                     break\n-            if use_artifact:\n+            if not use_artifact:\n+                logging.info(f\"Artifact not available\")\n+            else:\n                 logging.info(f\"Existing artifact: {use_artifact.name}\")\n                 response = httpx.post(\n                     \"https://api.github.com/repos/tiangolo/fastapi/actions/workflows/preview-docs.yml/dispatches\",\n                     headers=headers,\n                     json={\n                         \"ref\": \"master\",\n-                        \"inputs\": {\"pr\": f\"{pr.number}\", \"name\": artifact_name, \"commit\": commit},\n+                        \"inputs\": {\n+                            \"pr\": f\"{pr.number}\",\n+                            \"name\": artifact_name,\n+                            \"commit\": commit,\n+                        },\n                     },\n                 )\n                 logging.info(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#3dd16a9458c82793c815c9c04cd1bd8dd53909f9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 125 | Contributors (this commit): 1 | Commits (past 90d): 5 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -49,6 +49,12 @@ if __name__ == \"__main__\":\n     owner: NamedUser = repo.owner\n     headers = {\"Authorization\": f\"token {settings.input_token.get_secret_value()}\"}\n     prs = list(repo.get_pulls(state=\"open\"))\n+    response = httpx.get(\n+        f\"{github_api}/repos/{settings.github_repository}/actions/artifacts\",\n+        headers=headers,\n+    )\n+    data = response.json()\n+    artifacts_response = ArtifactResponse.parse_obj(data)\n     for pr in prs:\n         logging.info(\"-----\")\n         logging.info(f\"Processing PR #{pr.number}: {pr.title}\")\n@@ -68,19 +74,13 @@ if __name__ == \"__main__\":\n         logging.info(f\"Docs preview was notified: {notified}\")\n         if not notified:\n             artifact_name = f\"docs-zip-{commit}\"\n-            response = httpx.get(\n-                f\"{github_api}/repos/{settings.github_repository}/actions/artifacts\",\n-                headers=headers,\n-            )\n-            data = response.json()\n-            artifacts_response = ArtifactResponse.parse_obj(data)\n             use_artifact: Optional[Artifact] = None\n             for artifact in artifacts_response.artifacts:\n                 if artifact.name == artifact_name:\n                     use_artifact = artifact\n                     break\n             if not use_artifact:\n-                logging.info(f\"Artifact not available\")\n+                logging.info(\"Artifact not available\")\n             else:\n                 logging.info(f\"Existing artifact: {use_artifact.name}\")\n                 response = httpx.post(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#0f546573779535f1c76b797f56082c9f72cc24e6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 257 | Contributors (this commit): 1 | Commits (past 90d): 10 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.59.0\"\n+__version__ = \"0.60.0\"\n \n from starlette import status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#6ab2841dbb80bbf8439fc38c2e323065d5c32f0b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 75 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -3,14 +3,14 @@ import os\n \n import requests\n \n-room_id = \"5c9c9540d73408ce4fbc1403\"  # FastAPI\n-# room_id = \"5cc46398d73408ce4fbed233\"  # Gitter development\n+# room_id = \"5c9c9540d73408ce4fbc1403\"  # FastAPI\n+room_id = \"5cc46398d73408ce4fbed233\"  # Gitter development\n \n gitter_token = os.getenv(\"GITTER_TOKEN\")\n assert gitter_token\n github_token = os.getenv(\"GITHUB_TOKEN\")\n assert github_token\n-tag_name = os.getenv(\"TRAVIS_TAG\")\n+tag_name = os.getenv(\"TAG\")\n assert tag_name\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#dadd6650ed0418722ff3e39364fed53460ec62ea", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 289 | Contributors (this commit): 8 | Commits (past 90d): 2 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -9,8 +9,8 @@ def get_swagger_ui_html(\n     *,\n     openapi_url: str,\n     title: str,\n-    swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui-bundle.js\",\n-    swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui.css\",\n+    swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3.30.0/swagger-ui-bundle.js\",\n+    swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3.30.0/swagger-ui.css\",\n     swagger_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n     oauth2_redirect_url: Optional[str] = None,\n     init_oauth: Optional[dict] = None,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#f64c44832979f57a8246b29e4c683f6e8e78a81b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 259 | Contributors (this commit): 1 | Commits (past 90d): 11 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.60.0\"\n+__version__ = \"0.60.1\"\n \n from starlette import status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#f1c5330b6526b706b1dc2d9b3301a3ec401ddca4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 2165 | Contributors (this commit): 19 | Commits (past 90d): 7 | Contributors (cumulative): 19 | DMM Complexity: None\n\nDIFF:\n@@ -51,7 +51,7 @@ class FastAPI(Starlette):\n         openapi_prefix: str = \"\",\n         root_path: str = \"\",\n         root_path_in_servers: bool = True,\n-        **extra: Dict[str, Any],\n+        **extra: Any,\n     ) -> None:\n         self.default_response_class = default_response_class\n         self._debug = debug\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#769ee73240da5586380bf0ca3cc3f3d8c2a2858a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 3 | Churn Cumulative: 3 | Contributors (this commit): 2 | Commits (past 90d): 1 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,4 +1,5 @@\n from fastapi import FastAPI, Request\n+from fastapi.responses import HTMLResponse\n from fastapi.staticfiles import StaticFiles\n from fastapi.templating import Jinja2Templates\n \n@@ -10,6 +11,6 @@ app.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")\n templates = Jinja2Templates(directory=\"templates\")\n \n \n-@app.get(\"/items/{id}\")\n+@app.get(\"/items/{id}\", response_class=HTMLResponse)\n async def read_item(request: Request, id: str):\n     return templates.TemplateResponse(\"item.html\", {\"request\": request, \"id\": id})\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#b344cc9415a600a816f004a26e4f9dd48bc5dcf6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 2 | Churn Cumulative: 1671 | Contributors (this commit): 19 | Commits (past 90d): 9 | Contributors (cumulative): 19 | DMM Complexity: 1.0\n\nDIFF:\n@@ -285,8 +285,6 @@ def get_dependant(\n                 param=param, path=path, security_scopes=security_scopes\n             )\n             dependant.dependencies.append(sub_dependant)\n-    for param_name, param in signature_params.items():\n-        if isinstance(param.default, params.Depends):\n             continue\n         if add_non_field_param_to_dependency(param=param, dependant=dependant):\n             continue\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#3223de5598310359262ff3e3a0259a00851cbc58", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 558 | Lines Deleted: 527 | Files Changed: 19 | Hunks: 184 | Methods Changed: 142 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1085 | Churn Cumulative: 12677 | Contributors (this commit): 63 | Commits (past 90d): 61 | Contributors (cumulative): 152 | DMM Complexity: 0.8709677419354839\n\nDIFF:\n@@ -32,7 +32,7 @@ class FastAPI(Starlette):\n         self,\n         *,\n         debug: bool = False,\n-        routes: List[BaseRoute] = None,\n+        routes: Optional[List[BaseRoute]] = None,\n         title: str = \"FastAPI\",\n         description: str = \"\",\n         version: str = \"0.1.0\",\n@@ -44,10 +44,12 @@ class FastAPI(Starlette):\n         redoc_url: Optional[str] = \"/redoc\",\n         swagger_ui_oauth2_redirect_url: Optional[str] = \"/docs/oauth2-redirect\",\n         swagger_ui_init_oauth: Optional[dict] = None,\n-        middleware: Sequence[Middleware] = None,\n-        exception_handlers: Dict[Union[int, Type[Exception]], Callable] = None,\n-        on_startup: Sequence[Callable] = None,\n-        on_shutdown: Sequence[Callable] = None,\n+        middleware: Optional[Sequence[Middleware]] = None,\n+        exception_handlers: Optional[\n+            Dict[Union[int, Type[Exception]], Callable]\n+        ] = None,\n+        on_startup: Optional[Sequence[Callable]] = None,\n+        on_shutdown: Optional[Sequence[Callable]] = None,\n         openapi_prefix: str = \"\",\n         root_path: str = \"\",\n         root_path_in_servers: bool = True,\n@@ -187,27 +189,27 @@ class FastAPI(Starlette):\n         path: str,\n         endpoint: Callable,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        methods: List[str] = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        methods: Optional[List[str]] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n     ) -> None:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -242,27 +244,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        methods: List[str] = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        methods: Optional[List[str]] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -299,11 +301,11 @@ class FastAPI(Starlette):\n         return decorator\n \n     def add_api_websocket_route(\n-        self, path: str, endpoint: Callable, name: str = None\n+        self, path: str, endpoint: Callable, name: Optional[str] = None\n     ) -> None:\n         self.router.add_api_websocket_route(path, endpoint, name=name)\n \n-    def websocket(self, path: str, name: str = None) -> Callable:\n+    def websocket(self, path: str, name: Optional[str] = None) -> Callable:\n         def decorator(func: Callable) -> Callable:\n             self.add_api_websocket_route(path, func, name=name)\n             return func\n@@ -315,9 +317,9 @@ class FastAPI(Starlette):\n         router: routing.APIRouter,\n         *,\n         prefix: str = \"\",\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n         default_response_class: Optional[Type[Response]] = None,\n     ) -> None:\n         self.router.include_router(\n@@ -334,27 +336,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -388,27 +390,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -442,27 +444,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -496,27 +498,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -550,27 +552,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -604,27 +606,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -658,27 +660,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -712,27 +714,27 @@ class FastAPI(Starlette):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[routing.APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n\n@@ -1,4 +1,4 @@\n-from typing import Callable, List, Sequence\n+from typing import Callable, List, Optional, Sequence\n \n from fastapi.security.base import SecurityBase\n \n@@ -12,7 +12,9 @@ param_supported_types = (str, int, float, bool)\n \n \n class SecurityRequirement:\n-    def __init__(self, security_scheme: SecurityBase, scopes: Sequence[str] = None):\n+    def __init__(\n+        self, security_scheme: SecurityBase, scopes: Optional[Sequence[str]] = None\n+    ):\n         self.security_scheme = security_scheme\n         self.scopes = scopes\n \n@@ -21,23 +23,23 @@ class Dependant:\n     def __init__(\n         self,\n         *,\n-        path_params: List[ModelField] = None,\n-        query_params: List[ModelField] = None,\n-        header_params: List[ModelField] = None,\n-        cookie_params: List[ModelField] = None,\n-        body_params: List[ModelField] = None,\n-        dependencies: List[\"Dependant\"] = None,\n-        security_schemes: List[SecurityRequirement] = None,\n-        name: str = None,\n-        call: Callable = None,\n-        request_param_name: str = None,\n-        websocket_param_name: str = None,\n-        response_param_name: str = None,\n-        background_tasks_param_name: str = None,\n-        security_scopes_param_name: str = None,\n-        security_scopes: List[str] = None,\n+        path_params: Optional[List[ModelField]] = None,\n+        query_params: Optional[List[ModelField]] = None,\n+        header_params: Optional[List[ModelField]] = None,\n+        cookie_params: Optional[List[ModelField]] = None,\n+        body_params: Optional[List[ModelField]] = None,\n+        dependencies: Optional[List[\"Dependant\"]] = None,\n+        security_schemes: Optional[List[SecurityRequirement]] = None,\n+        name: Optional[str] = None,\n+        call: Optional[Callable] = None,\n+        request_param_name: Optional[str] = None,\n+        websocket_param_name: Optional[str] = None,\n+        response_param_name: Optional[str] = None,\n+        background_tasks_param_name: Optional[str] = None,\n+        security_scopes_param_name: Optional[str] = None,\n+        security_scopes: Optional[List[str]] = None,\n         use_cache: bool = True,\n-        path: str = None,\n+        path: Optional[str] = None,\n     ) -> None:\n         self.path_params = path_params or []\n         self.query_params = query_params or []\n\n@@ -97,7 +97,7 @@ sequence_shape_to_type = {\n \n \n def get_param_sub_dependant(\n-    *, param: inspect.Parameter, path: str, security_scopes: List[str] = None\n+    *, param: inspect.Parameter, path: str, security_scopes: Optional[List[str]] = None\n ) -> Dependant:\n     depends: params.Depends = param.default\n     if depends.dependency:\n@@ -125,8 +125,8 @@ def get_sub_dependant(\n     depends: params.Depends,\n     dependency: Callable,\n     path: str,\n-    name: str = None,\n-    security_scopes: List[str] = None,\n+    name: Optional[str] = None,\n+    security_scopes: Optional[List[str]] = None,\n ) -> Dependant:\n     security_requirement = None\n     security_scopes = security_scopes or []\n@@ -157,7 +157,10 @@ CacheKey = Tuple[Optional[Callable], Tuple[str, ...]]\n \n \n def get_flat_dependant(\n-    dependant: Dependant, *, skip_repeats: bool = False, visited: List[CacheKey] = None\n+    dependant: Dependant,\n+    *,\n+    skip_repeats: bool = False,\n+    visited: Optional[List[CacheKey]] = None,\n ) -> Dependant:\n     if visited is None:\n         visited = []\n@@ -269,8 +272,8 @@ def get_dependant(\n     *,\n     path: str,\n     call: Callable,\n-    name: str = None,\n-    security_scopes: List[str] = None,\n+    name: Optional[str] = None,\n+    security_scopes: Optional[List[str]] = None,\n     use_cache: bool = True,\n ) -> Dependant:\n     path_param_names = get_path_param_names(path)\n@@ -348,7 +351,7 @@ def get_param_field(\n     param: inspect.Parameter,\n     param_name: str,\n     default_field_info: Type[params.Param] = params.Param,\n-    force_type: params.ParamTypes = None,\n+    force_type: Optional[params.ParamTypes] = None,\n     ignore_default: bool = False,\n ) -> ModelField:\n     default_value = Required\n@@ -456,10 +459,10 @@ async def solve_dependencies(\n     request: Union[Request, WebSocket],\n     dependant: Dependant,\n     body: Optional[Union[Dict[str, Any], FormData]] = None,\n-    background_tasks: BackgroundTasks = None,\n-    response: Response = None,\n-    dependency_overrides_provider: Any = None,\n-    dependency_cache: Dict[Tuple[Callable, Tuple[str]], Any] = None,\n+    background_tasks: Optional[BackgroundTasks] = None,\n+    response: Optional[Response] = None,\n+    dependency_overrides_provider: Optional[Any] = None,\n+    dependency_cache: Optional[Dict[Tuple[Callable, Tuple[str]], Any]] = None,\n ) -> Tuple[\n     Dict[str, Any],\n     List[ErrorWrapper],\n@@ -653,7 +656,7 @@ async def request_body_to_args(\n             else:\n                 loc = (\"body\", field.alias)\n \n-            value: Any = None\n+            value: Optional[Any] = None\n             if received_body is not None:\n                 if (\n                     field.shape in sequence_shapes or field.type_ in sequence_types\n\n@@ -1,7 +1,7 @@\n from enum import Enum\n from pathlib import PurePath\n from types import GeneratorType\n-from typing import Any, Callable, Dict, List, Set, Tuple, Union\n+from typing import Any, Callable, Dict, List, Optional, Set, Tuple, Union\n \n from fastapi.logger import logger\n from fastapi.utils import PYDANTIC_1\n@@ -29,10 +29,10 @@ encoders_by_class_tuples = generate_encoders_by_class_tuples(ENCODERS_BY_TYPE)\n \n def jsonable_encoder(\n     obj: Any,\n-    include: Union[SetIntStr, DictIntStrAny] = None,\n+    include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n     exclude: Union[SetIntStr, DictIntStrAny] = set(),\n     by_alias: bool = True,\n-    skip_defaults: bool = None,\n+    skip_defaults: Optional[bool] = None,\n     exclude_unset: bool = False,\n     exclude_defaults: bool = False,\n     exclude_none: bool = False,\n\n@@ -1,4 +1,4 @@\n-from typing import Any, Sequence\n+from typing import Any, Dict, Optional, Sequence\n \n from fastapi.utils import PYDANTIC_1\n from pydantic import ValidationError, create_model\n@@ -10,7 +10,10 @@ from starlette.websockets import WebSocket\n \n class HTTPException(StarletteHTTPException):\n     def __init__(\n-        self, status_code: int, detail: Any = None, headers: dict = None\n+        self,\n+        status_code: int,\n+        detail: Any = None,\n+        headers: Optional[Dict[str, Any]] = None,\n     ) -> None:\n         super().__init__(status_code=status_code, detail=detail)\n         self.headers = headers\n\n@@ -329,7 +329,7 @@ def get_openapi(\n     title: str,\n     version: str,\n     openapi_version: str = \"3.0.2\",\n-    description: str = None,\n+    description: Optional[str] = None,\n     routes: Sequence[BaseRoute],\n     tags: Optional[List[Dict[str, Any]]] = None,\n     servers: Optional[List[Dict[str, Union[str, Any]]]] = None,\n\n@@ -1,4 +1,4 @@\n-from typing import Any, Callable, Sequence\n+from typing import Any, Callable, Optional, Sequence\n \n from fastapi import params\n \n@@ -6,17 +6,17 @@ from fastapi import params\n def Path(  # noqa: N802\n     default: Any,\n     *,\n-    alias: str = None,\n-    title: str = None,\n-    description: str = None,\n-    gt: float = None,\n-    ge: float = None,\n-    lt: float = None,\n-    le: float = None,\n-    min_length: int = None,\n-    max_length: int = None,\n-    regex: str = None,\n-    deprecated: bool = None,\n+    alias: Optional[str] = None,\n+    title: Optional[str] = None,\n+    description: Optional[str] = None,\n+    gt: Optional[float] = None,\n+    ge: Optional[float] = None,\n+    lt: Optional[float] = None,\n+    le: Optional[float] = None,\n+    min_length: Optional[int] = None,\n+    max_length: Optional[int] = None,\n+    regex: Optional[str] = None,\n+    deprecated: Optional[bool] = None,\n     **extra: Any,\n ) -> Any:\n     return params.Path(\n@@ -39,17 +39,17 @@ def Path(  # noqa: N802\n def Query(  # noqa: N802\n     default: Any,\n     *,\n-    alias: str = None,\n-    title: str = None,\n-    description: str = None,\n-    gt: float = None,\n-    ge: float = None,\n-    lt: float = None,\n-    le: float = None,\n-    min_length: int = None,\n-    max_length: int = None,\n-    regex: str = None,\n-    deprecated: bool = None,\n+    alias: Optional[str] = None,\n+    title: Optional[str] = None,\n+    description: Optional[str] = None,\n+    gt: Optional[float] = None,\n+    ge: Optional[float] = None,\n+    lt: Optional[float] = None,\n+    le: Optional[float] = None,\n+    min_length: Optional[int] = None,\n+    max_length: Optional[int] = None,\n+    regex: Optional[str] = None,\n+    deprecated: Optional[bool] = None,\n     **extra: Any,\n ) -> Any:\n     return params.Query(\n@@ -72,18 +72,18 @@ def Query(  # noqa: N802\n def Header(  # noqa: N802\n     default: Any,\n     *,\n-    alias: str = None,\n+    alias: Optional[str] = None,\n     convert_underscores: bool = True,\n-    title: str = None,\n-    description: str = None,\n-    gt: float = None,\n-    ge: float = None,\n-    lt: float = None,\n-    le: float = None,\n-    min_length: int = None,\n-    max_length: int = None,\n-    regex: str = None,\n-    deprecated: bool = None,\n+    title: Optional[str] = None,\n+    description: Optional[str] = None,\n+    gt: Optional[float] = None,\n+    ge: Optional[float] = None,\n+    lt: Optional[float] = None,\n+    le: Optional[float] = None,\n+    min_length: Optional[int] = None,\n+    max_length: Optional[int] = None,\n+    regex: Optional[str] = None,\n+    deprecated: Optional[bool] = None,\n     **extra: Any,\n ) -> Any:\n     return params.Header(\n@@ -107,17 +107,17 @@ def Header(  # noqa: N802\n def Cookie(  # noqa: N802\n     default: Any,\n     *,\n-    alias: str = None,\n-    title: str = None,\n-    description: str = None,\n-    gt: float = None,\n-    ge: float = None,\n-    lt: float = None,\n-    le: float = None,\n-    min_length: int = None,\n-    max_length: int = None,\n-    regex: str = None,\n-    deprecated: bool = None,\n+    alias: Optional[str] = None,\n+    title: Optional[str] = None,\n+    description: Optional[str] = None,\n+    gt: Optional[float] = None,\n+    ge: Optional[float] = None,\n+    lt: Optional[float] = None,\n+    le: Optional[float] = None,\n+    min_length: Optional[int] = None,\n+    max_length: Optional[int] = None,\n+    regex: Optional[str] = None,\n+    deprecated: Optional[bool] = None,\n     **extra: Any,\n ) -> Any:\n     return params.Cookie(\n@@ -142,16 +142,16 @@ def Body(  # noqa: N802\n     *,\n     embed: bool = False,\n     media_type: str = \"application/json\",\n-    alias: str = None,\n-    title: str = None,\n-    description: str = None,\n-    gt: float = None,\n-    ge: float = None,\n-    lt: float = None,\n-    le: float = None,\n-    min_length: int = None,\n-    max_length: int = None,\n-    regex: str = None,\n+    alias: Optional[str] = None,\n+    title: Optional[str] = None,\n+    description: Optional[str] = None,\n+    gt: Optional[float] = None,\n+    ge: Optional[float] = None,\n+    lt: Optional[float] = None,\n+    le: Optional[float] = None,\n+    min_length: Optional[int] = None,\n+    max_length: Optional[int] = None,\n+    regex: Optional[str] = None,\n     **extra: Any,\n ) -> Any:\n     return params.Body(\n@@ -176,16 +176,16 @@ def Form(  # noqa: N802\n     default: Any,\n     *,\n     media_type: str = \"application/x-www-form-urlencoded\",\n-    alias: str = None,\n-    title: str = None,\n-    description: str = None,\n-    gt: float = None,\n-    ge: float = None,\n-    lt: float = None,\n-    le: float = None,\n-    min_length: int = None,\n-    max_length: int = None,\n-    regex: str = None,\n+    alias: Optional[str] = None,\n+    title: Optional[str] = None,\n+    description: Optional[str] = None,\n+    gt: Optional[float] = None,\n+    ge: Optional[float] = None,\n+    lt: Optional[float] = None,\n+    le: Optional[float] = None,\n+    min_length: Optional[int] = None,\n+    max_length: Optional[int] = None,\n+    regex: Optional[str] = None,\n     **extra: Any,\n ) -> Any:\n     return params.Form(\n@@ -209,16 +209,16 @@ def File(  # noqa: N802\n     default: Any,\n     *,\n     media_type: str = \"multipart/form-data\",\n-    alias: str = None,\n-    title: str = None,\n-    description: str = None,\n-    gt: float = None,\n-    ge: float = None,\n-    lt: float = None,\n-    le: float = None,\n-    min_length: int = None,\n-    max_length: int = None,\n-    regex: str = None,\n+    alias: Optional[str] = None,\n+    title: Optional[str] = None,\n+    description: Optional[str] = None,\n+    gt: Optional[float] = None,\n+    ge: Optional[float] = None,\n+    lt: Optional[float] = None,\n+    le: Optional[float] = None,\n+    min_length: Optional[int] = None,\n+    max_length: Optional[int] = None,\n+    regex: Optional[str] = None,\n     **extra: Any,\n ) -> Any:\n     return params.File(\n@@ -239,12 +239,15 @@ def File(  # noqa: N802\n \n \n def Depends(  # noqa: N802\n-    dependency: Callable = None, *, use_cache: bool = True\n+    dependency: Optional[Callable] = None, *, use_cache: bool = True\n ) -> Any:\n     return params.Depends(dependency=dependency, use_cache=use_cache)\n \n \n def Security(  # noqa: N802\n-    dependency: Callable = None, *, scopes: Sequence[str] = None, use_cache: bool = True\n+    dependency: Optional[Callable] = None,\n+    *,\n+    scopes: Optional[Sequence[str]] = None,\n+    use_cache: bool = True,\n ) -> Any:\n     return params.Security(dependency=dependency, scopes=scopes, use_cache=use_cache)\n\n@@ -1,5 +1,5 @@\n from enum import Enum\n-from typing import Any, Callable, Sequence\n+from typing import Any, Callable, Optional, Sequence\n \n try:\n     from pydantic.fields import FieldInfo\n@@ -22,17 +22,17 @@ class Param(FieldInfo):\n         self,\n         default: Any,\n         *,\n-        alias: str = None,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n-        deprecated: bool = None,\n+        alias: Optional[str] = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n+        deprecated: Optional[bool] = None,\n         **extra: Any,\n     ):\n         self.deprecated = deprecated\n@@ -62,17 +62,17 @@ class Path(Param):\n         self,\n         default: Any,\n         *,\n-        alias: str = None,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n-        deprecated: bool = None,\n+        alias: Optional[str] = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n+        deprecated: Optional[bool] = None,\n         **extra: Any,\n     ):\n         self.in_ = self.in_\n@@ -100,17 +100,17 @@ class Query(Param):\n         self,\n         default: Any,\n         *,\n-        alias: str = None,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n-        deprecated: bool = None,\n+        alias: Optional[str] = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n+        deprecated: Optional[bool] = None,\n         **extra: Any,\n     ):\n         super().__init__(\n@@ -137,18 +137,18 @@ class Header(Param):\n         self,\n         default: Any,\n         *,\n-        alias: str = None,\n+        alias: Optional[str] = None,\n         convert_underscores: bool = True,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n-        deprecated: bool = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n+        deprecated: Optional[bool] = None,\n         **extra: Any,\n     ):\n         self.convert_underscores = convert_underscores\n@@ -176,17 +176,17 @@ class Cookie(Param):\n         self,\n         default: Any,\n         *,\n-        alias: str = None,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n-        deprecated: bool = None,\n+        alias: Optional[str] = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n+        deprecated: Optional[bool] = None,\n         **extra: Any,\n     ):\n         super().__init__(\n@@ -213,16 +213,16 @@ class Body(FieldInfo):\n         *,\n         embed: bool = False,\n         media_type: str = \"application/json\",\n-        alias: str = None,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n+        alias: Optional[str] = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n         **extra: Any,\n     ):\n         self.embed = embed\n@@ -252,16 +252,16 @@ class Form(Body):\n         default: Any,\n         *,\n         media_type: str = \"application/x-www-form-urlencoded\",\n-        alias: str = None,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n+        alias: Optional[str] = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n         **extra: Any,\n     ):\n         super().__init__(\n@@ -288,16 +288,16 @@ class File(Form):\n         default: Any,\n         *,\n         media_type: str = \"multipart/form-data\",\n-        alias: str = None,\n-        title: str = None,\n-        description: str = None,\n-        gt: float = None,\n-        ge: float = None,\n-        lt: float = None,\n-        le: float = None,\n-        min_length: int = None,\n-        max_length: int = None,\n-        regex: str = None,\n+        alias: Optional[str] = None,\n+        title: Optional[str] = None,\n+        description: Optional[str] = None,\n+        gt: Optional[float] = None,\n+        ge: Optional[float] = None,\n+        lt: Optional[float] = None,\n+        le: Optional[float] = None,\n+        min_length: Optional[int] = None,\n+        max_length: Optional[int] = None,\n+        regex: Optional[str] = None,\n         **extra: Any,\n     ):\n         super().__init__(\n@@ -318,7 +318,9 @@ class File(Form):\n \n \n class Depends:\n-    def __init__(self, dependency: Callable = None, *, use_cache: bool = True):\n+    def __init__(\n+        self, dependency: Optional[Callable] = None, *, use_cache: bool = True\n+    ):\n         self.dependency = dependency\n         self.use_cache = use_cache\n \n@@ -331,9 +333,9 @@ class Depends:\n class Security(Depends):\n     def __init__(\n         self,\n-        dependency: Callable = None,\n+        dependency: Optional[Callable] = None,\n         *,\n-        scopes: Sequence[str] = None,\n+        scopes: Optional[Sequence[str]] = None,\n         use_cache: bool = True,\n     ):\n         super().__init__(dependency=dependency, use_cache=use_cache)\n\n@@ -93,9 +93,9 @@ def _prepare_response_content(\n \n async def serialize_response(\n     *,\n-    field: ModelField = None,\n+    field: Optional[ModelField] = None,\n     response_content: Any,\n-    include: Union[SetIntStr, DictIntStrAny] = None,\n+    include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n     exclude: Union[SetIntStr, DictIntStrAny] = set(),\n     by_alias: bool = True,\n     exclude_unset: bool = False,\n@@ -151,17 +151,17 @@ async def run_endpoint_function(\n \n def get_request_handler(\n     dependant: Dependant,\n-    body_field: ModelField = None,\n+    body_field: Optional[ModelField] = None,\n     status_code: int = 200,\n     response_class: Type[Response] = JSONResponse,\n-    response_field: ModelField = None,\n-    response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+    response_field: Optional[ModelField] = None,\n+    response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n     response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n     response_model_by_alias: bool = True,\n     response_model_exclude_unset: bool = False,\n     response_model_exclude_defaults: bool = False,\n     response_model_exclude_none: bool = False,\n-    dependency_overrides_provider: Any = None,\n+    dependency_overrides_provider: Optional[Any] = None,\n ) -> Callable:\n     assert dependant.call is not None, \"dependant.call must be a function\"\n     is_coroutine = asyncio.iscoroutinefunction(dependant.call)\n@@ -226,7 +226,7 @@ def get_request_handler(\n \n \n def get_websocket_app(\n-    dependant: Dependant, dependency_overrides_provider: Any = None\n+    dependant: Dependant, dependency_overrides_provider: Optional[Any] = None\n ) -> Callable:\n     async def app(websocket: WebSocket) -> None:\n         solved_result = await solve_dependencies(\n@@ -250,8 +250,8 @@ class APIWebSocketRoute(routing.WebSocketRoute):\n         path: str,\n         endpoint: Callable,\n         *,\n-        name: str = None,\n-        dependency_overrides_provider: Any = None,\n+        name: Optional[str] = None,\n+        dependency_overrides_provider: Optional[Any] = None,\n     ) -> None:\n         self.path = path\n         self.endpoint = endpoint\n@@ -272,19 +272,19 @@ class APIRoute(routing.Route):\n         path: str,\n         endpoint: Callable,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        name: str = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        name: Optional[str] = None,\n         methods: Optional[Union[Set[str], List[str]]] = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n         response_model_exclude_unset: bool = False,\n@@ -292,7 +292,7 @@ class APIRoute(routing.Route):\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n         response_class: Optional[Type[Response]] = None,\n-        dependency_overrides_provider: Any = None,\n+        dependency_overrides_provider: Optional[Any] = None,\n         callbacks: Optional[List[\"APIRoute\"]] = None,\n     ) -> None:\n         # normalise enums e.g. http.HTTPStatus\n@@ -401,14 +401,14 @@ class APIRoute(routing.Route):\n class APIRouter(routing.Router):\n     def __init__(\n         self,\n-        routes: List[routing.BaseRoute] = None,\n+        routes: Optional[List[routing.BaseRoute]] = None,\n         redirect_slashes: bool = True,\n-        default: ASGIApp = None,\n-        dependency_overrides_provider: Any = None,\n+        default: Optional[ASGIApp] = None,\n+        dependency_overrides_provider: Optional[Any] = None,\n         route_class: Type[APIRoute] = APIRoute,\n-        default_response_class: Type[Response] = None,\n-        on_startup: Sequence[Callable] = None,\n-        on_shutdown: Sequence[Callable] = None,\n+        default_response_class: Optional[Type[Response]] = None,\n+        on_startup: Optional[Sequence[Callable]] = None,\n+        on_shutdown: Optional[Sequence[Callable]] = None,\n     ) -> None:\n         super().__init__(\n             routes=routes,\n@@ -426,29 +426,29 @@ class APIRouter(routing.Router):\n         path: str,\n         endpoint: Callable,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n         methods: Optional[Union[Set[str], List[str]]] = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n         route_class_override: Optional[Type[APIRoute]] = None,\n-        callbacks: List[APIRoute] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> None:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -487,28 +487,28 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        methods: List[str] = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        methods: Optional[List[str]] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -546,7 +546,7 @@ class APIRouter(routing.Router):\n         return decorator\n \n     def add_api_websocket_route(\n-        self, path: str, endpoint: Callable, name: str = None\n+        self, path: str, endpoint: Callable, name: Optional[str] = None\n     ) -> None:\n         route = APIWebSocketRoute(\n             path,\n@@ -556,7 +556,7 @@ class APIRouter(routing.Router):\n         )\n         self.routes.append(route)\n \n-    def websocket(self, path: str, name: str = None) -> Callable:\n+    def websocket(self, path: str, name: Optional[str] = None) -> Callable:\n         def decorator(func: Callable) -> Callable:\n             self.add_api_websocket_route(path, func, name=name)\n             return func\n@@ -568,9 +568,9 @@ class APIRouter(routing.Router):\n         router: \"APIRouter\",\n         *,\n         prefix: str = \"\",\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n         default_response_class: Optional[Type[Response]] = None,\n     ) -> None:\n         if prefix:\n@@ -643,27 +643,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -698,27 +698,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -753,27 +753,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -808,27 +808,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -863,27 +863,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -918,27 +918,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -973,27 +973,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n@@ -1028,27 +1028,27 @@ class APIRouter(routing.Router):\n         self,\n         path: str,\n         *,\n-        response_model: Type[Any] = None,\n+        response_model: Optional[Type[Any]] = None,\n         status_code: int = 200,\n-        tags: List[str] = None,\n-        dependencies: Sequence[params.Depends] = None,\n-        summary: str = None,\n-        description: str = None,\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        summary: Optional[str] = None,\n+        description: Optional[str] = None,\n         response_description: str = \"Successful Response\",\n-        responses: Dict[Union[int, str], Dict[str, Any]] = None,\n-        deprecated: bool = None,\n-        operation_id: str = None,\n-        response_model_include: Union[SetIntStr, DictIntStrAny] = None,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        deprecated: Optional[bool] = None,\n+        operation_id: Optional[str] = None,\n+        response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n         response_model_exclude: Union[SetIntStr, DictIntStrAny] = set(),\n         response_model_by_alias: bool = True,\n-        response_model_skip_defaults: bool = None,\n+        response_model_skip_defaults: Optional[bool] = None,\n         response_model_exclude_unset: bool = False,\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Type[Response] = None,\n-        name: str = None,\n-        callbacks: List[APIRoute] = None,\n+        response_class: Optional[Type[Response]] = None,\n+        name: Optional[str] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n         if response_model_skip_defaults is not None:\n             warning_response_model_skip_defaults_deprecated()  # pragma: nocover\n\n@@ -12,7 +12,9 @@ class APIKeyBase(SecurityBase):\n \n \n class APIKeyQuery(APIKeyBase):\n-    def __init__(self, *, name: str, scheme_name: str = None, auto_error: bool = True):\n+    def __init__(\n+        self, *, name: str, scheme_name: Optional[str] = None, auto_error: bool = True\n+    ):\n         self.model: APIKey = APIKey(**{\"in\": APIKeyIn.query}, name=name)\n         self.scheme_name = scheme_name or self.__class__.__name__\n         self.auto_error = auto_error\n@@ -30,7 +32,9 @@ class APIKeyQuery(APIKeyBase):\n \n \n class APIKeyHeader(APIKeyBase):\n-    def __init__(self, *, name: str, scheme_name: str = None, auto_error: bool = True):\n+    def __init__(\n+        self, *, name: str, scheme_name: Optional[str] = None, auto_error: bool = True\n+    ):\n         self.model: APIKey = APIKey(**{\"in\": APIKeyIn.header}, name=name)\n         self.scheme_name = scheme_name or self.__class__.__name__\n         self.auto_error = auto_error\n@@ -48,7 +52,9 @@ class APIKeyHeader(APIKeyBase):\n \n \n class APIKeyCookie(APIKeyBase):\n-    def __init__(self, *, name: str, scheme_name: str = None, auto_error: bool = True):\n+    def __init__(\n+        self, *, name: str, scheme_name: Optional[str] = None, auto_error: bool = True\n+    ):\n         self.model: APIKey = APIKey(**{\"in\": APIKeyIn.cookie}, name=name)\n         self.scheme_name = scheme_name or self.__class__.__name__\n         self.auto_error = auto_error\n\n@@ -24,7 +24,7 @@ class HTTPAuthorizationCredentials(BaseModel):\n \n class HTTPBase(SecurityBase):\n     def __init__(\n-        self, *, scheme: str, scheme_name: str = None, auto_error: bool = True\n+        self, *, scheme: str, scheme_name: Optional[str] = None, auto_error: bool = True\n     ):\n         self.model = HTTPBaseModel(scheme=scheme)\n         self.scheme_name = scheme_name or self.__class__.__name__\n@@ -47,7 +47,11 @@ class HTTPBase(SecurityBase):\n \n class HTTPBasic(HTTPBase):\n     def __init__(\n-        self, *, scheme_name: str = None, realm: str = None, auto_error: bool = True\n+        self,\n+        *,\n+        scheme_name: Optional[str] = None,\n+        realm: Optional[str] = None,\n+        auto_error: bool = True,\n     ):\n         self.model = HTTPBaseModel(scheme=\"basic\")\n         self.scheme_name = scheme_name or self.__class__.__name__\n@@ -91,8 +95,8 @@ class HTTPBearer(HTTPBase):\n     def __init__(\n         self,\n         *,\n-        bearerFormat: str = None,\n-        scheme_name: str = None,\n+        bearerFormat: Optional[str] = None,\n+        scheme_name: Optional[str] = None,\n         auto_error: bool = True,\n     ):\n         self.model = HTTPBearerModel(bearerFormat=bearerFormat)\n@@ -123,7 +127,7 @@ class HTTPBearer(HTTPBase):\n \n \n class HTTPDigest(HTTPBase):\n-    def __init__(self, *, scheme_name: str = None, auto_error: bool = True):\n+    def __init__(self, *, scheme_name: Optional[str] = None, auto_error: bool = True):\n         self.model = HTTPBaseModel(scheme=\"digest\")\n         self.scheme_name = scheme_name or self.__class__.__name__\n         self.auto_error = auto_error\n\n@@ -117,8 +117,8 @@ class OAuth2(SecurityBase):\n         self,\n         *,\n         flows: OAuthFlowsModel = OAuthFlowsModel(),\n-        scheme_name: str = None,\n-        auto_error: bool = True\n+        scheme_name: Optional[str] = None,\n+        auto_error: Optional[bool] = True\n     ):\n         self.model = OAuth2Model(flows=flows)\n         self.scheme_name = scheme_name or self.__class__.__name__\n@@ -140,8 +140,8 @@ class OAuth2PasswordBearer(OAuth2):\n     def __init__(\n         self,\n         tokenUrl: str,\n-        scheme_name: str = None,\n-        scopes: dict = None,\n+        scheme_name: Optional[str] = None,\n+        scopes: Optional[dict] = None,\n         auto_error: bool = True,\n     ):\n         if not scopes:\n@@ -169,9 +169,9 @@ class OAuth2AuthorizationCodeBearer(OAuth2):\n         self,\n         authorizationUrl: str,\n         tokenUrl: str,\n-        refreshUrl: str = None,\n-        scheme_name: str = None,\n-        scopes: dict = None,\n+        refreshUrl: Optional[str] = None,\n+        scheme_name: Optional[str] = None,\n+        scopes: Optional[dict] = None,\n         auto_error: bool = True,\n     ):\n         if not scopes:\n@@ -202,6 +202,6 @@ class OAuth2AuthorizationCodeBearer(OAuth2):\n \n \n class SecurityScopes:\n-    def __init__(self, scopes: List[str] = None):\n+    def __init__(self, scopes: Optional[List[str]] = None):\n         self.scopes = scopes or []\n         self.scope_str = \" \".join(self.scopes)\n\n@@ -9,7 +9,11 @@ from starlette.status import HTTP_403_FORBIDDEN\n \n class OpenIdConnect(SecurityBase):\n     def __init__(\n-        self, *, openIdConnectUrl: str, scheme_name: str = None, auto_error: bool = True\n+        self,\n+        *,\n+        openIdConnectUrl: str,\n+        scheme_name: Optional[str] = None,\n+        auto_error: bool = True\n     ):\n         self.model = OpenIdConnectModel(openIdConnectUrl=openIdConnectUrl)\n         self.scheme_name = scheme_name or self.__class__.__name__\n\n@@ -109,7 +109,9 @@ def create_response_field(\n \n \n def create_cloned_field(\n-    field: ModelField, *, cloned_types: Dict[Type[BaseModel], Type[BaseModel]] = None,\n+    field: ModelField,\n+    *,\n+    cloned_types: Optional[Dict[Type[BaseModel], Type[BaseModel]]] = None,\n ) -> ModelField:\n     # _cloned_types has already cloned types, to support recursive models\n     if cloned_types is None:\n\n@@ -10,7 +10,7 @@ app = FastAPI()\n class Item(BaseModel):\n     name: str\n     price: Optional[float] = None\n-    owner_ids: List[int] = None\n+    owner_ids: Optional[List[int]] = None\n \n \n @app.get(\"/items/valid\", response_model=Item)\n\n@@ -11,7 +11,7 @@ app = FastAPI()\n class Item:\n     name: str\n     price: Optional[float] = None\n-    owner_ids: List[int] = None\n+    owner_ids: Optional[List[int]] = None\n \n \n @app.get(\"/items/valid\", response_model=Item)\n\n@@ -10,7 +10,7 @@ app = FastAPI()\n class Item(BaseModel):\n     name: str = Field(..., alias=\"aliased_name\")\n     price: Optional[float] = None\n-    owner_ids: List[int] = None\n+    owner_ids: Optional[List[int]] = None\n \n \n @app.get(\"/items/valid\", response_model=Item)\n\n@@ -11,7 +11,7 @@ app = FastAPI()\n class Item(BaseModel):\n     name: str\n     price: Optional[float] = None\n-    owner_ids: List[int] = None\n+    owner_ids: Optional[List[int]] = None\n \n \n @app.get(\"/items/invalid\", response_model=Item)\n\n@@ -13,7 +13,7 @@ app = FastAPI()\n class Item:\n     name: str\n     price: Optional[float] = None\n-    owner_ids: List[int] = None\n+    owner_ids: Optional[List[int]] = None\n \n \n @app.get(\"/items/invalid\", response_model=Item)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
