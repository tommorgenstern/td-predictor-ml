{"custom_id": "flask#b23cd61e04b01e83defcdb9dafe8b6bcafdffc40", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 247 | Contributors (this commit): 8 | Commits (past 90d): 2 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '0.11'\n+__version__ = '0.12-dev'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#70de011d5102bea6b97010643cf36698f94f97fb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 433 | Contributors (this commit): 10 | Commits (past 90d): 2 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -250,7 +250,7 @@ intersphinx_mapping = {\n     'http://click.pocoo.org/': None,\n     'http://jinja.pocoo.org/docs/': None,\n     'http://www.sqlalchemy.org/docs/': None,\n-    'https://wtforms.readthedocs.org/en/latest/': None,\n+    'https://wtforms.readthedocs.io/en/latest/': None,\n     'https://pythonhosted.org/blinker/': None\n }\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ba07f5bd81f66a40333cc619d0a8a7b3c17ec49f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 159 | Contributors (this commit): 8 | Commits (past 90d): 2 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -68,7 +68,7 @@ class ExtensionImporter(object):\n \n         warnings.warn(\n             \"Importing flask.ext.{x} is deprecated, use flask_{x} instead.\"\n-            .format(x=modname), ExtDeprecationWarning\n+            .format(x=modname), ExtDeprecationWarning, stacklevel=2\n         )\n \n         for path in self.module_choices:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a72583652329da810fc2a04e8541a0e2efd47ee1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1296 | Contributors (this commit): 10 | Commits (past 90d): 4 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -449,7 +449,7 @@ The most useful commands are the \"run\" and \"shell\" command.\n Example usage:\n \n \\b\n-  %(prefix)s%(cmd)s FLASK_APP=hello\n+  %(prefix)s%(cmd)s FLASK_APP=hello.py\n   %(prefix)s%(cmd)s FLASK_DEBUG=1\n   %(prefix)sflask run\n \"\"\" % {\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e4c712ffd2682f963906e1d0d27e67b7f83d95ce", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 5 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 742 | Contributors (this commit): 7 | Commits (past 90d): 4 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -19,6 +19,7 @@\n     :copyright: (c) Copyright 2015 by Armin Ronacher.\n     :license: see LICENSE for more details.\n \"\"\"\n+from __future__ import print_function\n import re\n import os\n import inspect\n@@ -59,7 +60,7 @@ def make_diff(filename, old, new):\n                      posixpath.normpath(posixpath.join('a', filename)),\n                      posixpath.normpath(posixpath.join('b', filename)),\n                      lineterm=''):\n-        print line\n+        print(line)\n \n \n def looks_like_teardown_function(node):\n\n@@ -10,6 +10,7 @@\n     :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n+from __future__ import print_function\n import sys\n import os\n import re\n@@ -85,12 +86,12 @@ def build_and_upload():\n \n \n def fail(message, *args):\n-    print >> sys.stderr, 'Error:', message % args\n+    print('Error:', message % args, file=sys.stderr)\n     sys.exit(1)\n \n \n def info(message, *args):\n-    print >> sys.stderr, message % args\n+    print(message % args, file=sys.stderr)\n \n \n def get_git_tags():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6bee3e4995066466a35ac080844d4962a728d084", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 26 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 4 | Methods Changed: 3 | Complexity Δ (Sum/Max): 5/5 | Churn Δ: 29 | Churn Cumulative: 1325 | Contributors (this commit): 11 | Commits (past 90d): 5 | Contributors (cumulative): 11 | DMM Complexity: 1.0\n\nDIFF:\n@@ -18,7 +18,7 @@ import click\n \n from ._compat import iteritems, reraise\n from .helpers import get_debug_flag\n-\n+from . import __version__\n \n class NoAppException(click.UsageError):\n     \"\"\"Raised if an application cannot be found or loaded.\"\"\"\n@@ -108,6 +108,22 @@ def find_default_import_path():\n     return app\n \n \n+def get_version(ctx, param, value):\n+    if not value or ctx.resilient_parsing:\n+        return\n+    message = 'Flask %(version)s\\nPython %(python_version)s'\n+    click.echo(message % {\n+        'version': __version__,\n+        'python_version': sys.version[:3],\n+    }, color=ctx.color)\n+    ctx.exit()\n+\n+version_option = click.Option(['--version'],\n+                              help='Show the flask version',\n+                              expose_value=False,\n+                              callback=get_version,\n+                              is_flag=True, is_eager=True)\n+\n class DispatchingApp(object):\n     \"\"\"Special application that dispatches to a flask application which\n     is imported by name in a background thread.  If an error happens\n@@ -270,12 +286,19 @@ class FlaskGroup(AppGroup):\n \n     :param add_default_commands: if this is True then the default run and\n                                  shell commands wil be added.\n+    :param add_version_option: adds the :option:`--version` option.\n     :param create_app: an optional callback that is passed the script info\n                        and returns the loaded app.\n     \"\"\"\n \n-    def __init__(self, add_default_commands=True, create_app=None, **extra):\n-        AppGroup.__init__(self, **extra)\n+    def __init__(self, add_default_commands=True, create_app=None,\n+                 add_version_option=True, **extra):\n+        params = list(extra.pop('params', None) or ())\n+\n+        if add_version_option:\n+            params.append(version_option)\n+\n+        AppGroup.__init__(self, params=params, **extra)\n         self.create_app = create_app\n \n         if add_default_commands:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6b28ceba83c3b76eea2e5a89327318af67404298", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1327 | Contributors (this commit): 11 | Commits (past 90d): 6 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -114,7 +114,7 @@ def get_version(ctx, param, value):\n     message = 'Flask %(version)s\\nPython %(python_version)s'\n     click.echo(message % {\n         'version': __version__,\n-        'python_version': sys.version[:3],\n+        'python_version': sys.version,\n     }, color=ctx.color)\n     ctx.exit()\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#390cd5e4eec8340d74e8b72b2d51a5a3eeef3842", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 8 | Churn Cumulative: 495 | Contributors (this commit): 9 | Commits (past 90d): 4 | Contributors (cumulative): 9 | DMM Complexity: 1.0\n\nDIFF:\n@@ -19,6 +19,10 @@ from werkzeug.exceptions import BadRequest\n from werkzeug.http import parse_cache_control_header, parse_options_header\n from werkzeug.http import http_date\n from flask._compat import StringIO, text_type\n+try:\n+    import simplejson\n+except ImportError:\n+    import json as simplejson\n \n \n def has_encoding(name):\n@@ -114,6 +118,10 @@ class TestJSON(object):\n             assert rv.mimetype == 'application/json'\n             assert flask.json.loads(rv.data) == d\n \n+    def test_simplejson_does_not_escape_slashes(self):\n+        \"\"\"Test that \\\\/ is no longer standard behavior.\"\"\"\n+        assert '\\\\/' not in simplejson.dumps('/')\n+\n     def test_jsonify_dicts(self):\n         \"\"\"Test jsonify with dicts and kwargs unpacking.\"\"\"\n         d = dict(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#7e8d7d43c8852f1567a93838ae7983bf519ddcb1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 359 | Contributors (this commit): 17 | Commits (past 90d): 2 | Contributors (cumulative): 17 | DMM Complexity: None\n\nDIFF:\n@@ -33,6 +33,8 @@ And run it:\n     $ python hello.py\n      * Running on http://localhost:5000/\n \n+ Ready for production? `Read this first <http://flask.pocoo.org/docs/deploying/>`.\n+\n Links\n `````\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#024fbe5a6076d0f3f793cd4a66d0b50decdb2a1a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 8 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 8 | Churn Cumulative: 503 | Contributors (this commit): 10 | Commits (past 90d): 5 | Contributors (cumulative): 10 | DMM Complexity: 0.0\n\nDIFF:\n@@ -19,10 +19,6 @@ from werkzeug.exceptions import BadRequest\n from werkzeug.http import parse_cache_control_header, parse_options_header\n from werkzeug.http import http_date\n from flask._compat import StringIO, text_type\n-try:\n-    import simplejson\n-except ImportError:\n-    import json as simplejson\n \n \n def has_encoding(name):\n@@ -118,10 +114,6 @@ class TestJSON(object):\n             assert rv.mimetype == 'application/json'\n             assert flask.json.loads(rv.data) == d\n \n-    def test_simplejson_does_not_escape_slashes(self):\n-        \"\"\"Test that \\\\/ is no longer standard behavior.\"\"\"\n-        assert '\\\\/' not in simplejson.dumps('/')\n-\n     def test_jsonify_dicts(self):\n         \"\"\"Test jsonify with dicts and kwargs unpacking.\"\"\"\n         d = dict(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d88c08e56f7398206596129036b8f101be11cba0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 11 | Churn Cumulative: 220 | Contributors (this commit): 15 | Commits (past 90d): 2 | Contributors (cumulative): 15 | DMM Complexity: None\n\nDIFF:\n@@ -143,10 +143,12 @@ class Config(dict):\n         -   a string: in this case the object with that name will be imported\n         -   an actual object reference: that object is used directly\n \n-        Objects are usually either modules or classes.\n+        Objects are usually either modules or classes. :meth:`from_object`\n+        loads only the uppercase attributes of the module/class. A ``dict``\n+        object will not work with :meth:`from_object` because the keys of a\n+        ``dict`` are not attributes of the ``dict`` class.\n \n-        Just the uppercase variables in that object are stored in the config.\n-        Example usage::\n+        Example of module-based configuration::\n \n             app.config.from_object('yourapplication.default_config')\n             from yourapplication import default_config\n@@ -157,6 +159,9 @@ class Config(dict):\n         with :meth:`from_pyfile` and ideally from a location not within the\n         package because the package might be installed system wide.\n \n+        See :ref:`config-dev-prod` for an example of class-based configuration\n+        using :meth:`from_object`.\n+\n         :param obj: an import name or object\n         \"\"\"\n         if isinstance(obj, string_types):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#047efac537abad9e3880f545d8b767f6e6be3786", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 19 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 19 | Churn Cumulative: 1168 | Contributors (this commit): 13 | Commits (past 90d): 2 | Contributors (cumulative): 13 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1116,6 +1116,25 @@ def test_static_files():\n     rv.close()\n \n \n+def test_static_path_deprecated():\n+    with pytest.deprecated_call():\n+        app = flask.Flask(__name__, static_path='/foo')\n+    app.testing = True\n+    rv = app.test_client().get('/foo/index.html')\n+    assert rv.status_code == 200\n+    with app.test_request_context():\n+        assert flask.url_for('static', filename='index.html') == '/foo/index.html'\n+\n+\n+def test_static_url_path():\n+    app = flask.Flask(__name__, static_url_path='/foo')\n+    app.testing = True\n+    rv = app.test_client().get('/foo/index.html')\n+    assert rv.status_code == 200\n+    with app.test_request_context():\n+        assert flask.url_for('static', filename='index.html') == '/foo/index.html'\n+\n+\n def test_none_response():\n     app = flask.Flask(__name__)\n     app.testing = True\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d393597c507ea62df534ba2ffb8a4e77cf3f1548", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 51 | Lines Deleted: 33 | Files Changed: 5 | Hunks: 31 | Methods Changed: 16 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 84 | Churn Cumulative: 2257 | Contributors (this commit): 23 | Commits (past 90d): 12 | Contributors (cumulative): 31 | DMM Complexity: 1.0\n\nDIFF:\n@@ -126,8 +126,7 @@ def purge_module(request):\n     return inner\n \n \n-@pytest.fixture\n-def catch_deprecation_warnings():\n-    import warnings\n-    warnings.simplefilter('default', category=DeprecationWarning)\n-    return lambda: warnings.catch_warnings(record=True)\n+@pytest.yield_fixture(autouse=True)\n+def catch_deprecation_warnings(recwarn):\n+    yield\n+    assert not recwarn.list\n\n@@ -1116,9 +1116,10 @@ def test_static_files():\n     rv.close()\n \n \n-def test_static_path_deprecated():\n-    with pytest.deprecated_call():\n+def test_static_path_deprecated(recwarn):\n     app = flask.Flask(__name__, static_path='/foo')\n+    recwarn.pop(DeprecationWarning)\n+\n     app.testing = True\n     rv = app.test_client().get('/foo/index.html')\n     assert rv.status_code == 200\n\n@@ -16,7 +16,7 @@ import flask\n \n class TestRequestDeprecation(object):\n \n-    def test_request_json(self, catch_deprecation_warnings):\n+    def test_request_json(self, recwarn):\n         \"\"\"Request.json is deprecated\"\"\"\n         app = flask.Flask(__name__)\n         app.testing = True\n@@ -27,13 +27,11 @@ class TestRequestDeprecation(object):\n             print(flask.request.json)\n             return 'OK'\n \n-        with catch_deprecation_warnings() as captured:\n         c = app.test_client()\n         c.post('/', data='{\"spam\": 42}', content_type='application/json')\n+        recwarn.pop(DeprecationWarning)\n \n-        assert len(captured) == 1\n-\n-    def test_request_module(self, catch_deprecation_warnings):\n+    def test_request_module(self, recwarn):\n         \"\"\"Request.module is deprecated\"\"\"\n         app = flask.Flask(__name__)\n         app.testing = True\n@@ -43,8 +41,6 @@ class TestRequestDeprecation(object):\n             assert flask.request.module is None\n             return 'OK'\n \n-        with catch_deprecation_warnings() as captured:\n         c = app.test_client()\n         c.get('/')\n-\n-        assert len(captured) == 1\n+        recwarn.pop(DeprecationWarning)\n\n@@ -20,6 +20,18 @@ except ImportError:\n from flask._compat import PY2\n \n \n+@pytest.fixture(autouse=True)\n+def disable_extwarnings(request, recwarn):\n+    from flask.exthook import ExtDeprecationWarning\n+\n+    def inner():\n+        assert set(w.category for w in recwarn.list) \\\n+            <= set([ExtDeprecationWarning])\n+        recwarn.clear()\n+\n+    request.addfinalizer(inner)\n+\n+\n @pytest.fixture(autouse=True)\n def importhook_setup(monkeypatch, request):\n     # we clear this out for various reasons.  The most important one is\n\n@@ -337,7 +337,7 @@ class TestSendfile(object):\n                 assert rv.data == f.read()\n             rv.close()\n \n-    def test_send_file_xsendfile(self):\n+    def test_send_file_xsendfile(self, catch_deprecation_warnings):\n         app = flask.Flask(__name__)\n         app.use_x_sendfile = True\n         with app.test_request_context():\n@@ -349,9 +349,9 @@ class TestSendfile(object):\n             assert rv.mimetype == 'text/html'\n             rv.close()\n \n-    def test_send_file_object(self, catch_deprecation_warnings):\n+    def test_send_file_object(self, recwarn):\n         app = flask.Flask(__name__)\n-        with catch_deprecation_warnings() as captured:\n+\n         with app.test_request_context():\n             f = open(os.path.join(app.root_path, 'static/index.html'), mode='rb')\n             rv = flask.send_file(f)\n@@ -360,11 +360,13 @@ class TestSendfile(object):\n                 assert rv.data == f.read()\n             assert rv.mimetype == 'text/html'\n             rv.close()\n+\n         # mimetypes + etag\n-            assert len(captured) == 2\n+        assert len(recwarn.list) == 2\n+        recwarn.clear()\n \n         app.use_x_sendfile = True\n-        with catch_deprecation_warnings() as captured:\n+\n         with app.test_request_context():\n             f = open(os.path.join(app.root_path, 'static/index.html'))\n             rv = flask.send_file(f)\n@@ -373,21 +375,23 @@ class TestSendfile(object):\n             assert rv.headers['x-sendfile'] == \\\n                 os.path.join(app.root_path, 'static/index.html')\n             rv.close()\n+\n         # mimetypes + etag\n-            assert len(captured) == 2\n+        recwarn.pop()\n+        recwarn.pop()\n \n         app.use_x_sendfile = False\n         with app.test_request_context():\n-            with catch_deprecation_warnings() as captured:\n             f = StringIO('Test')\n             rv = flask.send_file(f)\n             rv.direct_passthrough = False\n             assert rv.data == b'Test'\n             assert rv.mimetype == 'application/octet-stream'\n             rv.close()\n+\n             # etags\n-            assert len(captured) == 1\n-            with catch_deprecation_warnings() as captured:\n+            recwarn.pop()\n+\n             class PyStringIO(object):\n                 def __init__(self, *args, **kwargs):\n                     self._io = StringIO(*args, **kwargs)\n@@ -400,39 +404,45 @@ class TestSendfile(object):\n             assert rv.data == b'Test'\n             assert rv.mimetype == 'text/plain'\n             rv.close()\n+\n             # attachment_filename and etags\n-            assert len(captured) == 3\n-            with catch_deprecation_warnings() as captured:\n+            recwarn.pop()\n+            recwarn.pop()\n+            recwarn.pop()\n+\n             f = StringIO('Test')\n             rv = flask.send_file(f, mimetype='text/plain')\n             rv.direct_passthrough = False\n             assert rv.data == b'Test'\n             assert rv.mimetype == 'text/plain'\n             rv.close()\n+\n             # etags\n-            assert len(captured) == 1\n+            recwarn.pop()\n \n         app.use_x_sendfile = True\n-        with catch_deprecation_warnings() as captured:\n+\n         with app.test_request_context():\n             f = StringIO('Test')\n             rv = flask.send_file(f)\n             assert 'x-sendfile' not in rv.headers\n             rv.close()\n-            # etags\n-            assert len(captured) == 1\n \n-    def test_attachment(self, catch_deprecation_warnings):\n+        # etags\n+        recwarn.pop()\n+\n+    def test_attachment(self, recwarn):\n         app = flask.Flask(__name__)\n-        with catch_deprecation_warnings() as captured:\n         with app.test_request_context():\n             f = open(os.path.join(app.root_path, 'static/index.html'))\n             rv = flask.send_file(f, as_attachment=True)\n             value, options = parse_options_header(rv.headers['Content-Disposition'])\n             assert value == 'attachment'\n             rv.close()\n+\n         # mimetypes + etag\n-            assert len(captured) == 2\n+        assert len(recwarn.list) == 2\n+        recwarn.clear()\n \n         with app.test_request_context():\n             assert options['filename'] == 'index.html'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#293eb583f62e930c84dc1612fadf60185c0a9174", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 10 | Lines Deleted: 10 | Files Changed: 1 | Hunks: 6 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 20 | Churn Cumulative: 569 | Contributors (this commit): 10 | Commits (past 90d): 7 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -362,8 +362,8 @@ class TestSendfile(object):\n             rv.close()\n \n         # mimetypes + etag\n-        assert len(recwarn.list) == 2\n-        recwarn.clear()\n+        recwarn.pop(DeprecationWarning)\n+        recwarn.pop(DeprecationWarning)\n \n         app.use_x_sendfile = True\n \n@@ -377,8 +377,8 @@ class TestSendfile(object):\n             rv.close()\n \n         # mimetypes + etag\n-        recwarn.pop()\n-        recwarn.pop()\n+        recwarn.pop(DeprecationWarning)\n+        recwarn.pop(DeprecationWarning)\n \n         app.use_x_sendfile = False\n         with app.test_request_context():\n@@ -390,7 +390,7 @@ class TestSendfile(object):\n             rv.close()\n \n             # etags\n-            recwarn.pop()\n+            recwarn.pop(DeprecationWarning)\n \n             class PyStringIO(object):\n                 def __init__(self, *args, **kwargs):\n@@ -406,9 +406,9 @@ class TestSendfile(object):\n             rv.close()\n \n             # attachment_filename and etags\n-            recwarn.pop()\n-            recwarn.pop()\n-            recwarn.pop()\n+            a = recwarn.pop(DeprecationWarning)\n+            b = recwarn.pop(DeprecationWarning)\n+            c = recwarn.pop(UserWarning)  # file not found\n \n             f = StringIO('Test')\n             rv = flask.send_file(f, mimetype='text/plain')\n@@ -418,7 +418,7 @@ class TestSendfile(object):\n             rv.close()\n \n             # etags\n-            recwarn.pop()\n+            recwarn.pop(DeprecationWarning)\n \n         app.use_x_sendfile = True\n \n@@ -429,7 +429,7 @@ class TestSendfile(object):\n             rv.close()\n \n         # etags\n-        recwarn.pop()\n+        recwarn.pop(DeprecationWarning)\n \n     def test_attachment(self, recwarn):\n         app = flask.Flask(__name__)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6c359e0f532d18a71895f035dd1326ca5d2d67f8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 4 | Files Changed: 3 | Hunks: 8 | Methods Changed: 5 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 15 | Churn Cumulative: 1933 | Contributors (this commit): 22 | Commits (past 90d): 14 | Contributors (cumulative): 26 | DMM Complexity: 1.0\n\nDIFF:\n@@ -7,6 +7,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import flask\n+import gc\n import os\n import sys\n import pkgutil\n@@ -129,4 +130,5 @@ def purge_module(request):\n @pytest.yield_fixture(autouse=True)\n def catch_deprecation_warnings(recwarn):\n     yield\n+    gc.collect()\n     assert not recwarn.list\n\n@@ -1123,6 +1123,8 @@ def test_static_path_deprecated(recwarn):\n     app.testing = True\n     rv = app.test_client().get('/foo/index.html')\n     assert rv.status_code == 200\n+    rv.close()\n+\n     with app.test_request_context():\n         assert flask.url_for('static', filename='index.html') == '/foo/index.html'\n \n@@ -1132,6 +1134,8 @@ def test_static_url_path():\n     app.testing = True\n     rv = app.test_client().get('/foo/index.html')\n     assert rv.status_code == 200\n+    rv.close()\n+\n     with app.test_request_context():\n         assert flask.url_for('static', filename='index.html') == '/foo/index.html'\n \n\n@@ -353,7 +353,7 @@ class TestSendfile(object):\n         app = flask.Flask(__name__)\n \n         with app.test_request_context():\n-            f = open(os.path.join(app.root_path, 'static/index.html'), mode='rb')\n+            with open(os.path.join(app.root_path, 'static/index.html'), mode='rb') as f:\n                 rv = flask.send_file(f)\n                 rv.direct_passthrough = False\n                 with app.open_resource('static/index.html') as f:\n@@ -368,7 +368,7 @@ class TestSendfile(object):\n         app.use_x_sendfile = True\n \n         with app.test_request_context():\n-            f = open(os.path.join(app.root_path, 'static/index.html'))\n+            with open(os.path.join(app.root_path, 'static/index.html')) as f:\n                 rv = flask.send_file(f)\n                 assert rv.mimetype == 'text/html'\n                 assert 'x-sendfile' in rv.headers\n@@ -434,9 +434,10 @@ class TestSendfile(object):\n     def test_attachment(self, recwarn):\n         app = flask.Flask(__name__)\n         with app.test_request_context():\n-            f = open(os.path.join(app.root_path, 'static/index.html'))\n+            with open(os.path.join(app.root_path, 'static/index.html')) as f:\n                 rv = flask.send_file(f, as_attachment=True)\n-            value, options = parse_options_header(rv.headers['Content-Disposition'])\n+                value, options = \\\n+                    parse_options_header(rv.headers['Content-Disposition'])\n                 assert value == 'attachment'\n                 rv.close()\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8458cc5cd10bac1dabea3dae86424bce46926a49", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 50 | Files Changed: 2 | Hunks: 13 | Methods Changed: 5 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 61 | Churn Cumulative: 2497 | Contributors (this commit): 44 | Commits (past 90d): 14 | Contributors (cumulative): 51 | DMM Complexity: 0.5\n\nDIFF:\n@@ -437,11 +437,7 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n     to ``True`` to directly emit an ``X-Sendfile`` header.  This however\n     requires support of the underlying webserver for ``X-Sendfile``.\n \n-    By default it will try to guess the mimetype for you, but you can\n-    also explicitly provide one.  For extra security you probably want\n-    to send certain files as attachment (HTML for instance).  The mimetype\n-    guessing requires a `filename` or an `attachment_filename` to be\n-    provided.\n+    You must explicitly provide the mimetype for the filename or file object.\n \n     Please never pass filenames to this function from user sources;\n     you should use :func:`send_from_directory` instead.\n@@ -461,6 +457,11 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n     .. versionchanged:: 0.9\n        cache_timeout pulls its default from application config, when None.\n \n+    .. versionchanged:: 0.12\n+       mimetype guessing and etag support removed for file objects.\n+       If no mimetype or attachment_filename is provided, application/octet-stream\n+       will be used.\n+\n     :param filename_or_fp: the filename of the file to send in `latin-1`.\n                            This is relative to the :attr:`~Flask.root_path`\n                            if a relative path is specified.\n@@ -488,25 +489,9 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n         filename = filename_or_fp\n         file = None\n     else:\n-        from warnings import warn\n         file = filename_or_fp\n         filename = getattr(file, 'name', None)\n \n-        # XXX: this behavior is now deprecated because it was unreliable.\n-        # removed in Flask 1.0\n-        if not attachment_filename and not mimetype \\\n-           and isinstance(filename, string_types):\n-            warn(DeprecationWarning('The filename support for file objects '\n-                'passed to send_file is now deprecated.  Pass an '\n-                'attach_filename if you want mimetypes to be guessed.'),\n-                stacklevel=2)\n-        if add_etags:\n-            warn(DeprecationWarning('In future flask releases etags will no '\n-                'longer be generated for file objects passed to the send_file '\n-                'function because this behavior was unreliable.  Pass '\n-                'filenames instead if possible, otherwise attach an etag '\n-                'yourself based on another value'), stacklevel=2)\n-\n     if filename is not None:\n         if not os.path.isabs(filename):\n             filename = os.path.join(current_app.root_path, filename)\n@@ -553,7 +538,9 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n         rv.cache_control.max_age = cache_timeout\n         rv.expires = int(time() + cache_timeout)\n \n-    if add_etags and filename is not None:\n+    if add_etags and filename is not None and file is None:\n+        from warnings import warn\n+\n         try:\n             rv.set_etag('%s-%s-%s' % (\n                 os.path.getmtime(filename),\n\n@@ -349,7 +349,7 @@ class TestSendfile(object):\n             assert rv.mimetype == 'text/html'\n             rv.close()\n \n-    def test_send_file_object(self, recwarn):\n+    def test_send_file_object(self):\n         app = flask.Flask(__name__)\n \n         with app.test_request_context():\n@@ -361,10 +361,6 @@ class TestSendfile(object):\n                 assert rv.mimetype == 'text/html'\n                 rv.close()\n \n-        # mimetypes + etag\n-        recwarn.pop(DeprecationWarning)\n-        recwarn.pop(DeprecationWarning)\n-\n         app.use_x_sendfile = True\n \n         with app.test_request_context():\n@@ -376,10 +372,6 @@ class TestSendfile(object):\n                     os.path.join(app.root_path, 'static/index.html')\n                 rv.close()\n \n-        # mimetypes + etag\n-        recwarn.pop(DeprecationWarning)\n-        recwarn.pop(DeprecationWarning)\n-\n         app.use_x_sendfile = False\n         with app.test_request_context():\n             f = StringIO('Test')\n@@ -389,9 +381,6 @@ class TestSendfile(object):\n             assert rv.mimetype == 'application/octet-stream'\n             rv.close()\n \n-            # etags\n-            recwarn.pop(DeprecationWarning)\n-\n             class PyStringIO(object):\n                 def __init__(self, *args, **kwargs):\n                     self._io = StringIO(*args, **kwargs)\n@@ -405,11 +394,6 @@ class TestSendfile(object):\n             assert rv.mimetype == 'text/plain'\n             rv.close()\n \n-            # attachment_filename and etags\n-            a = recwarn.pop(DeprecationWarning)\n-            b = recwarn.pop(DeprecationWarning)\n-            c = recwarn.pop(UserWarning)  # file not found\n-\n             f = StringIO('Test')\n             rv = flask.send_file(f, mimetype='text/plain')\n             rv.direct_passthrough = False\n@@ -417,9 +401,6 @@ class TestSendfile(object):\n             assert rv.mimetype == 'text/plain'\n             rv.close()\n \n-            # etags\n-            recwarn.pop(DeprecationWarning)\n-\n         app.use_x_sendfile = True\n \n         with app.test_request_context():\n@@ -428,10 +409,7 @@ class TestSendfile(object):\n             assert 'x-sendfile' not in rv.headers\n             rv.close()\n \n-        # etags\n-        recwarn.pop(DeprecationWarning)\n-\n-    def test_attachment(self, recwarn):\n+    def test_attachment(self):\n         app = flask.Flask(__name__)\n         with app.test_request_context():\n             with open(os.path.join(app.root_path, 'static/index.html')) as f:\n@@ -441,10 +419,6 @@ class TestSendfile(object):\n                 assert value == 'attachment'\n                 rv.close()\n \n-        # mimetypes + etag\n-        assert len(recwarn.list) == 2\n-        recwarn.clear()\n-\n         with app.test_request_context():\n             assert options['filename'] == 'index.html'\n             rv = flask.send_file('static/index.html', as_attachment=True)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#fe5f714026b68b1416c3d3985bce5063901c320f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 15 | Churn Cumulative: 1484 | Contributors (this commit): 14 | Commits (past 90d): 11 | Contributors (cumulative): 16 | DMM Complexity: 1.0\n\nDIFF:\n@@ -55,10 +55,10 @@ def prepare_exec_for_file(filename):\n     module = []\n \n     # Chop off file extensions or package markers\n-    if filename.endswith('.py'):\n-        filename = filename[:-3]\n-    elif os.path.split(filename)[1] == '__init__.py':\n+    if os.path.split(filename)[1] == '__init__.py':\n         filename = os.path.dirname(filename)\n+    elif filename.endswith('.py'):\n+        filename = filename[:-3]\n     else:\n         raise NoAppException('The file provided (%s) does exist but is not a '\n                              'valid Python file.  This means that it cannot '\n\n@@ -19,7 +19,7 @@ from click.testing import CliRunner\n from flask import Flask, current_app\n \n from flask.cli import AppGroup, FlaskGroup, NoAppException, ScriptInfo, \\\n-    find_best_app, locate_app, with_appcontext\n+    find_best_app, locate_app, with_appcontext, prepare_exec_for_file\n \n \n def test_cli_name(test_apps):\n@@ -49,6 +49,13 @@ def test_find_best_app(test_apps):\n     pytest.raises(NoAppException, find_best_app, mod)\n \n \n+def test_prepare_exec_for_file(test_apps):\n+    assert prepare_exec_for_file('test.py') == 'test'\n+    assert prepare_exec_for_file('/usr/share/__init__.py') == 'share'\n+    with pytest.raises(NoAppException):\n+        prepare_exec_for_file('test.txt')\n+\n+\n def test_locate_app(test_apps):\n     \"\"\"Test of locate_app.\"\"\"\n     assert locate_app(\"cliapp.app\").name == \"testapp\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#41e08f4ccd0f41896200cbf5c5f5d6f3df3df713", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): -5/0 | Churn Δ: 15 | Churn Cumulative: 1499 | Contributors (this commit): 15 | Commits (past 90d): 13 | Contributors (cumulative): 18 | DMM Complexity: 1.0\n\nDIFF:\n@@ -55,10 +55,10 @@ def prepare_exec_for_file(filename):\n     module = []\n \n     # Chop off file extensions or package markers\n-    if filename.endswith('.py'):\n-        filename = filename[:-3]\n-    elif os.path.split(filename)[1] == '__init__.py':\n+    if os.path.split(filename)[1] == '__init__.py':\n         filename = os.path.dirname(filename)\n+    elif filename.endswith('.py'):\n+        filename = filename[:-3]\n     else:\n         raise NoAppException('The file provided (%s) does exist but is not a '\n                              'valid Python file.  This means that it cannot '\n\n@@ -19,7 +19,7 @@ from click.testing import CliRunner\n from flask import Flask, current_app\n \n from flask.cli import AppGroup, FlaskGroup, NoAppException, ScriptInfo, \\\n-    find_best_app, locate_app, with_appcontext\n+    find_best_app, locate_app, with_appcontext, prepare_exec_for_file\n \n \n def test_cli_name(test_apps):\n@@ -49,6 +49,13 @@ def test_find_best_app(test_apps):\n     pytest.raises(NoAppException, find_best_app, mod)\n \n \n+def test_prepare_exec_for_file(test_apps):\n+    assert prepare_exec_for_file('test.py') == 'test'\n+    assert prepare_exec_for_file('/usr/share/__init__.py') == 'share'\n+    with pytest.raises(NoAppException):\n+        prepare_exec_for_file('test.txt')\n+\n+\n def test_locate_app(test_apps):\n     \"\"\"Test of locate_app.\"\"\"\n     assert locate_app(\"cliapp.app\").name == \"testapp\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e048aa4e19d689104733783a19560a6a485a473c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 8 | Churn Cumulative: 1185 | Contributors (this commit): 14 | Commits (past 90d): 5 | Contributors (cumulative): 14 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1031,6 +1031,14 @@ def test_jsonify_mimetype():\n         assert rv.mimetype == 'application/vnd.api+json'\n \n \n+def test_jsonify_args_and_kwargs_check():\n+    app = flask.Flask(__name__)\n+    with app.test_request_context():\n+        with pytest.raises(TypeError) as e:\n+            flask.jsonify('fake args', kwargs='fake')\n+        assert 'behavior undefined' in str(e.value)\n+\n+\n def test_url_generation():\n     app = flask.Flask(__name__)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#954b7ef7bbc261ac455feb122b56e897653de826", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 19 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 19 | Churn Cumulative: 280 | Contributors (this commit): 4 | Commits (past 90d): 1 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -355,6 +355,25 @@ def test_route_decorator_custom_endpoint_with_dots():\n     rv = c.get('/py/bar/123')\n     assert rv.status_code == 404\n \n+\n+def test_endpoint_decorator():\n+    from werkzeug.routing import Rule\n+    app = flask.Flask(__name__)\n+    app.url_map.add(Rule('/foo', endpoint='bar'))\n+\n+    bp = flask.Blueprint('bp', __name__)\n+\n+    @bp.endpoint('bar')\n+    def foobar():\n+        return flask.request.endpoint\n+\n+    app.register_blueprint(bp, url_prefix='/bp_prefix')\n+\n+    c = app.test_client()\n+    assert c.get('/foo').data == b'bar'\n+    assert c.get('/bp_prefix/bar').status_code == 404\n+\n+\n def test_template_filter():\n     bp = flask.Blueprint('bp', __name__)\n     @bp.app_template_filter()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#03ea11fe76a593c146c347f49d8285efb36bb886", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 18 | Churn Cumulative: 1907 | Contributors (this commit): 41 | Commits (past 90d): 6 | Contributors (cumulative): 41 | DMM Complexity: 0.0\n\nDIFF:\n@@ -563,8 +563,9 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n     return rv\n \n \n-def safe_join(directory, filename):\n-    \"\"\"Safely join `directory` and `filename`.\n+def safe_join(directory, *pathnames):\n+    \"\"\"Safely join `directory` and zero or more untrusted `pathnames`\n+    components.\n \n     Example usage::\n \n@@ -574,11 +575,13 @@ def safe_join(directory, filename):\n             with open(filename, 'rb') as fd:\n                 content = fd.read()  # Read and process the file content...\n \n-    :param directory: the base directory.\n-    :param filename: the untrusted filename relative to that directory.\n-    :raises: :class:`~werkzeug.exceptions.NotFound` if the resulting path\n-             would fall out of `directory`.\n+    :param directory: the trusted base directory.\n+    :param pathnames: the untrusted pathnames relative to that directory.\n+    :raises: :class:`~werkzeug.exceptions.NotFound` if one or more passed\n+            paths fall out of its boundaries.\n     \"\"\"\n+    for filename in pathnames:\n+        if filename != '':\n             filename = posixpath.normpath(filename)\n         for sep in _os_alt_seps:\n             if sep in filename:\n@@ -587,7 +590,8 @@ def safe_join(directory, filename):\n            filename == '..' or \\\n            filename.startswith('../'):\n             raise NotFound()\n-    return os.path.join(directory, filename)\n+        directory = os.path.join(directory, filename)\n+    return directory\n \n \n def send_from_directory(directory, filename, **options):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#06a170ea9b73ffe4f2e64453c70ed6b44619ecc8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 43 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 44 | Churn Cumulative: 652 | Contributors (this commit): 12 | Commits (past 90d): 10 | Contributors (cumulative): 12 | DMM Complexity: 1.0\n\nDIFF:\n@@ -15,7 +15,7 @@ import os\n import datetime\n import flask\n from logging import StreamHandler\n-from werkzeug.exceptions import BadRequest\n+from werkzeug.exceptions import BadRequest, NotFound\n from werkzeug.http import parse_cache_control_header, parse_options_header\n from werkzeug.http import http_date\n from flask._compat import StringIO, text_type\n@@ -722,3 +722,45 @@ class TestStreaming(object):\n         rv = c.get('/?name=World')\n         assert rv.data == b'Hello World!'\n         assert called == [42]\n+\n+\n+class TestSafeJoin(object):\n+\n+    def test_safe_join(self):\n+        # Valid combinations of *args and expected joined paths.\n+        passing = (\n+            (('a/b/c', ), 'a/b/c'),\n+            (('/', 'a/', 'b/', 'c/', ), '/a/b/c'),\n+            (('a', 'b', 'c', ), 'a/b/c'),\n+            (('/a', 'b/c', ), '/a/b/c'),\n+            (('a/b', 'X/../c'), 'a/b/c', ),\n+            (('/a/b', 'c/X/..'), '/a/b/c', ),\n+            # If last path is '' add a slash\n+            (('/a/b/c', '', ), '/a/b/c/', ),\n+            # Preserve dot slash\n+            (('/a/b/c', './', ), '/a/b/c/.', ),\n+            (('a/b/c', 'X/..'), 'a/b/c/.', ),\n+            # Base directory is always considered safe\n+            (('../', 'a/b/c'), '../a/b/c'),\n+            (('/..', ), '/..'),\n+        )\n+\n+        for args, expected in passing:\n+            assert flask.safe_join(*args) == expected\n+\n+    def test_safe_join_exceptions(self):\n+        # Should raise werkzeug.exceptions.NotFound on unsafe joins.\n+        failing = (\n+            # path.isabs and ``..'' checks\n+            ('/a', 'b', '/c'),\n+            ('/a', '../b/c', ),\n+            ('/a', '..', 'b/c'),\n+            # Boundaries violations after path normalization\n+            ('/a', 'b/../b/../../c', ),\n+            ('/a', 'b', 'c/../..'),\n+            ('/a', 'b/../../c', ),\n+        )\n+\n+        for args in failing:\n+            with pytest.raises(NotFound):\n+                print(flask.safe_join(*args))\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#64a37bb9b758630c0f2c649d82e10e849c095d48", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 21 | Churn Cumulative: 181 | Contributors (this commit): 6 | Commits (past 90d): 6 | Contributors (cumulative): 6 | DMM Complexity: 1.0\n\nDIFF:\n@@ -12,6 +12,8 @@\n # Copyright (C) 2015 CERN.\n #\n from __future__ import absolute_import, print_function\n+import os\n+import sys\n \n import click\n import pytest\n@@ -50,10 +52,23 @@ def test_find_best_app(test_apps):\n \n \n def test_prepare_exec_for_file(test_apps):\n-    assert prepare_exec_for_file('test.py') == 'test'\n-    assert prepare_exec_for_file('/usr/share/__init__.py') == 'share'\n+    \"\"\"Expect the correct path to be set and the correct module name to be returned.\n+\n+    :func:`prepare_exec_for_file` has a side effect, where\n+    the parent directory of given file is added to `sys.path`.\n+    \"\"\"\n+    realpath = os.path.realpath('/tmp/share/test.py')\n+    dirname = os.path.dirname(realpath)\n+    assert prepare_exec_for_file('/tmp/share/test.py') == 'test'\n+    assert dirname in sys.path\n+\n+    realpath = os.path.realpath('/tmp/share/__init__.py')\n+    dirname = os.path.dirname(os.path.dirname(realpath))\n+    assert prepare_exec_for_file('/tmp/share/__init__.py') == 'share'\n+    assert dirname in sys.path\n+\n     with pytest.raises(NoAppException):\n-        prepare_exec_for_file('test.txt')\n+        prepare_exec_for_file('/tmp/share/test.txt')\n \n \n def test_locate_app(test_apps):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#af515cc7ea561292b07195c6a93662b7ca189e21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 22 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 6 | Methods Changed: 3 | Complexity Δ (Sum/Max): 4/2 | Churn Δ: 26 | Churn Cumulative: 2585 | Contributors (this commit): 46 | Commits (past 90d): 18 | Contributors (cumulative): 55 | DMM Complexity: 0.6666666666666666\n\nDIFF:\n@@ -39,7 +39,7 @@ from jinja2 import FileSystemLoader\n from .signals import message_flashed\n from .globals import session, _request_ctx_stack, _app_ctx_stack, \\\n      current_app, request\n-from ._compat import string_types, text_type\n+from ._compat import string_types, text_type, PY2\n \n \n # sentinel\n@@ -429,7 +429,7 @@ def get_flashed_messages(with_categories=False, category_filter=[]):\n \n def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n               attachment_filename=None, add_etags=True,\n-              cache_timeout=None, conditional=False):\n+              cache_timeout=None, conditional=False, last_modified=None):\n     \"\"\"Sends the contents of a file to the client.  This will use the\n     most efficient method available and configured.  By default it will\n     try to use the WSGI server's file_wrapper support.  Alternatively\n@@ -483,6 +483,8 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n                           (default), this value is set by\n                           :meth:`~Flask.get_send_file_max_age` of\n                           :data:`~flask.current_app`.\n+    :param last_modified: the Datetime object representing timestamp for when\n+                          the input file was last modified.\n     \"\"\"\n     mtime = None\n     if isinstance(filename_or_fp, string_types):\n@@ -528,7 +530,12 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n \n     # if we know the file modification date, we can store it as\n     # the time of the last modification.\n-    if mtime is not None:\n+    if last_modified is not None:\n+        if PY2:\n+            rv.last_modified = int(last_modified.strftime(\"%s\"))\n+        else:\n+            rv.last_modified = last_modified.timestamp()\n+    elif mtime is not None:\n         rv.last_modified = int(mtime)\n \n     rv.cache_control.public = True\n\n@@ -18,7 +18,7 @@ from logging import StreamHandler\n from werkzeug.exceptions import BadRequest, NotFound\n from werkzeug.http import parse_cache_control_header, parse_options_header\n from werkzeug.http import http_date\n-from flask._compat import StringIO, text_type\n+from flask._compat import StringIO, text_type, PY2\n \n \n def has_encoding(name):\n@@ -349,6 +349,17 @@ class TestSendfile(object):\n             assert rv.mimetype == 'text/html'\n             rv.close()\n \n+    def test_send_file_last_modified(self):\n+        app = flask.Flask(__name__)\n+        with app.test_request_context():\n+            dtm = datetime.datetime.now()\n+            rv = flask.send_file('static/index.html', last_modified=dtm)\n+            if PY2:\n+                assert rv.last_modified == int(dtm.strftime(\"%s\"))\n+            else:\n+                assert rv.last_modified == dtm.timestamp()\n+            rv.close()\n+\n     def test_send_file_object(self):\n         app = flask.Flask(__name__)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
