{"custom_id": "flask#663802e9768d7862ae30aabf7b68f6e381fd59a3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 7 | Files Changed: 1 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 3670 | Contributors (this commit): 43 | Commits (past 90d): 15 | Contributors (cumulative): 43 | DMM Complexity: None\n\nDIFF:\n@@ -838,8 +838,8 @@ class Flask(_PackageBoundObject):\n             app.testing = True\n             client = app.test_client()\n \n-        The test client can be used in a `with` block to defer the closing down\n-        of the context until the end of the `with` block.  This is useful if\n+        The test client can be used in a ``with`` block to defer the closing down\n+        of the context until the end of the ``with`` block.  This is useful if\n         you want to access the context locals for testing::\n \n             with app.test_client() as c:\n@@ -863,7 +863,7 @@ class Flask(_PackageBoundObject):\n         See :class:`~flask.testing.FlaskClient` for more information.\n \n         .. versionchanged:: 0.4\n-           added support for `with` block usage for the client.\n+           added support for ``with`` block usage for the client.\n \n         .. versionadded:: 0.7\n            The `use_cookies` parameter was added as well as the ability\n@@ -1812,15 +1812,15 @@ class Flask(_PackageBoundObject):\n     def request_context(self, environ):\n         \"\"\"Creates a :class:`~flask.ctx.RequestContext` from the given\n         environment and binds it to the current context.  This must be used in\n-        combination with the `with` statement because the request is only bound\n-        to the current context for the duration of the `with` block.\n+        combination with the ``with`` statement because the request is only bound\n+        to the current context for the duration of the ``with`` block.\n \n         Example usage::\n \n             with app.request_context(environ):\n                 do_something_with(request)\n \n-        The object returned can also be used without the `with` statement\n+        The object returned can also be used without the ``with`` statement\n         which is useful for working in the shell.  The example above is\n         doing exactly the same as this code::\n \n@@ -1832,7 +1832,7 @@ class Flask(_PackageBoundObject):\n                 ctx.pop()\n \n         .. versionchanged:: 0.3\n-           Added support for non-with statement usage and `with` statement\n+           Added support for non-with statement usage and ``with`` statement\n            is now passed the ctx object.\n \n         :param environ: a WSGI environment\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d4b9b9854c7afb32c4c2ee27c4d98def1c8e22ca", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 2 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 803 | Contributors (this commit): 17 | Commits (past 90d): 8 | Contributors (cumulative): 23 | DMM Complexity: None\n\nDIFF:\n@@ -200,7 +200,7 @@ def htmlsafe_dump(obj, fp, **kwargs):\n \n def jsonify(*args, **kwargs):\n     \"\"\"Creates a :class:`~flask.Response` with the JSON representation of\n-    the given arguments with an `application/json` mimetype.  The arguments\n+    the given arguments with an :mimetype:`application/json` mimetype.  The arguments\n     to this function are the same as to the :class:`dict` constructor.\n \n     Example usage::\n\n@@ -98,7 +98,7 @@ class Request(RequestBase):\n \n     @property\n     def json(self):\n-        \"\"\"If the mimetype is `application/json` this will contain the\n+        \"\"\"If the mimetype is :mimetype:`application/json` this will contain the\n         parsed JSON data.  Otherwise this will be ``None``.\n \n         The :meth:`get_json` method should be used instead.\n@@ -112,7 +112,7 @@ class Request(RequestBase):\n     def is_json(self):\n         \"\"\"Indicates if this request is JSON or not.  By default a request\n         is considered to include JSON data if the mimetype is\n-        ``application/json`` or ``application/*+json``.\n+        :mimetype:`application/json` or :mimetype:`application/*+json`.\n \n         .. versionadded:: 0.11\n         \"\"\"\n@@ -127,7 +127,7 @@ class Request(RequestBase):\n         \"\"\"Parses the incoming JSON request data and returns it.  If\n         parsing fails the :meth:`on_json_loading_failed` method on the\n         request object will be invoked.  By default this function will\n-        only load the json data if the mimetype is ``application/json``\n+        only load the json data if the mimetype is :mimetype:`application/json`\n         but this can be overridden by the `force` parameter.\n \n         :param force: if set to ``True`` the mimetype is ignored.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d338dc8a1369d56cc998c9688ae9e818ba9a5df5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 5445 | Contributors (this commit): 64 | Commits (past 90d): 26 | Contributors (cumulative): 74 | DMM Complexity: None\n\nDIFF:\n@@ -71,7 +71,7 @@ class Flask(_PackageBoundObject):\n     The name of the package is used to resolve resources from inside the\n     package or the folder the module is contained in depending on if the\n     package parameter resolves to an actual python package (a folder with\n-    an :file:`__init__.py` file inside) or a standard module (just a `.py` file).\n+    an :file:`__init__.py` file inside) or a standard module (just a ``.py`` file).\n \n     For more information about resource loading, see :func:`open_resource`.\n \n\n@@ -887,7 +887,7 @@ class _PackageBoundObject(object):\n                 /layout.html\n                 /index.html\n \n-        If you want to open the `schema.sql` file you would do the\n+        If you want to open the :file:`schema.sql` file you would do the\n         following::\n \n             with app.open_resource('schema.sql') as f:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1501b79293b9441509d1911ad3da5b0e1871b1dd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 3 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 5779 | Contributors (this commit): 68 | Commits (past 90d): 31 | Contributors (cumulative): 82 | DMM Complexity: None\n\nDIFF:\n@@ -379,7 +379,7 @@ class Flask(_PackageBoundObject):\n         #: A list of functions that are called when :meth:`url_for` raises a\n         #: :exc:`~werkzeug.routing.BuildError`.  Each function registered here\n         #: is called with `error`, `endpoint` and `values`.  If a function\n-        #: returns ``None`` or raises a `BuildError` the next function is\n+        #: returns ``None`` or raises a :exc:`BuildError` the next function is\n         #: tried.\n         #:\n         #: .. versionadded:: 0.9\n\n@@ -248,7 +248,7 @@ def url_for(endpoint, **values):\n       address can be changed via ``SERVER_NAME`` configuration variable which\n       defaults to `localhost`.\n     :param _scheme: a string specifying the desired URL scheme. The `_external`\n-      parameter must be set to ``True`` or a `ValueError` is raised. The default\n+      parameter must be set to ``True`` or a :exc:`ValueError` is raised. The default\n       behavior uses the same scheme as the current request, or\n       ``PREFERRED_URL_SCHEME`` from the :ref:`app configuration <config>` if no\n       request context is available. As of Werkzeug 0.10, this also can be set\n\n@@ -60,7 +60,7 @@ class JSONEncoder(_json.JSONEncoder):\n     def default(self, o):\n         \"\"\"Implement this method in a subclass such that it returns a\n         serializable object for ``o``, or calls the base implementation (to\n-        raise a ``TypeError``).\n+        raise a :exc:`TypeError`).\n \n         For example, to support arbitrary iterators, you could implement\n         default like this::\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#5c7557917b86d3f2a88816fee00d3b84ee65cad6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 641 | Contributors (this commit): 10 | Commits (past 90d): 4 | Contributors (cumulative): 10 | DMM Complexity: None\n\nDIFF:\n@@ -126,7 +126,7 @@ class NullSession(SecureCookieSession):\n     \"\"\"\n \n     def _fail(self, *args, **kwargs):\n-        raise RuntimeError('the session is unavailable because no secret '\n+        raise RuntimeError('The session is unavailable because no secret '\n                            'key was set.  Set the secret_key on the '\n                            'application to something unique and secret.')\n     __setitem__ = __delitem__ = clear = pop = popitem = \\\n@@ -205,7 +205,7 @@ class SessionInterface(object):\n         if app.config['SESSION_COOKIE_DOMAIN'] is not None:\n             return app.config['SESSION_COOKIE_DOMAIN']\n         if app.config['SERVER_NAME'] is not None:\n-            # chop of the port which is usually not supported by browsers\n+            # chop off the port which is usually not supported by browsers\n             rv = '.' + app.config['SERVER_NAME'].rsplit(':', 1)[0]\n \n             # Google chrome does not like cookies set to .localhost, so\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d9402fc0c03353b6d2659297682e578d695476ce", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 7 | Files Changed: 2 | Hunks: 6 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 19 | Churn Cumulative: 1273 | Contributors (this commit): 11 | Commits (past 90d): 14 | Contributors (cumulative): 13 | DMM Complexity: 1.0\n\nDIFF:\n@@ -200,8 +200,9 @@ def htmlsafe_dump(obj, fp, **kwargs):\n \n def jsonify(*args, **kwargs):\n     \"\"\"Creates a :class:`~flask.Response` with the JSON representation of\n-    the given arguments with an :mimetype:`application/json` mimetype.  The arguments\n-    to this function are the same as to the :class:`dict` constructor.\n+    the given arguments with an :mimetype:`application/json` mimetype.  The\n+    arguments to this function are the same as to the :class:`dict`\n+    constructor.\n \n     Example usage::\n \n@@ -241,9 +242,13 @@ def jsonify(*args, **kwargs):\n         indent = 2\n         separators = (', ', ': ')\n \n-    return current_app.response_class(dumps(dict(*args, **kwargs),\n-        indent=indent, separators=separators),\n+    # Note that we add '\\n' to end of response\n+    # (see https://github.com/mitsuhiko/flask/pull/1262)\n+    rv = current_app.response_class(\n+        (dumps(dict(*args, **kwargs), indent=indent, separators=separators),\n+         '\\n'),\n         mimetype='application/json')\n+    return rv\n \n \n def tojson_filter(obj, **kwargs):\n\n@@ -942,7 +942,7 @@ def test_make_response_with_response_instance():\n         rv = flask.make_response(\n             flask.jsonify({'msg': 'W00t'}), 400)\n         assert rv.status_code == 400\n-        assert rv.data == b'{\\n  \"msg\": \"W00t\"\\n}'\n+        assert rv.data == b'{\\n  \"msg\": \"W00t\"\\n}\\n'\n         assert rv.mimetype == 'application/json'\n \n         rv = flask.make_response(\n@@ -963,7 +963,7 @@ def test_jsonify_no_prettyprint():\n     app = flask.Flask(__name__)\n     app.config.update({\"JSONIFY_PRETTYPRINT_REGULAR\": False})\n     with app.test_request_context():\n-        compressed_msg = b'{\"msg\":{\"submsg\":\"W00t\"},\"msg2\":\"foobar\"}'\n+        compressed_msg = b'{\"msg\":{\"submsg\":\"W00t\"},\"msg2\":\"foobar\"}\\n'\n         uncompressed_msg = {\n             \"msg\": {\n                 \"submsg\": \"W00t\"\n@@ -982,7 +982,7 @@ def test_jsonify_prettyprint():\n     with app.test_request_context():\n         compressed_msg = {\"msg\":{\"submsg\":\"W00t\"},\"msg2\":\"foobar\"}\n         pretty_response =\\\n-            b'{\\n  \"msg\": {\\n    \"submsg\": \"W00t\"\\n  }, \\n  \"msg2\": \"foobar\"\\n}'\n+            b'{\\n  \"msg\": {\\n    \"submsg\": \"W00t\"\\n  }, \\n  \"msg2\": \"foobar\"\\n}\\n'\n \n         rv = flask.make_response(\n             flask.jsonify(compressed_msg), 200)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#98b155c65da62077dc5f277a3ec15d3af78333af", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 5 | Methods Changed: 3 | Complexity Δ (Sum/Max): 2/1 | Churn Δ: 14 | Churn Cumulative: 4618 | Contributors (this commit): 47 | Commits (past 90d): 15 | Contributors (cumulative): 49 | DMM Complexity: 1.0\n\nDIFF:\n@@ -998,7 +998,7 @@ class Flask(_PackageBoundObject):\n         if isinstance(methods, string_types):\n             raise TypeError('Allowed methods have to be iterables of strings, '\n                             'for example: @app.route(..., methods=[\"POST\"])')\n-        methods = set(methods)\n+        methods = set(item.upper() for item in methods)\n \n         # Methods that should always be added\n         required_methods = set(getattr(view_func, 'required_methods', ()))\n\n@@ -107,15 +107,24 @@ def test_disallow_string_for_allowed_methods():\n def test_url_mapping():\n     app = flask.Flask(__name__)\n \n+    random_uuid4 = \"7eb41166-9ebf-4d26-b771-ea3f54f8b383\"\n+\n     def index():\n         return flask.request.method\n \n     def more():\n         return flask.request.method\n \n+    def options():\n+        return random_uuid4\n+\n+\n     app.add_url_rule('/', 'index', index)\n     app.add_url_rule('/more', 'more', more, methods=['GET', 'POST'])\n \n+    # Issue 1288: Test that automatic options are not added when non-uppercase 'options' in methods\n+    app.add_url_rule('/options', 'options', options, methods=['options'])\n+\n     c = app.test_client()\n     assert c.get('/').data == b'GET'\n     rv = c.post('/')\n@@ -129,6 +138,9 @@ def test_url_mapping():\n     rv = c.delete('/more')\n     assert rv.status_code == 405\n     assert sorted(rv.allow) == ['GET', 'HEAD', 'OPTIONS', 'POST']\n+    rv = c.open('/options', method='OPTIONS')\n+    assert rv.status_code == 200\n+    assert random_uuid4 in rv.data.decode(\"utf-8\")\n \n \n def test_werkzeug_routing():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d931216adebf441dc7431f1a073baed8b4a1b20a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 6 | Methods Changed: 7 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 1124 | Contributors (this commit): 6 | Commits (past 90d): 3 | Contributors (cumulative): 6 | DMM Complexity: 1.0\n\nDIFF:\n@@ -78,6 +78,7 @@ def prepare_exec_for_file(filename):\n \n def locate_app(app_id):\n     \"\"\"Attempts to locate the application.\"\"\"\n+    __traceback_hide__ = True\n     if ':' in app_id:\n         module, app_obj = app_id.split(':', 1)\n     else:\n@@ -116,6 +117,7 @@ class DispatchingApp(object):\n \n     def _load_in_background(self):\n         def _load_app():\n+            __traceback_hide__ = True\n             with self._lock:\n                 try:\n                     self._load_unlocked()\n@@ -125,17 +127,20 @@ class DispatchingApp(object):\n         t.start()\n \n     def _flush_bg_loading_exception(self):\n+        __traceback_hide__ = True\n         exc_info = self._bg_loading_exc_info\n         if exc_info is not None:\n             self._bg_loading_exc_info = None\n             reraise(*exc_info)\n \n     def _load_unlocked(self):\n+        __traceback_hide__ = True\n         self._app = rv = self.loader()\n         self._bg_loading_exc_info = None\n         return rv\n \n     def __call__(self, environ, start_response):\n+        __traceback_hide__ = True\n         if self._app is not None:\n             return self._app(environ, start_response)\n         self._flush_bg_loading_exception()\n@@ -172,6 +177,7 @@ class ScriptInfo(object):\n         this multiple times will just result in the already loaded app to\n         be returned.\n         \"\"\"\n+        __traceback_hide__ = True\n         if self._loaded_app is not None:\n             return self._loaded_app\n         if self.create_app is not None:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#33534bb4a9937e6faba5ecec4586519f453369b6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 47 | Lines Deleted: 47 | Files Changed: 47 | Hunks: 47 | Methods Changed: 0 | Complexity Δ (Sum/Max): 31/31 | Churn Δ: 94 | Churn Cumulative: 17812 | Contributors (this commit): 111 | Commits (past 90d): 96 | Contributors (cumulative): 307 | DMM Complexity: None\n\nDIFF:\n@@ -43,7 +43,7 @@ master_doc = 'index'\n \n # General information about the project.\n project = u'Flask'\n-copyright = u'2014, Armin Ronacher'\n+copyright = u'2015, Armin Ronacher'\n \n # The version info for the project you're documenting, acts as replacement for\n # |version| and |release|, also used in various other places throughout the\n\n@@ -6,7 +6,7 @@\n     A microblog example application written as Flask tutorial with\n     Flask and sqlite3.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Tests the Flaskr application.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     A simple application that shows how Flask and jQuery get along.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from flask import Flask, jsonify, render_template, request\n\n@@ -5,7 +5,7 @@\n \n     A microblogging application written with Flask and sqlite3.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Tests the MiniTwit application.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import os\n\n@@ -6,7 +6,7 @@\n     A microframework based on Werkzeug.  It's extensively documented\n     and follows best practice patterns.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Alias for flask.run for the command line.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -7,7 +7,7 @@\n     version of six so we don't have to depend on a specific version\n     of it.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import sys\n\n@@ -5,7 +5,7 @@\n \n     This module implements the central WSGI application object.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -6,7 +6,7 @@\n     Blueprints are the recommended way to implement larger or more\n     pluggable applications in Flask 0.7 and later.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from functools import update_wrapper\n\n@@ -5,7 +5,7 @@\n \n     A simple command line application to run flask apps.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Implements the configuration related objects.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Implements the objects required to keep the context.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Various helpers to make the development experience better.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from ._compat import implements_to_string, text_type\n\n@@ -14,7 +14,7 @@\n     We're switching from namespace packages because it was just too painful for\n     everybody involved.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -16,7 +16,7 @@\n \n     This is used by `flask.ext`.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import sys\n\n@@ -6,7 +6,7 @@\n     Defines all the global objects that are proxies to the current\n     active context.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Implements various helpers.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Implementation helpers for the JSON support in Flask.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import io\n\n@@ -5,7 +5,7 @@\n \n     Implements the logging support for Flask.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Implements cookie based sessions based on itsdangerous.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -6,7 +6,7 @@\n     Implements signals based on blinker if available, otherwise\n     falls silently back to a noop.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n signals_available = False\n\n@@ -5,7 +5,7 @@\n \n     Implements the bridge to Jinja2.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from jinja2 import BaseLoader, Environment as BaseEnvironment, \\\n\n@@ -6,7 +6,7 @@\n     Implements test support helpers.  This module is lazily imported\n     and usually not used in production environments.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     This module provides class-based views inspired by the ones in Django.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from .globals import request\n\n@@ -5,7 +5,7 @@\n \n     Implements the WSGI wrappers (request and response).\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -16,7 +16,7 @@\n     the most common patterns at least.  The diff it generates should be\n     hand reviewed and not applied blindly without making backups.\n \n-    :copyright: (c) Copyright 2014 by Armin Ronacher.\n+    :copyright: (c) Copyright 2015 by Armin Ronacher.\n     :license: see LICENSE for more details.\n \"\"\"\n import re\n\n@@ -12,7 +12,7 @@\n         flaskext_compat.activate()\n         from flask.ext import foo\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import sys\n\n@@ -5,7 +5,7 @@\n \n     Tests the Flask extensions.\n \n-    :copyright: (c) 2014 by Ali Afshar.\n+    :copyright: (c) 2015 by Ali Afshar.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -7,7 +7,7 @@\n     Helper script that performs a release.  Does pretty much everything\n     automatically for us.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import sys\n\n@@ -3,7 +3,7 @@\n     tests.conftest\n     ~~~~~~~~~~~~~~\n \n-    :copyright: (c) 2014 by the Flask Team, see AUTHORS for more details.\n+    :copyright: (c) 2015 by the Flask Team, see AUTHORS for more details.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import flask\n\n@@ -5,7 +5,7 @@\n \n     Tests the application context.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     The basic functionality.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Blueprints (and currently modules)\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -3,7 +3,7 @@\n     tests.test_config\n     ~~~~~~~~~~~~~~~~~\n \n-    :copyright: (c) 2014 by the Flask Team, see AUTHORS for more details.\n+    :copyright: (c) 2015 by the Flask Team, see AUTHORS for more details.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Tests deprecation support. Not used currently.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Tests the extension import thing.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Various helpers.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -3,7 +3,7 @@\n     tests.test_instance\n     ~~~~~~~~~~~~~~~~~~~\n \n-    :copyright: (c) 2014 by the Flask Team, see AUTHORS for more details.\n+    :copyright: (c) 2015 by the Flask Team, see AUTHORS for more details.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import os\n\n@@ -5,7 +5,7 @@\n \n     Tests regressions.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Tests the request context.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Signalling.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -6,7 +6,7 @@\n     Test that certain behavior of flask can be customized by\n     subclasses.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import flask\n\n@@ -5,7 +5,7 @@\n \n     Template functionality\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n@@ -5,7 +5,7 @@\n \n     Test client and more.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import pytest\n\n@@ -5,7 +5,7 @@\n \n     Pluggable views.\n \n-    :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2015 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#61263e08f9c763a6c2b3fec6428c972dea2f7cad", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 23 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 26 | Churn Cumulative: 675 | Contributors (this commit): 12 | Commits (past 90d): 7 | Contributors (cumulative): 14 | DMM Complexity: 1.0\n\nDIFF:\n@@ -10,7 +10,7 @@\n \"\"\"\n import io\n import uuid\n-from datetime import datetime\n+from datetime import date\n from .globals import current_app, request\n from ._compat import text_type, PY2\n \n@@ -74,8 +74,8 @@ class JSONEncoder(_json.JSONEncoder):\n                     return list(iterable)\n                 return JSONEncoder.default(self, o)\n         \"\"\"\n-        if isinstance(o, datetime):\n-            return http_date(o)\n+        if isinstance(o, date):\n+            return http_date(o.timetuple())\n         if isinstance(o, uuid.UUID):\n             return str(o)\n         if hasattr(o, '__html__'):\n\n@@ -12,9 +12,11 @@\n import pytest\n \n import os\n+import datetime\n import flask\n from logging import StreamHandler\n from werkzeug.http import parse_cache_control_header, parse_options_header\n+from werkzeug.http import http_date\n from flask._compat import StringIO, text_type\n \n \n@@ -29,6 +31,24 @@ def has_encoding(name):\n \n class TestJSON(object):\n \n+    def test_jsonify_date_types(self):\n+        \"\"\"Test jsonify with datetime.date and datetime.datetime types.\"\"\"\n+\n+        test_dates = (\n+            datetime.datetime(1973, 3, 11, 6, 30, 45),\n+            datetime.date(1975, 1, 5)\n+        )\n+\n+        app = flask.Flask(__name__)\n+        c = app.test_client()\n+\n+        for i, d in enumerate(test_dates):\n+            url = '/datetest{0}'.format(i)\n+            app.add_url_rule(url, str(i), lambda val=d: flask.jsonify(x=val))\n+            rv = c.get(url)\n+            assert rv.mimetype == 'application/json'\n+            assert flask.json.loads(rv.data)['x'] == http_date(d.timetuple())\n+\n     def test_json_bad_requests(self):\n         app = flask.Flask(__name__)\n         @app.route('/json', methods=['POST'])\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d60e13436dbe144b603eed686adcdbfb0788ac9c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 3680 | Contributors (this commit): 46 | Commits (past 90d): 11 | Contributors (cumulative): 46 | DMM Complexity: None\n\nDIFF:\n@@ -1301,7 +1301,7 @@ class Flask(_PackageBoundObject):\n         .. admonition:: Debug Note\n \n            In debug mode Flask will not tear down a request on an exception\n-           immediately.  Instead if will keep it alive so that the interactive\n+           immediately.  Instead it will keep it alive so that the interactive\n            debugger can still access it.  This behavior can be controlled\n            by the ``PRESERVE_CONTEXT_ON_EXCEPTION`` configuration variable.\n         \"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a45fce84960e3b97fe3ecc2f11de1ba613b8c5c4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 3685 | Contributors (this commit): 47 | Commits (past 90d): 4 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -1710,8 +1710,9 @@ class Flask(_PackageBoundObject):\n \n     def preprocess_request(self):\n         \"\"\"Called before the actual request dispatching and will\n-        call every as :meth:`before_request` decorated function.\n-        If any of these function returns a value it's handled as\n+        call each :meth:`before_request` decorated function, passing no\n+        arguments.\n+        If any of these functions returns a value, it's handled as\n         if it was the return value from the view and further\n         request handling is stopped.\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#eccee36964832577aad8d8a3108b7f39958ba8b0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 3693 | Contributors (this commit): 47 | Commits (past 90d): 5 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -1243,7 +1243,13 @@ class Flask(_PackageBoundObject):\n \n     @setupmethod\n     def before_request(self, f):\n-        \"\"\"Registers a function to run before each request.\"\"\"\n+        \"\"\"Registers a function to run before each request.\n+\n+        The function will be called without any arguments.\n+        If the function returns a non-None value, it's handled as\n+        if it was the return value from the view and further\n+        request handling is stopped.\n+        \"\"\"\n         self.before_request_funcs.setdefault(None, []).append(f)\n         return f\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6a2524634dec3a7bc71a8b7076ab937d77253c6a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 3697 | Contributors (this commit): 47 | Commits (past 90d): 6 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -1304,6 +1304,8 @@ class Flask(_PackageBoundObject):\n         When a teardown function was called because of a exception it will\n         be passed an error object.\n \n+        The return values of teardown functions are ignored.\n+\n         .. admonition:: Debug Note\n \n            In debug mode Flask will not tear down a request on an exception\n@@ -1338,6 +1340,8 @@ class Flask(_PackageBoundObject):\n         When a teardown function was called because of an exception it will\n         be passed an error object.\n \n+        The return values of teardown functions are ignored.\n+\n         .. versionadded:: 0.9\n         \"\"\"\n         self.teardown_appcontext_funcs.append(f)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#fe6bcffdad73fc8f683dadf1a86229fdfd3a571c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 3700 | Contributors (this commit): 47 | Commits (past 90d): 7 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -1258,6 +1258,9 @@ class Flask(_PackageBoundObject):\n         \"\"\"Registers a function to be run before the first request to this\n         instance of the application.\n \n+        The function will be called without any arguments and its return\n+        value is ignored.\n+\n         .. versionadded:: 0.8\n         \"\"\"\n         self.before_first_request_funcs.append(f)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#5fa76f6800fb81a621b63c42725c5502e2520302", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 18 | Churn Cumulative: 962 | Contributors (this commit): 6 | Commits (past 90d): 4 | Contributors (cumulative): 6 | DMM Complexity: 1.0\n\nDIFF:\n@@ -575,6 +575,24 @@ def test_request_processing():\n     assert rv == b'request|after'\n \n \n+def test_request_preprocessing_early_return():\n+    app = flask.Flask(__name__)\n+    evts = []\n+\n+    @app.before_request\n+    def before_request():\n+        return \"hello\"\n+\n+    @app.route('/')\n+    def index():\n+        evts.append('index')\n+        return \"damnit\"\n+\n+    rv = app.test_client().get('/').data.strip()\n+    assert rv == 'hello'\n+    assert not evts\n+\n+\n def test_after_request_processing():\n     app = flask.Flask(__name__)\n     app.testing = True\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#ddf0dfa8952852fb5365a794c4fe998a8ff6ba8f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 10/10 | Churn Δ: 4 | Churn Cumulative: 574 | Contributors (this commit): 18 | Commits (past 90d): 3 | Contributors (cumulative): 21 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '0.11-dev'\n+__version__ = '0.11.dev0'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n@@ -78,7 +78,7 @@ class run_audit(Command):\n \n setup(\n     name='Flask',\n-    version='0.11-dev',\n+    version='0.11.dev0',\n     url='http://github.com/mitsuhiko/flask/',\n     license='BSD',\n     author='Armin Ronacher',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#85b20f8d491ae02278e720c961024e837cc64b0e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): -10/0 | Churn Δ: 14 | Churn Cumulative: 347 | Contributors (this commit): 14 | Commits (past 90d): 2 | Contributors (cumulative): 14 | DMM Complexity: None\n\nDIFF:\n@@ -42,13 +42,21 @@ Links\n   <http://github.com/mitsuhiko/flask/zipball/master#egg=Flask-dev>`_\n \n \"\"\"\n-from __future__ import print_function\n-from setuptools import Command, setup\n+import re\n+import ast\n+from setuptools import setup\n+\n+\n+_version_re = re.compile(r'__version__\\s+=\\s+(.*)')\n+\n+with open('flask/__init__.py', 'rb') as f:\n+    version = str(ast.literal_eval(_version_re.search(\n+        f.read().decode('utf-8')).group(1)))\n \n \n setup(\n     name='Flask',\n-    version='0.11.dev0',\n+    version=version,\n     url='http://github.com/mitsuhiko/flask/',\n     license='BSD',\n     author='Armin Ronacher',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1158e229589f39a140829bbd02e2f721ea9b5d26", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 964 | Contributors (this commit): 6 | Commits (past 90d): 5 | Contributors (cumulative): 6 | DMM Complexity: None\n\nDIFF:\n@@ -589,7 +589,7 @@ def test_request_preprocessing_early_return():\n         return \"damnit\"\n \n     rv = app.test_client().get('/').data.strip()\n-    assert rv == 'hello'\n+    assert rv == b'hello'\n     assert not evts\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#9d64ff420fdde3c6eaa6d573d41da3b2f587422c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 49 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 9/5 | Churn Δ: 49 | Churn Cumulative: 49 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -0,0 +1,30 @@\n+# from flask.ext import foo => import flask_foo as foo\n+# from flask.ext.foo import bam => from flask_foo import bam\n+# import flask.ext.foo => import flask_foo\n+\n+import sys\n+\n+\n+def migrate(old_file):\n+    new_file = open(\"temp.py\", \"w\")\n+    for line in old_file:\n+        if line[0:14] == \"from flask.ext\":\n+            if line[14] == '.':\n+                import_statement = line[15::].split(' ')\n+                extension = import_statement[0]\n+                line = line.replace(\"flask.ext.\" + extension,\n+                                    \"flask_\" + extension)\n+            elif line[14] == \" \":\n+                import_statement = line[15::].split(' ')[1]\n+                import_statement = import_statement.strip('\\n')\n+                line = (\"import flask_\" +\n+                        import_statement +\n+                        \" as \" +\n+                        import_statement)\n+\n+        new_file.write(line)\n+    new_file.close()\n+\n+if __name__ == \"__main__\":\n+    old_file = open(sys.argv[1])\n+    migrate(old_file)\n\n@@ -0,0 +1,19 @@\n+from flask_foo import bam\n+import flask_foo as foo\n+\n+def migrate(old_file):\n+    new_file = open(\"temp.py\", \"w\")\n+    for line in old_file:\n+        if line[0, 15] is \"from flask.ext\":\n+            if line[15] == '.':\n+                import_statement = line[16::].split(' ')\n+                extension = import_statement[0]\n+                line = line. replace(\"flask.ext.\" + extension,\n+                                     \"flask_\" + extension)\n+            else:\n+                pass\n+\n+        new_file.write(line)\n+\n+if __name__ == \"__main__\":\n+    old_file = open(sys.arv[1])\n\\ No newline at end of file\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6d2c076a3bfafc39eed12a5bca41067c60184c77", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 5 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 14 | Churn Cumulative: 978 | Contributors (this commit): 7 | Commits (past 90d): 6 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -580,9 +580,19 @@ def test_request_preprocessing_early_return():\n     evts = []\n \n     @app.before_request\n-    def before_request():\n+    def before_request1():\n+        evts.append(1)\n+\n+    @app.before_request\n+    def before_request2():\n+        evts.append(2)\n         return \"hello\"\n \n+    @app.before_request\n+    def before_request3():\n+        evts.append(3)\n+        return \"bye\"\n+\n     @app.route('/')\n     def index():\n         evts.append('index')\n@@ -590,7 +600,7 @@ def test_request_preprocessing_early_return():\n \n     rv = app.test_client().get('/').data.strip()\n     assert rv == b'hello'\n-    assert not evts\n+    assert evts == [1, 2]\n \n \n def test_after_request_processing():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#29f7c10a5dea499f64188e29a4e08161dbf14eff", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 1785 | Contributors (this commit): 33 | Commits (past 90d): 2 | Contributors (cumulative): 33 | DMM Complexity: None\n\nDIFF:\n@@ -427,12 +427,8 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n     guessing requires a `filename` or an `attachment_filename` to be\n     provided.\n \n-    Please never pass filenames to this function from user sources without\n-    checking them first.  Something like this is usually sufficient to\n-    avoid security problems::\n-\n-        if '..' in filename or filename.startswith('/'):\n-            abort(404)\n+    Please never pass filenames to this function from user sources;\n+    you should use :func:`send_from_directory` instead.\n \n     .. versionadded:: 0.2\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8488a3afa97e12297bdb22586e17b4c0ddf54175", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 49 | Lines Deleted: 25 | Files Changed: 3 | Hunks: 8 | Methods Changed: 4 | Complexity Δ (Sum/Max): 8/7 | Churn Δ: 74 | Churn Cumulative: 156 | Contributors (this commit): 1 | Commits (past 90d): 7 | Contributors (cumulative): 3 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,20 +0,0 @@\n-from lib2to3.fixer_base import BaseFix\n-from lib2to3.fixer_util import Name, syms\n-\n-\n-class FixExtImport(BaseFix):\n-\n-    PATTERN = \"fixnode='oldname'\"\n-\n-    def transform(self, node, results):\n-        fixnode = results['fixnode']\n-        fixnode.replace(Name('newname', prefix=fixnode.prefix))\n-\n-        if node.type == syms.import_from and \\\n-                getattr(results['imp'], 'value', None) == 'flask.ext':\n-            return 0\n-            # TODO: Case 2\n-\n-\n-# CASE 1 - from flask.ext.foo import bam --> from flask_foo import bam\n-# CASE 2 - from flask.ext import foo --> import flask_foo as foo\n\n@@ -5,10 +5,41 @@ from redbaron import RedBaron\n import sys\n \n \n-with open(\"test.py\", \"r\") as source_code:\n+def read_source(input_file):\n+    with open(input_file, \"r\") as source_code:\n         red = RedBaron(source_code.read())\n+    return red\n \n-print red.dumps()\n \n-# with open(\"code.py\", \"w\") as source_code:\n-#     source_code.write(red.dumps())\n+def write_source(red, input_file):\n+    with open(input_file, \"w\") as source_code:\n+        source_code.write(red.dumps())\n+\n+\n+def fix_imports(red):\n+    from_imports = red.find_all(\"FromImport\")\n+    for x in range(len(from_imports)):\n+        values = from_imports[x].value\n+        if (values[0].value == 'flask') and (values[1].value == 'ext'):\n+            # Case 1\n+            if len(from_imports[x].value) == 3:\n+                package = values[2].value\n+                modules = from_imports[x].modules()\n+                r = \"{},\" * len(modules)\n+                print modules\n+                from_imports[x].replace(\"from flask_%s import %s\"\n+                                        % (package, r.format(*modules)[:-1]))\n+            # Case 2\n+            else:\n+                module = from_imports[x].modules()[0]\n+                from_imports[x].replace(\"import flask_%s as %s\"\n+                                        % (module, module))\n+\n+    return red\n+\n+\n+if __name__ == \"__main__\":\n+    input_file = sys.argv[1]\n+    ast = read_source(input_file)\n+    new_ast = fix_imports(ast)\n+    write_source(new_ast, input_file)\n\n@@ -1,6 +1,18 @@\n-from flask.ext.foo import bam\n+from flask.ext.foo import \\\n+    bam, \\\n+    crackle\n+\n from flask.ext import foo\n \n+from flask.ext.foo import (bam,\n+                           a,\n+                           b\n+)\n+\n+\n+from flask.ext import foo\n+\n+import sys\n \n def migrate(old_file):\n     new_file = open(\"temp.py\", \"w\")\n@@ -16,5 +28,6 @@ def migrate(old_file):\n \n         new_file.write(line)\n \n+\n if __name__ == \"__main__\":\n     old_file = open(sys.arv[1])\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
