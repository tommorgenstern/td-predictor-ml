{"custom_id": "keras#253dc4604479b832dd254d0d348c0b3e7e53fe0f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1262 | Lines Deleted: 637 | Files Changed: 337 | Hunks: 659 | Methods Changed: 4 | Complexity Δ (Sum/Max): -4/0 | Churn Δ: 1899 | Churn Cumulative: 356530 | Contributors (this commit): 502 | Commits (past 90d): 2048 | Contributors (cumulative): 2747 | DMM Complexity: None\n\nDIFF:\n@@ -17,16 +17,17 @@\n Detailed documentation and user guides are available at\n [keras.io](https://keras.io).\n \"\"\"\n-# pylint: disable=unused-import\n-from tensorflow.python import tf2\n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import distribute\n from keras import models\n from keras.engine.input_layer import Input\n from keras.engine.sequential import Sequential\n from keras.engine.training import Model\n \n+# isort: off\n+# pylint: disable=unused-import\n+from tensorflow.python import tf2\n+from tensorflow.python.util.tf_export import keras_export\n+\n __version__ = \"2.10.0\"\n \n keras_export(\"keras.__version__\").export_constant(__name__, \"__version__\")\n\n@@ -17,12 +17,14 @@\n import sys\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n import keras.layers.activation as activation_layers\n from keras import backend\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # b/123041942\n # In TF 2.x, if the `tf.nn.softmax` is used as an activation function in Keras\n # layers, it gets serialized as 'softmax_v2' instead of 'softmax' as the\n\n@@ -23,11 +23,12 @@ from __future__ import absolute_import\n from __future__ import division\n from __future__ import print_function\n \n+import keras  # pylint: disable=unused-import\n+\n+# isort: off\n from tensorflow.python.tools.api.generator import (\n     create_python_api,\n )\n \n-import keras  # pylint: disable=unused-import\n-\n if __name__ == \"__main__\":\n     create_python_api.main()\n\n@@ -34,6 +34,8 @@ import sys\n \n import six\n import tensorflow as tf\n+\n+# isort: off\n from google.protobuf import message\n from google.protobuf import text_format\n from tensorflow.python.lib.io import file_io\n\n@@ -26,7 +26,6 @@ References:\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import layers\n@@ -35,6 +34,9 @@ from keras.applications import imagenet_utils\n from keras.engine import sequential\n from keras.engine import training as training_lib\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/keras-applications/convnext/\"\n )\n\n@@ -21,7 +21,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -30,6 +29,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/\" \"keras-applications/densenet/\"\n )\n\n@@ -25,7 +25,6 @@ import copy\n import math\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -34,6 +33,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_PATH = \"https://storage.googleapis.com/keras-applications/\"\n \n WEIGHTS_HASHES = {\n\n@@ -25,7 +25,6 @@ import copy\n import math\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import layers\n@@ -34,6 +33,9 @@ from keras.engine import training\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_PATH = \"https://storage.googleapis.com/tensorflow/keras-applications/efficientnet_v2/\"  # noqa: E501\n \n WEIGHTS_HASHES = {\n\n@@ -18,12 +18,14 @@ import json\n import warnings\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n from keras.utils import data_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n CLASS_INDEX = None\n CLASS_INDEX_PATH = (\n     \"https://storage.googleapis.com/download.tensorflow.org/\"\n\n@@ -22,7 +22,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -31,6 +30,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHT_URL = (\n     \"https://storage.googleapis.com/tensorflow/\"\n     \"keras-applications/inception_resnet_v2/\"\n\n@@ -21,7 +21,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -30,6 +29,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/keras-applications/\"\n     \"inception_v3/inception_v3_weights_tf_dim_ordering_tf_kernels.h5\"\n\n@@ -62,8 +62,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -72,6 +70,10 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHT_PATH = (\n     \"https://storage.googleapis.com/tensorflow/\" \"keras-applications/mobilenet/\"\n )\n\n@@ -75,8 +75,6 @@ MACs stands for Multiply Adds\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -85,6 +83,10 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHT_PATH = (\n     \"https://storage.googleapis.com/tensorflow/\"\n     \"keras-applications/mobilenet_v2/\"\n\n@@ -17,8 +17,6 @@\n \"\"\"MobileNet v3 models for Keras.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import models\n@@ -27,6 +25,10 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n # TODO(scottzhu): Change this to the GCS path.\n BASE_WEIGHT_PATH = (\n     \"https://storage.googleapis.com/tensorflow/\"\n\n@@ -39,8 +39,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -49,6 +47,10 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/\" \"keras-applications/nasnet/\"\n )\n\n@@ -27,7 +27,6 @@ References:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import layers\n@@ -36,6 +35,9 @@ from keras.engine import training\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/keras-applications/regnet/\"\n )\n\n@@ -21,7 +21,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -30,6 +29,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/keras-applications/resnet/\"\n )\n\n@@ -27,7 +27,6 @@ from typing import List\n from typing import Union\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import layers\n@@ -36,6 +35,9 @@ from keras.engine import training\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n BASE_WEIGHTS_URL = (\n     \"https://storage.googleapis.com/tensorflow/\" \"keras-applications/resnet_rs/\"\n )\n\n@@ -20,11 +20,12 @@ Reference:\n     (https://arxiv.org/abs/1603.05027) (CVPR 2016)\n \"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.applications import imagenet_utils\n from keras.applications import resnet\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.applications.resnet_v2.ResNet50V2\", \"keras.applications.ResNet50V2\"\n\n@@ -21,7 +21,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -30,6 +29,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/keras-applications/\"\n     \"vgg16/vgg16_weights_tf_dim_ordering_tf_kernels.h5\"\n\n@@ -21,7 +21,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -30,6 +29,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/keras-applications/\"\n     \"vgg19/vgg19_weights_tf_dim_ordering_tf_kernels.h5\"\n\n@@ -24,7 +24,6 @@ Reference:\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.applications import imagenet_utils\n@@ -33,6 +32,9 @@ from keras.layers import VersionAwareLayers\n from keras.utils import data_utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n TF_WEIGHTS_PATH = (\n     \"https://storage.googleapis.com/tensorflow/keras-applications/\"\n     \"xception/xception_weights_tf_dim_ordering_tf_kernels.h5\"\n\n@@ -32,13 +32,6 @@ import weakref\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.core.protobuf import config_pb2\n-from tensorflow.python.eager import context\n-from tensorflow.python.eager.context import get_config\n-from tensorflow.python.framework import config\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend_config\n from keras.distribute import distribute_coordinator_utils as dc\n@@ -48,6 +41,15 @@ from keras.utils import object_identity\n from keras.utils import tf_contextlib\n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.core.protobuf import config_pb2\n+from tensorflow.python.eager import context\n+from tensorflow.python.eager.context import get_config\n+from tensorflow.python.framework import config\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n py_all = all\n py_sum = sum\n py_any = any\n\n@@ -15,6 +15,8 @@\n \"\"\"Keras backend config API.\"\"\"\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n # The type of float to use throughout a session.\n\n@@ -21,11 +21,6 @@ import numpy as np\n import scipy.sparse\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.eager import context\n-from tensorflow.python.eager.context import get_config\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n from keras import activations\n from keras import backend\n@@ -36,6 +31,13 @@ from keras.testing_infra import test_combinations\n from keras.utils import tf_inspect\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.eager import context\n+from tensorflow.python.eager.context import get_config\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n def compare_single_input_op_to_numpy(\n     keras_op,\n\n@@ -17,11 +17,13 @@\n import time\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager import context\n-from tensorflow.python.eager.context import get_executor\n \n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.python.eager import context\n+from tensorflow.python.eager.context import get_executor\n+\n \n def _run_benchmark(func, num_iters, execution_mode=None):\n     with context.execution_mode(execution_mode):\n\n@@ -18,6 +18,8 @@ import time\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.eager import context\n from tensorflow.python.eager.context import get_executor\n \n\n@@ -15,13 +15,15 @@\n \"\"\"Benchmark tests for Keras optimizers.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform.benchmark import (\n-    ParameterizedBenchmark,\n-)\n \n from keras.benchmarks import benchmark_util\n from keras.optimizers.optimizer_v2 import adam\n \n+# isort: off\n+from tensorflow.python.platform.benchmark import (\n+    ParameterizedBenchmark,\n+)\n+\n \n def bidirect_imdb_lstm_config():\n     \"\"\"Bidirectional LSTM model and IMDB data.\"\"\"\n\n@@ -27,10 +27,6 @@ import time\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util import deprecation\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras.distribute import distributed_file_utils\n@@ -44,6 +40,12 @@ from keras.utils.data_utils import Sequence\n from keras.utils.generic_utils import Progbar\n from keras.utils.mode_keys import ModeKeys\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util import deprecation\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n try:\n     import requests\n except ImportError:\n@@ -2523,11 +2525,12 @@ class TensorBoard(Callback, version_utils.TensorBoardVersionSelector):\n     def _configure_embeddings(self):\n         \"\"\"Configure the Projector for embeddings.\"\"\"\n         # TODO(omalleyt): Add integration tests.\n-        from google.protobuf import text_format\n-\n         from keras.layers import core\n         from keras.protobuf import projector_config_pb2\n \n+        # isort: off\n+        from google.protobuf import text_format\n+\n         config = projector_config_pb2.ProjectorConfig()\n         for layer in self.model.layers:\n             if isinstance(layer, core.Embedding):\n\n@@ -30,7 +30,6 @@ from unittest import mock\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.platform import tf_logging as logging\n \n import keras\n from keras.callbacks import BackupAndRestore\n@@ -45,6 +44,9 @@ from keras.testing_infra import test_utils\n from keras.utils import io_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n try:\n     import h5py  # pylint:disable=g-import-not-at-top\n except ImportError:\n\n@@ -20,12 +20,14 @@ import os\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import callbacks\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(v1=[\"keras.callbacks.TensorBoard\"])\n class TensorBoard(callbacks.TensorBoard):\n@@ -315,6 +317,7 @@ class TensorBoard(callbacks.TensorBoard):\n                 embeddings_metadata = self.embeddings_metadata\n \n             try:\n+                # isort: off\n                 from tensorboard.plugins import projector\n             except ImportError:\n                 raise ImportError(\n\n@@ -17,13 +17,15 @@\n \"\"\"Constraints: functions that impose constraints on weight values.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras.utils.generic_utils import deserialize_keras_object\n from keras.utils.generic_utils import serialize_keras_object\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n \n @keras_export(\"keras.constraints.Constraint\")\n class Constraint:\n\n@@ -15,10 +15,12 @@\n \"\"\"Boston housing price regression dataset.\"\"\"\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils.data_utils import get_file\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.datasets.boston_housing.load_data\")\n def load_data(path=\"boston_housing.npz\", test_split=0.2, seed=113):\n\n@@ -17,12 +17,14 @@\n import os\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.datasets.cifar import load_batch\n from keras.utils.data_utils import get_file\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.datasets.cifar10.load_data\")\n def load_data():\n\n@@ -17,12 +17,14 @@\n import os\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.datasets.cifar import load_batch\n from keras.utils.data_utils import get_file\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.datasets.cifar100.load_data\")\n def load_data(label_mode=\"fine\"):\n\n@@ -18,10 +18,12 @@ import gzip\n import os\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils.data_utils import get_file\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.datasets.fashion_mnist.load_data\")\n def load_data():\n\n@@ -17,12 +17,14 @@\n import json\n \n import numpy as np\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.preprocessing.sequence import _remove_long_seq\n from keras.utils.data_utils import get_file\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.datasets.imdb.load_data\")\n def load_data(\n\n@@ -15,10 +15,12 @@\n \"\"\"MNIST handwritten digits dataset.\"\"\"\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils.data_utils import get_file\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.datasets.mnist.load_data\")\n def load_data(path=\"mnist.npz\"):\n\n@@ -17,12 +17,14 @@\n import json\n \n import numpy as np\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.preprocessing.sequence import _remove_long_seq\n from keras.utils.data_utils import get_file\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.datasets.reuters.load_data\")\n def load_data(\n\n@@ -17,7 +17,6 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.ops.losses import losses_impl\n \n import keras\n from keras import optimizers\n@@ -27,6 +26,9 @@ from keras.distribute import optimizer_combinations\n from keras.distribute import strategy_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.ops.losses import losses_impl\n+\n _NUM_SAMPLES = 66\n _BATCH_SIZE = 32\n _RANDOM_SEED = 1337\n\n@@ -17,13 +17,15 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n from keras import metrics\n from keras.distribute import strategy_combinations\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n class KerasMetricsTest(tf.test.TestCase, parameterized.TestCase):\n     @tf.__internal__.distribute.combinations.generate(\n\n@@ -16,13 +16,15 @@\n \n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.distribute import values\n \n from keras.distribute import (\n     strategy_combinations as keras_strategy_combinations,\n )\n from keras.optimizers.optimizer_v2 import gradient_descent\n \n+# isort: off\n+from tensorflow.python.distribute import values\n+\n \n class OptimizerTest(tf.test.TestCase, parameterized.TestCase):\n     @tf.__internal__.distribute.combinations.generate(\n\n@@ -16,15 +16,17 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n from keras.distribute import dataset_creator_model_fit_test_base as test_base\n from keras.distribute import strategy_combinations\n from keras.testing_infra import test_utils\n from keras.utils import dataset_creator\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n # TODO(rchao): Investigate why there cannot be single worker and multi worker\n # PS strategies running in the same shard.\n\n@@ -19,7 +19,6 @@ import os\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.platform import tf_logging as logging\n \n import keras\n from keras import callbacks as callbacks_lib\n@@ -29,6 +28,9 @@ from keras.layers.preprocessing import string_lookup\n from keras.optimizers.optimizer_v2 import gradient_descent\n from keras.utils import dataset_creator\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n \n class DatasetCreatorModelFitTestBase(tf.test.TestCase, parameterized.TestCase):\n     \"\"\"The base class for DatasetCreator with Model.fit tests.\"\"\"\n\n@@ -32,6 +32,8 @@ import threading\n import time\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.core.protobuf import cluster_pb2\n from tensorflow.python.platform import tf_logging as logging\n \n\n@@ -19,9 +19,6 @@ import os\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.distribute.cluster_resolver import (\n-    SimpleClusterResolver,\n-)\n \n import keras\n from keras import backend\n@@ -47,6 +44,11 @@ from keras.testing_infra import test_utils\n from keras.utils import losses_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.python.distribute.cluster_resolver import (\n+    SimpleClusterResolver,\n+)\n+\n _RANDOM_SEED = 1337\n _TRAIN_SIZE = 200\n _INPUT_SIZE = (10,)\n\n@@ -18,7 +18,6 @@ import functools\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras import callbacks\n@@ -31,6 +30,9 @@ from keras.optimizers.optimizer_v2 import optimizer_v2\n from keras.utils import tf_contextlib\n from keras.utils.mode_keys import ModeKeys\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n # pylint:disable=protected-access\n \n \n\n@@ -17,10 +17,6 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.eager import backprop\n-from tensorflow.python.training import (\n-    optimizer as optimizer_lib,\n-)\n \n import keras\n from keras.engine import training as keras_training\n@@ -28,6 +24,12 @@ from keras.layers import core as keras_core\n from keras.optimizers.optimizer_v2 import rmsprop\n from keras.utils import kpl_test_utils\n \n+# isort: off\n+from tensorflow.python.eager import backprop\n+from tensorflow.python.training import (\n+    optimizer as optimizer_lib,\n+)\n+\n \n class MiniModel(keras_training.Model):\n     \"\"\"Minimal model for mnist.\n\n@@ -18,6 +18,11 @@ import threading\n import unittest\n \n import tensorflow.compat.v2 as tf\n+\n+import keras\n+from keras.optimizers.optimizer_v2 import gradient_descent\n+\n+# isort: off\n from tensorflow.python.distribute.cluster_resolver import (\n     SimpleClusterResolver,\n )\n@@ -26,9 +31,6 @@ from tensorflow.python.training.server_lib import (\n     ClusterSpec,\n )\n \n-import keras\n-from keras.optimizers.optimizer_v2 import gradient_descent\n-\n _portpicker_import_error = None\n try:\n     import portpicker  # pylint: disable=g-import-not-at-top\n\n@@ -17,6 +17,11 @@\n import time\n \n import tensorflow.compat.v2 as tf\n+\n+import keras\n+from keras.testing_infra import test_utils\n+\n+# isort: off\n from tensorflow.python.distribute import (\n     multi_worker_test_base,\n )\n@@ -25,9 +30,6 @@ from tensorflow.python.distribute.cluster_resolver import (\n )\n from tensorflow.python.ops import resource_variable_ops\n \n-import keras\n-from keras.testing_infra import test_utils\n-\n \n # TODO(yuefengz): move the following implementation to Keras core.\n class MeanMetricSpec(tf.TypeSpec):\n\n@@ -15,6 +15,8 @@\n \"\"\"Python module for evaluation loop.\"\"\"\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.platform import tf_logging as logging\n from tensorflow.python.util import deprecation\n from tensorflow.python.util.tf_export import keras_export\n\n@@ -22,13 +22,15 @@ import time\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.platform import tf_logging as logging\n \n import keras\n from keras.distribute import sidecar_evaluator as sidecar_evaluator_lib\n from keras.optimizers.optimizer_v2 import gradient_descent\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n _BATCH_SIZE = 32\n \n \n\n@@ -19,13 +19,14 @@ import contextlib\n import re\n import threading\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.dtensor import dtensor_api as dtensor\n from keras.dtensor import lazy_variable\n from keras.dtensor import utils\n from keras.engine import base_layer\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=missing-class-docstring\n \n # We will skip the path for certain attributes when mapping the layout, e.g.\n\n@@ -16,6 +16,7 @@\n \n import threading\n \n+# isort: off\n from tensorflow.core.framework import attr_value_pb2\n from tensorflow.python.eager import context\n from tensorflow.python.framework import ops\n\n@@ -15,8 +15,6 @@\n \"\"\"DTensor specific Keras optimizers.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras.dtensor import dtensor_api as dtensor\n from keras.optimizers.optimizer_experimental import adadelta\n@@ -27,6 +25,10 @@ from keras.optimizers.optimizer_experimental import rmsprop\n from keras.optimizers.optimizer_experimental import sgd\n from keras.optimizers.schedules import learning_rate_schedule\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n \n # pylint: disable=protected-access,missing-class-docstring\n class Optimizer(optimizer_lib._BaseOptimizer):\n\n@@ -17,6 +17,8 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n+\n+# isort: off\n from tensorflow.dtensor.python import api as dtensor_api\n from tensorflow.python.eager import context\n \n\n@@ -28,13 +28,6 @@ import weakref\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from google.protobuf import json_format\n-from tensorflow.python.platform import tf_logging\n-from tensorflow.python.util.tf_export import (\n-    get_canonical_name_for_symbol,\n-)\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras import constraints\n@@ -65,6 +58,15 @@ from keras.utils.tf_utils import (\n     is_tensor_or_tensor_list,  # pylint: disable=unused-import\n )\n \n+# isort: off\n+from google.protobuf import json_format\n+from tensorflow.python.platform import tf_logging\n+from tensorflow.python.util.tf_export import (\n+    get_canonical_name_for_symbol,\n+)\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n # pylint: disable=g-inconsistent-quotes\n metrics_mod = generic_utils.LazyLoader(\n     \"metrics_mod\", globals(), \"keras.metrics\"\n\n@@ -14,14 +14,11 @@\n # ==============================================================================\n \"\"\"Contains private utilities used mainly by the base Layer class.\"\"\"\n \n-import tensorflow.compat.v2 as tf\n-import tensorflow.compat.v1 as tf1\n-\n import functools\n import threading\n \n+import tensorflow.compat.v1 as tf1\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.dtensor import dtensor_api as dtensor\n@@ -29,6 +26,9 @@ from keras.utils import control_flow_util\n from keras.utils import tf_inspect\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n _call_context = threading.local()\n \n \n\n@@ -22,8 +22,6 @@ import threading\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras import constraints\n@@ -50,6 +48,10 @@ from keras.utils.tf_utils import (\n     is_tensor_or_tensor_list,  # pylint: disable=unused-import\n )\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging\n+from tensorflow.tools.docs import doc_controls\n+\n \n # pylint: disable=g-classes-have-attributes\n class Layer(base_layer.Layer):\n\n@@ -17,14 +17,16 @@\n import abc\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager import context\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras.engine import data_adapter\n from keras.engine.base_layer import Layer\n from keras.utils import version_utils\n \n+# isort: off\n+from tensorflow.python.eager import context\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n keras_kpl_gauge = tf.__internal__.monitoring.BoolGauge(\n     \"/tensorflow/api/keras/layers/preprocessing\",\n     \"keras preprocessing layers usage\",\n\n@@ -23,6 +23,14 @@ import random\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n+\n+from keras import backend\n+from keras.engine import training_utils\n+from keras.utils import data_utils\n+from keras.utils import dataset_creator\n+from keras.utils import tf_utils\n+\n+# isort: off\n from tensorflow.python.distribute.input_lib import (\n     DistributedDataset,\n )\n@@ -31,12 +39,6 @@ from tensorflow.python.framework import type_spec\n from tensorflow.python.platform import tf_logging as logging\n from tensorflow.python.util.tf_export import keras_export\n \n-from keras import backend\n-from keras.engine import training_utils\n-from keras.utils import data_utils\n-from keras.utils import dataset_creator\n-from keras.utils import tf_utils\n-\n try:\n     import pandas as pd  # pylint: disable=g-import-not-at-top\n except ImportError:\n\n@@ -19,7 +19,6 @@ import math\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.eager import context\n \n import keras\n from keras.engine import data_adapter\n@@ -27,6 +26,9 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import data_utils\n \n+# isort: off\n+from tensorflow.python.eager import context\n+\n \n class DummyArrayLike:\n     \"\"\"Dummy array-like object.\"\"\"\n\n@@ -22,8 +22,6 @@ import itertools\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras.dtensor import layout_map as layout_map_lib\n@@ -41,6 +39,10 @@ from keras.utils import generic_utils\n from keras.utils import tf_inspect\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.tools.docs import doc_controls\n+\n \n # pylint: disable=g-classes-have-attributes\n class Functional(training_lib.Model):\n\n@@ -18,10 +18,6 @@ import warnings\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import extension_type\n-from tensorflow.python.training.tracking.util import (\n-    Checkpoint,\n-)\n \n from keras import backend\n from keras import layers\n@@ -37,6 +33,12 @@ from keras.testing_infra import test_utils\n from keras.utils import layer_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.framework import extension_type\n+from tensorflow.python.training.tracking.util import (\n+    Checkpoint,\n+)\n+\n \n class NetworkConstructionTest(test_combinations.TestCase):\n     def test_default_model_name(self):\n\n@@ -16,7 +16,6 @@\n \"\"\"Input layer code (`Input` and `InputLayer`).\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.distribute import distributed_training_utils\n@@ -27,6 +26,9 @@ from keras.saving.saved_model import layer_serialization\n from keras.utils import tf_utils\n from keras.utils import traceback_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n def _assert_other_arg_none(arg_name, arg):\n     if arg is not None:\n\n@@ -15,7 +15,6 @@\n \"\"\"Tests for InputLayer construction.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import type_spec\n \n from keras import backend\n from keras.engine import functional\n@@ -24,6 +23,9 @@ from keras.layers import core\n from keras.saving import model_config\n from keras.testing_infra import test_combinations\n \n+# isort: off\n+from tensorflow.python.framework import type_spec\n+\n \n class TwoTensors(tf.__internal__.CompositeTensor):\n     \"\"\"A simple value type to test TypeSpec.\n\n@@ -17,11 +17,13 @@\n \"\"\"Contains the InputSpec class.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras import backend\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n \n @keras_export(\n     \"keras.layers.InputSpec\",\n\n@@ -15,10 +15,12 @@\n \"\"\"Keras Input Tensor used to track functional API Topology.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.data.util import structure\n \n from keras.utils import object_identity\n \n+# isort: off\n+from tensorflow.python.data.util import structure\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -18,8 +18,6 @@\n import copy\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import layers as layer_module\n from keras.engine import base_layer\n@@ -33,6 +31,10 @@ from keras.utils import tf_inspect\n from keras.utils import tf_utils\n from keras.utils import traceback_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n SINGLE_LAYER_OUTPUT_ERROR_MSG = (\n     \"All layers in a Sequential model should have \"\n     \"a single output tensor. For multi-output \"\n\n@@ -17,14 +17,16 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n class TestSequential(test_combinations.TestCase):\n     \"\"\"Most Sequential model API tests are covered in `training_test.py`.\"\"\"\n\n@@ -23,10 +23,6 @@ import weakref\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager import context\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras import callbacks as callbacks_module\n@@ -58,6 +54,12 @@ from keras.utils import traceback_utils\n from keras.utils import version_utils\n from keras.utils.mode_keys import ModeKeys\n \n+# isort: off\n+from tensorflow.python.eager import context\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n try:\n     import h5py\n except ImportError:\n\n@@ -21,9 +21,6 @@ from unittest import mock\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras.engine import data_adapter\n@@ -32,6 +29,11 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import io_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n def _create_dataset(num_samples, batch_size):\n     input_data = np.random.rand(num_samples, 1)\n\n@@ -18,7 +18,6 @@ import functools\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras import callbacks as cbks\n@@ -29,6 +28,9 @@ from keras.utils.generic_utils import make_batches\n from keras.utils.generic_utils import slice_arrays\n from keras.utils.mode_keys import ModeKeys\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n # pylint: disable=protected-access\n \n \n\n@@ -19,7 +19,6 @@ import sys\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n import keras\n from keras import callbacks\n@@ -28,6 +27,9 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import io_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n \n class BatchCounterCallback(callbacks.Callback):\n     def __init__(self):\n\n@@ -16,8 +16,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.distribute import input_lib\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras import callbacks as cbks\n@@ -29,6 +27,10 @@ from keras.engine import training_utils_v1\n from keras.utils.generic_utils import Progbar\n from keras.utils.mode_keys import ModeKeys\n \n+# isort: off\n+from tensorflow.python.distribute import input_lib\n+from tensorflow.python.platform import tf_logging as logging\n+\n # pylint: disable=protected-access\n \n \n\n@@ -16,8 +16,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.backprop import GradientTape\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras.engine import training_utils\n@@ -25,6 +23,10 @@ from keras.engine import training_utils_v1\n from keras.mixed_precision import loss_scale_optimizer\n from keras.utils import losses_utils\n \n+# isort: off\n+from tensorflow.python.eager.backprop import GradientTape\n+from tensorflow.python.platform import tf_logging as logging\n+\n # pylint: disable=protected-access\n \n \n\n@@ -20,7 +20,6 @@ import math\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras import callbacks as cbks\n@@ -30,6 +29,9 @@ from keras.utils import data_utils\n from keras.utils import generic_utils\n from keras.utils.mode_keys import ModeKeys\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n # pylint: disable=protected-access\n \n \n\n@@ -23,13 +23,6 @@ import tempfile\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.training.rmsprop import (\n-    RMSPropOptimizer,\n-)\n \n import keras\n from keras import backend\n@@ -51,6 +44,15 @@ from keras.utils import data_utils\n from keras.utils import io_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.training.rmsprop import (\n+    RMSPropOptimizer,\n+)\n+\n try:\n     import scipy.sparse as scipy_sparse  # pylint: disable=g-import-not-at-top\n except ImportError:\n\n@@ -24,7 +24,6 @@ import time\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras import callbacks as cbks\n@@ -35,6 +34,9 @@ from keras.utils import generic_utils\n from keras.utils import losses_utils\n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n \n def is_composite_or_composite_value(tensor):\n     \"\"\"Returns true if 'tensor' is a CompositeTensor or a CT Value object.\"\"\"\n\n@@ -21,7 +21,6 @@ import time\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras.engine import keras_tensor\n@@ -29,6 +28,9 @@ from keras.engine import training_utils_v1\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n \n class ModelInputsTest(tf.test.TestCase):\n     def test_single_thing(self):\n\n@@ -20,7 +20,6 @@ import numpy as np\n \n # pylint: disable=g-classes-have-attributes\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras import losses\n@@ -48,6 +47,9 @@ from keras.utils import tf_inspect\n from keras.utils import tf_utils\n from keras.utils.mode_keys import ModeKeys\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n try:\n     from scipy.sparse import issparse  # pylint: disable=g-import-not-at-top\n except ImportError:\n\n@@ -15,6 +15,8 @@\n \"\"\"Keras estimator API.\"\"\"\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n # Keras has undeclared dependency on tensorflow/estimator:estimator_py.\n@@ -164,6 +166,7 @@ def model_to_estimator(\n     \"\"\"\n \n     try:\n+        # isort: off\n         from tensorflow_estimator.python.estimator import (\n             keras_lib,  # pylint: disable=g-import-not-at-top\n         )\n@@ -362,6 +365,7 @@ def model_to_estimator_v2(\n     \"\"\"\n \n     try:\n+        # isort: off\n         from tensorflow_estimator.python.estimator import (\n             keras_lib,  # pylint: disable=g-import-not-at-top\n         )\n\n@@ -21,12 +21,14 @@ from __future__ import print_function\n import json\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.feature_column import base_feature_layer as kfc\n from keras.saving.saved_model import json_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(v1=[\"keras.layers.DenseFeatures\"])\n class DenseFeatures(kfc._BaseFeaturesLayer):  # pylint: disable=protected-access\n\n@@ -21,14 +21,16 @@ from __future__ import print_function\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n+\n+from keras.feature_column import dense_features as df\n+from keras.testing_infra import test_combinations\n+\n+# isort: off\n from tensorflow.python.eager import backprop\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n \n-from keras.feature_column import dense_features as df\n-from keras.testing_infra import test_combinations\n-\n \n def _initialized_session(config=None):\n     sess = tf.compat.v1.Session(config=config)\n\n@@ -19,12 +19,14 @@ from __future__ import division\n from __future__ import print_function\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.feature_column import base_feature_layer as kfc\n from keras.feature_column import dense_features\n from keras.utils import tf_contextlib\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.DenseFeatures\", v1=[])\n class DenseFeatures(dense_features.DenseFeatures):\n\n@@ -20,11 +20,13 @@ from __future__ import print_function\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager import backprop\n \n from keras.feature_column import dense_features_v2 as df\n from keras.testing_infra import test_combinations\n \n+# isort: off\n+from tensorflow.python.eager import backprop\n+\n \n def _initialized_session(config=None):\n     sess = tf.compat.v1.Session(config=config)\n\n@@ -22,11 +22,13 @@ from __future__ import division\n from __future__ import print_function\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.feature_column import base_feature_layer as kfc\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=protected-access\n \n \n\n@@ -19,12 +19,6 @@ from __future__ import division\n from __future__ import print_function\n \n import tensorflow.compat.v2 as tf\n-from google.protobuf import text_format\n-from tensorflow.core.example import example_pb2\n-from tensorflow.core.example import feature_pb2\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n from keras import backend\n from keras.feature_column import dense_features\n@@ -33,6 +27,14 @@ from keras.layers import merging\n from keras.layers.rnn import base_rnn\n from keras.layers.rnn import simple_rnn\n \n+# isort: off\n+from google.protobuf import text_format\n+from tensorflow.core.example import example_pb2\n+from tensorflow.core.example import feature_pb2\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n class SequenceFeatureColumnIntegrationTest(tf.test.TestCase):\n     def _make_sequence_example(self):\n\n@@ -17,15 +17,17 @@\n import threading\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python import tf2\n-from tensorflow.python.ops import init_ops\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.initializers import initializers_v1\n from keras.initializers import initializers_v2\n from keras.utils import generic_utils\n from keras.utils import tf_inspect as inspect\n \n+# isort: off\n+from tensorflow.python import tf2\n+from tensorflow.python.ops import init_ops\n+from tensorflow.python.util.tf_export import keras_export\n+\n # LOCAL.ALL_OBJECTS is meant to be a global mutable. Hence we need to make it\n # thread-local to avoid concurrent mutations.\n LOCAL = threading.local()\n\n@@ -16,6 +16,8 @@\n # pylint:disable=g-classes-have-attributes\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n _v1_zeros_initializer = tf.compat.v1.zeros_initializer\n\n@@ -17,11 +17,13 @@\n import math\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.dtensor import utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n _PARTITION_SHAPE = \"partition_shape\"\n _PARTITION_OFFSET = \"partition_offset\"\n _LAYOUT = \"layout\"\n\n@@ -16,6 +16,8 @@\n \n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n+\n+# isort: off\n from tensorflow.python.distribute import (\n     combinations as ds_combinations,\n )\n\n@@ -16,6 +16,8 @@\n import gc\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n\n@@ -19,6 +19,8 @@ import tempfile\n \n import tensorflow.compat.v2 as tf\n from absl import flags\n+\n+# isort: off\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n\n@@ -16,8 +16,6 @@\n \n import tensorflow.compat.v2 as tf\n \n-from tensorflow.python import tf2\n-\n from keras.engine.base_layer import Layer\n from keras.engine.base_preprocessing_layer import PreprocessingLayer\n \n@@ -157,6 +155,9 @@ from keras.layers.reshaping.zero_padding1d import ZeroPadding1D\n from keras.layers.reshaping.zero_padding2d import ZeroPadding2D\n from keras.layers.reshaping.zero_padding3d import ZeroPadding3D\n \n+# isort: off\n+from tensorflow.python import tf2\n+\n if tf.__internal__.tf2.enabled():\n     from keras.layers.normalization.batch_normalization import (\n         BatchNormalization,\n\n@@ -15,12 +15,13 @@\n \"\"\"Exponential Linear Unit activation layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ELU\")\n class ELU(Layer):\n\n@@ -15,12 +15,13 @@\n \"\"\"Leaky version of a Rectified Linear Unit activation layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.LeakyReLU\")\n class LeakyReLU(Layer):\n\n@@ -15,8 +15,6 @@\n \"\"\"Parametric Rectified Linear Unit activation layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras import constraints\n from keras import initializers\n@@ -25,6 +23,9 @@ from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.PReLU\")\n class PReLU(Layer):\n\n@@ -15,12 +15,13 @@\n \"\"\"Rectified Linear Unit activation layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ReLU\")\n class ReLU(Layer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n def _large_compatible_negative(tensor_type):\n     \"\"\"Large negative number as Tensor.\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ThresholdedReLU\")\n class ThresholdedReLU(Layer):\n\n@@ -20,10 +20,12 @@ Attention is formed by three tensors: Query, Key and Value.\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.attention.base_dense_attention import BaseDenseAttention\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.AdditiveAttention\")\n class AdditiveAttention(BaseDenseAttention):\n\n@@ -20,10 +20,12 @@ Attention is formed by three tensors: Query, Key and Value.\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.attention.base_dense_attention import BaseDenseAttention\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Attention\")\n class Attention(BaseDenseAttention):\n\n@@ -21,8 +21,6 @@ import string\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import constraints\n from keras import initializers\n@@ -33,6 +31,10 @@ from keras.layers import core\n from keras.layers import regularization\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n _CHR_IDX = string.ascii_lowercase\n \n \n\n@@ -15,8 +15,6 @@\n \"\"\"Keras 1D convolution layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras import constraints\n from keras import initializers\n@@ -24,6 +22,9 @@ from keras import regularizers\n from keras.dtensor import utils\n from keras.layers.convolutional.base_conv import Conv\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Conv1D\", \"keras.layers.Convolution1D\")\n class Conv1D(Conv):\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import constraints\n@@ -27,6 +26,9 @@ from keras.engine.input_spec import InputSpec\n from keras.layers.convolutional.conv1d import Conv1D\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.Conv1DTranspose\", \"keras.layers.Convolution1DTranspose\"\n\n@@ -15,8 +15,6 @@\n \"\"\"Keras 2D convolution layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras import constraints\n from keras import initializers\n@@ -24,6 +22,9 @@ from keras import regularizers\n from keras.dtensor import utils\n from keras.layers.convolutional.base_conv import Conv\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Conv2D\", \"keras.layers.Convolution2D\")\n class Conv2D(Conv):\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n@@ -28,6 +27,9 @@ from keras.engine.input_spec import InputSpec\n from keras.layers.convolutional.conv2d import Conv2D\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.Conv2DTranspose\", \"keras.layers.Convolution2DTranspose\"\n\n@@ -15,8 +15,6 @@\n \"\"\"Keras 3D convolution layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras import constraints\n from keras import initializers\n@@ -24,6 +22,9 @@ from keras import regularizers\n from keras.dtensor import utils\n from keras.layers.convolutional.base_conv import Conv\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Conv3D\", \"keras.layers.Convolution3D\")\n class Conv3D(Conv):\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import constraints\n@@ -27,6 +26,9 @@ from keras.engine.input_spec import InputSpec\n from keras.layers.convolutional.conv3d import Conv3D\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.Conv3DTranspose\", \"keras.layers.Convolution3DTranspose\"\n\n@@ -18,14 +18,16 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n @test_combinations.run_all_keras_modes\n class Conv1DTest(test_combinations.TestCase):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.convolutional.base_depthwise_conv import DepthwiseConv\n from keras.utils import conv_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.DepthwiseConv1D\")\n class DepthwiseConv1D(DepthwiseConv):\n\n@@ -15,13 +15,14 @@\n \"\"\"Keras depthwise 2D convolution.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.convolutional.base_depthwise_conv import DepthwiseConv\n from keras.utils import conv_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.DepthwiseConv2D\")\n class DepthwiseConv2D(DepthwiseConv):\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import constraints\n@@ -25,6 +24,9 @@ from keras import regularizers\n from keras.layers.convolutional.base_separable_conv import SeparableConv\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.SeparableConv1D\", \"keras.layers.SeparableConvolution1D\"\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import constraints\n@@ -25,6 +24,9 @@ from keras import regularizers\n from keras.layers.convolutional.base_separable_conv import SeparableConv\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.SeparableConv2D\", \"keras.layers.SeparableConvolution2D\"\n\n@@ -15,11 +15,12 @@\n \"\"\"Contains the Activation layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras.engine.base_layer import Layer\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Activation\")\n class Activation(Layer):\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n@@ -27,6 +26,9 @@ from keras.dtensor import utils\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Dense\")\n class Dense(Layer):\n\n@@ -18,7 +18,6 @@\n import re\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import constraints\n@@ -26,6 +25,9 @@ from keras import initializers\n from keras import regularizers\n from keras.engine.base_layer import Layer\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.EinsumDense\", \"keras.layers.experimental.EinsumDense\"\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import constraints\n@@ -27,6 +26,9 @@ from keras.engine import base_layer_utils\n from keras.engine.base_layer import Layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Embedding\")\n class Embedding(Layer):\n\n@@ -21,14 +21,16 @@ import warnings\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n from keras.utils import generic_utils\n from keras.utils import tf_inspect\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Lambda\")\n class Lambda(Layer):\n\n@@ -16,10 +16,12 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Masking\")\n class Masking(Layer):\n\n@@ -14,6 +14,12 @@\n # ==============================================================================\n \"\"\"Contains the TFOpLambda layer.\"\"\"\n import tensorflow.compat.v2 as tf\n+\n+from keras import backend\n+from keras.engine import keras_tensor\n+from keras.engine.base_layer import Layer\n+\n+# isort: off\n from tensorflow.python.platform import tf_logging\n from tensorflow.python.util.tf_export import (\n     get_canonical_name_for_symbol,\n@@ -22,10 +28,6 @@ from tensorflow.python.util.tf_export import (\n     get_symbol_from_name,\n )\n \n-from keras import backend\n-from keras.engine import keras_tensor\n-from keras.engine.base_layer import Layer\n-\n # pylint: enable=g-bad-import-order\n \n \n\n@@ -17,12 +17,14 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import initializers\n from keras.engine import base_layer\n from keras.engine import input_spec\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n _SUPPORTED_RBF_KERNEL_TYPES = [\"gaussian\", \"laplacian\"]\n \n \n\n@@ -22,9 +22,6 @@ import shutil\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n from keras import backend as keras_backend\n from keras import initializers\n@@ -37,6 +34,11 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import kernelized_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n def _exact_gaussian(stddev):\n     return functools.partial(\n\n@@ -15,8 +15,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \"\"\"Locally-connected layer for 1D input.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras import backend\n from keras import constraints\n@@ -28,6 +26,9 @@ from keras.layers.locally_connected import locally_connected_utils\n from keras.utils import conv_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.LocallyConnected1D\")\n class LocallyConnected1D(Layer):\n\n@@ -15,8 +15,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \"\"\"Locally-connected layer for 2D input.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras import backend\n from keras import constraints\n@@ -28,6 +26,9 @@ from keras.layers.locally_connected import locally_connected_utils\n from keras.utils import conv_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.LocallyConnected2D\")\n class LocallyConnected2D(Layer):\n\n@@ -20,12 +20,6 @@ import os\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_util,\n-)\n-from tensorflow.python.training.rmsprop import (\n-    RMSPropOptimizer,\n-)\n \n import keras\n from keras.layers.locally_connected import locally_connected_utils\n@@ -33,6 +27,14 @@ from keras.optimizers.optimizer_v2 import rmsprop\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_util,\n+)\n+from tensorflow.python.training.rmsprop import (\n+    RMSPropOptimizer,\n+)\n+\n _DATA_FORMAT_PADDING_IMPLEMENTATION = [\n     {\"data_format\": \"channels_first\", \"padding\": \"valid\", \"implementation\": 1},\n     {\"data_format\": \"channels_first\", \"padding\": \"same\", \"implementation\": 1},\n\n@@ -15,10 +15,11 @@\n \"\"\"Layer that adds several inputs.\"\"\"\n \n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.merging.base_merge import _Merge\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Add\")\n class Add(_Merge):\n\n@@ -15,10 +15,11 @@\n \"\"\"Layer that averages several inputs.\"\"\"\n \n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.merging.base_merge import _Merge\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Average\")\n class Average(_Merge):\n\n@@ -16,12 +16,14 @@\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.layers.merging.base_merge import _Merge\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Concatenate\")\n class Concatenate(_Merge):\n\n@@ -16,13 +16,15 @@\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer_utils\n from keras.layers.merging.base_merge import _Merge\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Dot\")\n class Dot(_Merge):\n\n@@ -16,10 +16,12 @@\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.merging.base_merge import _Merge\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Maximum\")\n class Maximum(_Merge):\n\n@@ -16,10 +16,12 @@\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.merging.base_merge import _Merge\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Minimum\")\n class Minimum(_Merge):\n\n@@ -15,10 +15,11 @@\n \"\"\"Layer that multiplies (element-wise) several inputs.\"\"\"\n \n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.merging.base_merge import _Merge\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Multiply\")\n class Multiply(_Merge):\n\n@@ -15,11 +15,12 @@\n \"\"\"Layer that subtracts two inputs.\"\"\"\n \n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.merging.base_merge import _Merge\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Subtract\")\n class Subtract(_Merge):\n\n@@ -15,11 +15,6 @@\n \"\"\"The V2 implementation of Normalization layers.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.ops.control_flow_ops import (\n-    get_enclosing_xla_context,\n-)\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import constraints\n@@ -31,6 +26,13 @@ from keras.engine.input_spec import InputSpec\n from keras.utils import control_flow_util\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.ops.control_flow_ops import (\n+    get_enclosing_xla_context,\n+)\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n class BatchNormalizationBase(Layer):\n     r\"\"\"Layer that normalizes its inputs.\n\n@@ -15,10 +15,11 @@\n \"\"\"Batch Normalization V1 layer.\"\"\"\n # pylint: disable=g-classes-have-attributes\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.normalization import batch_normalization\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=missing-docstring\n @keras_export(v1=[\"keras.layers.BatchNormalization\"])\n\n@@ -15,7 +15,6 @@\n \"\"\"Layer Normalization layer.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import constraints\n from keras import initializers\n@@ -24,6 +23,9 @@ from keras.dtensor import utils\n from keras.engine.base_layer import Layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -18,11 +18,13 @@\n # pylint: disable=g-classes-have-attributes\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine import base_layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.UnitNormalization\", v1=[])\n class UnitNormalization(base_layer.Layer):\n\n@@ -17,11 +17,12 @@\n \n import functools\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.pooling.base_pooling1d import Pooling1D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.AveragePooling1D\", \"keras.layers.AvgPool1D\")\n class AveragePooling1D(Pooling1D):\n\n@@ -16,10 +16,12 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.pooling.base_pooling2d import Pooling2D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.AveragePooling2D\", \"keras.layers.AvgPool2D\")\n class AveragePooling2D(Pooling2D):\n\n@@ -16,10 +16,12 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.pooling.base_pooling3d import Pooling3D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.AveragePooling3D\", \"keras.layers.AvgPool3D\")\n class AveragePooling3D(Pooling3D):\n\n@@ -16,11 +16,13 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.layers.pooling.base_global_pooling1d import GlobalPooling1D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.GlobalAveragePooling1D\", \"keras.layers.GlobalAvgPool1D\"\n\n@@ -15,11 +15,12 @@\n \"\"\"Global average pooling 2D layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.pooling.base_global_pooling2d import GlobalPooling2D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.GlobalAveragePooling2D\", \"keras.layers.GlobalAvgPool2D\"\n\n@@ -15,11 +15,12 @@\n \"\"\"Global average pooling 3D layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.pooling.base_global_pooling3d import GlobalPooling3D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.GlobalAveragePooling3D\", \"keras.layers.GlobalAvgPool3D\"\n\n@@ -15,11 +15,12 @@\n \"\"\"Global max pooling 1D layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.pooling.base_global_pooling1d import GlobalPooling1D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.GlobalMaxPool1D\", \"keras.layers.GlobalMaxPooling1D\")\n class GlobalMaxPooling1D(GlobalPooling1D):\n\n@@ -15,11 +15,12 @@\n \"\"\"Global max pooling 2D layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.pooling.base_global_pooling2d import GlobalPooling2D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.GlobalMaxPool2D\", \"keras.layers.GlobalMaxPooling2D\")\n class GlobalMaxPooling2D(GlobalPooling2D):\n\n@@ -15,11 +15,12 @@\n \"\"\"Global max pooling 3D layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.pooling.base_global_pooling3d import GlobalPooling3D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.GlobalMaxPool3D\", \"keras.layers.GlobalMaxPooling3D\")\n class GlobalMaxPooling3D(GlobalPooling3D):\n\n@@ -17,11 +17,12 @@\n \n import functools\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import backend\n from keras.layers.pooling.base_pooling1d import Pooling1D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.MaxPool1D\", \"keras.layers.MaxPooling1D\")\n class MaxPooling1D(Pooling1D):\n\n@@ -16,10 +16,12 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.pooling.base_pooling2d import Pooling2D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.MaxPool2D\", \"keras.layers.MaxPooling2D\")\n class MaxPooling2D(Pooling2D):\n\n@@ -16,10 +16,12 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.layers.pooling.base_pooling3d import Pooling3D\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.MaxPool3D\", \"keras.layers.MaxPooling3D\")\n class MaxPooling3D(Pooling3D):\n\n@@ -16,9 +16,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import discretization\n@@ -26,6 +23,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10  # The number of times to run each benchmark.\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,9 +16,6 @@\n inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import hashing\n@@ -26,6 +23,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,9 +16,6 @@\n varying-length inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import hashing\n@@ -26,6 +23,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -18,9 +18,6 @@ inputs.\"\"\"\n import os\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import string_lookup\n@@ -28,6 +25,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -18,9 +18,6 @@ varying-length inputs.\"\"\"\n import os\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import string_lookup\n@@ -28,6 +25,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,9 +16,6 @@\n inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import string_lookup\n@@ -26,6 +23,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,9 +16,6 @@\n with dense inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import category_encoding\n@@ -27,6 +24,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,9 +16,6 @@\n with varying-length inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import category_encoding\n@@ -27,6 +24,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,9 +16,6 @@\n varying-length inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import string_lookup\n@@ -26,6 +23,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -15,15 +15,17 @@\n \"\"\"Benchmark for KPL implementation of embedding column with dense inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,15 +16,17 @@\n inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -17,9 +17,6 @@ inputs.\"\"\"\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing import hashed_crossing\n@@ -27,6 +24,11 @@ from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -16,15 +16,17 @@\n varying-length inputs.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager.def_function import (\n-    function as tf_function,\n-)\n \n import keras\n from keras.layers.preprocessing.benchmarks import (\n     feature_column_benchmark as fc_bm,\n )\n \n+# isort: off\n+from tensorflow.python.eager.def_function import (\n+    function as tf_function,\n+)\n+\n NUM_REPEATS = 10\n BATCH_SIZES = [32, 256]\n \n\n@@ -18,8 +18,6 @@\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n@@ -27,6 +25,10 @@ from keras.engine import base_preprocessing_layer\n from keras.layers.preprocessing import preprocessing_utils as utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n INT = utils.INT\n ONE_HOT = utils.ONE_HOT\n MULTI_HOT = utils.MULTI_HOT\n\n@@ -17,9 +17,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras import backend\n@@ -29,6 +26,11 @@ from keras.layers.preprocessing import preprocessing_test_utils\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n def batch_wrapper(dataset, batch_size, strategy, repeat=None):\n     if repeat:\n\n@@ -19,8 +19,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_preprocessing_layer\n@@ -28,6 +26,10 @@ from keras.layers.preprocessing import preprocessing_utils as utils\n from keras.utils import layer_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n INT = utils.INT\n MULTI_HOT = utils.MULTI_HOT\n ONE_HOT = utils.ONE_HOT\n\n@@ -18,7 +18,6 @@\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n@@ -26,6 +25,9 @@ from keras.engine import base_preprocessing_layer\n from keras.layers.preprocessing import preprocessing_utils as utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n INT = utils.INT\n ONE_HOT = utils.ONE_HOT\n \n\n@@ -18,7 +18,6 @@\n \n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n@@ -26,6 +25,9 @@ from keras.engine import base_preprocessing_layer\n from keras.layers.preprocessing import preprocessing_utils as utils\n from keras.utils import layer_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n INT = utils.INT\n MULTI_HOT = utils.MULTI_HOT\n ONE_HOT = utils.ONE_HOT\n\n@@ -17,9 +17,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras import backend\n@@ -29,6 +26,11 @@ from keras.layers.preprocessing import preprocessing_test_utils\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n @test_utils.run_v2_only\n @tf.__internal__.distribute.combinations.generate(\n\n@@ -19,9 +19,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.ops import stateless_random_ops\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras.engine import base_layer\n@@ -30,6 +27,11 @@ from keras.layers.preprocessing import preprocessing_utils as utils\n from keras.utils import image_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.ops import stateless_random_ops\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n H_AXIS = -3\n W_AXIS = -2\n \n\n@@ -19,7 +19,6 @@ import functools\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.ops import stateless_random_ops\n \n import keras\n from keras.engine import sequential\n@@ -27,6 +26,9 @@ from keras.layers.preprocessing import image_preprocessing\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.ops import stateless_random_ops\n+\n \n @test_combinations.run_all_keras_modes(always_skip_v1=True)\n class ResizingTest(test_combinations.TestCase):\n\n@@ -21,7 +21,6 @@ import collections\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras.engine import base_layer_utils\n@@ -31,6 +30,9 @@ from keras.saving.saved_model import layer_serialization\n from keras.utils import layer_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n INT = utils.INT\n MULTI_HOT = utils.MULTI_HOT\n ONE_HOT = utils.ONE_HOT\n\n@@ -19,9 +19,6 @@ import os\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras import backend\n@@ -31,6 +28,11 @@ from keras.layers.preprocessing import preprocessing_test_utils\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n @test_utils.run_v2_only\n @tf.__internal__.distribute.combinations.generate(\n\n@@ -19,12 +19,14 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine import base_preprocessing_layer\n from keras.layers.preprocessing import index_lookup\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.IntegerLookup\",\n\n@@ -19,12 +19,14 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_preprocessing_layer\n from keras.layers.preprocessing import preprocessing_utils as utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.layers.Normalization\",\n\n@@ -16,11 +16,13 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine import base_preprocessing_layer\n from keras.layers.preprocessing import index_lookup\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -19,7 +19,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_preprocessing_layer\n@@ -29,6 +28,9 @@ from keras.saving.saved_model import layer_serialization\n from keras.utils import layer_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n LOWER_AND_STRIP_PUNCTUATION = \"lower_and_strip_punctuation\"\n STRIP_PUNCTUATION = \"strip_punctuation\"\n LOWER = \"lower\"\n\n@@ -17,9 +17,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras import backend\n@@ -29,6 +26,11 @@ from keras.layers.preprocessing import text_vectorization\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n @test_utils.run_v2_only\n @tf.__internal__.distribute.combinations.generate(\n\n@@ -15,11 +15,12 @@\n \"\"\"Contains the ActivityRegularization layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import regularizers\n from keras.engine.base_layer import Layer\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ActivityRegularization\")\n class ActivityRegularization(Layer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.AlphaDropout\")\n class AlphaDropout(base_layer.BaseRandomLayer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n from keras.utils import control_flow_util\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Dropout\")\n class Dropout(base_layer.BaseRandomLayer):\n\n@@ -17,12 +17,14 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.GaussianDropout\")\n class GaussianDropout(base_layer.BaseRandomLayer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.GaussianNoise\")\n class GaussianNoise(base_layer.BaseRandomLayer):\n\n@@ -16,11 +16,13 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.input_spec import InputSpec\n from keras.layers.regularization.dropout import Dropout\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.SpatialDropout1D\")\n class SpatialDropout1D(Dropout):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.input_spec import InputSpec\n from keras.layers.regularization.dropout import Dropout\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.SpatialDropout2D\")\n class SpatialDropout2D(Dropout):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.input_spec import InputSpec\n from keras.layers.regularization.dropout import Dropout\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.SpatialDropout3D\")\n class SpatialDropout3D(Dropout):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Cropping1D\")\n class Cropping1D(Layer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Cropping2D\")\n class Cropping2D(Layer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Cropping3D\")\n class Cropping3D(Layer):\n\n@@ -20,12 +20,14 @@ import operator\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Flatten\")\n class Flatten(Layer):\n\n@@ -18,11 +18,13 @@\n import copy\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Permute\")\n class Permute(Layer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.RepeatVector\")\n class RepeatVector(Layer):\n\n@@ -17,10 +17,12 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine.base_layer import Layer\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Reshape\")\n class Reshape(Layer):\n\n@@ -16,12 +16,14 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.UpSampling1D\")\n class UpSampling1D(Layer):\n\n@@ -16,13 +16,15 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.UpSampling2D\")\n class UpSampling2D(Layer):\n\n@@ -16,13 +16,15 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.UpSampling3D\")\n class UpSampling3D(Layer):\n\n@@ -17,14 +17,16 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n @tf_test_utils.for_all_test_methods(\n     tf_test_utils.disable_xla, \"align_corners=False not supported by XLA\"\n\n@@ -16,13 +16,15 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ZeroPadding1D\")\n class ZeroPadding1D(Layer):\n\n@@ -16,13 +16,15 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ZeroPadding2D\")\n class ZeroPadding2D(Layer):\n\n@@ -16,13 +16,15 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n from keras.engine.input_spec import InputSpec\n from keras.utils import conv_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ZeroPadding3D\")\n class ZeroPadding3D(Layer):\n\n@@ -15,11 +15,12 @@\n \"\"\"Base class for RNN cells.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.engine import base_layer\n from keras.layers.rnn import rnn_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.AbstractRNNCell\")\n class AbstractRNNCell(base_layer.Layer):\n\n@@ -19,8 +19,6 @@ import collections\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras.engine import base_layer\n@@ -31,6 +29,10 @@ from keras.layers.rnn.stacked_rnn_cells import StackedRNNCells\n from keras.saving.saved_model import layer_serialization\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n \n @keras_export(\"keras.layers.RNN\")\n class RNN(base_layer.Layer):\n\n@@ -23,9 +23,6 @@ import collections\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.training.tracking import (\n-    util as trackable_util,\n-)\n \n import keras\n from keras.engine import base_layer_utils\n@@ -37,6 +34,11 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.training.tracking import (\n+    util as trackable_util,\n+)\n+\n # Used for nested input/output/state RNN test.\n NestedInput = collections.namedtuple(\"NestedInput\", [\"t1\", \"t2\"])\n NestedState = collections.namedtuple(\"NestedState\", [\"s1\", \"s2\"])\n\n@@ -20,11 +20,12 @@ Wrappers are layers that augment the functionality of another layer.\n \n import copy\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.engine.base_layer import Layer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Wrapper\")\n class Wrapper(Layer):\n\n@@ -18,7 +18,6 @@\n import copy\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n@@ -29,6 +28,9 @@ from keras.utils import generic_utils\n from keras.utils import tf_inspect\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.Bidirectional\")\n class Bidirectional(Wrapper):\n\n@@ -20,12 +20,6 @@ import copy\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_util,\n-)\n-from tensorflow.python.training.tracking import (\n-    util as trackable_util,\n-)\n \n import keras\n from keras.engine import base_layer_utils\n@@ -35,6 +29,14 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_util,\n+)\n+from tensorflow.python.training.tracking import (\n+    util as trackable_util,\n+)\n+\n \n class _RNNCellWithConstants(keras.layers.Layer):\n     def __init__(self, units, constant_size, **kwargs):\n\n@@ -28,13 +28,15 @@ import types as python_types\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras.layers.rnn import lstm\n from keras.layers.rnn.abstract_rnn_cell import AbstractRNNCell\n from keras.utils import generic_utils\n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.python.util.tf_export import tf_export\n+\n \n class _RNNCellWrapper(AbstractRNNCell):\n     \"\"\"Base class for cells wrappers V2 compatibility.\n\n@@ -15,10 +15,11 @@\n \"\"\"1D Convolutional LSTM layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,disable=g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.rnn.base_conv_lstm import ConvLSTM\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ConvLSTM1D\")\n class ConvLSTM1D(ConvLSTM):\n\n@@ -15,10 +15,11 @@\n \"\"\"2D Convolutional LSTM layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,disable=g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.rnn.base_conv_lstm import ConvLSTM\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ConvLSTM2D\")\n class ConvLSTM2D(ConvLSTM):\n\n@@ -15,10 +15,11 @@\n \"\"\"3D Convolutional LSTM layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,disable=g-direct-tensorflow-import\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.layers.rnn.base_conv_lstm import ConvLSTM\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.ConvLSTM3D\")\n class ConvLSTM3D(ConvLSTM):\n\n@@ -18,7 +18,6 @@\n import collections\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import constraints\n from keras import initializers\n@@ -26,6 +25,9 @@ from keras import regularizers\n from keras.layers.rnn import gru_lstm_utils\n from keras.layers.rnn.base_cudnn_rnn import _CuDNNRNN\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(v1=[\"keras.layers.CuDNNGRU\"])\n class CuDNNGRU(_CuDNNRNN):\n\n@@ -18,7 +18,6 @@\n import collections\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import constraints\n from keras import initializers\n@@ -26,6 +25,9 @@ from keras import regularizers\n from keras.layers.rnn import gru_lstm_utils\n from keras.layers.rnn.base_cudnn_rnn import _CuDNNRNN\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(v1=[\"keras.layers.CuDNNLSTM\"])\n class CuDNNLSTM(_CuDNNRNN):\n\n@@ -20,15 +20,17 @@ import tempfile\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras.optimizers.optimizer_v2.rmsprop import RMSprop\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n @test_combinations.run_all_keras_modes\n class CuDNNTest(test_combinations.TestCase):\n\n@@ -18,8 +18,6 @@\n import uuid\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n@@ -34,6 +32,10 @@ from keras.layers.rnn.base_rnn import RNN\n from keras.layers.rnn.dropout_rnn_cell_mixin import DropoutRNNCellMixin\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n RECURRENT_DROPOUT_WARNING_MSG = (\n     \"RNN `implementation=2` is not supported when `recurrent_dropout` is set. \"\n     \"Using `implementation=1`.\"\n\n@@ -18,6 +18,8 @@\n import uuid\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.eager.context import get_device_name\n \n # The following string constants are used by Defun approach for unified backend\n\n@@ -22,10 +22,6 @@ import shutil\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.core.protobuf import rewriter_config_pb2\n-from tensorflow.python.framework import (\n-    test_util as tf_test_util,\n-)\n \n import keras\n from keras.layers.rnn import gru_lstm_utils\n@@ -33,6 +29,12 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.core.protobuf import rewriter_config_pb2\n+from tensorflow.python.framework import (\n+    test_util as tf_test_util,\n+)\n+\n # Global config for grappler setting that is used for graph mode test.\n _rewrites = rewriter_config_pb2.RewriterConfig()\n _rewrites.implementation_selector = rewriter_config_pb2.RewriterConfig.ON\n\n@@ -15,9 +15,6 @@\n \"\"\"Gated Recurrent Unit V1 layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras import constraints\n from keras import initializers\n@@ -27,6 +24,10 @@ from keras.layers.rnn import gru\n from keras.layers.rnn import rnn_utils\n from keras.layers.rnn.base_rnn import RNN\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(v1=[\"keras.layers.GRUCell\"])\n class GRUCell(gru.GRUCell):\n\n@@ -23,14 +23,16 @@ import hashlib\n import numbers\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras.layers.rnn.cell_wrappers import _enumerated_map_structure_up_to\n from keras.layers.rnn.cell_wrappers import _parse_config_to_function\n from keras.layers.rnn.cell_wrappers import _serialize_function_to_config\n from keras.layers.rnn.legacy_cells import RNNCell\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n # This can be used with self.assertRaisesRegexp for assert_like_rnncell.\n ASSERT_LIKE_RNNCELL_ERROR_REGEXP = \"is not an RNNCell\"\n \n\n@@ -30,9 +30,6 @@ import collections\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras import activations\n from keras import backend\n@@ -42,6 +39,11 @@ from keras.engine import input_spec\n from keras.legacy_tf_layers import base as base_layer\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n _BIAS_VARIABLE_NAME = \"bias\"\n _WEIGHTS_VARIABLE_NAME = \"kernel\"\n \n\n@@ -18,8 +18,6 @@\n import uuid\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n@@ -34,6 +32,10 @@ from keras.layers.rnn.base_rnn import RNN\n from keras.layers.rnn.dropout_rnn_cell_mixin import DropoutRNNCellMixin\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n RECURRENT_DROPOUT_WARNING_MSG = (\n     \"RNN `implementation=2` is not supported when `recurrent_dropout` is set. \"\n     \"Using `implementation=1`.\"\n\n@@ -22,10 +22,6 @@ import shutil\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.core.protobuf import rewriter_config_pb2\n-from tensorflow.python.framework import (\n-    test_util as tf_test_util,\n-)\n \n import keras\n from keras.layers.rnn import gru_lstm_utils\n@@ -33,6 +29,12 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.core.protobuf import rewriter_config_pb2\n+from tensorflow.python.framework import (\n+    test_util as tf_test_util,\n+)\n+\n # Global config for grappler setting that is used for graph mode test.\n _rewrites = rewriter_config_pb2.RewriterConfig()\n _rewrites.implementation_selector = rewriter_config_pb2.RewriterConfig.ON\n\n@@ -15,9 +15,6 @@\n \"\"\"Long Short-Term Memory V1 layer.\"\"\"\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras import activations\n from keras import constraints\n from keras import initializers\n@@ -27,6 +24,10 @@ from keras.layers.rnn import lstm\n from keras.layers.rnn import rnn_utils\n from keras.layers.rnn.base_rnn import RNN\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(v1=[\"keras.layers.LSTMCell\"])\n class LSTMCell(lstm.LSTMCell):\n\n@@ -20,8 +20,6 @@ import time\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.core.protobuf import rewriter_config_pb2\n-from tensorflow.python.platform import tf_logging as logging\n \n import keras\n from keras.layers.rnn import lstm\n@@ -30,6 +28,10 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.core.protobuf import rewriter_config_pb2\n+from tensorflow.python.platform import tf_logging as logging\n+\n # Global config for grappler setting that is used for graph mode test.\n _rewrites = rewriter_config_pb2.RewriterConfig()\n _rewrites.implementation_selector = rewriter_config_pb2.RewriterConfig.ON\n\n@@ -16,10 +16,12 @@\n # pylint: disable=protected-access\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras.utils import control_flow_util\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n \n def standardize_args(inputs, initial_state, constants, num_constants):\n     \"\"\"Standardizes `__call__` to a single list of tensor inputs.\n\n@@ -16,8 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n@@ -31,6 +29,10 @@ from keras.layers.rnn.base_rnn import RNN\n from keras.layers.rnn.dropout_rnn_cell_mixin import DropoutRNNCellMixin\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.SimpleRNNCell\")\n class SimpleRNNCell(DropoutRNNCellMixin, base_layer.BaseRandomLayer):\n\n@@ -18,8 +18,6 @@\n import functools\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer\n@@ -27,6 +25,10 @@ from keras.layers.rnn import rnn_utils\n from keras.utils import generic_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.StackedRNNCells\")\n class StackedRNNCells(base_layer.Layer):\n\n@@ -16,7 +16,6 @@\n # pylint: disable=g-classes-have-attributes,g-direct-tensorflow-import\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine.base_layer import Layer\n@@ -26,6 +25,9 @@ from keras.utils import generic_utils\n from keras.utils import layer_utils\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.layers.TimeDistributed\")\n class TimeDistributed(Wrapper):\n\n@@ -18,14 +18,16 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.training.tracking import (\n-    util as trackable_util,\n-)\n \n import keras\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.training.tracking import (\n+    util as trackable_util,\n+)\n+\n \n class TimeDistributedTest(test_combinations.TestCase):\n     @test_combinations.generate(\n\n@@ -17,9 +17,7 @@\n import threading\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n-import threading\n from keras.engine import base_layer\n from keras.engine import input_layer\n from keras.engine import input_spec\n@@ -56,6 +54,9 @@ from keras.saving.saved_model import json_utils\n from keras.utils import generic_utils\n from keras.utils import tf_inspect as inspect\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n ALL_MODULES = (\n     base_layer,\n     input_layer,\n\n@@ -22,9 +22,6 @@ import copy\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.ops import variable_scope as vs\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras import backend\n from keras.engine import base_layer_utils\n@@ -33,6 +30,11 @@ from keras.legacy_tf_layers import variable_scope_shim\n from keras.mixed_precision import policy\n from keras.utils import tf_contextlib\n \n+# isort: off\n+from tensorflow.python.ops import variable_scope as vs\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n _KERAS_STYLE_SCOPE = False\n \n \n\n@@ -21,12 +21,14 @@ from __future__ import print_function\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras import layers as keras_layers\n from keras.legacy_tf_layers import base\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n \n @keras_export(v1=[\"keras.__internal__.legacy.layers.Conv1D\"])\n @tf_export(v1=[\"layers.Conv1D\"])\n\n@@ -24,12 +24,14 @@ from __future__ import print_function\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras import layers as keras_layers\n from keras.legacy_tf_layers import base\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n \n @keras_export(v1=[\"keras.__internal__.legacy.layers.Dense\"])\n @tf_export(v1=[\"layers.Dense\"])\n\n@@ -24,14 +24,16 @@ import platform\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n+\n+from keras.legacy_tf_layers import core as core_layers\n+from keras.testing_infra import test_combinations\n+\n+# isort: off\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n from tensorflow.python.ops import variable_scope\n \n-from keras.legacy_tf_layers import core as core_layers\n-from keras.testing_infra import test_combinations\n-\n \n class DenseTest(tf.test.TestCase, parameterized.TestCase):\n     @test_combinations.generate(\n\n@@ -8,6 +8,8 @@ eager execution.\n import sys\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n \n\n@@ -21,12 +21,14 @@ from __future__ import print_function\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras.layers.normalization import batch_normalization_v1\n from keras.legacy_tf_layers import base\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n \n @keras_export(v1=[\"keras.__internal__.legacy.layers.BatchNormalization\"])\n @tf_export(v1=[\"layers.BatchNormalization\"])\n\n@@ -22,14 +22,16 @@ import os\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n+\n+from keras.legacy_tf_layers import convolutional as conv_layers\n+from keras.legacy_tf_layers import normalization as normalization_layers\n+\n+# isort: off\n from tensorflow.core.protobuf import saver_pb2\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n \n-from keras.legacy_tf_layers import convolutional as conv_layers\n-from keras.legacy_tf_layers import normalization as normalization_layers\n-\n \n @tf_test_utils.run_v1_only(\"b/120545219\")\n class BNTest(tf.test.TestCase):\n\n@@ -20,12 +20,13 @@ from __future__ import print_function\n \n import warnings\n \n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.python.util.tf_export import tf_export\n-\n from keras import layers as keras_layers\n from keras.legacy_tf_layers import base\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.python.util.tf_export import tf_export\n+\n \n @keras_export(v1=[\"keras.__internal__.legacy.layers.AveragePooling1D\"])\n @tf_export(v1=[\"layers.AveragePooling1D\"])\n\n@@ -19,12 +19,14 @@ from __future__ import division\n from __future__ import print_function\n \n import tensorflow.compat.v2 as tf\n+\n+from keras.legacy_tf_layers import pooling as pooling_layers\n+\n+# isort: off\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n \n-from keras.legacy_tf_layers import pooling as pooling_layers\n-\n \n class PoolingTest(tf.test.TestCase):\n     def testInvalidDataFormat(self):\n\n@@ -22,14 +22,16 @@ import contextlib\n import functools\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.ops import variable_scope as vs\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine import base_layer\n from keras.utils import layer_utils\n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.python.ops import variable_scope as vs\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n def as_shape(shape):\n     \"\"\"Converts the given object to a TensorShape.\"\"\"\n\n@@ -24,10 +24,6 @@ import threading\n import numpy\n import tensorflow as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n-from tensorflow.python.ops import variable_scope\n \n from keras import models\n from keras import regularizers\n@@ -39,6 +35,12 @@ from keras.legacy_tf_layers import core as core_layers\n from keras.legacy_tf_layers import variable_scope_shim\n from keras.testing_infra import test_combinations\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+from tensorflow.python.ops import variable_scope\n+\n \n def run_inside_wrap_function_in_eager_mode(graph_function):\n     \"\"\"Decorator to execute the same graph code in eager and graph modes.\n\n@@ -20,11 +20,6 @@ import abc\n import functools\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.ops.ragged import ragged_map_ops\n-from tensorflow.python.ops.ragged import ragged_util\n-from tensorflow.python.util import dispatch\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras.saving.experimental import saving_lib\n@@ -34,6 +29,13 @@ from keras.utils import tf_utils\n from keras.utils.generic_utils import deserialize_keras_object\n from keras.utils.generic_utils import serialize_keras_object\n \n+# isort: off\n+from tensorflow.python.ops.ragged import ragged_map_ops\n+from tensorflow.python.ops.ragged import ragged_util\n+from tensorflow.python.util import dispatch\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n \n @keras_export(\"keras.losses.Loss\")\n class Loss:\n\n@@ -17,9 +17,6 @@\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.autograph.impl import (\n-    api as autograph,\n-)\n \n from keras import activations\n from keras import backend\n@@ -27,6 +24,11 @@ from keras import losses\n from keras.testing_infra import test_combinations\n from keras.utils import losses_utils\n \n+# isort: off\n+from tensorflow.python.autograph.impl import (\n+    api as autograph,\n+)\n+\n ALL_LOSSES = [\n     losses.mean_squared_error,\n     losses.mean_absolute_error,\n\n@@ -15,8 +15,6 @@\n \"\"\"All Keras metrics.\"\"\"\n # pylint: disable=g-bad-import-order\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n # Utilities\n # Base classes\n from keras.metrics.base_metric import Mean\n@@ -96,6 +94,9 @@ from keras.metrics.metrics import top_k_categorical_accuracy\n from keras.utils.generic_utils import deserialize_keras_object\n from keras.utils.generic_utils import serialize_keras_object\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # Aliases\n acc = ACC = accuracy\n bce = BCE = binary_crossentropy\n\n@@ -23,8 +23,6 @@ import warnings\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras.dtensor import dtensor_api as dtensor\n@@ -38,6 +36,10 @@ from keras.utils import losses_utils\n from keras.utils import metrics_utils\n from keras.utils.tf_utils import is_tensor_or_variable\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n \n @keras_export(\"keras.metrics.Metric\")\n class Metric(base_layer.Layer, metaclass=abc.ABCMeta):\n\n@@ -19,7 +19,6 @@ import json\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.platform import tf_logging\n \n from keras import layers\n from keras import metrics\n@@ -27,6 +26,9 @@ from keras import models\n from keras.testing_infra import test_combinations\n from keras.utils import metrics_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging\n+\n \n @test_combinations.generate(test_combinations.combine(mode=[\"graph\", \"eager\"]))\n class FalsePositivesTest(tf.test.TestCase, parameterized.TestCase):\n\n@@ -23,7 +23,6 @@ from typing import Union\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n@@ -47,6 +46,9 @@ from keras.utils import metrics_utils\n from keras.utils.generic_utils import to_list\n from keras.utils.tf_utils import is_tensor_or_variable\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.metrics.MeanRelativeError\")\n class MeanRelativeError(base_metric.Mean):\n\n@@ -17,6 +17,8 @@\n import itertools\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.platform import tf_logging\n \n _COMPAT_CHECK_PREFIX = \"Mixed precision compatibility check (mixed_float16): \"\n\n@@ -17,11 +17,13 @@\n import re\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging\n \n from keras.mixed_precision import device_compatibility_check\n from keras.testing_infra import test_combinations\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging\n+\n \n def device_details(device_name, compute_capability=None):\n     details = {}\n\n@@ -15,11 +15,6 @@\n \"\"\"Contains the loss scaling optimizer class.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.keras.optimizer_v2 import (\n-    optimizer_v2 as legacy_optimizer,\n-)\n-from tensorflow.python.platform import tf_logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import optimizers\n@@ -30,6 +25,13 @@ from keras.optimizers.optimizer_v2 import optimizer_v2\n from keras.optimizers.optimizer_v2 import utils as optimizer_utils\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.keras.optimizer_v2 import (\n+    optimizer_v2 as legacy_optimizer,\n+)\n+from tensorflow.python.platform import tf_logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n class _UnwrapPreventer:\n     \"\"\"Wrapper that DistributionStrategy will not unwrap.\n\n@@ -20,13 +20,6 @@ from unittest import mock\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n-from tensorflow.python.keras.optimizer_v2 import (\n-    gradient_descent as legacy_sgd,\n-)\n-from tensorflow.python.platform import tf_logging\n \n from keras import optimizers\n from keras.mixed_precision import loss_scale_optimizer\n@@ -41,6 +34,15 @@ from keras.optimizers.optimizer_v2 import gradient_descent\n from keras.optimizers.optimizer_v2 import optimizer_v2\n from keras.testing_infra import test_combinations\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+from tensorflow.python.keras.optimizer_v2 import (\n+    gradient_descent as legacy_sgd,\n+)\n+from tensorflow.python.platform import tf_logging\n+\n # If called outside any strategy.scope() calls, this will return the default\n # strategy.\n default_strategy_fn = tf.distribute.get_strategy\n\n@@ -17,13 +17,15 @@\n import contextlib\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import base_layer_utils\n from keras.mixed_precision import device_compatibility_check\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @keras_export(\"keras.mixed_precision.Policy\", v1=[])\n\n@@ -16,7 +16,6 @@\n \n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.platform import tf_logging\n \n from keras.engine import base_layer_utils\n from keras.mixed_precision import device_compatibility_check\n@@ -25,6 +24,9 @@ from keras.optimizers.optimizer_v2 import gradient_descent\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging\n+\n \n @test_combinations.generate(test_combinations.combine(mode=[\"graph\", \"eager\"]))\n class PolicyTest(tf.test.TestCase, parameterized.TestCase):\n\n@@ -16,8 +16,6 @@\n \"\"\"Code for model cloning, plus model-related API entries.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import metrics as metrics_module\n@@ -34,6 +32,10 @@ from keras.utils import generic_utils\n from keras.utils import version_utils\n from keras.utils.generic_utils import CustomObjectScope\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n # API entries importable from `keras.models`:\n Model = training.Model  # pylint: disable=invalid-name\n Sequential = sequential.Sequential  # pylint: disable=invalid-name\n\n@@ -17,13 +17,15 @@\n import copy\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.engine import data_adapter\n from keras.layers import deserialize as deserialize_layer\n from keras.models import Model\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -20,7 +20,6 @@ For more examples see the base class `tf.keras.optimizers.Optimizer`.\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n # Imports needed for deserialization.\n from keras import backend\n@@ -80,6 +79,9 @@ from keras.optimizers.optimizer_v2.rmsprop import RMSprop\n from keras.utils.generic_utils import deserialize_keras_object\n from keras.utils.generic_utils import serialize_keras_object\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.serialize\")\n def serialize(optimizer):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy Adadelta optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import adadelta\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.Adadelta\")\n class Adadelta(adadelta.Adadelta):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy Adagrad optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import adagrad\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.Adagrad\")\n class Adagrad(adagrad.Adagrad):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy Adam optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import adam\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.Adam\")\n class Adam(adam.Adam):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy Adamax optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import adamax\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.Adamax\")\n class Adamax(adamax.Adamax):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy Ftrl optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import ftrl\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.Ftrl\")\n class Ftrl(ftrl.Ftrl):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy Nadam optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import nadam\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.Nadam\")\n class Nadam(nadam.Nadam):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy Adam optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.Optimizer\")\n class Optimizer(optimizer_v2.OptimizerV2):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy RMSprop optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import rmsprop\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.RMSprop\")\n class RMSprop(rmsprop.RMSprop):\n\n@@ -14,10 +14,11 @@\n # ==============================================================================\n \"\"\"Legacy SGD optimizer implementation.\"\"\"\n \n-from tensorflow.python.util.tf_export import keras_export\n-\n from keras.optimizers.optimizer_v2 import gradient_descent\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.legacy.SGD\")\n class SGD(gradient_descent.SGD):\n\n@@ -17,10 +17,12 @@\n import functools\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import tf_export\n \n from keras.optimizers.schedules import learning_rate_schedule\n \n+# isort: off\n+from tensorflow.python.util.tf_export import tf_export\n+\n \n @tf_export(v1=[\"train.exponential_decay\"])\n def exponential_decay(\n\n@@ -15,11 +15,13 @@\n \"\"\"Adadelta optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -15,12 +15,14 @@\n \"\"\"Adagrad optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import initializers\n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -15,11 +15,13 @@\n \"\"\"Adam optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -15,11 +15,13 @@\n \"\"\"Adamax optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -15,11 +15,13 @@\n \"\"\"AdamW optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -15,11 +15,13 @@\n \"\"\"FTRL optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -15,11 +15,13 @@\n \"\"\"Nadam optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -21,14 +21,16 @@ import abc\n \n import tensorflow.compat.v2 as tf\n from absl import logging\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import backend\n from keras import initializers\n from keras.optimizers.optimizer_v2 import utils as optimizer_utils\n from keras.optimizers.schedules import learning_rate_schedule\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n \n class _BaseOptimizer(tf.Module):\n     \"\"\"Optimizer base class, which only supports non-distribute use case.\"\"\"\n\n@@ -15,11 +15,13 @@\n \"\"\"RMSprop optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -15,11 +15,13 @@\n \"\"\"SGD optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_experimental import optimizer\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @generic_utils.register_keras_serializable()\n\n@@ -16,11 +16,13 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend_config\n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -16,11 +16,13 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend_config\n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -15,11 +15,13 @@\n \"\"\"Adam optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend_config\n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @keras_export(\"keras.optimizers.Adam\")\n\n@@ -15,11 +15,13 @@\n \"\"\"Adamax optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend_config\n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @keras_export(\"keras.optimizers.Adamax\")\n\n@@ -17,10 +17,12 @@\n # pylint: disable=g-classes-have-attributes\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @keras_export(\"keras.optimizers.Ftrl\")\n\n@@ -16,10 +16,12 @@\n # pylint: disable=g-bad-import-order\n # pylint: disable=g-classes-have-attributes\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @keras_export(\"keras.optimizers.SGD\")\n\n@@ -15,12 +15,14 @@\n \"\"\"Nadam optimizer implementation.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend_config\n from keras.optimizers.optimizer_v2 import optimizer_v2\n from keras.optimizers.schedules import learning_rate_schedule\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n # pylint: disable=g-classes-have-attributes\n @keras_export(\"keras.optimizers.Nadam\")\n\n@@ -22,7 +22,6 @@ import functools\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import initializers\n@@ -34,6 +33,9 @@ from keras.utils import layer_utils\n from keras.utils import tf_inspect\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n keras_optimizers_gauge = tf.__internal__.monitoring.BoolGauge(\n     \"/tensorflow/api/keras/optimizers\", \"keras optimizer usage\", \"method\"\n )\n\n@@ -19,9 +19,6 @@ import collections\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n import keras\n from keras import backend\n@@ -47,6 +44,11 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n _DATA_TYPES = [tf.half, tf.float32, tf.float64]\n # TODO(b/141710709): complex support in NVCC and ROCM.\n if not tf_test_utils.IsBuiltWithNvcc() and not tf.test.is_built_with_rocm():\n\n@@ -16,11 +16,13 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend_config\n from keras.optimizers.optimizer_v2 import optimizer_v2\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -21,15 +21,17 @@ import math\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n from keras.optimizers.optimizer_v2 import rmsprop\n from keras.optimizers.schedules import learning_rate_schedule\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n _DATA_TYPES = [tf.half, tf.float32, tf.float64, tf.complex64, tf.complex128]\n \n _TEST_PARAM_VALUES = [\n\n@@ -15,6 +15,8 @@\n \"\"\"Optimizer utilities.\"\"\"\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.platform import tf_logging as logging\n \n \n\n@@ -19,10 +19,6 @@ import weakref\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.training.adam import AdamOptimizer\n-from tensorflow.python.training.experimental.loss_scale_optimizer import (\n-    MixedPrecisionLossScaleOptimizer,\n-)\n \n import keras\n from keras.optimizers import optimizer_v1\n@@ -30,6 +26,12 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import np_utils\n \n+# isort: off\n+from tensorflow.python.training.adam import AdamOptimizer\n+from tensorflow.python.training.experimental.loss_scale_optimizer import (\n+    MixedPrecisionLossScaleOptimizer,\n+)\n+\n \n def _get_model(input_dim, num_hidden, output_dim):\n     model = keras.models.Sequential()\n\n@@ -18,11 +18,13 @@ import abc\n import math\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.optimizers.schedules.LearningRateSchedule\")\n class LearningRateSchedule:\n\n@@ -15,8 +15,6 @@\n \"\"\"Built-in linear model classes.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util import deprecation\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import initializers\n@@ -26,6 +24,10 @@ from keras.engine import input_spec\n from keras.engine import training\n from keras.layers import core\n \n+# isort: off\n+from tensorflow.python.util import deprecation\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.experimental.LinearModel\",\n\n@@ -15,8 +15,6 @@\n \"\"\"Built-in WideNDeep model classes.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util import deprecation\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import activations\n from keras import backend\n@@ -26,6 +24,10 @@ from keras.engine import data_adapter\n from keras.engine import training as keras_training\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util import deprecation\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.experimental.WideDeepModel\",\n\n@@ -36,12 +36,14 @@ import threading\n import warnings\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.utils import data_utils\n from keras.utils import image_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n try:\n     import scipy\n     from scipy import linalg  # pylint: disable=unused-import\n\n@@ -28,10 +28,12 @@ import json\n import random\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import data_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n def _remove_long_seq(maxlen, seq, label):\n     \"\"\"Removes sequences that exceed the maximum length.\n\n@@ -33,6 +33,8 @@ import json\n import warnings\n \n import numpy as np\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n \n\n@@ -19,12 +19,14 @@\n import math\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.utils.generic_utils import deserialize_keras_object\n from keras.utils.generic_utils import serialize_keras_object\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n def _check_penalty_number(x):\n     \"\"\"check penalty number availability, raise ValueError if failed.\"\"\"\n\n@@ -19,11 +19,13 @@ import os\n import types\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util import tf_export\n \n from keras.saving.saved_model import json_utils\n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.util import tf_export\n+\n _CONFIG_FILE = \"config.keras\"\n \n # A temporary flag to enable the new idempotent saving framework.\n\n@@ -20,7 +20,6 @@ import os\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras import backend\n from keras.optimizers import optimizer_v1\n@@ -33,6 +32,9 @@ from keras.saving.saved_model import json_utils\n from keras.utils.generic_utils import LazyLoader\n from keras.utils.io_utils import ask_to_proceed_with_overwrite\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n try:\n     import h5py\n \n\n@@ -15,6 +15,7 @@\n # pylint: disable=protected-access\n \"\"\"Functions that save the model's config into different formats.\"\"\"\n \n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n \n\n@@ -15,7 +15,6 @@\n \"\"\"Keras model saving code.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.saving import hdf5_format\n from keras.saving import saving_utils\n@@ -26,6 +25,9 @@ from keras.utils import generic_utils\n from keras.utils import traceback_utils\n from keras.utils.io_utils import path_to_string\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-import-not-at-top\n try:\n     import h5py\n\n@@ -29,10 +29,12 @@ import json\n import numpy as np\n import tensorflow.compat.v2 as tf\n import wrapt\n-from tensorflow.python.framework import type_spec\n \n from keras.utils import generic_utils\n \n+# isort: off\n+from tensorflow.python.framework import type_spec\n+\n _EXTENSION_TYPE_SPEC = \"_EXTENSION_TYPE_SPEC\"\n \n \n\n@@ -18,7 +18,6 @@ import os\n \n import tensorflow.compat.v2 as tf\n from absl import logging\n-from tensorflow.python.saved_model import save as save_lib\n \n from keras import backend\n from keras.layers import serialization\n@@ -31,6 +30,9 @@ from keras.saving.saved_model import utils\n from keras.utils.generic_utils import LazyLoader\n from keras.utils.io_utils import ask_to_proceed_with_overwrite\n \n+# isort: off\n+from tensorflow.python.saved_model import save as save_lib\n+\n # To avoid circular dependencies between keras/engine and keras/saving,\n # code in keras/saving must delay imports.\n \n\n@@ -17,8 +17,6 @@\n import warnings\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.optimizers import optimizer_v1\n@@ -29,6 +27,10 @@ from keras.saving import utils_v1 as model_utils\n from keras.utils import mode_keys\n from keras.utils.generic_utils import LazyLoader\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.util.tf_export import keras_export\n+\n # To avoid circular dependencies between keras/engine and keras/saving,\n # code in keras/saving must delay imports.\n \n\n@@ -19,7 +19,6 @@ import os\n \n # pylint: disable=g-bad-import-order, g-direct-tensorflow-import\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n import keras\n from keras import backend\n@@ -31,6 +30,9 @@ from keras.utils import generic_utils\n from keras.utils import version_utils\n from keras.utils.io_utils import ask_to_proceed_with_overwrite\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n # pylint: enable=g-bad-import-order, g-direct-tensorflow-import\n \n \n\n@@ -20,13 +20,15 @@ import os\n import time\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n \n from keras.saving.utils_v1 import export_output as export_output_lib\n from keras.saving.utils_v1 import mode_keys\n from keras.saving.utils_v1 import unexported_constants\n from keras.saving.utils_v1.mode_keys import KerasModeKeys as ModeKeys\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+\n # Mapping of the modes to appropriate MetaGraph tags in the SavedModel.\n EXPORT_TAG_MAP = mode_keys.ModeKeyMap(\n     **{\n\n@@ -24,10 +24,6 @@ import unittest\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras import layers\n@@ -45,6 +41,12 @@ from keras.optimizers.optimizer_v2 import rmsprop as rmsprop_v2\n from keras.utils import tf_contextlib\n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n def string_test(actual, expected):\n     np.testing.assert_array_equal(actual, expected)\n\n@@ -16,10 +16,6 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.training.rmsprop import (\n-    RMSPropOptimizer,\n-)\n \n from keras import Input\n from keras import Model\n@@ -30,6 +26,12 @@ from keras.optimizers import optimizer_v2\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.training.rmsprop import (\n+    RMSPropOptimizer,\n+)\n+\n MAE = losses.MeanAbsoluteError\n mae = losses.mean_absolute_error\n \n\n@@ -20,6 +20,20 @@ import os\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl import flags\n+\n+from keras import callbacks\n+from keras.distribute import distribute_strategy_test\n+from keras.engine import base_layer\n+from keras.engine import sequential as sequential_model_lib\n+from keras.engine import training\n+from keras.layers import convolutional as conv_layer_lib\n+from keras.layers import core as layer_lib\n+from keras.layers import pooling as pool_layer_lib\n+from keras.layers import regularization as regularization_layer_lib\n+from keras.layers import reshaping as reshaping_layer_lib\n+from keras.testing_infra import test_utils\n+\n+# isort: off\n from tensorboard.plugins.histogram import (\n     summary_v2 as histogram_summary_v2,\n )\n@@ -36,18 +50,6 @@ from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n \n-from keras import callbacks\n-from keras.distribute import distribute_strategy_test\n-from keras.engine import base_layer\n-from keras.engine import sequential as sequential_model_lib\n-from keras.engine import training\n-from keras.layers import convolutional as conv_layer_lib\n-from keras.layers import core as layer_lib\n-from keras.layers import pooling as pool_layer_lib\n-from keras.layers import regularization as regularization_layer_lib\n-from keras.layers import reshaping as reshaping_layer_lib\n-from keras.testing_infra import test_utils\n-\n NUM_CLASSES = 4\n \n FLAGS = flags.FLAGS\n\n@@ -18,13 +18,15 @@ import os\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import convert_to_constants\n-from tensorflow.python.saved_model.load import load\n-from tensorflow.python.saved_model.save import save\n \n import keras\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.framework import convert_to_constants\n+from tensorflow.python.saved_model.load import load\n+from tensorflow.python.saved_model.save import save\n+\n \n class VariablesToConstantsTest(tf.test.TestCase):\n     def _freezeModel(self, model):\n\n@@ -16,14 +16,16 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n+\n+import keras\n+\n+# isort: off\n from tensorflow.core.protobuf import meta_graph_pb2\n from tensorflow.python.grappler import tf_optimizer\n from tensorflow.python.training.saver import (\n     export_meta_graph,\n )\n \n-import keras\n-\n \n class ConvertVariablesToConstantsTest(tf.test.TestCase):\n     def _get_tensors(self, sess, tensor_list):\n\n@@ -14,12 +14,14 @@\n # =============================================================================\n \n import tensorflow.compat.v2 as tf\n+\n+import keras\n+\n+# isort: off\n from tensorflow.python.framework.memory_checker import (\n     MemoryChecker,\n )\n \n-import keras\n-\n \n class MemoryCheckerTest(tf.test.TestCase):\n     def testKerasBasic(self):\n\n@@ -21,12 +21,14 @@ introspection (test_util decorators). Please be careful adding new tests here.\n \"\"\"\n \n import tensorflow.compat.v2 as tf\n+\n+import keras\n+\n+# isort: off\n from tensorflow.python.eager.memory_tests import (\n     memory_test_util,\n )\n \n-import keras\n-\n \n class SingleLayerNet(keras.Model):\n     \"\"\"Simple keras model used to ensure that there are no leaks.\"\"\"\n\n@@ -20,6 +20,13 @@ import os\n import numpy as np\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n+\n+import keras\n+from keras.testing_infra import test_combinations\n+from keras.testing_infra import test_utils\n+from keras.tests import model_subclassing_test_util as model_util\n+\n+# isort: off\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n )\n@@ -27,11 +34,6 @@ from tensorflow.python.training.tracking import (\n     data_structures,\n )\n \n-import keras\n-from keras.testing_infra import test_combinations\n-from keras.testing_infra import test_utils\n-from keras.tests import model_subclassing_test_util as model_util\n-\n try:\n     import h5py  # pylint:disable=g-import-not-at-top\n except ImportError:\n\n@@ -17,13 +17,15 @@\n import os\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n \n from keras.layers import core\n from keras.optimizers.optimizer_v2 import adam\n \n+# isort: off\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+\n \n class _ModelWithOptimizerUsingDefun(tf.train.Checkpoint):\n     def __init__(self):\n\n@@ -18,13 +18,15 @@ import functools\n import os\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.training.tracking import (\n-    util as trackable_utils,\n-)\n \n from keras.engine import training\n from keras.layers import core\n \n+# isort: off\n+from tensorflow.python.training.tracking import (\n+    util as trackable_utils,\n+)\n+\n \n class NonLayerTrackable(tf.Module):\n     def __init__(self):\n\n@@ -18,10 +18,6 @@ import os\n import numpy\n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.training.tracking import (\n-    data_structures,\n-)\n-from tensorflow.python.training.tracking import util\n \n from keras.engine import sequential\n from keras.engine import training\n@@ -29,6 +25,12 @@ from keras.layers import core\n from keras.layers.normalization import batch_normalization_v1\n from keras.testing_infra import test_combinations\n \n+# isort: off\n+from tensorflow.python.training.tracking import (\n+    data_structures,\n+)\n+from tensorflow.python.training.tracking import util\n+\n \n class HasList(training.Model):\n     def __init__(self):\n\n@@ -18,14 +18,6 @@ import os\n import weakref\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.eager import context\n-from tensorflow.python.framework import (\n-    test_util as tf_test_utils,\n-)\n-from tensorflow.python.platform import tf_logging as logging\n-from tensorflow.python.training.tracking import (\n-    util as trackable_utils,\n-)\n \n from keras.engine import input_layer\n from keras.engine import sequential\n@@ -36,6 +28,16 @@ from keras.optimizers.optimizer_v2 import adam\n from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n \n+# isort: off\n+from tensorflow.python.eager import context\n+from tensorflow.python.framework import (\n+    test_util as tf_test_utils,\n+)\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.training.tracking import (\n+    util as trackable_utils,\n+)\n+\n \n # pylint: disable=not-callable\n class MyModel(training.Model):\n\n@@ -18,6 +18,13 @@ import functools\n import os\n \n import tensorflow.compat.v2 as tf\n+\n+from keras.engine import training\n+from keras.layers import core\n+from keras.testing_infra import test_combinations\n+from keras.testing_infra import test_utils\n+\n+# isort: off\n from tensorflow.python.eager import context\n from tensorflow.python.framework import (\n     test_util as tf_test_utils,\n@@ -26,11 +33,6 @@ from tensorflow.python.training.tracking import (\n     util as trackable_utils,\n )\n \n-from keras.engine import training\n-from keras.layers import core\n-from keras.testing_infra import test_combinations\n-from keras.testing_infra import test_utils\n-\n \n class NonLayerTrackable(tf.Module):\n     def __init__(self):\n\n@@ -14,15 +14,17 @@\n # ==============================================================================\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.compiler.tests import xla_test\n-from tensorflow.python.training.tracking import (\n-    util as trackable_utils,\n-)\n \n from keras.engine import training\n from keras.layers import core\n from keras.optimizers.optimizer_v2 import adam\n \n+# isort: off\n+from tensorflow.compiler.tests import xla_test\n+from tensorflow.python.training.tracking import (\n+    util as trackable_utils,\n+)\n+\n \n class NonLayerTrackable(tf.Module):\n     def __init__(self):\n\n@@ -16,10 +16,12 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import dataset_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -35,7 +35,6 @@ from contextlib import closing\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n from six.moves.urllib.parse import urlsplit\n \n from six.moves.urllib.request import urlopen\n@@ -43,6 +42,9 @@ from keras.utils import io_utils\n from keras.utils import tf_inspect\n from keras.utils.generic_utils import Progbar\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # Required to support google internal urlretrieve\n if True:  # This gets transformed to `if sys.version_info[0] == 2:` in OSS.\n \n\n@@ -16,6 +16,8 @@\n \"\"\"Input dataset creator for `model.fit`.\"\"\"\n \n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n \n\n@@ -16,12 +16,6 @@\n \n import tensorflow.compat.v2 as tf\n from absl.testing import parameterized\n-from tensorflow.python.distribute.cluster_resolver import (\n-    SimpleClusterResolver,\n-)\n-from tensorflow.python.training.server_lib import (\n-    ClusterSpec,\n-)\n \n from keras.distribute import multi_worker_testing_utils\n from keras.engine import data_adapter\n@@ -32,6 +26,14 @@ from keras.testing_infra import test_combinations\n from keras.testing_infra import test_utils\n from keras.utils import dataset_creator\n \n+# isort: off\n+from tensorflow.python.distribute.cluster_resolver import (\n+    SimpleClusterResolver,\n+)\n+from tensorflow.python.training.server_lib import (\n+    ClusterSpec,\n+)\n+\n \n @test_utils.run_v2_only\n class DatasetCreatorTest(tf.test.TestCase, parameterized.TestCase):\n\n@@ -22,6 +22,8 @@ import warnings\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n # pylint: disable=g-classes-have-attributes\n\n@@ -29,12 +29,14 @@ import weakref\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import io_utils\n from keras.utils import tf_contextlib\n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n _GLOBAL_CUSTOM_OBJECTS = {}\n _GLOBAL_CUSTOM_NAMES = {}\n \n\n@@ -16,11 +16,13 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import dataset_utils\n from keras.utils import image_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n # pylint: disable=g-classes-have-attributes\n \n \n\n@@ -22,10 +22,12 @@ import warnings\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n try:\n     from PIL import Image as pil_image\n except ImportError:\n\n@@ -20,10 +20,12 @@ import sys\n import threading\n \n from absl import logging\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import keras_logging\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n INTERACTIVE_LOGGING = threading.local()\n INTERACTIVE_LOGGING.enable = keras_logging.INTERACTIVE_LOGGING_DEFAULT\n \n\n@@ -21,11 +21,13 @@ import weakref\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import io_utils\n from keras.utils import tf_inspect\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.utils.get_source_inputs\")\n def get_source_inputs(tensor, layer=None, node_index=None):\n\n@@ -16,12 +16,14 @@\n \"\"\"Utilities related to loss functions.\"\"\"\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import keras_tensor\n from keras.utils import tf_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.losses.Reduction\", v1=[])\n class ReductionV2:\n\n@@ -14,6 +14,7 @@\n # ==============================================================================\n \"\"\"Keras model mode constants.\"\"\"\n \n+# isort: off\n # pylint: disable=unused-import\n from tensorflow.python.saved_model.model_utils.mode_keys import (\n     KerasModeKeys as ModeKeys,\n\n@@ -15,6 +15,8 @@\n \"\"\"Numpy-related utilities.\"\"\"\n \n import numpy as np\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n \n\n@@ -16,10 +16,12 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import dataset_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\n     \"keras.utils.text_dataset_from_directory\",\n\n@@ -20,14 +20,16 @@ import random\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n-from tensorflow.python.framework import ops\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras import backend\n from keras.engine import keras_tensor\n from keras.utils import object_identity\n from keras.utils import tf_contextlib\n \n+# isort: off\n+from tensorflow.python.framework import ops\n+from tensorflow.python.util.tf_export import keras_export\n+\n \n @keras_export(\"keras.utils.set_random_seed\", v1=[])\n def set_random_seed(seed):\n\n@@ -16,6 +16,8 @@\n \n import numpy as np\n import tensorflow.compat.v2 as tf\n+\n+# isort: off\n from tensorflow.python.util.tf_export import keras_export\n \n # pylint: disable=g-classes-have-attributes\n\n@@ -21,10 +21,12 @@ import re\n import sys\n \n import tensorflow.compat.v2 as tf\n-from tensorflow.python.util.tf_export import keras_export\n \n from keras.utils import io_utils\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+\n try:\n     # pydot-ng is a fork of pydot that is better maintained.\n     import pydot_ng as pydot\n\n@@ -20,14 +20,16 @@ import types\n import warnings\n \n import numpy as np\n-from tensorflow.python.util.tf_export import keras_export\n-from tensorflow.tools.docs import doc_controls\n \n from keras import losses\n from keras.models import Sequential\n from keras.utils.generic_utils import has_arg\n from keras.utils.np_utils import to_categorical\n \n+# isort: off\n+from tensorflow.python.util.tf_export import keras_export\n+from tensorflow.tools.docs import doc_controls\n+\n \n class BaseWrapper:\n     \"\"\"Base class for the Keras scikit-learn wrapper.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
