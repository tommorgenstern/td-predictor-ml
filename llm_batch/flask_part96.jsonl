{"custom_id": "flask#d5aadba4d34f6070377e88429b178ba08eea5349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 30 | Lines Deleted: 22 | Files Changed: 2 | Hunks: 6 | Methods Changed: 8 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 52 | Churn Cumulative: 2892 | Contributors (this commit): 10 | Commits (past 90d): 26 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -4,6 +4,7 @@ import socket\n import sys\n import typing as t\n import warnings\n+from datetime import datetime\n from datetime import timedelta\n from functools import update_wrapper\n from threading import RLock\n@@ -436,14 +437,16 @@ def get_flashed_messages(\n \n \n def _prepare_send_file_kwargs(\n-    download_name=None,\n-    attachment_filename=None,\n-    etag=None,\n-    add_etags=None,\n-    max_age=None,\n-    cache_timeout=None,\n-    **kwargs,\n-):\n+    download_name: t.Optional[str] = None,\n+    attachment_filename: t.Optional[str] = None,\n+    etag: t.Optional[t.Union[bool, str]] = None,\n+    add_etags: t.Optional[t.Union[bool]] = None,\n+    max_age: t.Optional[\n+        t.Union[int, t.Callable[[t.Optional[str]], t.Optional[int]]]\n+    ] = None,\n+    cache_timeout: t.Optional[int] = None,\n+    **kwargs: t.Any,\n+) -> t.Dict[str, t.Any]:\n     if attachment_filename is not None:\n         warnings.warn(\n             \"The 'attachment_filename' parameter has been renamed to\"\n@@ -482,23 +485,25 @@ def _prepare_send_file_kwargs(\n         max_age=max_age,\n         use_x_sendfile=current_app.use_x_sendfile,\n         response_class=current_app.response_class,\n-        _root_path=current_app.root_path,\n+        _root_path=current_app.root_path,  # type: ignore\n     )\n     return kwargs\n \n \n def send_file(\n-    path_or_file,\n-    mimetype=None,\n-    as_attachment=False,\n-    download_name=None,\n-    attachment_filename=None,\n-    conditional=True,\n-    etag=True,\n-    add_etags=None,\n-    last_modified=None,\n-    max_age=None,\n-    cache_timeout=None,\n+    path_or_file: t.Union[os.PathLike, str, t.BinaryIO],\n+    mimetype: t.Optional[str] = None,\n+    as_attachment: bool = False,\n+    download_name: t.Optional[str] = None,\n+    attachment_filename: t.Optional[str] = None,\n+    conditional: bool = True,\n+    etag: t.Union[bool, str] = True,\n+    add_etags: t.Optional[bool] = None,\n+    last_modified: t.Optional[t.Union[datetime, int, float]] = None,\n+    max_age: t.Optional[\n+        t.Union[int, t.Callable[[t.Optional[str]], t.Optional[int]]]\n+    ] = None,\n+    cache_timeout: t.Optional[int] = None,\n ):\n     \"\"\"Send the contents of a file to the client.\n \n@@ -643,7 +648,10 @@ def safe_join(directory: str, *pathnames: str) -> str:\n \n \n def send_from_directory(\n-    directory: str, path: str, filename: t.Optional[str] = None, **kwargs: t.Any\n+    directory: t.Union[os.PathLike, str],\n+    path: t.Union[os.PathLike, str],\n+    filename: t.Optional[str] = None,\n+    **kwargs: t.Any,\n ) -> \"Response\":\n     \"\"\"Send a file from within a directory using :func:`send_file`.\n \n\n@@ -288,7 +288,7 @@ class Scaffold:\n \n         self._static_url_path = value\n \n-    def get_send_file_max_age(self, filename: str) -> t.Optional[int]:\n+    def get_send_file_max_age(self, filename: t.Optional[str]) -> t.Optional[int]:\n         \"\"\"Used by :func:`send_file` to determine the ``max_age`` cache\n         value for a given file path if it wasn't passed.\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#7c5261407dae61679c268b44c63d73909c3fe652", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 25 | Lines Deleted: 85 | Files Changed: 3 | Hunks: 12 | Methods Changed: 14 | Complexity Δ (Sum/Max): -5/3 | Churn Δ: 110 | Churn Cumulative: 6757 | Contributors (this commit): 49 | Commits (past 90d): 13 | Contributors (cumulative): 60 | DMM Complexity: 0.0\n\nDIFF:\n@@ -188,6 +188,10 @@ class Blueprint(Scaffold):\n             template_folder=template_folder,\n             root_path=root_path,\n         )\n+\n+        if \".\" in name:\n+            raise ValueError(\"'name' may not contain a dot '.' character.\")\n+\n         self.name = name\n         self.url_prefix = url_prefix\n         self.subdomain = subdomain\n@@ -360,12 +364,12 @@ class Blueprint(Scaffold):\n         \"\"\"Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n         the :func:`url_for` function is prefixed with the name of the blueprint.\n         \"\"\"\n-        if endpoint:\n-            assert \".\" not in endpoint, \"Blueprint endpoints should not contain dots\"\n-        if view_func and hasattr(view_func, \"__name__\"):\n-            assert (\n-                \".\" not in view_func.__name__\n-            ), \"Blueprint view function name should not contain dots\"\n+        if endpoint and \".\" in endpoint:\n+            raise ValueError(\"'endpoint' may not contain a dot '.' character.\")\n+\n+        if view_func and hasattr(view_func, \"__name__\") and \".\" in view_func.__name__:\n+            raise ValueError(\"'view_func' name may not contain a dot '.' character.\")\n+\n         self.record(lambda s: s.add_url_rule(rule, endpoint, view_func, **options))\n \n     def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n\n@@ -1631,7 +1631,7 @@ def test_url_processors(app, client):\n \n \n def test_inject_blueprint_url_defaults(app):\n-    bp = flask.Blueprint(\"foo.bar.baz\", __name__, template_folder=\"template\")\n+    bp = flask.Blueprint(\"foo\", __name__, template_folder=\"template\")\n \n     @bp.url_defaults\n     def bp_defaults(endpoint, values):\n@@ -1644,12 +1644,12 @@ def test_inject_blueprint_url_defaults(app):\n     app.register_blueprint(bp)\n \n     values = dict()\n-    app.inject_url_defaults(\"foo.bar.baz.view\", values)\n+    app.inject_url_defaults(\"foo.view\", values)\n     expected = dict(page=\"login\")\n     assert values == expected\n \n     with app.test_request_context(\"/somepage\"):\n-        url = flask.url_for(\"foo.bar.baz.view\")\n+        url = flask.url_for(\"foo.view\")\n     expected = \"/login\"\n     assert url == expected\n \n\n@@ -1,5 +1,3 @@\n-import functools\n-\n import pytest\n from jinja2 import TemplateNotFound\n from werkzeug.http import parse_cache_control_header\n@@ -253,28 +251,9 @@ def test_templates_list(test_apps):\n     assert templates == [\"admin/index.html\", \"frontend/index.html\"]\n \n \n-def test_dotted_names(app, client):\n-    frontend = flask.Blueprint(\"myapp.frontend\", __name__)\n-    backend = flask.Blueprint(\"myapp.backend\", __name__)\n-\n-    @frontend.route(\"/fe\")\n-    def frontend_index():\n-        return flask.url_for(\"myapp.backend.backend_index\")\n-\n-    @frontend.route(\"/fe2\")\n-    def frontend_page2():\n-        return flask.url_for(\".frontend_index\")\n-\n-    @backend.route(\"/be\")\n-    def backend_index():\n-        return flask.url_for(\"myapp.frontend.frontend_index\")\n-\n-    app.register_blueprint(frontend)\n-    app.register_blueprint(backend)\n-\n-    assert client.get(\"/fe\").data.strip() == b\"/be\"\n-    assert client.get(\"/fe2\").data.strip() == b\"/fe\"\n-    assert client.get(\"/be\").data.strip() == b\"/fe\"\n+def test_dotted_name_not_allowed(app, client):\n+    with pytest.raises(ValueError):\n+        flask.Blueprint(\"app.ui\", __name__)\n \n \n def test_dotted_names_from_app(app, client):\n@@ -343,62 +322,19 @@ def test_route_decorator_custom_endpoint(app, client):\n def test_route_decorator_custom_endpoint_with_dots(app, client):\n     bp = flask.Blueprint(\"bp\", __name__)\n \n-    @bp.route(\"/foo\")\n-    def foo():\n-        return flask.request.endpoint\n+    with pytest.raises(ValueError):\n+        bp.route(\"/\", endpoint=\"a.b\")(lambda: \"\")\n \n-    try:\n+    with pytest.raises(ValueError):\n+        bp.add_url_rule(\"/\", endpoint=\"a.b\")\n \n-        @bp.route(\"/bar\", endpoint=\"bar.bar\")\n-        def foo_bar():\n-            return flask.request.endpoint\n+    def view():\n+        return \"\"\n \n-    except AssertionError:\n-        pass\n-    else:\n-        raise AssertionError(\"expected AssertionError not raised\")\n+    view.__name__ = \"a.b\"\n \n-    try:\n-\n-        @bp.route(\"/bar/123\", endpoint=\"bar.123\")\n-        def foo_bar_foo():\n-            return flask.request.endpoint\n-\n-    except AssertionError:\n-        pass\n-    else:\n-        raise AssertionError(\"expected AssertionError not raised\")\n-\n-    def foo_foo_foo():\n-        pass\n-\n-    pytest.raises(\n-        AssertionError,\n-        lambda: bp.add_url_rule(\"/bar/123\", endpoint=\"bar.123\", view_func=foo_foo_foo),\n-    )\n-\n-    pytest.raises(\n-        AssertionError, bp.route(\"/bar/123\", endpoint=\"bar.123\"), lambda: None\n-    )\n-\n-    foo_foo_foo.__name__ = \"bar.123\"\n-\n-    pytest.raises(\n-        AssertionError, lambda: bp.add_url_rule(\"/bar/123\", view_func=foo_foo_foo)\n-    )\n-\n-    bp.add_url_rule(\n-        \"/bar/456\", endpoint=\"foofoofoo\", view_func=functools.partial(foo_foo_foo)\n-    )\n-\n-    app.register_blueprint(bp, url_prefix=\"/py\")\n-\n-    assert client.get(\"/py/foo\").data == b\"bp.foo\"\n-    # The rule's didn't actually made it through\n-    rv = client.get(\"/py/bar\")\n-    assert rv.status_code == 404\n-    rv = client.get(\"/py/bar/123\")\n-    assert rv.status_code == 404\n+    with pytest.raises(ValueError):\n+        bp.add_url_rule(\"/\", view_func=view)\n \n \n def test_endpoint_decorator(app, client):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e93704fbfd5f40e48f8fe9034b6b0fe420d28fb3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 42 | Lines Deleted: 5 | Files Changed: 2 | Hunks: 3 | Methods Changed: 6 | Complexity Δ (Sum/Max): 7/5 | Churn Δ: 47 | Churn Cumulative: 2311 | Contributors (this commit): 16 | Commits (past 90d): 13 | Contributors (cumulative): 19 | DMM Complexity: 0.9354838709677419\n\nDIFF:\n@@ -344,13 +344,17 @@ class Blueprint(Scaffold):\n                 app.cli.add_command(self.cli)\n \n         for blueprint, bp_options in self._blueprints:\n-            url_prefix = options.get(\"url_prefix\", \"\")\n-            if \"url_prefix\" in bp_options:\n-                url_prefix = (\n-                    url_prefix.rstrip(\"/\") + \"/\" + bp_options[\"url_prefix\"].lstrip(\"/\")\n+            bp_options = bp_options.copy()\n+            bp_url_prefix = bp_options.get(\"url_prefix\")\n+\n+            if bp_url_prefix is None:\n+                bp_url_prefix = blueprint.url_prefix\n+\n+            if state.url_prefix is not None and bp_url_prefix is not None:\n+                bp_options[\"url_prefix\"] = (\n+                    state.url_prefix.rstrip(\"/\") + \"/\" + bp_url_prefix.lstrip(\"/\")\n                 )\n \n-            bp_options[\"url_prefix\"] = url_prefix\n             bp_options[\"name_prefix\"] = options.get(\"name_prefix\", \"\") + self.name + \".\"\n             blueprint.register(app, bp_options)\n \n\n@@ -835,3 +835,36 @@ def test_nested_blueprint(app, client):\n     assert client.get(\"/parent/no\").data == b\"Parent no\"\n     assert client.get(\"/parent/child/no\").data == b\"Parent no\"\n     assert client.get(\"/parent/child/grandchild/no\").data == b\"Grandchild no\"\n+\n+\n+def test_nested_blueprint_url_prefix(app, client):\n+    parent = flask.Blueprint(\"parent\", __name__, url_prefix=\"/parent\")\n+    child = flask.Blueprint(\"child\", __name__, url_prefix=\"/child\")\n+    grandchild = flask.Blueprint(\"grandchild\", __name__, url_prefix=\"/grandchild\")\n+    apple = flask.Blueprint(\"apple\", __name__, url_prefix=\"/apple\")\n+\n+    @parent.route(\"/\")\n+    def parent_index():\n+        return \"Parent\"\n+\n+    @child.route(\"/\")\n+    def child_index():\n+        return \"Child\"\n+\n+    @grandchild.route(\"/\")\n+    def grandchild_index():\n+        return \"Grandchild\"\n+\n+    @apple.route(\"/\")\n+    def apple_index():\n+        return \"Apple\"\n+\n+    child.register_blueprint(grandchild)\n+    child.register_blueprint(apple, url_prefix=\"/orange\")  # test overwrite\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent)\n+\n+    assert client.get(\"/parent/\").data == b\"Parent\"\n+    assert client.get(\"/parent/child/\").data == b\"Child\"\n+    assert client.get(\"/parent/child/grandchild/\").data == b\"Grandchild\"\n+    assert client.get(\"/parent/child/orange/\").data == b\"Apple\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6d8b4ce9d037937ef8694067ab5754666240d097", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 5 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 1109 | Contributors (this commit): 31 | Commits (past 90d): 13 | Contributors (cumulative): 32 | DMM Complexity: None\n\nDIFF:\n@@ -53,10 +53,10 @@ setup(\n     include_package_data=True,\n     python_requires=\">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\",\n     install_requires=[\n-        \"Werkzeug>=0.15\",\n-        \"Jinja2>=2.10.1\",\n-        \"itsdangerous>=0.24\",\n-        \"click>=5.1\",\n+        \"Werkzeug >= 0.15, < 2.0\",\n+        \"Jinja2 >= 2.10.1, < 3.0\",\n+        \"itsdangerous >= 0.24, < 2.0\",\n+        \"click >= 5.1, < 8.0\",\n     ],\n     extras_require={\n         \"dotenv\": [\"python-dotenv\"],\n\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.2\"\n+__version__ = \"1.1.3.dev0\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#661bbcdb90ee82baded66ae0733cb87ea5f464ef", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 226 | Contributors (this commit): 1 | Commits (past 90d): 8 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.3.dev0\"\n+__version__ = \"1.1.3\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#3ace642ef32eae3fa096bef85a87545eba3f53fc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 3 | Files Changed: 3 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 74/78 | Churn Δ: 5 | Churn Cumulative: 6170 | Contributors (this commit): 48 | Commits (past 90d): 28 | Contributors (cumulative): 57 | DMM Complexity: None\n\nDIFF:\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.3\"\n+__version__ = \"1.1.4.dev0\"\n\n@@ -1001,7 +1001,7 @@ class _PackageBoundObject(object):\n     @static_folder.setter\n     def static_folder(self, value):\n         if value is not None:\n-            value = os.fspath(value).rstrip(r\"\\/\")\n+            value = fspath(value).rstrip(r\"\\/\")\n         self._static_folder = value\n \n     @property\n\n@@ -1425,7 +1425,6 @@ def test_static_url_empty_path_default(app):\n     rv.close()\n \n \n-@pytest.mark.skipif(sys.version_info < (3, 6), reason=\"requires Python >= 3.6\")\n def test_static_folder_with_pathlib_path(app):\n     from pathlib import Path\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#64a5d7a018aadcb5d7d868a782a04d1b599ef89b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 230 | Contributors (this commit): 2 | Commits (past 90d): 10 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.4.dev0\"\n+__version__ = \"1.1.4\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a7b02b3a07ae292ce376df2459eae3ffb4c06d52", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 25 | Lines Deleted: 16 | Files Changed: 3 | Hunks: 11 | Methods Changed: 11 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 41 | Churn Cumulative: 333 | Contributors (this commit): 6 | Commits (past 90d): 5 | Contributors (cumulative): 10 | DMM Complexity: 1.0\n\nDIFF:\n@@ -395,9 +395,6 @@ class RequestContext:\n \n         _request_ctx_stack.push(self)\n \n-        if self.url_adapter is not None:\n-            self.match_request()\n-\n         # Open the session at the moment that the request context is available.\n         # This allows a custom open_session method to use the request context.\n         # Only open a new session if this is the first time the request was\n@@ -409,6 +406,11 @@ class RequestContext:\n             if self.session is None:\n                 self.session = session_interface.make_null_session(self.app)\n \n+        # Match the request URL after loading the session, so that the\n+        # session is available in custom URL converters.\n+        if self.url_adapter is not None:\n+            self.match_request()\n+\n     def pop(self, exc: t.Optional[BaseException] = _sentinel) -> None:  # type: ignore\n         \"\"\"Pops the request context and unbinds it by doing that.  This will\n         also trigger the execution of functions registered by the\n\n@@ -1,6 +1,7 @@\n from werkzeug.routing import BaseConverter\n \n-from flask import has_request_context\n+from flask import request\n+from flask import session\n from flask import url_for\n \n \n@@ -28,12 +29,13 @@ def test_custom_converters(app, client):\n def test_context_available(app, client):\n     class ContextConverter(BaseConverter):\n         def to_python(self, value):\n-            assert has_request_context()\n+            assert request is not None\n+            assert session is not None\n             return value\n \n     app.url_map.converters[\"ctx\"] = ContextConverter\n \n-    @app.route(\"/<ctx:name>\")\n+    @app.get(\"/<ctx:name>\")\n     def index(name):\n         return name\n \n\n@@ -2,21 +2,26 @@ import flask\n from flask.sessions import SessionInterface\n \n \n-def test_open_session_endpoint_not_none():\n-    # Define a session interface that breaks if request.endpoint is None\n+def test_open_session_with_endpoint():\n+    \"\"\"If request.endpoint (or other URL matching behavior) is needed\n+    while loading the session, RequestContext.match_request() can be\n+    called manually.\n+    \"\"\"\n+\n     class MySessionInterface(SessionInterface):\n-        def save_session(self):\n+        def save_session(self, app, session, response):\n             pass\n \n-        def open_session(self, _, request):\n+        def open_session(self, app, request):\n+            flask._request_ctx_stack.top.match_request()\n             assert request.endpoint is not None\n \n-    def index():\n-        return \"Hello World!\"\n-\n-    # Confirm a 200 response, indicating that request.endpoint was NOT None\n     app = flask.Flask(__name__)\n-    app.route(\"/\")(index)\n     app.session_interface = MySessionInterface()\n-    response = app.test_client().open(\"/\")\n+\n+    @app.get(\"/\")\n+    def index():\n+        return \"Hello, World!\"\n+\n+    response = app.test_client().get(\"/\")\n     assert response.status_code == 200\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#6fbdeb80c76b8a698ab366d21ccd786731b17361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 16 | Churn Cumulative: 2327 | Contributors (this commit): 16 | Commits (past 90d): 15 | Contributors (cumulative): 19 | DMM Complexity: 0.8333333333333334\n\nDIFF:\n@@ -354,6 +354,8 @@ class Blueprint(Scaffold):\n                 bp_options[\"url_prefix\"] = (\n                     state.url_prefix.rstrip(\"/\") + \"/\" + bp_url_prefix.lstrip(\"/\")\n                 )\n+            else:\n+                bp_options[\"url_prefix\"] = state.url_prefix\n \n             bp_options[\"name_prefix\"] = options.get(\"name_prefix\", \"\") + self.name + \".\"\n             blueprint.register(app, bp_options)\n\n@@ -868,3 +868,17 @@ def test_nested_blueprint_url_prefix(app, client):\n     assert client.get(\"/parent/child/\").data == b\"Child\"\n     assert client.get(\"/parent/child/grandchild/\").data == b\"Grandchild\"\n     assert client.get(\"/parent/child/orange/\").data == b\"Apple\"\n+\n+\n+def test_nested_blueprint_url_prefix_only_parent_prefix(app, client):\n+    parent = flask.Blueprint(\"parent\", __name__)\n+    child = flask.Blueprint(\"child\", __name__)\n+\n+    @child.route(\"/child-endpoint\")\n+    def child_index():\n+        return \"Child\"\n+\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent, url_prefix=\"/parent\")\n+\n+    assert client.get(\"/parent/child-endpoint\").data == b\"Child\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1b5f21e015e2c4f36fcdb34a09ce93787d59e181", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 27 | Files Changed: 1 | Hunks: 13 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 43 | Churn Cumulative: 1637 | Contributors (this commit): 29 | Commits (past 90d): 3 | Contributors (cumulative): 29 | DMM Complexity: 0.0\n\nDIFF:\n@@ -5,6 +5,7 @@ import ssl\n import sys\n import types\n from functools import partial\n+from pathlib import Path\n from unittest.mock import patch\n \n import click\n@@ -29,8 +30,8 @@ from flask.cli import run_command\n from flask.cli import ScriptInfo\n from flask.cli import with_appcontext\n \n-cwd = os.getcwd()\n-test_path = os.path.abspath(os.path.join(os.path.dirname(__file__), \"test_apps\"))\n+cwd = Path.cwd()\n+test_path = (Path(__file__) / \"..\" / \"test_apps\").resolve()\n \n \n @pytest.fixture\n@@ -152,29 +153,25 @@ def test_find_best_app(test_apps):\n     (\n         (\"test\", cwd, \"test\"),\n         (\"test.py\", cwd, \"test\"),\n-        (\"a/test\", os.path.join(cwd, \"a\"), \"test\"),\n+        (\"a/test\", cwd / \"a\", \"test\"),\n         (\"test/__init__.py\", cwd, \"test\"),\n         (\"test/__init__\", cwd, \"test\"),\n         # nested package\n         (\n-            os.path.join(test_path, \"cliapp\", \"inner1\", \"__init__\"),\n+            test_path / \"cliapp\" / \"inner1\" / \"__init__\",\n             test_path,\n             \"cliapp.inner1\",\n         ),\n         (\n-            os.path.join(test_path, \"cliapp\", \"inner1\", \"inner2\"),\n+            test_path / \"cliapp\" / \"inner1\" / \"inner2\",\n             test_path,\n             \"cliapp.inner1.inner2\",\n         ),\n         # dotted name\n         (\"test.a.b\", cwd, \"test.a.b\"),\n-        (os.path.join(test_path, \"cliapp.app\"), test_path, \"cliapp.app\"),\n+        (test_path / \"cliapp.app\", test_path, \"cliapp.app\"),\n         # not a Python file, will be caught during import\n-        (\n-            os.path.join(test_path, \"cliapp\", \"message.txt\"),\n-            test_path,\n-            \"cliapp.message.txt\",\n-        ),\n+        (test_path / \"cliapp\" / \"message.txt\", test_path, \"cliapp.message.txt\"),\n     ),\n )\n def test_prepare_import(request, value, path, result):\n@@ -193,7 +190,7 @@ def test_prepare_import(request, value, path, result):\n     request.addfinalizer(reset_path)\n \n     assert prepare_import(value) == result\n-    assert sys.path[0] == path\n+    assert sys.path[0] == str(path)\n \n \n @pytest.mark.parametrize(\n@@ -278,9 +275,8 @@ def test_scriptinfo(test_apps, monkeypatch):\n     assert obj.load_app() is app\n \n     # import app with module's absolute path\n-    cli_app_path = os.path.abspath(\n-        os.path.join(os.path.dirname(__file__), \"test_apps\", \"cliapp\", \"app.py\")\n-    )\n+    cli_app_path = str(test_path / \"cliapp\" / \"app.py\")\n+\n     obj = ScriptInfo(app_import_path=cli_app_path)\n     app = obj.load_app()\n     assert app.name == \"testapp\"\n@@ -302,19 +298,13 @@ def test_scriptinfo(test_apps, monkeypatch):\n     pytest.raises(NoAppException, obj.load_app)\n \n     # import app from wsgi.py in current directory\n-    monkeypatch.chdir(\n-        os.path.abspath(\n-            os.path.join(os.path.dirname(__file__), \"test_apps\", \"helloworld\")\n-        )\n-    )\n+    monkeypatch.chdir(test_path / \"helloworld\")\n     obj = ScriptInfo()\n     app = obj.load_app()\n     assert app.name == \"hello\"\n \n     # import app from app.py in current directory\n-    monkeypatch.chdir(\n-        os.path.abspath(os.path.join(os.path.dirname(__file__), \"test_apps\", \"cliapp\"))\n-    )\n+    monkeypatch.chdir(test_path / \"cliapp\")\n     obj = ScriptInfo()\n     app = obj.load_app()\n     assert app.name == \"testapp\"\n@@ -513,7 +503,7 @@ def test_load_dotenv(monkeypatch):\n     monkeypatch.setenv(\"EGGS\", \"3\")\n     monkeypatch.chdir(test_path)\n     assert load_dotenv()\n-    assert os.getcwd() == test_path\n+    assert Path.cwd() == test_path\n     # .flaskenv doesn't overwrite .env\n     assert os.environ[\"FOO\"] == \"env\"\n     # set only in .flaskenv\n@@ -533,9 +523,8 @@ def test_dotenv_path(monkeypatch):\n     for item in (\"FOO\", \"BAR\", \"EGGS\"):\n         monkeypatch._setitem.append((os.environ, item, notset))\n \n-    cwd = os.getcwd()\n-    load_dotenv(os.path.join(test_path, \".flaskenv\"))\n-    assert os.getcwd() == cwd\n+    load_dotenv(test_path / \".flaskenv\")\n+    assert Path.cwd() == cwd\n     assert \"FOO\" in os.environ\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#afc907fd0d4a4e96398829d75ded9711a3046070", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 48 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -2,8 +2,8 @@ import typing as t\n \n \n if t.TYPE_CHECKING:\n+    from _typeshed.wsgi import WSGIApplication  # noqa: F401\n     from werkzeug.datastructures import Headers  # noqa: F401\n-    from wsgiref.types import WSGIApplication  # noqa: F401\n     from .wrappers import Response  # noqa: F401\n \n # The possible types that are directly convertible or are a Response object.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#10425fb9b13d977128f18c1051fb93edc9aee2de", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 25 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 25 | Churn Cumulative: 261 | Contributors (this commit): 4 | Commits (past 90d): 2 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -202,6 +202,31 @@ class Config(dict):\n \n         return self.from_mapping(obj)\n \n+    def from_json(self, filename: str, silent: bool = False) -> bool:\n+        \"\"\"Update the values in the config from a JSON file. The loaded\n+        data is passed to the :meth:`from_mapping` method.\n+\n+        :param filename: The path to the JSON file. This can be an\n+            absolute path or relative to the config root path.\n+        :param silent: Ignore the file if it doesn't exist.\n+\n+        .. deprecated:: 2.0.0\n+            Will be removed in Flask 2.1. Use :meth:`from_file` instead.\n+            This was removed early in 2.0.0, was added back in 2.0.1.\n+\n+        .. versionadded:: 0.11\n+        \"\"\"\n+        import warnings\n+        from . import json\n+\n+        warnings.warn(\n+            \"'from_json' is deprecated and will be removed in Flask\"\n+            \" 2.1. Use 'from_file(path, json.load)' instead.\",\n+            DeprecationWarning,\n+            stacklevel=2,\n+        )\n+        return self.from_file(filename, json.load, silent=silent)\n+\n     def from_mapping(\n         self, mapping: t.Optional[t.Mapping[str, t.Any]] = None, **kwargs: t.Any\n     ) -> bool:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#cfda27089932a102953da73fdab17cf9814334e4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 1968 | Contributors (this commit): 16 | Commits (past 90d): 4 | Contributors (cumulative): 16 | DMM Complexity: None\n\nDIFF:\n@@ -49,10 +49,10 @@ html_context = {\n     ]\n }\n html_sidebars = {\n-    \"index\": [\"project.html\", \"localtoc.html\", \"searchbox.html\"],\n-    \"**\": [\"localtoc.html\", \"relations.html\", \"searchbox.html\"],\n+    \"index\": [\"project.html\", \"localtoc.html\", \"searchbox.html\", \"ethicalads.html\"],\n+    \"**\": [\"localtoc.html\", \"relations.html\", \"searchbox.html\", \"ethicalads.html\"],\n }\n-singlehtml_sidebars = {\"index\": [\"project.html\", \"localtoc.html\"]}\n+singlehtml_sidebars = {\"index\": [\"project.html\", \"localtoc.html\", \"ethicalads.html\"]}\n html_static_path = [\"_static\"]\n html_favicon = \"_static/flask-icon.png\"\n html_logo = \"_static/flask-icon.png\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#bf982718cf30615f2dd17fa71fe17d565ebb1d3e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 13 | Churn Cumulative: 2103 | Contributors (this commit): 8 | Commits (past 90d): 23 | Contributors (cumulative): 13 | DMM Complexity: 0.0\n\nDIFF:\n@@ -365,6 +365,7 @@ class Blueprint(Scaffold):\n         rule: str,\n         endpoint: t.Optional[str] = None,\n         view_func: t.Optional[t.Callable] = None,\n+        provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n     ) -> None:\n         \"\"\"Like :meth:`Flask.add_url_rule` but for a blueprint.  The endpoint for\n@@ -376,7 +377,15 @@ class Blueprint(Scaffold):\n         if view_func and hasattr(view_func, \"__name__\") and \".\" in view_func.__name__:\n             raise ValueError(\"'view_func' name may not contain a dot '.' character.\")\n \n-        self.record(lambda s: s.add_url_rule(rule, endpoint, view_func, **options))\n+        self.record(\n+            lambda s: s.add_url_rule(\n+                rule,\n+                endpoint,\n+                view_func,\n+                provide_automatic_options=provide_automatic_options,\n+                **options,\n+            )\n+        )\n \n     def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n         \"\"\"Register a custom template filter, available application wide.  Like\n\n@@ -443,7 +443,7 @@ class Scaffold:\n         view_func: t.Optional[t.Callable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n-    ) -> t.Callable:\n+    ) -> None:\n         \"\"\"Register a rule for routing incoming requests and building\n         URLs. The :meth:`route` decorator is a shortcut to call this\n         with the ``view_func`` argument. These are equivalent:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8796b2a784bc45fcc6865cd80b2cba0601448727", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 1454 | Contributors (this commit): 6 | Commits (past 90d): 12 | Contributors (cumulative): 6 | DMM Complexity: None\n\nDIFF:\n@@ -33,8 +33,10 @@ if t.TYPE_CHECKING:\n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n \n+F = t.TypeVar(\"F\", bound=t.Callable[..., t.Any])\n \n-def setupmethod(f: t.Callable) -> t.Callable:\n+\n+def setupmethod(f: F) -> F:\n     \"\"\"Wraps a method so that it performs a check in debug mode if the\n     first request was already handled.\n     \"\"\"\n@@ -53,7 +55,7 @@ def setupmethod(f: t.Callable) -> t.Callable:\n             )\n         return f(self, *args, **kwargs)\n \n-    return update_wrapper(wrapper_func, f)\n+    return t.cast(F, update_wrapper(wrapper_func, f))\n \n \n class Scaffold:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#10a36cb60e10594aa5dbf3c5aba6abbd5f6fcd70", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 19 | Lines Deleted: 7 | Files Changed: 3 | Hunks: 7 | Methods Changed: 7 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 26 | Churn Cumulative: 3605 | Contributors (this commit): 15 | Commits (past 90d): 42 | Contributors (cumulative): 25 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1089,7 +1089,9 @@ class Flask(Scaffold):\n             self.view_functions[endpoint] = view_func\n \n     @setupmethod\n-    def template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n+    def template_filter(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateFilterCallable], TemplateFilterCallable]:\n         \"\"\"A decorator that is used to register custom template filter.\n         You can specify a name for the filter, otherwise the function\n         name will be used. Example::\n@@ -1121,7 +1123,9 @@ class Flask(Scaffold):\n         self.jinja_env.filters[name or f.__name__] = f\n \n     @setupmethod\n-    def template_test(self, name: t.Optional[str] = None) -> t.Callable:\n+    def template_test(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateTestCallable], TemplateTestCallable]:\n         \"\"\"A decorator that is used to register custom template test.\n         You can specify a name for the test, otherwise the function\n         name will be used. Example::\n@@ -1162,7 +1166,9 @@ class Flask(Scaffold):\n         self.jinja_env.tests[name or f.__name__] = f\n \n     @setupmethod\n-    def template_global(self, name: t.Optional[str] = None) -> t.Callable:\n+    def template_global(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateGlobalCallable], TemplateGlobalCallable]:\n         \"\"\"A decorator that is used to register a custom template global function.\n         You can specify a name for the global function, otherwise the function\n         name will be used. Example::\n\n@@ -387,7 +387,9 @@ class Blueprint(Scaffold):\n             )\n         )\n \n-    def app_template_filter(self, name: t.Optional[str] = None) -> t.Callable:\n+    def app_template_filter(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateFilterCallable], TemplateFilterCallable]:\n         \"\"\"Register a custom template filter, available application wide.  Like\n         :meth:`Flask.template_filter` but for a blueprint.\n \n@@ -417,7 +419,9 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n-    def app_template_test(self, name: t.Optional[str] = None) -> t.Callable:\n+    def app_template_test(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateTestCallable], TemplateTestCallable]:\n         \"\"\"Register a custom template test, available application wide.  Like\n         :meth:`Flask.template_test` but for a blueprint.\n \n@@ -451,7 +455,9 @@ class Blueprint(Scaffold):\n \n         self.record_once(register_template)\n \n-    def app_template_global(self, name: t.Optional[str] = None) -> t.Callable:\n+    def app_template_global(\n+        self, name: t.Optional[str] = None\n+    ) -> t.Callable[[TemplateGlobalCallable], TemplateGlobalCallable]:\n         \"\"\"Register a custom template global, available application wide.  Like\n         :meth:`Flask.template_global` but for a blueprint.\n \n\n@@ -644,7 +644,7 @@ class Scaffold:\n     @setupmethod\n     def errorhandler(\n         self, code_or_exception: t.Union[t.Type[Exception], int]\n-    ) -> t.Callable:\n+    ) -> t.Callable[[ErrorHandlerCallable], ErrorHandlerCallable]:\n         \"\"\"Register a function to handle errors by code or exception class.\n \n         A decorator that is used to register a function given an\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#99afbb277d25d3b052e00b9a8da216054d51d62a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 28 | Lines Deleted: 42 | Files Changed: 2 | Hunks: 5 | Methods Changed: 10 | Complexity Δ (Sum/Max): -3/2 | Churn Δ: 70 | Churn Cumulative: 2420 | Contributors (this commit): 17 | Commits (past 90d): 19 | Contributors (cumulative): 20 | DMM Complexity: 0.0\n\nDIFF:\n@@ -354,7 +354,9 @@ class Blueprint(Scaffold):\n                 bp_options[\"url_prefix\"] = (\n                     state.url_prefix.rstrip(\"/\") + \"/\" + bp_url_prefix.lstrip(\"/\")\n                 )\n-            else:\n+            elif bp_url_prefix is not None:\n+                bp_options[\"url_prefix\"] = bp_url_prefix\n+            elif state.url_prefix is not None:\n                 bp_options[\"url_prefix\"] = state.url_prefix\n \n             bp_options[\"name_prefix\"] = options.get(\"name_prefix\", \"\") + self.name + \".\"\n\n@@ -837,48 +837,32 @@ def test_nested_blueprint(app, client):\n     assert client.get(\"/parent/child/grandchild/no\").data == b\"Grandchild no\"\n \n \n-def test_nested_blueprint_url_prefix(app, client):\n-    parent = flask.Blueprint(\"parent\", __name__, url_prefix=\"/parent\")\n-    child = flask.Blueprint(\"child\", __name__, url_prefix=\"/child\")\n-    grandchild = flask.Blueprint(\"grandchild\", __name__, url_prefix=\"/grandchild\")\n-    apple = flask.Blueprint(\"apple\", __name__, url_prefix=\"/apple\")\n-\n-    @parent.route(\"/\")\n-    def parent_index():\n-        return \"Parent\"\n+@pytest.mark.parametrize(\n+    \"parent_init, child_init, parent_registration, child_registration\",\n+    [\n+        (\"/parent\", \"/child\", None, None),\n+        (\"/parent\", None, None, \"/child\"),\n+        (None, None, \"/parent\", \"/child\"),\n+        (\"/other\", \"/something\", \"/parent\", \"/child\"),\n+    ],\n+)\n+def test_nesting_url_prefixes(\n+    parent_init,\n+    child_init,\n+    parent_registration,\n+    child_registration,\n+    app,\n+    client,\n+) -> None:\n+    parent = flask.Blueprint(\"parent\", __name__, url_prefix=parent_init)\n+    child = flask.Blueprint(\"child\", __name__, url_prefix=child_init)\n \n     @child.route(\"/\")\n-    def child_index():\n-        return \"Child\"\n+    def index():\n+        return \"index\"\n \n-    @grandchild.route(\"/\")\n-    def grandchild_index():\n-        return \"Grandchild\"\n+    parent.register_blueprint(child, url_prefix=child_registration)\n+    app.register_blueprint(parent, url_prefix=parent_registration)\n \n-    @apple.route(\"/\")\n-    def apple_index():\n-        return \"Apple\"\n-\n-    child.register_blueprint(grandchild)\n-    child.register_blueprint(apple, url_prefix=\"/orange\")  # test overwrite\n-    parent.register_blueprint(child)\n-    app.register_blueprint(parent)\n-\n-    assert client.get(\"/parent/\").data == b\"Parent\"\n-    assert client.get(\"/parent/child/\").data == b\"Child\"\n-    assert client.get(\"/parent/child/grandchild/\").data == b\"Grandchild\"\n-    assert client.get(\"/parent/child/orange/\").data == b\"Apple\"\n-\n-\n-def test_nested_blueprint_url_prefix_only_parent_prefix(app, client):\n-    parent = flask.Blueprint(\"parent\", __name__)\n-    child = flask.Blueprint(\"child\", __name__)\n-\n-    @child.route(\"/child-endpoint\")\n-    def child_index():\n-        return \"Child\"\n-\n-    parent.register_blueprint(child)\n-    app.register_blueprint(parent, url_prefix=\"/parent\")\n-\n-    assert client.get(\"/parent/child-endpoint\").data == b\"Child\"\n+    response = client.get(\"/parent/child/\")\n+    assert response.status_code == 200\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#141fde1d8ec8663b4be98777750d2f58c6fe44ad", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 50 | Lines Deleted: 33 | Files Changed: 3 | Hunks: 20 | Methods Changed: 11 | Complexity Δ (Sum/Max): 6/3 | Churn Δ: 83 | Churn Cumulative: 2320 | Contributors (this commit): 15 | Commits (past 90d): 35 | Contributors (cumulative): 21 | DMM Complexity: 1.0\n\nDIFF:\n@@ -747,7 +747,7 @@ class Flask(Scaffold):\n         ] = self.template_context_processors[None]\n         reqctx = _request_ctx_stack.top\n         if reqctx is not None:\n-            for bp in self._request_blueprints():\n+            for bp in request.blueprints:\n                 if bp in self.template_context_processors:\n                     funcs = chain(funcs, self.template_context_processors[bp])\n         orig_ctx = context.copy()\n@@ -1267,7 +1267,7 @@ class Flask(Scaffold):\n         exc_class, code = self._get_exc_class_and_code(type(e))\n \n         for c in [code, None]:\n-            for name in chain(self._request_blueprints(), [None]):\n+            for name in chain(request.blueprints, [None]):\n                 handler_map = self.error_handler_spec[name][c]\n \n                 if not handler_map:\n@@ -1788,9 +1788,16 @@ class Flask(Scaffold):\n         .. versionadded:: 0.7\n         \"\"\"\n         funcs: t.Iterable[URLDefaultCallable] = self.url_default_functions[None]\n+\n         if \".\" in endpoint:\n-            bp = endpoint.rsplit(\".\", 1)[0]\n+            bps: t.List[str] = [endpoint.rsplit(\".\", 1)[0]]\n+\n+            while \".\" in bps[-1]:\n+                bps.append(bps[-1].rpartition(\".\")[0])\n+\n+            for bp in bps:\n                 funcs = chain(funcs, self.url_default_functions[bp])\n+\n         for func in funcs:\n             func(endpoint, values)\n \n@@ -1831,14 +1838,14 @@ class Flask(Scaffold):\n         funcs: t.Iterable[URLValuePreprocessorCallable] = self.url_value_preprocessors[\n             None\n         ]\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.url_value_preprocessors:\n                 funcs = chain(funcs, self.url_value_preprocessors[bp])\n         for func in funcs:\n             func(request.endpoint, request.view_args)\n \n         funcs: t.Iterable[BeforeRequestCallable] = self.before_request_funcs[None]\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.before_request_funcs:\n                 funcs = chain(funcs, self.before_request_funcs[bp])\n         for func in funcs:\n@@ -1863,7 +1870,7 @@ class Flask(Scaffold):\n         \"\"\"\n         ctx = _request_ctx_stack.top\n         funcs: t.Iterable[AfterRequestCallable] = ctx._after_request_functions\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.after_request_funcs:\n                 funcs = chain(funcs, reversed(self.after_request_funcs[bp]))\n         if None in self.after_request_funcs:\n@@ -1902,7 +1909,7 @@ class Flask(Scaffold):\n         funcs: t.Iterable[TeardownCallable] = reversed(\n             self.teardown_request_funcs[None]\n         )\n-        for bp in self._request_blueprints():\n+        for bp in request.blueprints:\n             if bp in self.teardown_request_funcs:\n                 funcs = chain(funcs, reversed(self.teardown_request_funcs[bp]))\n         for func in funcs:\n@@ -2074,9 +2081,3 @@ class Flask(Scaffold):\n         wrapped to apply middleware.\n         \"\"\"\n         return self.wsgi_app(environ, start_response)\n-\n-    def _request_blueprints(self) -> t.Iterable[str]:\n-        if _request_ctx_stack.top.request.blueprint is None:\n-            return []\n-        else:\n-            return reversed(_request_ctx_stack.top.request.blueprint.split(\".\"))\n\n@@ -98,7 +98,7 @@ class BlueprintSetupState:\n             defaults = dict(defaults, **options.pop(\"defaults\"))\n         self.app.add_url_rule(\n             rule,\n-            f\"{self.name_prefix}{self.blueprint.name}.{endpoint}\",\n+            f\"{self.name_prefix}.{self.blueprint.name}.{endpoint}\".lstrip(\".\"),\n             view_func,\n             defaults=defaults,\n             **options,\n@@ -266,23 +266,24 @@ class Blueprint(Scaffold):\n             with.\n         :param options: Keyword arguments forwarded from\n             :meth:`~Flask.register_blueprint`.\n-        :param first_registration: Whether this is the first time this\n-            blueprint has been registered on the application.\n         \"\"\"\n-        first_registration = False\n-\n-        if self.name in app.blueprints:\n-            assert app.blueprints[self.name] is self, (\n-                \"A name collision occurred between blueprints\"\n-                f\" {self!r} and {app.blueprints[self.name]!r}.\"\n-                f\" Both share the same name {self.name!r}.\"\n-                f\" Blueprints that are created on the fly need unique\"\n-                f\" names.\"\n-            )\n-        else:\n-            app.blueprints[self.name] = self\n         first_registration = True\n \n+        for blueprint in app.blueprints.values():\n+            if blueprint is self:\n+                first_registration = False\n+\n+        name_prefix = options.get(\"name_prefix\", \"\")\n+        name = f\"{name_prefix}.{self.name}\".lstrip(\".\")\n+\n+        if name in app.blueprints and app.blueprints[name] is not self:\n+            raise ValueError(\n+                f\"Blueprint name '{self.name}' \"\n+                f\"is already registered by {app.blueprints[self.name]}. \"\n+                \"Blueprints must have unique names.\"\n+            )\n+\n+        app.blueprints[name] = self\n         self._got_registered_once = True\n         state = self.make_setup_state(app, options, first_registration)\n \n@@ -298,12 +299,11 @@ class Blueprint(Scaffold):\n \n             def extend(bp_dict, parent_dict):\n                 for key, values in bp_dict.items():\n-                    key = self.name if key is None else f\"{self.name}.{key}\"\n-\n+                    key = name if key is None else f\"{name}.{key}\"\n                     parent_dict[key].extend(values)\n \n             for key, value in self.error_handler_spec.items():\n-                key = self.name if key is None else f\"{self.name}.{key}\"\n+                key = name if key is None else f\"{name}.{key}\"\n                 value = defaultdict(\n                     dict,\n                     {\n@@ -337,7 +337,7 @@ class Blueprint(Scaffold):\n             if cli_resolved_group is None:\n                 app.cli.commands.update(self.cli.commands)\n             elif cli_resolved_group is _sentinel:\n-                self.cli.name = self.name\n+                self.cli.name = name\n                 app.cli.add_command(self.cli)\n             else:\n                 self.cli.name = cli_resolved_group\n@@ -359,7 +359,7 @@ class Blueprint(Scaffold):\n             elif state.url_prefix is not None:\n                 bp_options[\"url_prefix\"] = state.url_prefix\n \n-            bp_options[\"name_prefix\"] = options.get(\"name_prefix\", \"\") + self.name + \".\"\n+            bp_options[\"name_prefix\"] = name\n             blueprint.register(app, bp_options)\n \n     def add_url_rule(\n\n@@ -1,6 +1,7 @@\n import typing as t\n \n from werkzeug.exceptions import BadRequest\n+from werkzeug.utils import cached_property\n from werkzeug.wrappers import Request as RequestBase\n from werkzeug.wrappers import Response as ResponseBase\n \n@@ -77,6 +78,21 @@ class Request(RequestBase):\n         else:\n             return None\n \n+    @cached_property\n+    def blueprints(self) -> t.List[str]:\n+        \"\"\"The names of the current blueprint upwards through parent\n+        blueprints.\n+        \"\"\"\n+        if self.blueprint is None:\n+            return []\n+\n+        bps: t.List[str] = [self.blueprint]\n+\n+        while \".\" in bps[-1]:\n+            bps.append(bps[-1].rpartition(\".\")[0])\n+\n+        return bps\n+\n     def _load_form_data(self) -> None:\n         RequestBase._load_form_data(self)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
