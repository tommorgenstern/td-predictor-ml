{"custom_id": "fastapi#672c55ac626b20cc6219696023cdcc5871e5141d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 342 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.70.1\"\n+__version__ = \"0.71.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#7fe79441c1cb7cf3baecc271a3e9680006c8f2c6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 9 | Churn Cumulative: 14 | Contributors (this commit): 1 | Commits (past 90d): 3 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,4 +1,7 @@\n-def process_items(prices: dict[str, float]):\n+from typing import Dict\n+\n+\n+def process_items(prices: Dict[str, float]):\n     for item_name, item_price in prices.items():\n         print(item_name)\n         print(item_price)\n\n@@ -0,0 +1,4 @@\n+def process_items(prices: dict[str, float]):\n+    for item_name, item_price in prices.items():\n+        print(item_name)\n+        print(item_price)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#a85aa125d24acb225b7b722bb4f3e331a21ec267", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 171 | Lines Deleted: 5 | Files Changed: 8 | Hunks: 15 | Methods Changed: 14 | Complexity Δ (Sum/Max): 11/2 | Churn Δ: 176 | Churn Cumulative: 3277 | Contributors (this commit): 26 | Commits (past 90d): 8 | Contributors (cumulative): 39 | DMM Complexity: 0.9821428571428571\n\nDIFF:\n@@ -0,0 +1,8 @@\n+from fastapi import FastAPI\n+\n+app = FastAPI(swagger_ui_parameters={\"syntaxHighlight\": False})\n+\n+\n+@app.get(\"/users/{username}\")\n+async def read_user(username: str):\n+    return {\"message\": f\"Hello {username}\"}\n\n@@ -0,0 +1,8 @@\n+from fastapi import FastAPI\n+\n+app = FastAPI(swagger_ui_parameters={\"syntaxHighlight.theme\": \"obsidian\"})\n+\n+\n+@app.get(\"/users/{username}\")\n+async def read_user(username: str):\n+    return {\"message\": f\"Hello {username}\"}\n\n@@ -0,0 +1,8 @@\n+from fastapi import FastAPI\n+\n+app = FastAPI(swagger_ui_parameters={\"deepLinking\": False})\n+\n+\n+@app.get(\"/users/{username}\")\n+async def read_user(username: str):\n+    return {\"message\": f\"Hello {username}\"}\n\n@@ -65,6 +65,7 @@ class FastAPI(Starlette):\n         callbacks: Optional[List[BaseRoute]] = None,\n         deprecated: Optional[bool] = None,\n         include_in_schema: bool = True,\n+        swagger_ui_parameters: Optional[Dict[str, Any]] = None,\n         **extra: Any,\n     ) -> None:\n         self._debug: bool = debug\n@@ -120,6 +121,7 @@ class FastAPI(Starlette):\n         self.redoc_url = redoc_url\n         self.swagger_ui_oauth2_redirect_url = swagger_ui_oauth2_redirect_url\n         self.swagger_ui_init_oauth = swagger_ui_init_oauth\n+        self.swagger_ui_parameters = swagger_ui_parameters\n         self.extra = extra\n         self.dependency_overrides: Dict[Callable[..., Any], Callable[..., Any]] = {}\n \n@@ -174,6 +176,7 @@ class FastAPI(Starlette):\n                     title=self.title + \" - Swagger UI\",\n                     oauth2_redirect_url=oauth2_redirect_url,\n                     init_oauth=self.swagger_ui_init_oauth,\n+                    swagger_ui_parameters=self.swagger_ui_parameters,\n                 )\n \n             self.add_route(self.docs_url, swagger_ui_html, include_in_schema=False)\n\n@@ -4,6 +4,14 @@ from typing import Any, Dict, Optional\n from fastapi.encoders import jsonable_encoder\n from starlette.responses import HTMLResponse\n \n+swagger_ui_default_parameters = {\n+    \"dom_id\": \"#swagger-ui\",\n+    \"layout\": \"BaseLayout\",\n+    \"deepLinking\": True,\n+    \"showExtensions\": True,\n+    \"showCommonExtensions\": True,\n+}\n+\n \n def get_swagger_ui_html(\n     *,\n@@ -14,7 +22,11 @@ def get_swagger_ui_html(\n     swagger_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n     oauth2_redirect_url: Optional[str] = None,\n     init_oauth: Optional[Dict[str, Any]] = None,\n+    swagger_ui_parameters: Optional[Dict[str, Any]] = None,\n ) -> HTMLResponse:\n+    current_swagger_ui_parameters = swagger_ui_default_parameters.copy()\n+    if swagger_ui_parameters:\n+        current_swagger_ui_parameters.update(swagger_ui_parameters)\n \n     html = f\"\"\"\n     <!DOCTYPE html>\n@@ -34,19 +46,17 @@ def get_swagger_ui_html(\n         url: '{openapi_url}',\n     \"\"\"\n \n+    for key, value in current_swagger_ui_parameters.items():\n+        html += f\"{json.dumps(key)}: {json.dumps(jsonable_encoder(value))},\\n\"\n+\n     if oauth2_redirect_url:\n         html += f\"oauth2RedirectUrl: window.location.origin + '{oauth2_redirect_url}',\"\n \n     html += \"\"\"\n-        dom_id: '#swagger-ui',\n     presets: [\n         SwaggerUIBundle.presets.apis,\n         SwaggerUIBundle.SwaggerUIStandalonePreset\n         ],\n-        layout: \"BaseLayout\",\n-        deepLinking: true,\n-        showExtensions: true,\n-        showCommonExtensions: true\n     })\"\"\"\n \n     if init_oauth:\n\n@@ -0,0 +1,41 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.extending_openapi.tutorial003 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_swagger_ui():\n+    response = client.get(\"/docs\")\n+    assert response.status_code == 200, response.text\n+    assert (\n+        '\"syntaxHighlight\": false' in response.text\n+    ), \"syntaxHighlight should be included and converted to JSON\"\n+    assert (\n+        '\"dom_id\": \"#swagger-ui\"' in response.text\n+    ), \"default configs should be preserved\"\n+    assert \"presets: [\" in response.text, \"default configs should be preserved\"\n+    assert (\n+        \"SwaggerUIBundle.presets.apis,\" in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        \"SwaggerUIBundle.SwaggerUIStandalonePreset\" in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"layout\": \"BaseLayout\",' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"deepLinking\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"showExtensions\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"showCommonExtensions\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+\n+\n+def test_get_users():\n+    response = client.get(\"/users/foo\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"Hello foo\"}\n\n@@ -0,0 +1,44 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.extending_openapi.tutorial004 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_swagger_ui():\n+    response = client.get(\"/docs\")\n+    assert response.status_code == 200, response.text\n+    assert (\n+        '\"syntaxHighlight\": false' not in response.text\n+    ), \"not used parameters should not be included\"\n+    assert (\n+        '\"syntaxHighlight.theme\": \"obsidian\"' in response.text\n+    ), \"parameters with middle dots should be included in a JSON compatible way\"\n+    assert (\n+        '\"dom_id\": \"#swagger-ui\"' in response.text\n+    ), \"default configs should be preserved\"\n+    assert \"presets: [\" in response.text, \"default configs should be preserved\"\n+    assert (\n+        \"SwaggerUIBundle.presets.apis,\" in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        \"SwaggerUIBundle.SwaggerUIStandalonePreset\" in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"layout\": \"BaseLayout\",' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"deepLinking\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"showExtensions\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"showCommonExtensions\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+\n+\n+def test_get_users():\n+    response = client.get(\"/users/foo\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"Hello foo\"}\n\n@@ -0,0 +1,44 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.extending_openapi.tutorial005 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_swagger_ui():\n+    response = client.get(\"/docs\")\n+    assert response.status_code == 200, response.text\n+    assert (\n+        '\"deepLinking\": false,' in response.text\n+    ), \"overridden configs should be preserved\"\n+    assert (\n+        '\"deepLinking\": true' not in response.text\n+    ), \"overridden configs should not include the old value\"\n+    assert (\n+        '\"syntaxHighlight\": false' not in response.text\n+    ), \"not used parameters should not be included\"\n+    assert (\n+        '\"dom_id\": \"#swagger-ui\"' in response.text\n+    ), \"default configs should be preserved\"\n+    assert \"presets: [\" in response.text, \"default configs should be preserved\"\n+    assert (\n+        \"SwaggerUIBundle.presets.apis,\" in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        \"SwaggerUIBundle.SwaggerUIStandalonePreset\" in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"layout\": \"BaseLayout\",' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"showExtensions\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+    assert (\n+        '\"showCommonExtensions\": true,' in response.text\n+    ), \"default configs should be preserved\"\n+\n+\n+def test_get_users():\n+    response = client.get(\"/users/foo\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"Hello foo\"}\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#f0388915a8b1cd9f3ae2259bace234ac6249c51a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 344 | Contributors (this commit): 2 | Commits (past 90d): 3 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.71.0\"\n+__version__ = \"0.72.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#ca5d57ea799028d771101bd711ca87a301dd45d8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 458 | Lines Deleted: 0 | Files Changed: 8 | Hunks: 24 | Methods Changed: 25 | Complexity Δ (Sum/Max): 21/9 | Churn Δ: 458 | Churn Cumulative: 2822 | Contributors (this commit): 24 | Commits (past 90d): 8 | Contributors (cumulative): 39 | DMM Complexity: 0.9787234042553191\n\nDIFF:\n@@ -0,0 +1,15 @@\n+from typing import Optional\n+\n+from fastapi import FastAPI, Query\n+\n+app = FastAPI()\n+\n+\n+@app.get(\"/items/\")\n+async def read_items(\n+    hidden_query: Optional[str] = Query(None, include_in_schema=False)\n+):\n+    if hidden_query:\n+        return {\"hidden_query\": hidden_query}\n+    else:\n+        return {\"hidden_query\": \"Not found\"}\n\n@@ -0,0 +1,11 @@\n+from fastapi import FastAPI, Query\n+\n+app = FastAPI()\n+\n+\n+@app.get(\"/items/\")\n+async def read_items(hidden_query: str | None = Query(None, include_in_schema=False)):\n+    if hidden_query:\n+        return {\"hidden_query\": hidden_query}\n+    else:\n+        return {\"hidden_query\": \"Not found\"}\n\n@@ -92,6 +92,8 @@ def get_openapi_operation_parameters(\n     for param in all_route_params:\n         field_info = param.field_info\n         field_info = cast(Param, field_info)\n+        if not field_info.include_in_schema:\n+            continue\n         parameter = {\n             \"name\": param.alias,\n             \"in\": field_info.in_.value,\n\n@@ -20,6 +20,7 @@ def Path(  # noqa: N802\n     example: Any = Undefined,\n     examples: Optional[Dict[str, Any]] = None,\n     deprecated: Optional[bool] = None,\n+    include_in_schema: bool = True,\n     **extra: Any,\n ) -> Any:\n     return params.Path(\n@@ -37,6 +38,7 @@ def Path(  # noqa: N802\n         example=example,\n         examples=examples,\n         deprecated=deprecated,\n+        include_in_schema=include_in_schema,\n         **extra,\n     )\n \n@@ -57,6 +59,7 @@ def Query(  # noqa: N802\n     example: Any = Undefined,\n     examples: Optional[Dict[str, Any]] = None,\n     deprecated: Optional[bool] = None,\n+    include_in_schema: bool = True,\n     **extra: Any,\n ) -> Any:\n     return params.Query(\n@@ -74,6 +77,7 @@ def Query(  # noqa: N802\n         example=example,\n         examples=examples,\n         deprecated=deprecated,\n+        include_in_schema=include_in_schema,\n         **extra,\n     )\n \n@@ -95,6 +99,7 @@ def Header(  # noqa: N802\n     example: Any = Undefined,\n     examples: Optional[Dict[str, Any]] = None,\n     deprecated: Optional[bool] = None,\n+    include_in_schema: bool = True,\n     **extra: Any,\n ) -> Any:\n     return params.Header(\n@@ -113,6 +118,7 @@ def Header(  # noqa: N802\n         example=example,\n         examples=examples,\n         deprecated=deprecated,\n+        include_in_schema=include_in_schema,\n         **extra,\n     )\n \n@@ -133,6 +139,7 @@ def Cookie(  # noqa: N802\n     example: Any = Undefined,\n     examples: Optional[Dict[str, Any]] = None,\n     deprecated: Optional[bool] = None,\n+    include_in_schema: bool = True,\n     **extra: Any,\n ) -> Any:\n     return params.Cookie(\n@@ -150,6 +157,7 @@ def Cookie(  # noqa: N802\n         example=example,\n         examples=examples,\n         deprecated=deprecated,\n+        include_in_schema=include_in_schema,\n         **extra,\n     )\n \n\n@@ -31,11 +31,13 @@ class Param(FieldInfo):\n         example: Any = Undefined,\n         examples: Optional[Dict[str, Any]] = None,\n         deprecated: Optional[bool] = None,\n+        include_in_schema: bool = True,\n         **extra: Any,\n     ):\n         self.deprecated = deprecated\n         self.example = example\n         self.examples = examples\n+        self.include_in_schema = include_in_schema\n         super().__init__(\n             default,\n             alias=alias,\n@@ -75,6 +77,7 @@ class Path(Param):\n         example: Any = Undefined,\n         examples: Optional[Dict[str, Any]] = None,\n         deprecated: Optional[bool] = None,\n+        include_in_schema: bool = True,\n         **extra: Any,\n     ):\n         self.in_ = self.in_\n@@ -93,6 +96,7 @@ class Path(Param):\n             deprecated=deprecated,\n             example=example,\n             examples=examples,\n+            include_in_schema=include_in_schema,\n             **extra,\n         )\n \n@@ -117,6 +121,7 @@ class Query(Param):\n         example: Any = Undefined,\n         examples: Optional[Dict[str, Any]] = None,\n         deprecated: Optional[bool] = None,\n+        include_in_schema: bool = True,\n         **extra: Any,\n     ):\n         super().__init__(\n@@ -134,6 +139,7 @@ class Query(Param):\n             deprecated=deprecated,\n             example=example,\n             examples=examples,\n+            include_in_schema=include_in_schema,\n             **extra,\n         )\n \n@@ -159,6 +165,7 @@ class Header(Param):\n         example: Any = Undefined,\n         examples: Optional[Dict[str, Any]] = None,\n         deprecated: Optional[bool] = None,\n+        include_in_schema: bool = True,\n         **extra: Any,\n     ):\n         self.convert_underscores = convert_underscores\n@@ -177,6 +184,7 @@ class Header(Param):\n             deprecated=deprecated,\n             example=example,\n             examples=examples,\n+            include_in_schema=include_in_schema,\n             **extra,\n         )\n \n@@ -201,6 +209,7 @@ class Cookie(Param):\n         example: Any = Undefined,\n         examples: Optional[Dict[str, Any]] = None,\n         deprecated: Optional[bool] = None,\n+        include_in_schema: bool = True,\n         **extra: Any,\n     ):\n         super().__init__(\n@@ -218,6 +227,7 @@ class Cookie(Param):\n             deprecated=deprecated,\n             example=example,\n             examples=examples,\n+            include_in_schema=include_in_schema,\n             **extra,\n         )\n \n\n@@ -0,0 +1,239 @@\n+from typing import Optional\n+\n+import pytest\n+from fastapi import Cookie, FastAPI, Header, Path, Query\n+from fastapi.testclient import TestClient\n+\n+app = FastAPI()\n+\n+\n+@app.get(\"/hidden_cookie\")\n+async def hidden_cookie(\n+    hidden_cookie: Optional[str] = Cookie(None, include_in_schema=False)\n+):\n+    return {\"hidden_cookie\": hidden_cookie}\n+\n+\n+@app.get(\"/hidden_header\")\n+async def hidden_header(\n+    hidden_header: Optional[str] = Header(None, include_in_schema=False)\n+):\n+    return {\"hidden_header\": hidden_header}\n+\n+\n+@app.get(\"/hidden_path/{hidden_path}\")\n+async def hidden_path(hidden_path: str = Path(..., include_in_schema=False)):\n+    return {\"hidden_path\": hidden_path}\n+\n+\n+@app.get(\"/hidden_query\")\n+async def hidden_query(\n+    hidden_query: Optional[str] = Query(None, include_in_schema=False)\n+):\n+    return {\"hidden_query\": hidden_query}\n+\n+\n+client = TestClient(app)\n+\n+openapi_shema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/hidden_cookie\": {\n+            \"get\": {\n+                \"summary\": \"Hidden Cookie\",\n+                \"operationId\": \"hidden_cookie_hidden_cookie_get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/hidden_header\": {\n+            \"get\": {\n+                \"summary\": \"Hidden Header\",\n+                \"operationId\": \"hidden_header_hidden_header_get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/hidden_path/{hidden_path}\": {\n+            \"get\": {\n+                \"summary\": \"Hidden Path\",\n+                \"operationId\": \"hidden_path_hidden_path__hidden_path__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/hidden_query\": {\n+            \"get\": {\n+                \"summary\": \"Hidden Query\",\n+                \"operationId\": \"hidden_query_hidden_query_get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_shema\n+\n+\n+@pytest.mark.parametrize(\n+    \"path,cookies,expected_status,expected_response\",\n+    [\n+        (\n+            \"/hidden_cookie\",\n+            {},\n+            200,\n+            {\"hidden_cookie\": None},\n+        ),\n+        (\n+            \"/hidden_cookie\",\n+            {\"hidden_cookie\": \"somevalue\"},\n+            200,\n+            {\"hidden_cookie\": \"somevalue\"},\n+        ),\n+    ],\n+)\n+def test_hidden_cookie(path, cookies, expected_status, expected_response):\n+    response = client.get(path, cookies=cookies)\n+    assert response.status_code == expected_status\n+    assert response.json() == expected_response\n+\n+\n+@pytest.mark.parametrize(\n+    \"path,headers,expected_status,expected_response\",\n+    [\n+        (\n+            \"/hidden_header\",\n+            {},\n+            200,\n+            {\"hidden_header\": None},\n+        ),\n+        (\n+            \"/hidden_header\",\n+            {\"Hidden-Header\": \"somevalue\"},\n+            200,\n+            {\"hidden_header\": \"somevalue\"},\n+        ),\n+    ],\n+)\n+def test_hidden_header(path, headers, expected_status, expected_response):\n+    response = client.get(path, headers=headers)\n+    assert response.status_code == expected_status\n+    assert response.json() == expected_response\n+\n+\n+def test_hidden_path():\n+    response = client.get(\"/hidden_path/hidden_path\")\n+    assert response.status_code == 200\n+    assert response.json() == {\"hidden_path\": \"hidden_path\"}\n+\n+\n+@pytest.mark.parametrize(\n+    \"path,expected_status,expected_response\",\n+    [\n+        (\n+            \"/hidden_query\",\n+            200,\n+            {\"hidden_query\": None},\n+        ),\n+        (\n+            \"/hidden_query?hidden_query=somevalue\",\n+            200,\n+            {\"hidden_query\": \"somevalue\"},\n+        ),\n+    ],\n+)\n+def test_hidden_query(path, expected_status, expected_response):\n+    response = client.get(path)\n+    assert response.status_code == expected_status\n+    assert response.json() == expected_response\n\n@@ -0,0 +1,82 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.query_params_str_validations.tutorial014 import app\n+\n+client = TestClient(app)\n+\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/\": {\n+            \"get\": {\n+                \"summary\": \"Read Items\",\n+                \"operationId\": \"read_items_items__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        }\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+def test_hidden_query():\n+    response = client.get(\"/items?hidden_query=somevalue\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"hidden_query\": \"somevalue\"}\n+\n+\n+def test_no_hidden_query():\n+    response = client.get(\"/items\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"hidden_query\": \"Not found\"}\n\n@@ -0,0 +1,91 @@\n+import pytest\n+from fastapi.testclient import TestClient\n+\n+from ...utils import needs_py310\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/\": {\n+            \"get\": {\n+                \"summary\": \"Read Items\",\n+                \"operationId\": \"read_items_items__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        }\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+@pytest.fixture(name=\"client\")\n+def get_client():\n+    from docs_src.query_params_str_validations.tutorial014_py310 import app\n+\n+    client = TestClient(app)\n+    return client\n+\n+\n+@needs_py310\n+def test_openapi_schema(client: TestClient):\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+@needs_py310\n+def test_hidden_query(client: TestClient):\n+    response = client.get(\"/items?hidden_query=somevalue\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"hidden_query\": \"somevalue\"}\n+\n+\n+@needs_py310\n+def test_no_hidden_query(client: TestClient):\n+    response = client.get(\"/items\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"hidden_query\": \"Not found\"}\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#d4608a00cf4855021dfb1a780556e24dedc94b14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 24 | Lines Deleted: 9 | Files Changed: 2 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 33 | Churn Cumulative: 733 | Contributors (this commit): 13 | Commits (past 90d): 2 | Contributors (cumulative): 21 | DMM Complexity: 0.9166666666666666\n\nDIFF:\n@@ -34,9 +34,17 @@ def jsonable_encoder(\n     exclude_unset: bool = False,\n     exclude_defaults: bool = False,\n     exclude_none: bool = False,\n-    custom_encoder: Dict[Any, Callable[[Any], Any]] = {},\n+    custom_encoder: Optional[Dict[Any, Callable[[Any], Any]]] = None,\n     sqlalchemy_safe: bool = True,\n ) -> Any:\n+    custom_encoder = custom_encoder or {}\n+    if custom_encoder:\n+        if type(obj) in custom_encoder:\n+            return custom_encoder[type(obj)](obj)\n+        else:\n+            for encoder_type, encoder_instance in custom_encoder.items():\n+                if isinstance(obj, encoder_type):\n+                    return encoder_instance(obj)\n     if include is not None and not isinstance(include, (set, dict)):\n         include = set(include)\n     if exclude is not None and not isinstance(exclude, (set, dict)):\n@@ -118,14 +126,6 @@ def jsonable_encoder(\n             )\n         return encoded_list\n \n-    if custom_encoder:\n-        if type(obj) in custom_encoder:\n-            return custom_encoder[type(obj)](obj)\n-        else:\n-            for encoder_type, encoder in custom_encoder.items():\n-                if isinstance(obj, encoder_type):\n-                    return encoder(obj)\n-\n     if type(obj) in ENCODERS_BY_TYPE:\n         return ENCODERS_BY_TYPE[type(obj)](obj)\n     for encoder, classes_tuple in encoders_by_class_tuples.items():\n\n@@ -161,6 +161,21 @@ def test_custom_encoders():\n     assert encoded_instance[\"dt_field\"] == instance.dt_field.isoformat()\n \n \n+def test_custom_enum_encoders():\n+    def custom_enum_encoder(v: Enum):\n+        return v.value.lower()\n+\n+    class MyEnum(Enum):\n+        ENUM_VAL_1 = \"ENUM_VAL_1\"\n+\n+    instance = MyEnum.ENUM_VAL_1\n+\n+    encoded_instance = jsonable_encoder(\n+        instance, custom_encoder={MyEnum: custom_enum_encoder}\n+    )\n+    assert encoded_instance == custom_enum_encoder(instance)\n+\n+\n def test_encode_model_with_path(model_with_path):\n     if isinstance(model_with_path.path, PureWindowsPath):\n         expected = \"\\\\foo\\\\bar\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#569afb4378c80e0bff5dc4a45f26d012e498eda6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 104 | Lines Deleted: 27 | Files Changed: 4 | Hunks: 31 | Methods Changed: 53 | Complexity Δ (Sum/Max): 5/3 | Churn Δ: 131 | Churn Cumulative: 7328 | Contributors (this commit): 39 | Commits (past 90d): 5 | Contributors (cumulative): 53 | DMM Complexity: 1.0\n\nDIFF:\n@@ -0,0 +1,20 @@\n+from enum import Enum\n+\n+from fastapi import FastAPI\n+\n+app = FastAPI()\n+\n+\n+class Tags(Enum):\n+    items = \"items\"\n+    users = \"users\"\n+\n+\n+@app.get(\"/items/\", tags=[Tags.items])\n+async def get_items():\n+    return [\"Portal gun\", \"Plumbus\"]\n+\n+\n+@app.get(\"/users/\", tags=[Tags.users])\n+async def read_users():\n+    return [\"Rick\", \"Morty\"]\n\n@@ -1,3 +1,4 @@\n+from enum import Enum\n from typing import Any, Callable, Coroutine, Dict, List, Optional, Sequence, Type, Union\n \n from fastapi import routing\n@@ -219,7 +220,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -273,7 +274,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -342,7 +343,7 @@ class FastAPI(Starlette):\n         router: routing.APIRouter,\n         *,\n         prefix: str = \"\",\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n         deprecated: Optional[bool] = None,\n@@ -368,7 +369,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -419,7 +420,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -470,7 +471,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -521,7 +522,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -572,7 +573,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -623,7 +624,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -674,7 +675,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -725,7 +726,7 @@ class FastAPI(Starlette):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n\n@@ -1,9 +1,9 @@\n import asyncio\n import dataclasses\n import email.message\n-import enum\n import inspect\n import json\n+from enum import Enum, IntEnum\n from typing import (\n     Any,\n     Callable,\n@@ -305,7 +305,7 @@ class APIRoute(routing.Route):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -330,7 +330,7 @@ class APIRoute(routing.Route):\n         openapi_extra: Optional[Dict[str, Any]] = None,\n     ) -> None:\n         # normalise enums e.g. http.HTTPStatus\n-        if isinstance(status_code, enum.IntEnum):\n+        if isinstance(status_code, IntEnum):\n             status_code = int(status_code)\n         self.path = path\n         self.endpoint = endpoint\n@@ -438,7 +438,7 @@ class APIRouter(routing.Router):\n         self,\n         *,\n         prefix: str = \"\",\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         default_response_class: Type[Response] = Default(JSONResponse),\n         responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n@@ -466,7 +466,7 @@ class APIRouter(routing.Router):\n                 \"/\"\n             ), \"A path prefix must not end with '/', as the routes will start with '/'\"\n         self.prefix = prefix\n-        self.tags: List[str] = tags or []\n+        self.tags: List[Union[str, Enum]] = tags or []\n         self.dependencies = list(dependencies or []) or []\n         self.deprecated = deprecated\n         self.include_in_schema = include_in_schema\n@@ -483,7 +483,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -557,7 +557,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -634,7 +634,7 @@ class APIRouter(routing.Router):\n         router: \"APIRouter\",\n         *,\n         prefix: str = \"\",\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         default_response_class: Type[Response] = Default(JSONResponse),\n         responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n@@ -738,7 +738,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -790,7 +790,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -842,7 +842,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -894,7 +894,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -946,7 +946,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -998,7 +998,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -1050,7 +1050,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n@@ -1102,7 +1102,7 @@ class APIRouter(routing.Router):\n         *,\n         response_model: Optional[Type[Any]] = None,\n         status_code: Optional[int] = None,\n-        tags: Optional[List[str]] = None,\n+        tags: Optional[List[Union[str, Enum]]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n         summary: Optional[str] = None,\n         description: Optional[str] = None,\n\n@@ -0,0 +1,56 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.path_operation_configuration.tutorial002b import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/\": {\n+            \"get\": {\n+                \"tags\": [\"items\"],\n+                \"summary\": \"Get Items\",\n+                \"operationId\": \"get_items_items__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    }\n+                },\n+            }\n+        },\n+        \"/users/\": {\n+            \"get\": {\n+                \"tags\": [\"users\"],\n+                \"summary\": \"Read Users\",\n+                \"operationId\": \"read_users_users__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    }\n+                },\n+            }\n+        },\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+def test_get_items():\n+    response = client.get(\"/items/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == [\"Portal gun\", \"Plumbus\"]\n+\n+\n+def test_get_users():\n+    response = client.get(\"/users/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == [\"Rick\", \"Morty\"]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#1bf55200a90b04229f665cd2ee83edde91e936e8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1042 | Lines Deleted: 27 | Files Changed: 15 | Hunks: 19 | Methods Changed: 46 | Complexity Δ (Sum/Max): 51/6 | Churn Δ: 1069 | Churn Cumulative: 3097 | Contributors (this commit): 25 | Commits (past 90d): 16 | Contributors (cumulative): 40 | DMM Complexity: 0.9954954954954955\n\nDIFF:\n@@ -9,5 +9,5 @@ async def create_file(file: bytes = File(...)):\n \n \n @app.post(\"/uploadfile/\")\n-async def create_upload_file(file: UploadFile = File(...)):\n+async def create_upload_file(file: UploadFile):\n     return {\"filename\": file.filename}\n\n@@ -0,0 +1,21 @@\n+from typing import Optional\n+\n+from fastapi import FastAPI, File, UploadFile\n+\n+app = FastAPI()\n+\n+\n+@app.post(\"/files/\")\n+async def create_file(file: Optional[bytes] = File(None)):\n+    if not file:\n+        return {\"message\": \"No file sent\"}\n+    else:\n+        return {\"file_size\": len(file)}\n+\n+\n+@app.post(\"/uploadfile/\")\n+async def create_upload_file(file: Optional[UploadFile] = None):\n+    if not file:\n+        return {\"message\": \"No upload file sent\"}\n+    else:\n+        return {\"filename\": file.filename}\n\n@@ -0,0 +1,19 @@\n+from fastapi import FastAPI, File, UploadFile\n+\n+app = FastAPI()\n+\n+\n+@app.post(\"/files/\")\n+async def create_file(file: bytes | None = File(None)):\n+    if not file:\n+        return {\"message\": \"No file sent\"}\n+    else:\n+        return {\"file_size\": len(file)}\n+\n+\n+@app.post(\"/uploadfile/\")\n+async def create_upload_file(file: UploadFile | None = None):\n+    if not file:\n+        return {\"message\": \"No upload file sent\"}\n+    else:\n+        return {\"filename\": file.filename}\n\n@@ -0,0 +1,15 @@\n+from fastapi import FastAPI, File, UploadFile\n+\n+app = FastAPI()\n+\n+\n+@app.post(\"/files/\")\n+async def create_file(file: bytes = File(..., description=\"A file read as bytes\")):\n+    return {\"file_size\": len(file)}\n+\n+\n+@app.post(\"/uploadfile/\")\n+async def create_upload_file(\n+    file: UploadFile = File(..., description=\"A file read as UploadFile\")\n+):\n+    return {\"filename\": file.filename}\n\n@@ -12,7 +12,7 @@ async def create_files(files: List[bytes] = File(...)):\n \n \n @app.post(\"/uploadfiles/\")\n-async def create_upload_files(files: List[UploadFile] = File(...)):\n+async def create_upload_files(files: List[UploadFile]):\n     return {\"filenames\": [file.filename for file in files]}\n \n \n\n@@ -10,7 +10,7 @@ async def create_files(files: list[bytes] = File(...)):\n \n \n @app.post(\"/uploadfiles/\")\n-async def create_upload_files(files: list[UploadFile] = File(...)):\n+async def create_upload_files(files: list[UploadFile]):\n     return {\"filenames\": [file.filename for file in files]}\n \n \n\n@@ -0,0 +1,37 @@\n+from typing import List\n+\n+from fastapi import FastAPI, File, UploadFile\n+from fastapi.responses import HTMLResponse\n+\n+app = FastAPI()\n+\n+\n+@app.post(\"/files/\")\n+async def create_files(\n+    files: List[bytes] = File(..., description=\"Multiple files as bytes\")\n+):\n+    return {\"file_sizes\": [len(file) for file in files]}\n+\n+\n+@app.post(\"/uploadfiles/\")\n+async def create_upload_files(\n+    files: List[UploadFile] = File(..., description=\"Multiple files as UploadFile\")\n+):\n+    return {\"filenames\": [file.filename for file in files]}\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    content = \"\"\"\n+<body>\n+<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n+<input name=\"files\" type=\"file\" multiple>\n+<input type=\"submit\">\n+</form>\n+<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n+<input name=\"files\" type=\"file\" multiple>\n+<input type=\"submit\">\n+</form>\n+</body>\n+    \"\"\"\n+    return HTMLResponse(content=content)\n\n@@ -0,0 +1,35 @@\n+from fastapi import FastAPI, File, UploadFile\n+from fastapi.responses import HTMLResponse\n+\n+app = FastAPI()\n+\n+\n+@app.post(\"/files/\")\n+async def create_files(\n+    files: list[bytes] = File(..., description=\"Multiple files as bytes\")\n+):\n+    return {\"file_sizes\": [len(file) for file in files]}\n+\n+\n+@app.post(\"/uploadfiles/\")\n+async def create_upload_files(\n+    files: list[UploadFile] = File(..., description=\"Multiple files as UploadFile\")\n+):\n+    return {\"filenames\": [file.filename for file in files]}\n+\n+\n+@app.get(\"/\")\n+async def main():\n+    content = \"\"\"\n+<body>\n+<form action=\"/files/\" enctype=\"multipart/form-data\" method=\"post\">\n+<input name=\"files\" type=\"file\" multiple>\n+<input type=\"submit\">\n+</form>\n+<form action=\"/uploadfiles/\" enctype=\"multipart/form-data\" method=\"post\">\n+<input name=\"files\" type=\"file\" multiple>\n+<input type=\"submit\">\n+</form>\n+</body>\n+    \"\"\"\n+    return HTMLResponse(content=content)\n\n@@ -1,4 +1,4 @@\n-from typing import Any, Callable, Iterable, Type, TypeVar\n+from typing import Any, Callable, Dict, Iterable, Type, TypeVar\n \n from starlette.datastructures import URL as URL  # noqa: F401\n from starlette.datastructures import Address as Address  # noqa: F401\n@@ -20,6 +20,10 @@ class UploadFile(StarletteUploadFile):\n             raise ValueError(f\"Expected UploadFile, received: {type(v)}\")\n         return v\n \n+    @classmethod\n+    def __modify_schema__(cls, field_schema: Dict[str, Any]) -> None:\n+        field_schema.update({\"type\": \"string\", \"format\": \"binary\"})\n+\n \n class DefaultPlaceholder:\n     \"\"\"\n\n@@ -390,6 +390,8 @@ def get_param_field(\n     field.required = required\n     if not had_schema and not is_scalar_field(field=field):\n         field.field_info = params.Body(field_info.default)\n+    if not had_schema and lenient_issubclass(field.type_, UploadFile):\n+        field.field_info = params.File(field_info.default)\n \n     return field\n \n@@ -701,25 +703,6 @@ def get_missing_field_error(loc: Tuple[str, ...]) -> ErrorWrapper:\n     return missing_field_error\n \n \n-def get_schema_compatible_field(*, field: ModelField) -> ModelField:\n-    out_field = field\n-    if lenient_issubclass(field.type_, UploadFile):\n-        use_type: type = bytes\n-        if field.shape in sequence_shapes:\n-            use_type = List[bytes]\n-        out_field = create_response_field(\n-            name=field.name,\n-            type_=use_type,\n-            class_validators=field.class_validators,\n-            model_config=field.model_config,\n-            default=field.default,\n-            required=field.required,\n-            alias=field.alias,\n-            field_info=field.field_info,\n-        )\n-    return out_field\n-\n-\n def get_body_field(*, dependant: Dependant, name: str) -> Optional[ModelField]:\n     flat_dependant = get_flat_dependant(dependant)\n     if not flat_dependant.body_params:\n@@ -729,9 +712,8 @@ def get_body_field(*, dependant: Dependant, name: str) -> Optional[ModelField]:\n     embed = getattr(field_info, \"embed\", None)\n     body_param_names_set = {param.name for param in flat_dependant.body_params}\n     if len(body_param_names_set) == 1 and not embed:\n-        final_field = get_schema_compatible_field(field=first_param)\n-        check_file_field(final_field)\n-        return final_field\n+        check_file_field(first_param)\n+        return first_param\n     # If one field requires to embed, all have to be embedded\n     # in case a sub-dependency is evaluated with a single unique body field\n     # That is combined (embedded) with other body fields\n@@ -740,7 +722,7 @@ def get_body_field(*, dependant: Dependant, name: str) -> Optional[ModelField]:\n     model_name = \"Body_\" + name\n     BodyModel: Type[BaseModel] = create_model(model_name)\n     for f in flat_dependant.body_params:\n-        BodyModel.__fields__[f.name] = get_schema_compatible_field(field=f)\n+        BodyModel.__fields__[f.name] = f\n     required = any(True for f in flat_dependant.body_params if f.required)\n \n     BodyFieldInfo_kwargs: Dict[str, Any] = dict(default=None)\n\n@@ -0,0 +1,157 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.request_files.tutorial001_02 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/files/\": {\n+            \"post\": {\n+                \"summary\": \"Create File\",\n+                \"operationId\": \"create_file_files__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_file_files__post\"\n+                            }\n+                        }\n+                    }\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/uploadfile/\": {\n+            \"post\": {\n+                \"summary\": \"Create Upload File\",\n+                \"operationId\": \"create_upload_file_uploadfile__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_upload_file_uploadfile__post\"\n+                            }\n+                        }\n+                    }\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Body_create_file_files__post\": {\n+                \"title\": \"Body_create_file_files__post\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"file\": {\"title\": \"File\", \"type\": \"string\", \"format\": \"binary\"}\n+                },\n+            },\n+            \"Body_create_upload_file_uploadfile__post\": {\n+                \"title\": \"Body_create_upload_file_uploadfile__post\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"file\": {\"title\": \"File\", \"type\": \"string\", \"format\": \"binary\"}\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+def test_post_form_no_body():\n+    response = client.post(\"/files/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"No file sent\"}\n+\n+\n+def test_post_uploadfile_no_body():\n+    response = client.post(\"/uploadfile/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"No upload file sent\"}\n+\n+\n+def test_post_file(tmp_path):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file:\n+        response = client.post(\"/files/\", files={\"file\": file})\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"file_size\": 14}\n+\n+\n+def test_post_upload_file(tmp_path):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file:\n+        response = client.post(\"/uploadfile/\", files={\"file\": file})\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"filename\": \"test.txt\"}\n\n@@ -0,0 +1,169 @@\n+from pathlib import Path\n+\n+import pytest\n+from fastapi.testclient import TestClient\n+\n+from ...utils import needs_py310\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/files/\": {\n+            \"post\": {\n+                \"summary\": \"Create File\",\n+                \"operationId\": \"create_file_files__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_file_files__post\"\n+                            }\n+                        }\n+                    }\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/uploadfile/\": {\n+            \"post\": {\n+                \"summary\": \"Create Upload File\",\n+                \"operationId\": \"create_upload_file_uploadfile__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_upload_file_uploadfile__post\"\n+                            }\n+                        }\n+                    }\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Body_create_file_files__post\": {\n+                \"title\": \"Body_create_file_files__post\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"file\": {\"title\": \"File\", \"type\": \"string\", \"format\": \"binary\"}\n+                },\n+            },\n+            \"Body_create_upload_file_uploadfile__post\": {\n+                \"title\": \"Body_create_upload_file_uploadfile__post\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"file\": {\"title\": \"File\", \"type\": \"string\", \"format\": \"binary\"}\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+@pytest.fixture(name=\"client\")\n+def get_client():\n+    from docs_src.request_files.tutorial001_02_py310 import app\n+\n+    client = TestClient(app)\n+    return client\n+\n+\n+@needs_py310\n+def test_openapi_schema(client: TestClient):\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+@needs_py310\n+def test_post_form_no_body(client: TestClient):\n+    response = client.post(\"/files/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"No file sent\"}\n+\n+\n+@needs_py310\n+def test_post_uploadfile_no_body(client: TestClient):\n+    response = client.post(\"/uploadfile/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"No upload file sent\"}\n+\n+\n+@needs_py310\n+def test_post_file(tmp_path: Path, client: TestClient):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+\n+    with path.open(\"rb\") as file:\n+        response = client.post(\"/files/\", files={\"file\": file})\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"file_size\": 14}\n+\n+\n+@needs_py310\n+def test_post_upload_file(tmp_path: Path, client: TestClient):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+\n+    with path.open(\"rb\") as file:\n+        response = client.post(\"/uploadfile/\", files={\"file\": file})\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"filename\": \"test.txt\"}\n\n@@ -0,0 +1,159 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.request_files.tutorial001_03 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/files/\": {\n+            \"post\": {\n+                \"summary\": \"Create File\",\n+                \"operationId\": \"create_file_files__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_file_files__post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/uploadfile/\": {\n+            \"post\": {\n+                \"summary\": \"Create Upload File\",\n+                \"operationId\": \"create_upload_file_uploadfile__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_upload_file_uploadfile__post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Body_create_file_files__post\": {\n+                \"title\": \"Body_create_file_files__post\",\n+                \"required\": [\"file\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"file\": {\n+                        \"title\": \"File\",\n+                        \"type\": \"string\",\n+                        \"description\": \"A file read as bytes\",\n+                        \"format\": \"binary\",\n+                    }\n+                },\n+            },\n+            \"Body_create_upload_file_uploadfile__post\": {\n+                \"title\": \"Body_create_upload_file_uploadfile__post\",\n+                \"required\": [\"file\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"file\": {\n+                        \"title\": \"File\",\n+                        \"type\": \"string\",\n+                        \"description\": \"A file read as UploadFile\",\n+                        \"format\": \"binary\",\n+                    }\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+def test_post_file(tmp_path):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file:\n+        response = client.post(\"/files/\", files={\"file\": file})\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"file_size\": 14}\n+\n+\n+def test_post_upload_file(tmp_path):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file:\n+        response = client.post(\"/uploadfile/\", files={\"file\": file})\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"filename\": \"test.txt\"}\n\n@@ -0,0 +1,194 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.request_files.tutorial003 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/files/\": {\n+            \"post\": {\n+                \"summary\": \"Create Files\",\n+                \"operationId\": \"create_files_files__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_files_files__post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/uploadfiles/\": {\n+            \"post\": {\n+                \"summary\": \"Create Upload Files\",\n+                \"operationId\": \"create_upload_files_uploadfiles__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_upload_files_uploadfiles__post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/\": {\n+            \"get\": {\n+                \"summary\": \"Main\",\n+                \"operationId\": \"main__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    }\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Body_create_files_files__post\": {\n+                \"title\": \"Body_create_files_files__post\",\n+                \"required\": [\"files\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"files\": {\n+                        \"title\": \"Files\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\", \"format\": \"binary\"},\n+                        \"description\": \"Multiple files as bytes\",\n+                    }\n+                },\n+            },\n+            \"Body_create_upload_files_uploadfiles__post\": {\n+                \"title\": \"Body_create_upload_files_uploadfiles__post\",\n+                \"required\": [\"files\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"files\": {\n+                        \"title\": \"Files\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\", \"format\": \"binary\"},\n+                        \"description\": \"Multiple files as UploadFile\",\n+                    }\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+def test_post_files(tmp_path):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+    path2 = tmp_path / \"test2.txt\"\n+    path2.write_bytes(b\"<file content2>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file, path2.open(\"rb\") as file2:\n+        response = client.post(\n+            \"/files/\",\n+            files=(\n+                (\"files\", (\"test.txt\", file)),\n+                (\"files\", (\"test2.txt\", file2)),\n+            ),\n+        )\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"file_sizes\": [14, 15]}\n+\n+\n+def test_post_upload_file(tmp_path):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+    path2 = tmp_path / \"test2.txt\"\n+    path2.write_bytes(b\"<file content2>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file, path2.open(\"rb\") as file2:\n+        response = client.post(\n+            \"/uploadfiles/\",\n+            files=(\n+                (\"files\", (\"test.txt\", file)),\n+                (\"files\", (\"test2.txt\", file2)),\n+            ),\n+        )\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"filenames\": [\"test.txt\", \"test2.txt\"]}\n+\n+\n+def test_get_root():\n+    client = TestClient(app)\n+    response = client.get(\"/\")\n+    assert response.status_code == 200, response.text\n+    assert b\"<form\" in response.content\n\n@@ -0,0 +1,223 @@\n+import pytest\n+from fastapi import FastAPI\n+from fastapi.testclient import TestClient\n+\n+from ...utils import needs_py39\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/files/\": {\n+            \"post\": {\n+                \"summary\": \"Create Files\",\n+                \"operationId\": \"create_files_files__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_files_files__post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/uploadfiles/\": {\n+            \"post\": {\n+                \"summary\": \"Create Upload Files\",\n+                \"operationId\": \"create_upload_files_uploadfiles__post\",\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"multipart/form-data\": {\n+                            \"schema\": {\n+                                \"$ref\": \"#/components/schemas/Body_create_upload_files_uploadfiles__post\"\n+                            }\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/\": {\n+            \"get\": {\n+                \"summary\": \"Main\",\n+                \"operationId\": \"main__get\",\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    }\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Body_create_files_files__post\": {\n+                \"title\": \"Body_create_files_files__post\",\n+                \"required\": [\"files\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"files\": {\n+                        \"title\": \"Files\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\", \"format\": \"binary\"},\n+                        \"description\": \"Multiple files as bytes\",\n+                    }\n+                },\n+            },\n+            \"Body_create_upload_files_uploadfiles__post\": {\n+                \"title\": \"Body_create_upload_files_uploadfiles__post\",\n+                \"required\": [\"files\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"files\": {\n+                        \"title\": \"Files\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\", \"format\": \"binary\"},\n+                        \"description\": \"Multiple files as UploadFile\",\n+                    }\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+@pytest.fixture(name=\"app\")\n+def get_app():\n+    from docs_src.request_files.tutorial003_py39 import app\n+\n+    return app\n+\n+\n+@pytest.fixture(name=\"client\")\n+def get_client(app: FastAPI):\n+\n+    client = TestClient(app)\n+    return client\n+\n+\n+@needs_py39\n+def test_openapi_schema(client: TestClient):\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+file_required = {\n+    \"detail\": [\n+        {\n+            \"loc\": [\"body\", \"files\"],\n+            \"msg\": \"field required\",\n+            \"type\": \"value_error.missing\",\n+        }\n+    ]\n+}\n+\n+\n+@needs_py39\n+def test_post_files(tmp_path, app: FastAPI):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+    path2 = tmp_path / \"test2.txt\"\n+    path2.write_bytes(b\"<file content2>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file, path2.open(\"rb\") as file2:\n+        response = client.post(\n+            \"/files/\",\n+            files=(\n+                (\"files\", (\"test.txt\", file)),\n+                (\"files\", (\"test2.txt\", file2)),\n+            ),\n+        )\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"file_sizes\": [14, 15]}\n+\n+\n+@needs_py39\n+def test_post_upload_file(tmp_path, app: FastAPI):\n+    path = tmp_path / \"test.txt\"\n+    path.write_bytes(b\"<file content>\")\n+    path2 = tmp_path / \"test2.txt\"\n+    path2.write_bytes(b\"<file content2>\")\n+\n+    client = TestClient(app)\n+    with path.open(\"rb\") as file, path2.open(\"rb\") as file2:\n+        response = client.post(\n+            \"/uploadfiles/\",\n+            files=(\n+                (\"files\", (\"test.txt\", file)),\n+                (\"files\", (\"test2.txt\", file2)),\n+            ),\n+        )\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"filenames\": [\"test.txt\", \"test2.txt\"]}\n+\n+\n+@needs_py39\n+def test_get_root(app: FastAPI):\n+    client = TestClient(app)\n+    response = client.get(\"/\")\n+    assert response.status_code == 200, response.text\n+    assert b\"<form\" in response.content\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
