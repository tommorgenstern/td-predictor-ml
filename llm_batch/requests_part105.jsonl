{"custom_id": "requests#e6e3589c36181ae952493ae3ff37f21a450110aa", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 629 | Contributors (this commit): 23 | Commits (past 90d): 23 | Contributors (cumulative): 23 | DMM Complexity: None\n\nDIFF:\n@@ -8,6 +8,7 @@ from codecs import open\n \n from setuptools import setup\n from setuptools.command.test import test as TestCommand\n+from multiprocessing import cpu_count\n \n here = os.path.abspath(os.path.dirname(__file__))\n \n@@ -16,7 +17,7 @@ class PyTest(TestCommand):\n \n     def initialize_options(self):\n         TestCommand.initialize_options(self)\n-        self.pytest_args = ['-n', '8', '--boxed']\n+        self.pytest_args = ['-n', str(cpu_count()), '--boxed']\n \n     def finalize_options(self):\n         TestCommand.finalize_options(self)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#2ccecf6dbd4e9130a53e9bb3b99d78f8490f9ce7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 210 | Contributors (this commit): 5 | Commits (past 90d): 2 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n@@ -92,6 +92,7 @@ class TestTestServer:\n             with pytest.raises(requests.exceptions.ConnectionError):\n                 r = requests.get(server_url)\n \n+    @pytest.mark.skip(reason=\"this fails non-deterministically under pytest-xdist\")\n     def test_request_recovery(self):\n         \"\"\"can check the requests content\"\"\"\n         # TODO: figure out why this sometimes fails when using pytest-xdist.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7f14db17c8612aed71a181b084455b71e130ffc8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 11 | Files Changed: 7 | Hunks: 11 | Methods Changed: 9 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 22 | Churn Cumulative: 23424 | Contributors (this commit): 299 | Commits (past 90d): 50 | Contributors (cumulative): 464 | DMM Complexity: None\n\nDIFF:\n@@ -227,7 +227,7 @@ class HTTPDigestAuth(AuthBase):\n         \"\"\"\n \n         # If response is not 4xx, do not auth\n-        # See https://github.com/kennethreitz/requests/issues/3772\n+        # See https://github.com/requests/requests/issues/3772\n         if not 400 <= r.status_code < 500:\n             self._thread_local.num_401_calls = 1\n             return r\n\n@@ -13,7 +13,7 @@ import sys\n \n # Import encoding now, to avoid implicit import later.\n # Implicit import within threads may cause LookupError when standard library is in a ZIP,\n-# such as in Embedded Python. See https://github.com/kennethreitz/requests/issues/3578.\n+# such as in Embedded Python. See https://github.com/requests/requests/issues/3578.\n import encodings.idna\n \n from urllib3.fields import RequestField\n@@ -348,7 +348,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         #: We're unable to blindly call unicode/str functions\n         #: as this will include the bytestring indicator (b'')\n         #: on python 3.x.\n-        #: https://github.com/kennethreitz/requests/pull/2238\n+        #: https://github.com/requests/requests/pull/2238\n         if isinstance(url, bytes):\n             url = url.decode('utf8')\n         else:\n\n@@ -164,9 +164,9 @@ class SessionRedirectMixin(object):\n \n             self.rebuild_method(prepared_request, resp)\n \n-            # https://github.com/kennethreitz/requests/issues/1084\n+            # https://github.com/requests/requests/issues/1084\n             if resp.status_code not in (codes.temporary_redirect, codes.permanent_redirect):\n-                # https://github.com/kennethreitz/requests/issues/3490\n+                # https://github.com/requests/requests/issues/3490\n                 purged_headers = ('Content-Length', 'Content-Type', 'Transfer-Encoding')\n                 for header in purged_headers:\n                     prepared_request.headers.pop(header, None)\n\n@@ -171,7 +171,7 @@ def get_netrc_auth(url, raise_errors=False):\n             except KeyError:\n                 # os.path.expanduser can fail when $HOME is undefined and\n                 # getpwuid fails. See http://bugs.python.org/issue20164 &\n-                # https://github.com/kennethreitz/requests/issues/1846\n+                # https://github.com/requests/requests/issues/1846\n                 return\n \n             if os.path.exists(loc):\n\n@@ -28,7 +28,7 @@ def test_digestauth_401_count_reset_on_redirect():\n     \"\"\"Ensure we correctly reset num_401_calls after a successful digest auth,\n     followed by a 302 redirect to another digest auth prompt.\n \n-    See https://github.com/kennethreitz/requests/issues/1979.\n+    See https://github.com/requests/requests/issues/1979.\n     \"\"\"\n     text_401 = (b'HTTP/1.1 401 UNAUTHORIZED\\r\\n'\n                 b'Content-Length: 0\\r\\n'\n@@ -138,7 +138,7 @@ def test_digestauth_401_only_sent_once():\n def test_digestauth_only_on_4xx():\n     \"\"\"Ensure we only send digestauth on 4xx challenges.\n \n-    See https://github.com/kennethreitz/requests/issues/3772.\n+    See https://github.com/requests/requests/issues/3772.\n     \"\"\"\n     text_200_chal = (b'HTTP/1.1 200 OK\\r\\n'\n                      b'Content-Length: 0\\r\\n'\n\n@@ -455,7 +455,7 @@ class TestRequests:\n     @pytest.mark.parametrize('key', ('User-agent', 'user-agent'))\n     def test_user_agent_transfers(self, httpbin, key):\n \n-        heads = {key: 'Mozilla/5.0 (github.com/kennethreitz/requests)'}\n+        heads = {key: 'Mozilla/5.0 (github.com/requests/requests)'}\n \n         r = requests.get(httpbin('user-agent'), headers=heads)\n         assert heads[key] in r.text\n@@ -2075,7 +2075,7 @@ class TestTimeout:\n             pass\n \n     def test_encoded_methods(self, httpbin):\n-        \"\"\"See: https://github.com/kennethreitz/requests/issues/2316\"\"\"\n+        \"\"\"See: https://github.com/requests/requests/issues/2316\"\"\"\n         r = requests.request(b'GET', httpbin('get'))\n         assert r.ok\n \n\n@@ -367,7 +367,7 @@ def test_get_auth_from_url(url, auth):\n         ),\n     ))\n def test_requote_uri_with_unquoted_percents(uri, expected):\n-    \"\"\"See: https://github.com/kennethreitz/requests/issues/2356\"\"\"\n+    \"\"\"See: https://github.com/requests/requests/issues/2356\"\"\"\n     assert requote_uri(uri) == expected\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#86f8cb8a35ecde88af1eec344498799164b10cb0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 26 | Files Changed: 1 | Hunks: 8 | Methods Changed: 5 | Complexity Δ (Sum/Max): -6/0 | Churn Δ: 26 | Churn Cumulative: 3388 | Contributors (this commit): 86 | Commits (past 90d): 14 | Contributors (cumulative): 86 | DMM Complexity: 0.625\n\nDIFF:\n@@ -13,8 +13,6 @@ import time\n from collections import Mapping\n from datetime import timedelta\n \n-from urllib3._collections import RecentlyUsedContainer\n-\n from .auth import _basic_auth_str\n from .compat import cookielib, is_py3, OrderedDict, urljoin, urlparse\n from .cookies import (\n@@ -39,8 +37,6 @@ from .status_codes import codes\n # formerly defined here, reexposed here for backward compatibility\n from .models import REDIRECT_STATI\n \n-REDIRECT_CACHE_SIZE = 1000\n-\n # Preferred clock, based on which one is more accurate on a given system.\n if platform.system() == 'Windows':\n     try:  # Python 3.3+\n@@ -158,9 +154,6 @@ class SessionRedirectMixin(object):\n                 url = requote_uri(url)\n \n             prepared_request.url = to_native_string(url)\n-            # Cache the url, unless it redirects to itself.\n-            if resp.is_permanent_redirect and req.url != prepared_request.url:\n-                self.redirect_cache[req.url] = prepared_request.url\n \n             self.rebuild_method(prepared_request, resp)\n \n@@ -393,9 +386,6 @@ class Session(SessionRedirectMixin):\n         self.mount('https://', HTTPAdapter())\n         self.mount('http://', HTTPAdapter())\n \n-        # Only store 1000 redirects to prevent using infinite memory\n-        self.redirect_cache = RecentlyUsedContainer(REDIRECT_CACHE_SIZE)\n-\n     def __enter__(self):\n         return self\n \n@@ -623,16 +613,6 @@ class Session(SessionRedirectMixin):\n         stream = kwargs.get('stream')\n         hooks = request.hooks\n \n-        # Resolve URL in redirect cache, if available.\n-        if allow_redirects:\n-            checked_urls = set()\n-            while request.url in self.redirect_cache:\n-                checked_urls.add(request.url)\n-                new_url = self.redirect_cache.get(request.url)\n-                if new_url in checked_urls:\n-                    break\n-                request.url = new_url\n-\n         # Get the appropriate adapter to use\n         adapter = self.get_adapter(url=request.url)\n \n@@ -745,18 +725,12 @@ class Session(SessionRedirectMixin):\n \n     def __getstate__(self):\n         state = dict((attr, getattr(self, attr, None)) for attr in self.__attrs__)\n-        state['redirect_cache'] = dict(self.redirect_cache)\n         return state\n \n     def __setstate__(self, state):\n-        redirect_cache = state.pop('redirect_cache', {})\n         for attr, value in state.items():\n             setattr(self, attr, value)\n \n-        self.redirect_cache = RecentlyUsedContainer(REDIRECT_CACHE_SIZE)\n-        for redirect, to in redirect_cache.items():\n-            self.redirect_cache[redirect] = to\n-\n \n def session():\n     \"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3857431159b56707965f9abce581e6ab0694604b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 72 | Contributors (this commit): 1 | Commits (past 90d): 13 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -5,8 +5,8 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.16.5'\n-__build__ = 0x021605\n+__version__ = '2.17.0'\n+__build__ = 0x021700\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#588e8f7f640f774e71d61b53ccb34d310172e0ad", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 8 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 15 | Churn Cumulative: 32 | Contributors (this commit): 2 | Commits (past 90d): 3 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -3,13 +3,12 @@ import sys\n # This code exists for backwards compatibility reasons.\n # I don't like it either. Just look the other way. :)\n \n-import urllib3\n-sys.modules['requests.packages.urllib3'] = urllib3\n-\n-import idna\n-sys.modules['requests.packages.idna'] = idna\n-\n-import chardet\n-sys.modules['requests.packages.chardet'] = chardet\n+for package in ('urllib3', 'idna', 'chardet'):\n+    __import__(package)\n+    # This traversal is apparently necessary such that the identities are\n+    # preserved (requests.packages.urllib3.* is urllib3.*)\n+    for mod in list(sys.modules):\n+        if mod == package or mod.startswith(package + '.'):\n+            sys.modules['requests.packages.' + mod] = sys.modules[mod]\n \n # Kinda cool, though, right?\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#2d763c90ae6ccee1a3c64bf70add776a2ba395ef", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 76 | Contributors (this commit): 1 | Commits (past 90d): 14 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -5,8 +5,8 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.17.0'\n-__build__ = 0x021700\n+__version__ = '2.17.1'\n+__build__ = 0x021701\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#1278ecdf71a312dc2268f3bfc0aabfab3c006dcf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 14 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 15 | Churn Cumulative: 47 | Contributors (this commit): 3 | Commits (past 90d): 5 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -4,7 +4,7 @@ import sys\n # I don't like it either. Just look the other way. :)\n \n for package in ('urllib3', 'idna', 'chardet'):\n-    __import__(package)\n+    locals()[package] = __import__(package)\n     # This traversal is apparently necessary such that the identities are\n     # preserved (requests.packages.urllib3.* is urllib3.*)\n     for mod in list(sys.modules):\n\n@@ -0,0 +1,13 @@\n+import requests\n+\n+\n+def test_can_access_urllib3_attribute():\n+    requests.packages.urllib3\n+\n+\n+def test_can_access_idna_attribute():\n+    requests.packages.idna\n+\n+\n+def test_can_access_chardet_attribute():\n+    requests.packages.chardet\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#dcb82779751bc410316c31313d5ffaecc40e6f9c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 80 | Contributors (this commit): 1 | Commits (past 90d): 15 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -5,8 +5,8 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.17.1'\n-__build__ = 0x021701\n+__version__ = '2.17.2'\n+__build__ = 0x021702\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#5091c15bd71ec934423a71ce1b53668cd15db68f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 84 | Contributors (this commit): 1 | Commits (past 90d): 16 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -5,8 +5,8 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.17.2'\n-__build__ = 0x021702\n+__version__ = '2.17.3'\n+__build__ = 0x021703\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7c2618eb828bcdb57d2f62b424b11bb3664eb760", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 765 | Contributors (this commit): 16 | Commits (past 90d): 13 | Contributors (cumulative): 16 | DMM Complexity: None\n\nDIFF:\n@@ -40,10 +40,6 @@ is at <http://python-requests.org>.\n :license: Apache 2.0, see LICENSE for more details.\n \"\"\"\n \n-from .__version__ import __title__, __description__, __url__, __version__\n-from .__version__ import __build__, __author__, __author_email__, __license__\n-from .__version__ import __copyright__, __cake__\n-\n # Check urllib3 for compatibility.\n import urllib3\n urllib3_version = urllib3.__version__.split('.')\n@@ -86,6 +82,10 @@ import warnings\n from urllib3.exceptions import DependencyWarning\n warnings.simplefilter('ignore', DependencyWarning)\n \n+from .__version__ import __title__, __description__, __url__, __version__\n+from .__version__ import __build__, __author__, __author_email__, __license__\n+from .__version__ import __copyright__, __cake__\n+\n from . import utils\n from . import packages\n from .models import Request, Response, PreparedRequest\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7c3861a3226e69ba962f3f38c61e42a2eaf1dfcf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 86 | Contributors (this commit): 1 | Commits (past 90d): 17 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -12,5 +12,3 @@ __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n __copyright__ = 'Copyright 2017 Kenneth Reitz'\n __cake__ = u'\\u2728 \\U0001f370 \\u2728'\n-\n-\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f6a4ab02daa3103f9d595f4b62803a1267498949", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 211 | Contributors (this commit): 18 | Commits (past 90d): 2 | Contributors (cumulative): 18 | DMM Complexity: None\n\nDIFF:\n@@ -100,6 +100,7 @@ class StreamConsumedError(RequestException, TypeError):\n class RetryError(RequestException):\n     \"\"\"Custom retries logic failed\"\"\"\n \n+\n class UnrewindableBodyError(RequestException):\n     \"\"\"Requests encountered an error when trying to rewind a body\"\"\"\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#5b363d1a57780fe339d66e85fd0cde8f22ae9629", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 1107 | Contributors (this commit): 27 | Commits (past 90d): 2 | Contributors (cumulative): 27 | DMM Complexity: 0.0\n\nDIFF:\n@@ -306,8 +306,10 @@ class RequestsCookieJar(cookielib.CookieJar, collections.MutableMapping):\n         \"\"\"\n         dictionary = {}\n         for cookie in iter(self):\n-            if (domain is None or cookie.domain == domain) and (path is None\n-                                                or cookie.path == path):\n+            if (\n+                (domain is None or cookie.domain == domain) and\n+                (path is None or cookie.path == path)\n+            ):\n                 dictionary[cookie.name] = cookie.value\n         return dictionary\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#6495190b00b4635791ca718990b9c9a1aa2d5b33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 25 | Contributors (this commit): 1 | Commits (past 90d): 4 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -101,10 +101,12 @@ def info():\n         },\n     }\n \n+\n def main():\n     \"\"\"Pretty-print the bug information as JSON.\"\"\"\n     print(json.dumps(info(), sort_keys=True, indent=2))\n \n+\n if __name__ == '__main__':\n     main()\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e5894e99b708ce08c5573722c35ff548590ba43c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 26 | Contributors (this commit): 1 | Commits (past 90d): 5 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -109,4 +109,3 @@ def main():\n \n if __name__ == '__main__':\n     main()\n-\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#33619268f986b7d6452fdab43e70096401c5b361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 9719 | Contributors (this commit): 175 | Commits (past 90d): 9 | Contributors (cumulative): 175 | DMM Complexity: 0.5\n\nDIFF:\n@@ -215,8 +215,9 @@ class Request(RequestHooksMixin):\n       <PreparedRequest [GET]>\n     \"\"\"\n \n-    def __init__(self, method=None, url=None, headers=None, files=None,\n-        data=None, params=None, auth=None, cookies=None, hooks=None, json=None):\n+    def __init__(self,\n+            method=None, url=None, headers=None, files=None, data=None,\n+            params=None, auth=None, cookies=None, hooks=None, json=None):\n \n         # Default empty dicts for dict params.\n         data = [] if data is None else data\n@@ -295,8 +296,9 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         #: integer denoting starting position of a readable file-like body.\n         self._body_position = None\n \n-    def prepare(self, method=None, url=None, headers=None, files=None,\n-        data=None, params=None, auth=None, cookies=None, hooks=None, json=None):\n+    def prepare(self,\n+            method=None, url=None, headers=None, files=None, data=None,\n+            params=None, auth=None, cookies=None, hooks=None, json=None):\n         \"\"\"Prepares the entire request with the given parameters.\"\"\"\n \n         self.prepare_method(method)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#04ed1e512214a9065ee083b525f2a31d43a82aeb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 14 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 17 | Churn Cumulative: 3405 | Contributors (this commit): 86 | Commits (past 90d): 15 | Contributors (cumulative): 86 | DMM Complexity: 0.0\n\nDIFF:\n@@ -433,20 +433,9 @@ class Session(SessionRedirectMixin):\n         return p\n \n     def request(self, method, url,\n-        params=None,\n-        data=None,\n-        headers=None,\n-        cookies=None,\n-        files=None,\n-        auth=None,\n-        timeout=None,\n-        allow_redirects=True,\n-        proxies=None,\n-        hooks=None,\n-        stream=None,\n-        verify=None,\n-        cert=None,\n-        json=None):\n+            params=None, data=None, headers=None, cookies=None, files=None,\n+            auth=None, timeout=None, allow_redirects=True, proxies=None,\n+            hooks=None, stream=None, verify=None, cert=None, json=None):\n         \"\"\"Constructs a :class:`Request <Request>`, prepares it and sends it.\n         Returns :class:`Response <Response>` object.\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d78ec90e7b6dbb853db33fd10686f3ba5c4874f1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 2812 | Contributors (this commit): 77 | Commits (past 90d): 10 | Contributors (cumulative): 77 | DMM Complexity: None\n\nDIFF:\n@@ -494,8 +494,7 @@ def get_unicode_from_response(r):\n \n # The unreserved URI characters (RFC 3986)\n UNRESERVED_SET = frozenset(\n-    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n-    + \"0123456789-._~\")\n+    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\" + \"0123456789-._~\")\n \n \n def unquote_unreserved(uri):\n@@ -851,6 +850,7 @@ def get_auth_from_url(url):\n _CLEAN_HEADER_REGEX_BYTE = re.compile(b'^\\\\S[^\\\\r\\\\n]*$|^$')\n _CLEAN_HEADER_REGEX_STR = re.compile(r'^\\S[^\\r\\n]*$|^$')\n \n+\n def check_header_validity(header):\n     \"\"\"Verifies that header value is a string which doesn't contain\n     leading whitespace or return characters. This prevents unintended\n@@ -888,6 +888,7 @@ def urldefragauth(url):\n \n     return urlunparse((scheme, netloc, path, params, query, ''))\n \n+\n def rewind_body(prepared_request):\n     \"\"\"Move file pointer back to its recorded starting position\n     so it can be read again on redirect.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#0f57faba7007eede15a0207907c51cc954df5295", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 530 | Contributors (this commit): 8 | Commits (past 90d): 5 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -126,7 +126,7 @@ html_theme = 'alabaster'\n # documentation.\n html_theme_options = {\n     'show_powered_by': False,\n-    'github_user': 'kennethreitz',\n+    'github_user': 'requests',\n     'github_repo': 'requests',\n     'github_banner': True,\n     'show_related': False\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#98bbf8d17088cc9e11b30038e451cbafba1ef7e2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 5 | Churn Cumulative: 634 | Contributors (this commit): 24 | Commits (past 90d): 24 | Contributors (cumulative): 24 | DMM Complexity: 1.0\n\nDIFF:\n@@ -8,7 +8,6 @@ from codecs import open\n \n from setuptools import setup\n from setuptools.command.test import test as TestCommand\n-from multiprocessing import cpu_count\n \n here = os.path.abspath(os.path.dirname(__file__))\n \n@@ -17,7 +16,11 @@ class PyTest(TestCommand):\n \n     def initialize_options(self):\n         TestCommand.initialize_options(self)\n+        try:\n+            from multiprocessing import cpu_count\n             self.pytest_args = ['-n', str(cpu_count()), '--boxed']\n+        except (ImportError, NotImplementedError):\n+            self.pytest_args = ['-n', '1', '--boxed']\n \n     def finalize_options(self):\n         TestCommand.finalize_options(self)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#0abb69b1cb3fbad9db7b52be363e939673c5c429", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 28 | Contributors (this commit): 2 | Commits (past 90d): 6 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -23,7 +23,7 @@ else:\n \n \n def _implementation():\n-    \"\"\"Return a dict with the Python implementation and verison.\n+    \"\"\"Return a dict with the Python implementation and version.\n \n     Provide both the name and the version of the Python implementation\n     currently running. For example, on CPython 2.7.5 it will return\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4847f5b8cd4071099f06e178856bc9e1b9193b2e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 12 | Churn Cumulative: 14167 | Contributors (this commit): 201 | Commits (past 90d): 23 | Contributors (cumulative): 235 | DMM Complexity: 1.0\n\nDIFF:\n@@ -634,6 +634,12 @@ class Response(object):\n         #: is a response.\n         self.request = None\n \n+    def __enter__(self):\n+        return self\n+\n+    def __exit__(self, *args):\n+        self.close()\n+\n     def __getstate__(self):\n         # Consume everything; accessing the content attribute makes\n         # sure the content has been fully read.\n\n@@ -1668,6 +1668,12 @@ class TestRequests:\n         next(it)\n         assert len(list(it)) == 3\n \n+    def test_response_context_manager(self, httpbin):\n+        with requests.get(httpbin('stream/4'), stream=True) as response:\n+            assert isinstance(response, requests.Response)\n+\n+        assert response.raw.closed\n+\n     def test_unconsumed_session_response_closes_connection(self, httpbin):\n         s = requests.session()\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d8e236780981f28228441029c689a5e8dccdd71b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 27 | Lines Deleted: 14 | Files Changed: 2 | Hunks: 10 | Methods Changed: 1 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 41 | Churn Cumulative: 1017 | Contributors (this commit): 28 | Commits (past 90d): 17 | Contributors (cumulative): 34 | DMM Complexity: 1.0\n\nDIFF:\n@@ -40,34 +40,44 @@ is at <http://python-requests.org>.\n :license: Apache 2.0, see LICENSE for more details.\n \"\"\"\n \n-# Check urllib3 for compatibility.\n import urllib3\n-urllib3_version = urllib3.__version__.split('.')\n+import chardet\n+import warnings\n+from .exceptions import RequestsDependencyWarning\n+\n+\n+def check_compatibility(urllib3_version, chardet_version):\n+    urllib3_version = urllib3_version.split('.')\n+    assert urllib3_version != ['dev']  # Verify urllib3 isn't installed from git.\n+\n     # Sometimes, urllib3 only reports its version as 16.1.\n     if len(urllib3_version) == 2:\n         urllib3_version.append('0')\n-major, minor, patch = urllib3_version\n+\n+    # Check urllib3 for compatibility.\n+    major, minor, patch = urllib3_version  # noqa: F811\n     major, minor, patch = int(major), int(minor), int(patch)\n     # urllib3 >= 1.21.1, < 1.22\n-try:\n     assert major == 1\n     assert minor >= 21\n     assert minor <= 22\n-except AssertionError:\n-    raise RuntimeError('Requests dependency \\'urllib3\\' must be version >= 1.21.1, < 1.22!')\n-\n \n     # Check chardet for compatibility.\n-import chardet\n-major, minor, patch = chardet.__version__.split('.')[:3]\n+    major, minor, patch = chardet_version.split('.')[:3]\n     major, minor, patch = int(major), int(minor), int(patch)\n     # chardet >= 3.0.2, < 3.1.0\n-try:\n     assert major == 3\n     assert minor < 1\n     assert patch >= 2\n-except AssertionError:\n-    raise RuntimeError('Requests dependency \\'chardet\\' must be version >= 3.0.2, < 3.1.0!')\n+\n+\n+# Check imported dependencies for compatibility.\n+try:\n+    check_compatibility(urllib3.__version__, chardet.__version__)\n+except (AssertionError, ValueError):\n+    warnings.warn(\"urllib3 ({0}) or chardet ({1}) doesn't match a supported \"\n+                  \"version!\".format(urllib3.__version__, chardet.__version__),\n+                  RequestsDependencyWarning)\n \n # Attempt to enable urllib3's SNI support, if possible\n try:\n@@ -76,8 +86,6 @@ try:\n except ImportError:\n     pass\n \n-import warnings\n-\n # urllib3's DependencyWarnings should be silenced.\n from urllib3.exceptions import DependencyWarning\n warnings.simplefilter('ignore', DependencyWarning)\n\n@@ -115,3 +115,8 @@ class RequestsWarning(Warning):\n class FileModeWarning(RequestsWarning, DeprecationWarning):\n     \"\"\"A file was opened in text mode, but Requests determined its binary length.\"\"\"\n     pass\n+\n+\n+class RequestsDependencyWarning(RequestsWarning):\n+    \"\"\"An imported dependency doesn't match the expected version range.\"\"\"\n+    pass\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#22d12b0501fa633b80bcda303a718696e408ebfb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1213 | Contributors (this commit): 47 | Commits (past 90d): 4 | Contributors (cumulative): 47 | DMM Complexity: None\n\nDIFF:\n@@ -73,7 +73,7 @@ def get(url, params=None, **kwargs):\n \n \n def options(url, **kwargs):\n-    r\"\"\"Sends a OPTIONS request.\n+    r\"\"\"Sends an OPTIONS request.\n \n     :param url: URL for the new :class:`Request` object.\n     :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#1d7fd6c8b305351ba34280492fa3a9cf968cfbb8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 31 | Lines Deleted: 5 | Files Changed: 2 | Hunks: 5 | Methods Changed: 4 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 36 | Churn Cumulative: 4138 | Contributors (this commit): 80 | Commits (past 90d): 15 | Contributors (cumulative): 96 | DMM Complexity: 1.0\n\nDIFF:\n@@ -612,14 +612,14 @@ def set_environ(env_name, value):\n     the environment variable 'env_name'.\n \n     If 'value' is None, do nothing\"\"\"\n-    if value is not None:\n+    value_changed = value is not None\n+    if value_changed:\n         old_value = os.environ.get(env_name)\n         os.environ[env_name] = value\n     try:\n         yield\n     finally:\n-        if value is None:\n-            return\n+        if value_changed:\n             if old_value is None:\n                 del os.environ[env_name]\n             else:\n\n@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n \n import os\n+import copy\n from io import BytesIO\n \n import pytest\n@@ -17,7 +18,7 @@ from requests.utils import (\n     requote_uri, select_proxy, should_bypass_proxies, super_len,\n     to_key_val_list, to_native_string,\n     unquote_header_value, unquote_unreserved,\n-    urldefragauth, add_dict_to_cookiejar)\n+    urldefragauth, add_dict_to_cookiejar, set_environ)\n from requests._internal_utils import unicode_is_ascii\n \n from .compat import StringIO, cStringIO\n@@ -651,4 +652,29 @@ def test_should_bypass_proxies_win_registry(url, expected, override,\n     monkeypatch.setenv('NO_PROXY', '')\n     monkeypatch.setattr(winreg, 'OpenKey', OpenKey)\n     monkeypatch.setattr(winreg, 'QueryValueEx', QueryValueEx)\n-    assert should_bypass_proxies(url, no_proxy=None) == expected\n+\n+\n+@pytest.mark.parametrize(\n+    'env_name, value', (\n+            ('no_proxy', '192.168.0.0/24,127.0.0.1,localhost.localdomain'),\n+            ('no_proxy', None),\n+            ('a_new_key', '192.168.0.0/24,127.0.0.1,localhost.localdomain'),\n+            ('a_new_key', None),\n+    ))\n+def test_set_environ(env_name, value):\n+    \"\"\"Tests set_environ will set environ values and will restore the environ.\"\"\"\n+    environ_copy = copy.deepcopy(os.environ)\n+    with set_environ(env_name, value):\n+        assert os.environ.get(env_name) == value\n+\n+    assert os.environ == environ_copy\n+\n+\n+def test_set_environ_raises_exception():\n+    \"\"\"Tests set_environ will raise exceptions in context when the\n+    value parameter is None.\"\"\"\n+    with pytest.raises(Exception) as exception:\n+        with set_environ('test1', None):\n+            raise Exception('Expected exception')\n+\n+    assert 'Expected exception' in str(exception.value)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c6a634715637e971e485766bfa37c73613ab7b82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 3 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): -111/0 | Churn Δ: 1 | Churn Cumulative: 8113 | Contributors (this commit): 129 | Commits (past 90d): 34 | Contributors (cumulative): 154 | DMM Complexity: None\n\nDIFF:\n\n\n@@ -1,4 +1,3 @@\n-#!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n \"\"\"Tests for Requests.\"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#a0f0258eeea538a12450977584f8d3dca8927ba7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 4445 | Contributors (this commit): 61 | Commits (past 90d): 15 | Contributors (cumulative): 61 | DMM Complexity: None\n\nDIFF:\n@@ -2369,7 +2369,7 @@ class TestPreparingURLs(object):\n     )\n     def test_parameters_for_nonstandard_schemes(self, input, params, expected):\n         \"\"\"\n-        Setting paramters for nonstandard schemes is allowed if those schemes\n+        Setting parameters for nonstandard schemes is allowed if those schemes\n         begin with \"http\", and is forbidden otherwise.\n         \"\"\"\n         r = requests.Request('GET', url=input, params=params)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d93b37cee77c45807cc6659bbd971d2b983c03b1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 90 | Contributors (this commit): 2 | Commits (past 90d): 18 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -5,8 +5,8 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.17.3'\n-__build__ = 0x021703\n+__version__ = '2.18.0'\n+__build__ = 0x021800\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#51de61f914fda8d4f6a8ac8c2852abcc82b0b94e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 94 | Contributors (this commit): 2 | Commits (past 90d): 19 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -5,8 +5,8 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.18.0'\n-__build__ = 0x021800\n+__version__ = '2.18.1'\n+__build__ = 0x021801\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c054a722bb92d2ed628c22212eed180175e56685", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 245 | Contributors (this commit): 20 | Commits (past 90d): 3 | Contributors (cumulative): 20 | DMM Complexity: None\n\nDIFF:\n@@ -27,9 +27,7 @@ is_py3 = (_ver[0] == 3)\n \n try:\n     import simplejson as json\n-except (ImportError, SyntaxError):\n-    # simplejson does not support Python 3.2, it throws a SyntaxError\n-    # because of u'...' Unicode literals.\n+except ImportError:\n     import json\n \n # ---------\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f6e07bb27f9fe092dabb1945ef7fd515db7870fe", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 10 | Churn Cumulative: 38 | Contributors (this commit): 3 | Commits (past 90d): 7 | Contributors (cumulative): 3 | DMM Complexity: 1.0\n\nDIFF:\n@@ -85,12 +85,16 @@ def info():\n         'version': getattr(cryptography, '__version__', ''),\n     }\n \n+    # OPENSSL_VERSION_NUMBER doesn't exist in the Python 2.6 ssl module.\n+    system_ssl = getattr(ssl, 'OPENSSL_VERSION_NUMBER', None)\n+    system_ssl_info = {\n+        'version': '%x' % system_ssl if system_ssl is not None else ''\n+    }\n+\n     return {\n         'platform': platform_info,\n         'implementation': implementation_info,\n-        'system_ssl': {\n-            'version': '%x' % ssl.OPENSSL_VERSION_NUMBER,\n-        },\n+        'system_ssl': system_ssl_info,\n         'using_pyopenssl': pyopenssl is not None,\n         'pyOpenSSL': pyopenssl_info,\n         'urllib3': urllib3_info,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#51feabbc27821c5acb7f0ceb932d19c0d79f16d1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 21 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 21 | Churn Cumulative: 21 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -0,0 +1,21 @@\n+# -*- encoding: utf-8\n+\n+import sys\n+\n+import pytest\n+\n+from requests.help import info\n+\n+\n+@pytest.mark.skipif(sys.version_info[:2] != (2,6), reason=\"Only run on Python 2.6\")\n+def test_system_ssl_py26():\n+    \"\"\"OPENSSL_VERSION_NUMBER isn't provided in Python 2.6, verify we don't\n+    blow up in this case.\n+    \"\"\"\n+    assert info()['system_ssl'] == {'version': ''}\n+\n+\n+@pytest.mark.skipif(sys.version_info < (2,7), reason=\"Only run on Python 2.7+\")\n+def test_system_ssl():\n+    \"\"\"Verify we're actually setting system_ssl when it should be available.\"\"\"\n+    assert info()['system_ssl']['version'] != ''\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d8c2fdf92f6f2124bb4ef73dd898f1c1824b7c9b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 101/101 | Churn Δ: 2 | Churn Cumulative: 3407 | Contributors (this commit): 88 | Commits (past 90d): 12 | Contributors (cumulative): 88 | DMM Complexity: None\n\nDIFF:\n@@ -704,7 +704,7 @@ class Session(SessionRedirectMixin):\n     def mount(self, prefix, adapter):\n         \"\"\"Registers a connection adapter to a prefix.\n \n-        Adapters are sorted in descending order by key length.\n+        Adapters are sorted in descending order by prefix length.\n         \"\"\"\n         self.adapters[prefix] = adapter\n         keys_to_move = [k for k in self.adapters if len(k) < len(prefix)]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#8d1228cd1943bfe89ffaae32e15b2feb3f8479f5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 636 | Contributors (this commit): 24 | Commits (past 90d): 25 | Contributors (cumulative): 24 | DMM Complexity: None\n\nDIFF:\n@@ -44,7 +44,7 @@ packages = ['requests']\n requires = [\n     'chardet>=3.0.2,<3.1.0',\n     'idna>=2.5,<2.6',\n-    'urllib3>=1.21.1,<1.22',\n+    'urllib3>=1.21.1,<1.23',\n     'certifi>=2017.4.17'\n \n ]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#6cc891fd3204c63e57ccfae4b91bb6edca2d876e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 98 | Contributors (this commit): 2 | Commits (past 90d): 20 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -5,8 +5,8 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.18.1'\n-__build__ = 0x021801\n+__version__ = '2.18.2'\n+__build__ = 0x021802\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#b77c1a3debbca5f7317773a2a7a75540ad4c45cf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 803 | Contributors (this commit): 17 | Commits (past 90d): 15 | Contributors (cumulative): 17 | DMM Complexity: None\n\nDIFF:\n@@ -57,7 +57,7 @@ def check_compatibility(urllib3_version, chardet_version):\n     # Check urllib3 for compatibility.\n     major, minor, patch = urllib3_version  # noqa: F811\n     major, minor, patch = int(major), int(minor), int(patch)\n-    # urllib3 >= 1.21.1, < 1.22\n+    # urllib3 >= 1.21.1, <= 1.22\n     assert major == 1\n     assert minor >= 21\n     assert minor <= 22\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
