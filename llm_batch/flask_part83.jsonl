{"custom_id": "flask#ca278a8694f42e569a6d9f7d71c669465019bf06", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 21 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 648 | Contributors (this commit): 29 | Commits (past 90d): 25 | Contributors (cumulative): 49 | DMM Complexity: None\n\nDIFF:\n@@ -4,12 +4,13 @@ import io\n import re\n from collections import OrderedDict\n \n+from setuptools import find_packages\n from setuptools import setup\n \n with io.open(\"README.rst\", \"rt\", encoding=\"utf8\") as f:\n     readme = f.read()\n \n-with io.open(\"flask/__init__.py\", \"rt\", encoding=\"utf8\") as f:\n+with io.open(\"src/flask/__init__.py\", \"rt\", encoding=\"utf8\") as f:\n     version = re.search(r\"__version__ = \\\"(.*?)\\\"\", f.read()).group(1)\n \n setup(\n@@ -30,7 +31,8 @@ setup(\n     maintainer_email=\"contact@palletsprojects.com\",\n     description=\"A simple framework for building complex web applications.\",\n     long_description=readme,\n-    packages=[\"flask\", \"flask.json\"],\n+    packages=find_packages(\"src\"),\n+    package_dir={\"\": \"src\"},\n     include_package_data=True,\n     zip_safe=False,\n     platforms=\"any\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#43483683b2bc8da85f00ccccdfb8d9d5c77a6bb3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 284 | Lines Deleted: 246 | Files Changed: 55 | Hunks: 123 | Methods Changed: 6 | Complexity Δ (Sum/Max): 975/224 | Churn Δ: 530 | Churn Cumulative: 17712 | Contributors (this commit): 110 | Commits (past 90d): 143 | Contributors (cumulative): 285 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,4 +1,6 @@\n-from flask import jsonify, render_template, request\n+from flask import jsonify\n+from flask import render_template\n+from flask import request\n \n from js_example import app\n \n\n@@ -1,6 +1,7 @@\n import io\n \n-from setuptools import find_packages, setup\n+from setuptools import find_packages\n+from setuptools import setup\n \n with io.open(\"README.rst\", \"rt\", encoding=\"utf8\") as f:\n     readme = f.read()\n\n@@ -1,5 +1,4 @@\n import pytest\n-\n from flask import template_rendered\n \n \n\n@@ -1,16 +1,15 @@\n import functools\n \n-from flask import (\n-    Blueprint,\n-    flash,\n-    g,\n-    redirect,\n-    render_template,\n-    request,\n-    session,\n-    url_for,\n-)\n-from werkzeug.security import check_password_hash, generate_password_hash\n+from flask import Blueprint\n+from flask import flash\n+from flask import g\n+from flask import redirect\n+from flask import render_template\n+from flask import request\n+from flask import session\n+from flask import url_for\n+from werkzeug.security import check_password_hash\n+from werkzeug.security import generate_password_hash\n \n from flaskr.db import get_db\n \n\n@@ -1,4 +1,10 @@\n-from flask import Blueprint, flash, g, redirect, render_template, request, url_for\n+from flask import Blueprint\n+from flask import flash\n+from flask import g\n+from flask import redirect\n+from flask import render_template\n+from flask import request\n+from flask import url_for\n from werkzeug.exceptions import abort\n \n from flaskr.auth import login_required\n\n@@ -1,7 +1,8 @@\n import sqlite3\n \n import click\n-from flask import current_app, g\n+from flask import current_app\n+from flask import g\n from flask.cli import with_appcontext\n \n \n\n@@ -1,6 +1,7 @@\n import io\n \n-from setuptools import find_packages, setup\n+from setuptools import find_packages\n+from setuptools import setup\n \n with io.open(\"README.rst\", \"rt\", encoding=\"utf8\") as f:\n     readme = f.read()\n\n@@ -2,8 +2,10 @@ import os\n import tempfile\n \n import pytest\n+\n from flaskr import create_app\n-from flaskr.db import get_db, init_db\n+from flaskr.db import get_db\n+from flaskr.db import init_db\n \n # read in SQL for populating test data\n with open(os.path.join(os.path.dirname(__file__), \"data.sql\"), \"rb\") as f:\n\n@@ -1,5 +1,7 @@\n import pytest\n-from flask import g, session\n+from flask import g\n+from flask import session\n+\n from flaskr.db import get_db\n \n \n\n@@ -1,4 +1,5 @@\n import pytest\n+\n from flaskr.db import get_db\n \n \n\n@@ -1,6 +1,7 @@\n import sqlite3\n \n import pytest\n+\n from flaskr.db import get_db\n \n \n\n@@ -4,8 +4,10 @@ from __future__ import print_function\n import os\n import re\n import sys\n-from datetime import date, datetime\n-from subprocess import PIPE, Popen\n+from datetime import date\n+from datetime import datetime\n+from subprocess import PIPE\n+from subprocess import Popen\n \n _date_strip_re = re.compile(r\"(?<=\\d)(st|nd|rd|th)\")\n \n\n@@ -9,64 +9,51 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n-__version__ = \"1.1.dev\"\n-\n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n+from jinja2 import escape\n+from jinja2 import Markup\n from werkzeug.exceptions import abort\n from werkzeug.utils import redirect\n-from jinja2 import Markup, escape\n \n-from .app import Flask, Request, Response\n-from .config import Config\n-from .helpers import (\n-    url_for,\n-    flash,\n-    send_file,\n-    send_from_directory,\n-    get_flashed_messages,\n-    get_template_attribute,\n-    make_response,\n-    safe_join,\n-    stream_with_context,\n-)\n-from .globals import (\n-    current_app,\n-    g,\n-    request,\n-    session,\n-    _request_ctx_stack,\n-    _app_ctx_stack,\n-)\n-from .ctx import (\n-    has_request_context,\n-    has_app_context,\n-    after_this_request,\n-    copy_current_request_context,\n-)\n-from .blueprints import Blueprint\n-from .templating import render_template, render_template_string\n-\n-# the signals\n-from .signals import (\n-    signals_available,\n-    template_rendered,\n-    request_started,\n-    request_finished,\n-    got_request_exception,\n-    request_tearing_down,\n-    appcontext_tearing_down,\n-    appcontext_pushed,\n-    appcontext_popped,\n-    message_flashed,\n-    before_render_template,\n-)\n-\n-# We're not exposing the actual json module but a convenient wrapper around\n-# it.\n from . import json\n+from .app import Flask\n+from .app import Request\n+from .app import Response\n+from .blueprints import Blueprint\n+from .config import Config\n+from .ctx import after_this_request\n+from .ctx import copy_current_request_context\n+from .ctx import has_app_context\n+from .ctx import has_request_context\n+from .globals import _app_ctx_stack\n+from .globals import _request_ctx_stack\n+from .globals import current_app\n+from .globals import g\n+from .globals import request\n+from .globals import session\n+from .helpers import flash\n+from .helpers import get_flashed_messages\n+from .helpers import get_template_attribute\n+from .helpers import make_response\n+from .helpers import safe_join\n+from .helpers import send_file\n+from .helpers import send_from_directory\n+from .helpers import stream_with_context\n+from .helpers import url_for\n+from .json import jsonify\n+from .signals import appcontext_popped\n+from .signals import appcontext_pushed\n+from .signals import appcontext_tearing_down\n+from .signals import before_render_template\n+from .signals import got_request_exception\n+from .signals import message_flashed\n+from .signals import request_finished\n+from .signals import request_started\n+from .signals import request_tearing_down\n+from .signals import signals_available\n+from .signals import template_rendered\n+from .templating import render_template\n+from .templating import render_template_string\n \n-# This was the only thing that Flask used to export at one point and it had\n-# a more generic name.\n-jsonify = json.jsonify\n+__version__ = \"1.1.dev\"\n\n@@ -10,7 +10,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import sys\n \n PY2 = sys.version_info[0] == 2\n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import os\n import sys\n import warnings\n@@ -17,50 +16,58 @@ from functools import update_wrapper\n from itertools import chain\n from threading import Lock\n \n-from werkzeug.datastructures import Headers, ImmutableDict\n-from werkzeug.exceptions import (\n-    BadRequest,\n-    BadRequestKeyError,\n-    HTTPException,\n-    InternalServerError,\n-    MethodNotAllowed,\n-    default_exceptions,\n-)\n-from werkzeug.routing import BuildError, Map, RequestRedirect, RoutingException, Rule\n+from werkzeug.datastructures import Headers\n+from werkzeug.datastructures import ImmutableDict\n+from werkzeug.exceptions import BadRequest\n+from werkzeug.exceptions import BadRequestKeyError\n+from werkzeug.exceptions import default_exceptions\n+from werkzeug.exceptions import HTTPException\n+from werkzeug.exceptions import InternalServerError\n+from werkzeug.exceptions import MethodNotAllowed\n+from werkzeug.routing import BuildError\n+from werkzeug.routing import Map\n+from werkzeug.routing import RequestRedirect\n+from werkzeug.routing import RoutingException\n+from werkzeug.routing import Rule\n from werkzeug.wrappers import BaseResponse\n \n-from . import cli, json\n-from ._compat import integer_types, reraise, string_types, text_type\n-from .config import Config, ConfigAttribute\n-from .ctx import AppContext, RequestContext, _AppCtxGlobals\n-from .globals import _request_ctx_stack, g, request, session\n-from .helpers import (\n-    _PackageBoundObject,\n-    _endpoint_from_view_func,\n-    find_package,\n-    get_env,\n-    get_debug_flag,\n-    get_flashed_messages,\n-    locked_cached_property,\n-    url_for,\n-    get_load_dotenv,\n-)\n+from . import cli\n+from . import json\n+from ._compat import integer_types\n+from ._compat import reraise\n+from ._compat import string_types\n+from ._compat import text_type\n+from .config import Config\n+from .config import ConfigAttribute\n+from .ctx import _AppCtxGlobals\n+from .ctx import AppContext\n+from .ctx import RequestContext\n+from .globals import _request_ctx_stack\n+from .globals import g\n+from .globals import request\n+from .globals import session\n+from .helpers import _endpoint_from_view_func\n+from .helpers import _PackageBoundObject\n+from .helpers import find_package\n+from .helpers import get_debug_flag\n+from .helpers import get_env\n+from .helpers import get_flashed_messages\n+from .helpers import get_load_dotenv\n+from .helpers import locked_cached_property\n+from .helpers import url_for\n from .json import jsonify\n from .logging import create_logger\n from .sessions import SecureCookieSessionInterface\n-from .signals import (\n-    appcontext_tearing_down,\n-    got_request_exception,\n-    request_finished,\n-    request_started,\n-    request_tearing_down,\n-)\n-from .templating import (\n-    DispatchingJinjaLoader,\n-    Environment,\n-    _default_template_ctx_processor,\n-)\n-from .wrappers import Request, Response\n+from .signals import appcontext_tearing_down\n+from .signals import got_request_exception\n+from .signals import request_finished\n+from .signals import request_started\n+from .signals import request_tearing_down\n+from .templating import _default_template_ctx_processor\n+from .templating import DispatchingJinjaLoader\n+from .templating import Environment\n+from .wrappers import Request\n+from .wrappers import Response\n \n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n@@ -1036,7 +1043,7 @@ class Flask(_PackageBoundObject):\n         \"\"\"\n         cls = self.test_client_class\n         if cls is None:\n-            from flask.testing import FlaskClient as cls\n+            from .testing import FlaskClient as cls\n         return cls(self, self.response_class, use_cookies=use_cookies, **kwargs)\n \n     def test_cli_runner(self, **kwargs):\n@@ -1052,7 +1059,7 @@ class Flask(_PackageBoundObject):\n         cls = self.test_cli_runner_class\n \n         if cls is None:\n-            from flask.testing import FlaskCliRunner as cls\n+            from .testing import FlaskCliRunner as cls\n \n         return cls(self, **kwargs)\n \n@@ -2356,7 +2363,7 @@ class Flask(_PackageBoundObject):\n         :param kwargs: other keyword arguments passed to\n             :class:`~werkzeug.test.EnvironBuilder`.\n         \"\"\"\n-        from flask.testing import EnvironBuilder\n+        from .testing import EnvironBuilder\n \n         builder = EnvironBuilder(self, *args, **kwargs)\n \n\n@@ -11,7 +11,8 @@\n \"\"\"\n from functools import update_wrapper\n \n-from .helpers import _PackageBoundObject, _endpoint_from_view_func\n+from .helpers import _endpoint_from_view_func\n+from .helpers import _PackageBoundObject\n \n # a singleton sentinel value for parameter defaults\n _sentinel = object()\n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n from __future__ import print_function\n \n import ast\n@@ -20,15 +19,20 @@ import sys\n import traceback\n from functools import update_wrapper\n from operator import attrgetter\n-from threading import Lock, Thread\n+from threading import Lock\n+from threading import Thread\n \n import click\n from werkzeug.utils import import_string\n \n-from . import __version__\n-from ._compat import getargspec, itervalues, reraise, text_type\n+from ._compat import getargspec\n+from ._compat import itervalues\n+from ._compat import reraise\n+from ._compat import text_type\n from .globals import current_app\n-from .helpers import get_debug_flag, get_env, get_load_dotenv\n+from .helpers import get_debug_flag\n+from .helpers import get_env\n+from .helpers import get_load_dotenv\n \n try:\n     import dotenv\n@@ -147,7 +151,7 @@ def find_app_by_string(script_info, module, app_name):\n     ``script_info`` argument and calls the function with the appropriate\n     arguments.\n     \"\"\"\n-    from flask import Flask\n+    from . import Flask\n \n     match = re.match(r\"^ *([^ ()]+) *(?:\\((.*?) *,? *\\))? *$\", app_name)\n \n@@ -258,7 +262,9 @@ def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n def get_version(ctx, param, value):\n     if not value or ctx.resilient_parsing:\n         return\n+\n     import werkzeug\n+    from . import __version__\n \n     message = \"Python %(python)s\\n\" \"Flask %(flask)s\\n\" \"Werkzeug %(werkzeug)s\"\n     click.echo(\n@@ -865,7 +871,7 @@ def shell_command():\n     without having to manually configure the application.\n     \"\"\"\n     import code\n-    from flask.globals import _app_ctx_stack\n+    from .globals import _app_ctx_stack\n \n     app = _app_ctx_stack.top.app\n     banner = \"Python %s on %s\\nApp: %s [%s]\\nInstance: %s\" % (\n\n@@ -8,14 +8,15 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n+import errno\n import os\n import types\n-import errno\n \n from werkzeug.utils import import_string\n-from ._compat import string_types, iteritems\n+\n from . import json\n+from ._compat import iteritems\n+from ._compat import string_types\n \n \n class ConfigAttribute(object):\n\n@@ -8,15 +8,17 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import sys\n from functools import update_wrapper\n \n from werkzeug.exceptions import HTTPException\n \n-from .globals import _request_ctx_stack, _app_ctx_stack\n-from .signals import appcontext_pushed, appcontext_popped\n-from ._compat import BROKEN_PYPY_CTXMGR_EXIT, reraise\n+from ._compat import BROKEN_PYPY_CTXMGR_EXIT\n+from ._compat import reraise\n+from .globals import _app_ctx_stack\n+from .globals import _request_ctx_stack\n+from .signals import appcontext_popped\n+from .signals import appcontext_pushed\n \n \n # a singleton sentinel value for parameter defaults\n\n@@ -8,11 +8,11 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import os\n from warnings import warn\n \n-from ._compat import implements_to_string, text_type\n+from ._compat import implements_to_string\n+from ._compat import text_type\n from .app import Flask\n from .blueprints import Blueprint\n from .globals import _request_ctx_stack\n\n@@ -9,9 +9,10 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n from functools import partial\n-from werkzeug.local import LocalStack, LocalProxy\n+\n+from werkzeug.local import LocalProxy\n+from werkzeug.local import LocalStack\n \n \n _request_ctx_err_msg = \"\"\"\\\n\n@@ -9,29 +9,37 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import io\n+import mimetypes\n import os\n-import socket\n-import sys\n import pkgutil\n import posixpath\n-import mimetypes\n+import socket\n+import sys\n+import unicodedata\n+from functools import update_wrapper\n+from threading import RLock\n from time import time\n from zlib import adler32\n-from threading import RLock\n-import unicodedata\n-from werkzeug.routing import BuildError\n-from functools import update_wrapper\n \n-from werkzeug.urls import url_quote\n-from werkzeug.datastructures import Headers\n-from werkzeug.exceptions import BadRequest, NotFound, RequestedRangeNotSatisfiable\n-\n-from werkzeug.wsgi import wrap_file\n from jinja2 import FileSystemLoader\n+from werkzeug.datastructures import Headers\n+from werkzeug.exceptions import BadRequest\n+from werkzeug.exceptions import NotFound\n+from werkzeug.exceptions import RequestedRangeNotSatisfiable\n+from werkzeug.routing import BuildError\n+from werkzeug.urls import url_quote\n+from werkzeug.wsgi import wrap_file\n \n+from ._compat import fspath\n+from ._compat import PY2\n+from ._compat import string_types\n+from ._compat import text_type\n+from .globals import _app_ctx_stack\n+from .globals import _request_ctx_stack\n+from .globals import current_app\n+from .globals import request\n+from .globals import session\n from .signals import message_flashed\n-from .globals import session, _request_ctx_stack, _app_ctx_stack, current_app, request\n-from ._compat import string_types, text_type, PY2, fspath\n \n # sentinel\n _missing = object()\n\n@@ -9,16 +9,17 @@ flask.json\n import codecs\n import io\n import uuid\n-from datetime import date, datetime\n-from flask.globals import current_app, request\n-from flask._compat import text_type, PY2\n+from datetime import date\n+from datetime import datetime\n \n-from werkzeug.http import http_date\n-from jinja2 import Markup\n-\n-# Use the same json implementation as itsdangerous on which we\n-# depend anyways.\n from itsdangerous import json as _json\n+from jinja2 import Markup\n+from werkzeug.http import http_date\n+\n+from .._compat import PY2\n+from .._compat import text_type\n+from ..globals import current_app\n+from ..globals import request\n \n try:\n     import dataclasses\n\n@@ -41,16 +41,19 @@ processes dicts first, so insert the new tag at the front of the order since\n :copyright: © 2010 by the Pallets team.\n :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n-from base64 import b64decode, b64encode\n+from base64 import b64decode\n+from base64 import b64encode\n from datetime import datetime\n from uuid import UUID\n \n from jinja2 import Markup\n-from werkzeug.http import http_date, parse_date\n+from werkzeug.http import http_date\n+from werkzeug.http import parse_date\n \n-from flask._compat import iteritems, text_type\n-from flask.json import dumps, loads\n+from .._compat import iteritems\n+from .._compat import text_type\n+from ..json import dumps\n+from ..json import loads\n \n \n class JSONTag(object):\n\n@@ -6,7 +6,6 @@ flask.logging\n :copyright: © 2010 by the Pallets team.\n :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n from __future__ import absolute_import\n \n import logging\n\n@@ -8,17 +8,18 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import hashlib\n import warnings\n from datetime import datetime\n \n-from itsdangerous import BadSignature, URLSafeTimedSerializer\n+from itsdangerous import BadSignature\n+from itsdangerous import URLSafeTimedSerializer\n from werkzeug.datastructures import CallbackDict\n \n-from flask._compat import collections_abc\n-from flask.helpers import is_ip, total_seconds\n-from flask.json.tag import TaggedJSONSerializer\n+from ._compat import collections_abc\n+from .helpers import is_ip\n+from .helpers import total_seconds\n+from .json.tag import TaggedJSONSerializer\n \n \n class SessionMixin(collections_abc.MutableMapping):\n\n@@ -9,13 +9,12 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n-signals_available = False\n try:\n     from blinker import Namespace\n \n     signals_available = True\n except ImportError:\n+    signals_available = False\n \n     class Namespace(object):\n         def signal(self, name, doc=None):\n\n@@ -8,11 +8,14 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n+from jinja2 import BaseLoader\n+from jinja2 import Environment as BaseEnvironment\n+from jinja2 import TemplateNotFound\n \n-from jinja2 import BaseLoader, Environment as BaseEnvironment, TemplateNotFound\n-\n-from .globals import _request_ctx_stack, _app_ctx_stack\n-from .signals import template_rendered, before_render_template\n+from .globals import _app_ctx_stack\n+from .globals import _request_ctx_stack\n+from .signals import before_render_template\n+from .signals import template_rendered\n \n \n def _default_template_ctx_processor():\n\n@@ -10,17 +10,17 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n import warnings\n-import werkzeug\n-import werkzeug.test\n from contextlib import contextmanager\n \n+import werkzeug.test\n from click.testing import CliRunner\n-from flask.cli import ScriptInfo\n from werkzeug.test import Client\n-from flask import _request_ctx_stack\n-from flask.json import dumps as json_dumps\n from werkzeug.urls import url_parse\n \n+from . import _request_ctx_stack\n+from .cli import ScriptInfo\n+from .json import dumps as json_dumps\n+\n \n class EnvironBuilder(werkzeug.test.EnvironBuilder):\n     \"\"\"An :class:`~werkzeug.test.EnvironBuilder`, that takes defaults from the\n\n@@ -8,9 +8,8 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n-from .globals import request\n from ._compat import with_metaclass\n+from .globals import request\n \n \n http_method_funcs = frozenset(\n\n@@ -8,13 +8,13 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n from werkzeug.exceptions import BadRequest\n-from werkzeug.wrappers import Request as RequestBase, Response as ResponseBase\n+from werkzeug.wrappers import Request as RequestBase\n+from werkzeug.wrappers import Response as ResponseBase\n from werkzeug.wrappers.json import JSONMixin as _JSONMixin\n \n-from flask import json\n-from flask.globals import current_app\n+from . import json\n+from .globals import current_app\n \n \n class JSONMixin(_JSONMixin):\n\n@@ -6,7 +6,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import gc\n import os\n import pkgutil\n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import pytest\n \n import flask\n\n@@ -1,4 +1,5 @@\n-from flask import Blueprint, render_template\n+from flask import Blueprint\n+from flask import render_template\n \n admin = Blueprint(\n     \"admin\",\n\n@@ -1,4 +1,5 @@\n-from flask import Blueprint, render_template\n+from flask import Blueprint\n+from flask import render_template\n \n frontend = Blueprint(\"frontend\", __name__, template_folder=\"templates\")\n \n\n@@ -1,4 +1,5 @@\n-from __future__ import absolute_import, print_function\n+from __future__ import absolute_import\n+from __future__ import print_function\n \n from flask import Flask\n \n\n@@ -1,4 +1,5 @@\n-from __future__ import absolute_import, print_function\n+from __future__ import absolute_import\n+from __future__ import print_function\n \n from flask import Flask\n \n\n@@ -1,4 +1,5 @@\n-from __future__ import absolute_import, print_function\n+from __future__ import absolute_import\n+from __future__ import print_function\n \n from flask import Flask\n \n\n@@ -1,4 +1,5 @@\n-from __future__ import absolute_import, print_function\n+from __future__ import absolute_import\n+from __future__ import print_function\n \n from flask import Flask\n \n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import re\n import sys\n import time\n@@ -18,7 +17,9 @@ from threading import Thread\n \n import pytest\n import werkzeug.serving\n-from werkzeug.exceptions import BadRequest, Forbidden, NotFound\n+from werkzeug.exceptions import BadRequest\n+from werkzeug.exceptions import Forbidden\n+from werkzeug.exceptions import NotFound\n from werkzeug.http import parse_date\n from werkzeug.routing import BuildError\n \n\n@@ -8,15 +8,14 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import functools\n+\n import pytest\n+from jinja2 import TemplateNotFound\n+from werkzeug.http import parse_cache_control_header\n \n import flask\n-\n from flask._compat import text_type\n-from werkzeug.http import parse_cache_control_header\n-from jinja2 import TemplateNotFound\n \n \n def test_blueprint_specific_error_handling(app, client):\n\n@@ -6,10 +6,8 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n # This file was part of Flask-CLI and was modified under the terms of\n # its Revised BSD License. Copyright © 2015 CERN.\n-\n from __future__ import absolute_import\n \n import os\n@@ -23,21 +21,21 @@ import pytest\n from _pytest.monkeypatch import notset\n from click.testing import CliRunner\n \n-from flask import Flask, current_app, Blueprint\n-from flask.cli import (\n-    AppGroup,\n-    FlaskGroup,\n-    NoAppException,\n-    ScriptInfo,\n-    dotenv,\n-    find_best_app,\n-    get_version,\n-    load_dotenv,\n-    locate_app,\n-    prepare_import,\n-    run_command,\n-    with_appcontext,\n-)\n+from flask import Blueprint\n+from flask import current_app\n+from flask import Flask\n+from flask.cli import AppGroup\n+from flask.cli import dotenv\n+from flask.cli import find_best_app\n+from flask.cli import FlaskGroup\n+from flask.cli import get_version\n+from flask.cli import load_dotenv\n+from flask.cli import locate_app\n+from flask.cli import NoAppException\n+from flask.cli import prepare_import\n+from flask.cli import run_command\n+from flask.cli import ScriptInfo\n+from flask.cli import with_appcontext\n \n cwd = os.getcwd()\n test_path = os.path.abspath(os.path.join(os.path.dirname(__file__), \"test_apps\"))\n\n@@ -6,14 +6,14 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n-from datetime import timedelta\n import os\n import textwrap\n+from datetime import timedelta\n+\n+import pytest\n \n import flask\n from flask._compat import PY2\n-import pytest\n \n \n # config keys used for the TestConfig\n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import datetime\n import io\n import os\n@@ -16,13 +15,18 @@ import uuid\n \n import pytest\n from werkzeug.datastructures import Range\n-from werkzeug.exceptions import BadRequest, NotFound\n-from werkzeug.http import http_date, parse_cache_control_header, parse_options_header\n+from werkzeug.exceptions import BadRequest\n+from werkzeug.exceptions import NotFound\n+from werkzeug.http import http_date\n+from werkzeug.http import parse_cache_control_header\n+from werkzeug.http import parse_options_header\n \n import flask\n from flask import json\n-from flask._compat import StringIO, text_type\n-from flask.helpers import get_debug_flag, get_env\n+from flask._compat import StringIO\n+from flask._compat import text_type\n+from flask.helpers import get_debug_flag\n+from flask.helpers import get_env\n \n \n def has_encoding(name):\n\n@@ -6,11 +6,11 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import os\n import sys\n \n import pytest\n+\n import flask\n from flask._compat import PY2\n \n\n@@ -6,14 +6,14 @@ tests.test_json_tag\n :copyright: © 2010 by the Pallets team.\n :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n from datetime import datetime\n from uuid import uuid4\n \n import pytest\n \n from flask import Markup\n-from flask.json.tag import TaggedJSONSerializer, JSONTag\n+from flask.json.tag import JSONTag\n+from flask.json.tag import TaggedJSONSerializer\n \n \n @pytest.mark.parametrize(\n\n@@ -6,14 +6,15 @@ tests.test_logging\n :copyright: © 2010 by the Pallets team.\n :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import logging\n import sys\n \n import pytest\n \n from flask._compat import StringIO\n-from flask.logging import default_handler, has_level_handler, wsgi_errors_stream\n+from flask.logging import default_handler\n+from flask.logging import has_level_handler\n+from flask.logging import wsgi_errors_stream\n \n \n @pytest.fixture(autouse=True)\n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import gc\n import sys\n import threading\n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import pytest\n \n import flask\n\n@@ -8,7 +8,6 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import pytest\n \n try:\n\n@@ -9,9 +9,7 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import flask\n-\n from flask._compat import StringIO\n \n \n\n@@ -8,13 +8,13 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n+import logging\n \n import pytest\n+import werkzeug.serving\n+from jinja2 import TemplateNotFound\n \n import flask\n-import logging\n-from jinja2 import TemplateNotFound\n-import werkzeug.serving\n \n \n def test_context_processing(app, client):\n\n@@ -10,15 +10,16 @@\n \"\"\"\n import click\n import pytest\n-\n-import flask\n import werkzeug\n \n+import flask\n from flask import appcontext_popped\n from flask._compat import text_type\n from flask.cli import ScriptInfo\n from flask.json import jsonify\n-from flask.testing import make_test_environ_builder, FlaskCliRunner, EnvironBuilder\n+from flask.testing import EnvironBuilder\n+from flask.testing import FlaskCliRunner\n+from flask.testing import make_test_environ_builder\n \n try:\n     import blinker\n\n@@ -6,8 +6,11 @@ tests.test_user_error_handler\n :copyright: © 2010 by the Pallets team.\n :license: BSD, see LICENSE for more details.\n \"\"\"\n+from werkzeug.exceptions import Forbidden\n+from werkzeug.exceptions import HTTPException\n+from werkzeug.exceptions import InternalServerError\n+from werkzeug.exceptions import NotFound\n \n-from werkzeug.exceptions import Forbidden, InternalServerError, HTTPException, NotFound\n import flask\n \n \n\n@@ -8,11 +8,9 @@\n     :copyright: © 2010 by the Pallets team.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n-\n import pytest\n from werkzeug.http import parse_set_header\n \n-import flask\n import flask.views\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#53c893b646252d610e877eb9385e9e250a1ae5e1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 17 | Lines Deleted: 18 | Files Changed: 10 | Hunks: 14 | Methods Changed: 13 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 35 | Churn Cumulative: 6738 | Contributors (this commit): 39 | Commits (past 90d): 41 | Contributors (cumulative): 64 | DMM Complexity: 1.0\n\nDIFF:\n@@ -74,7 +74,7 @@ def create():\n         else:\n             db = get_db()\n             db.execute(\n-                \"INSERT INTO post (title, body, author_id)\" \" VALUES (?, ?, ?)\",\n+                \"INSERT INTO post (title, body, author_id) VALUES (?, ?, ?)\",\n                 (title, body, g.user[\"id\"]),\n             )\n             db.commit()\n\n@@ -1931,7 +1931,7 @@ class Flask(_PackageBoundObject):\n             if not from_error_handler:\n                 raise\n             self.logger.exception(\n-                \"Request finalizing failed with an \" \"error while handling an error\"\n+                \"Request finalizing failed with an error while handling an error\"\n             )\n         return response\n \n\n@@ -266,7 +266,7 @@ def get_version(ctx, param, value):\n     import werkzeug\n     from . import __version__\n \n-    message = \"Python %(python)s\\n\" \"Flask %(flask)s\\n\" \"Werkzeug %(werkzeug)s\"\n+    message = \"Python %(python)s\\nFlask %(flask)s\\nWerkzeug %(werkzeug)s\"\n     click.echo(\n         message\n         % {\n\n@@ -437,9 +437,10 @@ class RequestContext(object):\n             if app_ctx is not None:\n                 app_ctx.pop(exc)\n \n-            assert (\n-                rv is self\n-            ), \"Popped wrong request context.  \" \"(%r instead of %r)\" % (rv, self)\n+            assert rv is self, \"Popped wrong request context. (%r instead of %r)\" % (\n+                rv,\n+                self,\n+            )\n \n     def auto_pop(self, exc):\n         if self.request.environ.get(\"flask._preserve_context\") or (\n\n@@ -94,7 +94,7 @@ def _endpoint_from_view_func(view_func):\n     \"\"\"Internal helper that returns the default endpoint for a given\n     function.  This always is the function name.\n     \"\"\"\n-    assert view_func is not None, \"expected view func if endpoint \" \"is not provided.\"\n+    assert view_func is not None, \"expected view func if endpoint is not provided.\"\n     return view_func.__name__\n \n \n@@ -598,9 +598,7 @@ def send_file(\n     headers = Headers()\n     if as_attachment:\n         if attachment_filename is None:\n-            raise TypeError(\n-                \"filename unavailable, required for \" \"sending as attachment\"\n-            )\n+            raise TypeError(\"filename unavailable, required for sending as attachment\")\n \n         if not isinstance(attachment_filename, text_type):\n             attachment_filename = attachment_filename.decode(\"utf-8\")\n\n@@ -156,7 +156,7 @@ class FlaskClient(Client):\n         \"\"\"\n         if self.cookie_jar is None:\n             raise RuntimeError(\n-                \"Session transactions only make sense \" \"with cookies enabled.\"\n+                \"Session transactions only make sense with cookies enabled.\"\n             )\n         app = self.application\n         environ_overrides = kwargs.setdefault(\"environ_overrides\", {})\n@@ -167,7 +167,7 @@ class FlaskClient(Client):\n             sess = session_interface.open_session(app, c.request)\n             if sess is None:\n                 raise RuntimeError(\n-                    \"Session backend did not open a session. \" \"Check the configuration\"\n+                    \"Session backend did not open a session. Check the configuration\"\n                 )\n \n             # Since we have to open a new request context for the session\n\n@@ -1726,7 +1726,7 @@ def test_routing_redirect_debugging(app, client):\n         with pytest.raises(AssertionError) as e:\n             client.post(\"/foo\", data={})\n         assert \"http://localhost/foo/\" in str(e)\n-        assert (\"Make sure to directly send \" \"your POST-request to this URL\") in str(e)\n+        assert (\"Make sure to directly send your POST-request to this URL\") in str(e)\n \n         rv = client.get(\"/foo\", data={}, follow_redirects=True)\n         assert rv.data == b\"success\"\n\n@@ -98,7 +98,7 @@ def test_config_from_envvar_missing(monkeypatch):\n         app.config.from_envvar(\"FOO_SETTINGS\")\n     msg = str(e.value)\n     assert msg.startswith(\n-        \"[Errno 2] Unable to load configuration \" \"file (No such file or directory):\"\n+        \"[Errno 2] Unable to load configuration file (No such file or directory):\"\n     )\n     assert msg.endswith(\"missing.cfg'\")\n     assert not app.config.from_envvar(\"FOO_SETTINGS\", silent=True)\n@@ -110,7 +110,7 @@ def test_config_missing():\n         app.config.from_pyfile(\"missing.cfg\")\n     msg = str(e.value)\n     assert msg.startswith(\n-        \"[Errno 2] Unable to load configuration \" \"file (No such file or directory):\"\n+        \"[Errno 2] Unable to load configuration file (No such file or directory):\"\n     )\n     assert msg.endswith(\"missing.cfg'\")\n     assert not app.config.from_pyfile(\"missing.cfg\", silent=True)\n@@ -122,7 +122,7 @@ def test_config_missing_json():\n         app.config.from_json(\"missing.json\")\n     msg = str(e.value)\n     assert msg.startswith(\n-        \"[Errno 2] Unable to load configuration \" \"file (No such file or directory):\"\n+        \"[Errno 2] Unable to load configuration file (No such file or directory):\"\n     )\n     assert msg.endswith(\"missing.json'\")\n     assert not app.config.from_json(\"missing.json\", silent=True)\n\n@@ -69,7 +69,7 @@ def test_installed_module_paths(\n     modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages, limit_loader\n ):\n     site_packages.join(\"site_app.py\").write(\n-        \"import flask\\n\" \"app = flask.Flask(__name__)\\n\"\n+        \"import flask\\napp = flask.Flask(__name__)\\n\"\n     )\n     purge_module(\"site_app\")\n \n\n@@ -46,7 +46,7 @@ def test_request_less_rendering(app, app_ctx):\n     def context_processor():\n         return dict(foo=42)\n \n-    rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} \" \"{{ foo }}\")\n+    rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} {{ foo }}\")\n     assert rv == \"Hello Special World 42\"\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#dbd4520ccbe0954d8ff4f926ba5f16c4f5291533", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 32 | Lines Deleted: 58 | Files Changed: 4 | Hunks: 18 | Methods Changed: 11 | Complexity Δ (Sum/Max): -17/0 | Churn Δ: 90 | Churn Cumulative: 7901 | Contributors (this commit): 66 | Commits (past 90d): 27 | Contributors (cumulative): 88 | DMM Complexity: 0.0\n\nDIFF:\n@@ -196,10 +196,3 @@ def purge_module(request):\n         request.addfinalizer(lambda: sys.modules.pop(name, None))\n \n     return inner\n-\n-\n-@pytest.fixture(autouse=True)\n-def catch_deprecation_warnings(recwarn):\n-    yield\n-    gc.collect()\n-    assert not recwarn.list, '\\n'.join(str(w.message) for w in recwarn.list)\n\n@@ -1442,62 +1442,46 @@ def test_request_locals():\n     assert not flask.g\n \n \n-def test_test_app_proper_environ():\n+def test_server_name_subdomain():\n     app = flask.Flask(__name__, subdomain_matching=True)\n-    app.config.update(\n-        SERVER_NAME='localhost.localdomain:5000'\n-    )\n     client = app.test_client()\n \n-    @app.route('/')\n+    @app.route(\"/\")\n     def index():\n-        return 'Foo'\n+        return \"default\"\n \n-    @app.route('/', subdomain='foo')\n+    @app.route(\"/\", subdomain=\"foo\")\n     def subdomain():\n-        return 'Foo SubDomain'\n+        return \"subdomain\"\n \n-    rv = client.get('/')\n-    assert rv.data == b'Foo'\n+    app.config[\"SERVER_NAME\"] = \"dev.local:5000\"\n+    rv = client.get(\"/\")\n+    assert rv.data == b\"default\"\n \n-    rv = client.get('/', 'http://localhost.localdomain:5000')\n-    assert rv.data == b'Foo'\n+    rv = client.get(\"/\", \"http://dev.local:5000\")\n+    assert rv.data == b\"default\"\n \n-    rv = client.get('/', 'https://localhost.localdomain:5000')\n-    assert rv.data == b'Foo'\n+    rv = client.get(\"/\", \"https://dev.local:5000\")\n+    assert rv.data == b\"default\"\n \n-    app.config.update(SERVER_NAME='localhost.localdomain')\n-    rv = client.get('/', 'https://localhost.localdomain')\n-    assert rv.data == b'Foo'\n+    app.config[\"SERVER_NAME\"] = \"dev.local:443\"\n+    rv = client.get(\"/\", \"https://dev.local\")\n \n-    try:\n-        app.config.update(SERVER_NAME='localhost.localdomain:443')\n-        rv = client.get('/', 'https://localhost.localdomain')\n-        # Werkzeug 0.8\n+    # Werkzeug 1.0 fixes matching https scheme with 443 port\n+    if rv.status_code != 404:\n+        assert rv.data == b\"default\"\n+\n+    app.config[\"SERVER_NAME\"] = \"dev.local\"\n+    rv = client.get(\"/\", \"https://dev.local\")\n+    assert rv.data == b\"default\"\n+\n+    # suppress Werkzeug 1.0 warning about name mismatch\n+    with pytest.warns(None):\n+        rv = client.get(\"/\", \"http://foo.localhost\")\n         assert rv.status_code == 404\n-    except ValueError as e:\n-        # Werkzeug 0.7\n-        assert str(e) == (\n-            \"the server name provided \"\n-            \"('localhost.localdomain:443') does not match the \"\n-            \"server name from the WSGI environment ('localhost.localdomain')\"\n-        )\n \n-    try:\n-        app.config.update(SERVER_NAME='localhost.localdomain')\n-        rv = client.get('/', 'http://foo.localhost')\n-        # Werkzeug 0.8\n-        assert rv.status_code == 404\n-    except ValueError as e:\n-        # Werkzeug 0.7\n-        assert str(e) == (\n-            \"the server name provided \"\n-            \"('localhost.localdomain') does not match the \"\n-            \"server name from the WSGI environment ('foo.localhost')\"\n-        )\n-\n-    rv = client.get('/', 'http://foo.localhost.localdomain')\n-    assert rv.data == b'Foo SubDomain'\n+    rv = client.get(\"/\", \"http://foo.dev.local\")\n+    assert rv.data == b\"subdomain\"\n \n \n def test_exception_propagation(app, client):\n@@ -1854,6 +1838,8 @@ def test_subdomain_matching_other_name(matching):\n     def index():\n         return '', 204\n \n+    # suppress Werkzeug 0.15 warning about name mismatch\n+    with pytest.warns(None):\n         # ip address can't match name\n         rv = client.get('/', 'http://127.0.0.1:3000/')\n         assert rv.status_code == 404 if matching else 204\n\n@@ -443,7 +443,7 @@ class TestSendfile(object):\n             assert rv.data == f.read()\n         rv.close()\n \n-    def test_send_file_xsendfile(self, app, req_ctx, catch_deprecation_warnings):\n+    def test_send_file_xsendfile(self, app, req_ctx):\n         app.use_x_sendfile = True\n         rv = flask.send_file('static/index.html')\n         assert rv.direct_passthrough\n\n@@ -88,15 +88,10 @@ def test_proper_test_request_context(app):\n         assert flask.url_for('sub', _external=True) == \\\n                'http://foo.localhost.localdomain:5000/'\n \n-    try:\n+    # suppress Werkzeug 0.15 warning about name mismatch\n+    with pytest.warns(None):\n         with app.test_request_context('/', environ_overrides={'HTTP_HOST': 'localhost'}):\n             pass\n-    except ValueError as e:\n-        assert str(e) == (\n-            \"the server name provided \"\n-            \"('localhost.localdomain:5000') does not match the \"\n-            \"server name from the WSGI environment ('localhost')\"\n-        )\n \n     app.config.update(SERVER_NAME='localhost')\n     with app.test_request_context('/', environ_overrides={'SERVER_NAME': 'localhost'}):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b89bf9e6d7555743903ed3820156c3da7a571411", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 18 | Churn Cumulative: 900 | Contributors (this commit): 25 | Commits (past 90d): 6 | Contributors (cumulative): 25 | DMM Complexity: None\n\nDIFF:\n@@ -87,6 +87,24 @@ class Blueprint(_PackageBoundObject):\n     information.\n \n     .. versionadded:: 0.7\n+\n+    :param name: the name of the Blueprint\n+    :param import_name: the name of the Blueprint package, __name__ most of the time.\n+            The module folder will be the blueprint resource folder by default.\n+    :param static_folder: you can serve your Blueprint static files by setting `static_folder`\n+            to the folder with static files to serve at `static_url`.\n+            The path can be absolute or relative to the Blueprint resource folder\n+    :param static_url: the url to serve static files from. Defaults to ``static_folder``.\n+            If your app's static_url is the same, your Blueprint's files won't be accessible.\n+    :param template_folder: your blueprint can expose template from this folder by adding this path\n+            to the search path of templates. The path can be absolute or relative to\n+            the Blueprint resource folder.\n+    :param url_prefix: url to prefix all the Blueprint routes.\n+    :param subdomain: If set up, Blueprint routes will match on this subdomain.\n+    :param url_defaults: Blueprint routes will use these default values for\n+            view arguments.\n+    :param root_path: you can specify a different root_path than the module folder.\n+            to become your Blueprint resource folder.\n     \"\"\"\n \n     warn_on_modifications = False\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#571b9f54e745849087f43b63a9788ded9edd0eb7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 42 | Lines Deleted: 22 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 64 | Churn Cumulative: 964 | Contributors (this commit): 25 | Commits (past 90d): 7 | Contributors (cumulative): 25 | DMM Complexity: None\n\nDIFF:\n@@ -80,31 +80,51 @@ class BlueprintSetupState(object):\n \n \n class Blueprint(_PackageBoundObject):\n-    \"\"\"Represents a blueprint.  A blueprint is an object that records\n-    functions that will be called with the\n-    :class:`~flask.blueprints.BlueprintSetupState` later to register functions\n-    or other things on the main application.  See :ref:`blueprints` for more\n-    information.\n+    \"\"\"Represents a blueprint, a collection of routes and other\n+    app-related functions that can be registered on a real application\n+    later.\n+\n+    A blueprint is an object that allows defining application functions\n+    without requiring an application object ahead of time. It uses the\n+    same decorators as :class:`~flask.Flask`, but defers the need for an\n+    application by recording them for later registration.\n+\n+    Decorating a function with a blueprint creates a deferred function\n+    that is called with :class:`~flask.blueprints.BlueprintSetupState`\n+    when the blueprint is registered on an application.\n+\n+    See :ref:`blueprints` for more information.\n \n     .. versionadded:: 0.7\n \n-    :param name: the name of the Blueprint\n-    :param import_name: the name of the Blueprint package, __name__ most of the time.\n-            The module folder will be the blueprint resource folder by default.\n-    :param static_folder: you can serve your Blueprint static files by setting `static_folder`\n-            to the folder with static files to serve at `static_url`.\n-            The path can be absolute or relative to the Blueprint resource folder\n-    :param static_url: the url to serve static files from. Defaults to ``static_folder``.\n-            If your app's static_url is the same, your Blueprint's files won't be accessible.\n-    :param template_folder: your blueprint can expose template from this folder by adding this path\n-            to the search path of templates. The path can be absolute or relative to\n-            the Blueprint resource folder.\n-    :param url_prefix: url to prefix all the Blueprint routes.\n-    :param subdomain: If set up, Blueprint routes will match on this subdomain.\n-    :param url_defaults: Blueprint routes will use these default values for\n-            view arguments.\n-    :param root_path: you can specify a different root_path than the module folder.\n-            to become your Blueprint resource folder.\n+    :param name: The name of the blueprint. Will be prepended to each\n+        endpoint name.\n+    :param import_name: The name of the blueprint package, usually\n+        ``__name__``. This helps locate the ``root_path`` for the\n+        blueprint.\n+    :param static_folder: A folder with static files that should be\n+        served by the blueprint's static route. The path is relative to\n+        the blueprint's root path. Blueprint static files are disabled\n+        by default.\n+    :param static_url_path: The url to serve static files from.\n+        Defaults to ``static_folder``. If the blueprint does not have\n+        a ``url_prefix``, the app's static route will take precedence,\n+        and the blueprint's static files won't be accessible.\n+    :param template_folder: A folder with templates that should be added\n+        to the app's template search path. The path is relative to the\n+        blueprint's root path. Blueprint templates are disabled by\n+        default. Blueprint templates have a lower precedence than those\n+        in the app's templates folder.\n+    :param url_prefix: A path to prepend to all of the blueprint's URLs,\n+        to make them distinct from the rest of the app's routes.\n+    :param subdomain: A subdomain that blueprint routes will match on by\n+        default.\n+    :param url_defaults: A dict of default values that blueprint routes\n+        will receive by default.\n+    :param root_path: By default, the blueprint will automatically this\n+        based on ``import_name``. In certain situations this automatic\n+        detection can fail, so the path can be specified manually\n+        instead.\n     \"\"\"\n \n     warn_on_modifications = False\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
