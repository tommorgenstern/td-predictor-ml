{"custom_id": "requests#af1b542e200047c1285f74192e3977c616d9e72f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 367 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 74 | Methods Changed: 73 | Complexity Δ (Sum/Max): 73/73 | Churn Δ: 368 | Churn Cumulative: 7635 | Contributors (this commit): 2 | Commits (past 90d): 1 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -3,7 +3,9 @@\n \n \"\"\"IDNA Mapping Table from UTS46.\"\"\"\n \n-uts46data = (\n+\n+def _seg_0():\n+    return [\n     (0x0, '3'),\n     (0x1, '3'),\n     (0x2, '3'),\n@@ -104,6 +106,10 @@ uts46data = (\n     (0x61, 'V'),\n     (0x62, 'V'),\n     (0x63, 'V'),\n+    ]\n+\n+def _seg_1():\n+    return [\n     (0x64, 'V'),\n     (0x65, 'V'),\n     (0x66, 'V'),\n@@ -204,6 +210,10 @@ uts46data = (\n     (0xC5, 'M', u'å'),\n     (0xC6, 'M', u'æ'),\n     (0xC7, 'M', u'ç'),\n+    ]\n+\n+def _seg_2():\n+    return [\n     (0xC8, 'M', u'è'),\n     (0xC9, 'M', u'é'),\n     (0xCA, 'M', u'ê'),\n@@ -304,6 +314,10 @@ uts46data = (\n     (0x129, 'V'),\n     (0x12A, 'M', u'ī'),\n     (0x12B, 'V'),\n+    ]\n+\n+def _seg_3():\n+    return [\n     (0x12C, 'M', u'ĭ'),\n     (0x12D, 'V'),\n     (0x12E, 'M', u'į'),\n@@ -404,6 +418,10 @@ uts46data = (\n     (0x191, 'M', u'ƒ'),\n     (0x192, 'V'),\n     (0x193, 'M', u'ɠ'),\n+    ]\n+\n+def _seg_4():\n+    return [\n     (0x194, 'M', u'ɣ'),\n     (0x195, 'V'),\n     (0x196, 'M', u'ɩ'),\n@@ -504,6 +522,10 @@ uts46data = (\n     (0x20A, 'M', u'ȋ'),\n     (0x20B, 'V'),\n     (0x20C, 'M', u'ȍ'),\n+    ]\n+\n+def _seg_5():\n+    return [\n     (0x20D, 'V'),\n     (0x20E, 'M', u'ȏ'),\n     (0x20F, 'V'),\n@@ -604,6 +626,10 @@ uts46data = (\n     (0x375, 'V'),\n     (0x376, 'M', u'ͷ'),\n     (0x377, 'V'),\n+    ]\n+\n+def _seg_6():\n+    return [\n     (0x378, 'X'),\n     (0x37A, '3', u' ι'),\n     (0x37B, 'V'),\n@@ -704,6 +730,10 @@ uts46data = (\n     (0x401, 'M', u'ё'),\n     (0x402, 'M', u'ђ'),\n     (0x403, 'M', u'ѓ'),\n+    ]\n+\n+def _seg_7():\n+    return [\n     (0x404, 'M', u'є'),\n     (0x405, 'M', u'ѕ'),\n     (0x406, 'M', u'і'),\n@@ -804,6 +834,10 @@ uts46data = (\n     (0x49C, 'M', u'ҝ'),\n     (0x49D, 'V'),\n     (0x49E, 'M', u'ҟ'),\n+    ]\n+\n+def _seg_8():\n+    return [\n     (0x49F, 'V'),\n     (0x4A0, 'M', u'ҡ'),\n     (0x4A1, 'V'),\n@@ -904,6 +938,10 @@ uts46data = (\n     (0x501, 'V'),\n     (0x502, 'M', u'ԃ'),\n     (0x503, 'V'),\n+    ]\n+\n+def _seg_9():\n+    return [\n     (0x504, 'M', u'ԅ'),\n     (0x505, 'V'),\n     (0x506, 'M', u'ԇ'),\n@@ -1004,6 +1042,10 @@ uts46data = (\n     (0x678, 'M', u'يٴ'),\n     (0x679, 'V'),\n     (0x6DD, 'X'),\n+    ]\n+\n+def _seg_10():\n+    return [\n     (0x6DE, 'V'),\n     (0x70E, 'X'),\n     (0x710, 'V'),\n@@ -1104,6 +1146,10 @@ uts46data = (\n     (0xA5D, 'X'),\n     (0xA5E, 'M', u'ਫ਼'),\n     (0xA5F, 'X'),\n+    ]\n+\n+def _seg_11():\n+    return [\n     (0xA66, 'V'),\n     (0xA76, 'X'),\n     (0xA81, 'V'),\n@@ -1204,6 +1250,10 @@ uts46data = (\n     (0xC2A, 'V'),\n     (0xC34, 'X'),\n     (0xC35, 'V'),\n+    ]\n+\n+def _seg_12():\n+    return [\n     (0xC3A, 'X'),\n     (0xC3D, 'V'),\n     (0xC45, 'X'),\n@@ -1304,6 +1354,10 @@ uts46data = (\n     (0xE84, 'V'),\n     (0xE85, 'X'),\n     (0xE87, 'V'),\n+    ]\n+\n+def _seg_13():\n+    return [\n     (0xE89, 'X'),\n     (0xE8A, 'V'),\n     (0xE8B, 'X'),\n@@ -1404,6 +1458,10 @@ uts46data = (\n     (0x1250, 'V'),\n     (0x1257, 'X'),\n     (0x1258, 'V'),\n+    ]\n+\n+def _seg_14():\n+    return [\n     (0x1259, 'X'),\n     (0x125A, 'V'),\n     (0x125E, 'X'),\n@@ -1504,6 +1562,10 @@ uts46data = (\n     (0x1A8A, 'X'),\n     (0x1A90, 'V'),\n     (0x1A9A, 'X'),\n+    ]\n+\n+def _seg_15():\n+    return [\n     (0x1AA0, 'V'),\n     (0x1AAE, 'X'),\n     (0x1B00, 'V'),\n@@ -1604,6 +1666,10 @@ uts46data = (\n     (0x1DA7, 'M', u'ᵻ'),\n     (0x1DA8, 'M', u'ʝ'),\n     (0x1DA9, 'M', u'ɭ'),\n+    ]\n+\n+def _seg_16():\n+    return [\n     (0x1DAA, 'M', u'ᶅ'),\n     (0x1DAB, 'M', u'ʟ'),\n     (0x1DAC, 'M', u'ɱ'),\n@@ -1704,6 +1770,10 @@ uts46data = (\n     (0x1E48, 'M', u'ṉ'),\n     (0x1E49, 'V'),\n     (0x1E4A, 'M', u'ṋ'),\n+    ]\n+\n+def _seg_17():\n+    return [\n     (0x1E4B, 'V'),\n     (0x1E4C, 'M', u'ṍ'),\n     (0x1E4D, 'V'),\n@@ -1804,6 +1874,10 @@ uts46data = (\n     (0x1EB1, 'V'),\n     (0x1EB2, 'M', u'ẳ'),\n     (0x1EB3, 'V'),\n+    ]\n+\n+def _seg_18():\n+    return [\n     (0x1EB4, 'M', u'ẵ'),\n     (0x1EB5, 'V'),\n     (0x1EB6, 'M', u'ặ'),\n@@ -1904,6 +1978,10 @@ uts46data = (\n     (0x1F2B, 'M', u'ἣ'),\n     (0x1F2C, 'M', u'ἤ'),\n     (0x1F2D, 'M', u'ἥ'),\n+    ]\n+\n+def _seg_19():\n+    return [\n     (0x1F2E, 'M', u'ἦ'),\n     (0x1F2F, 'M', u'ἧ'),\n     (0x1F30, 'V'),\n@@ -2004,6 +2082,10 @@ uts46data = (\n     (0x1FAC, 'M', u'ὤι'),\n     (0x1FAD, 'M', u'ὥι'),\n     (0x1FAE, 'M', u'ὦι'),\n+    ]\n+\n+def _seg_20():\n+    return [\n     (0x1FAF, 'M', u'ὧι'),\n     (0x1FB0, 'V'),\n     (0x1FB2, 'M', u'ὰι'),\n@@ -2104,6 +2186,10 @@ uts46data = (\n     (0x204A, 'V'),\n     (0x2057, 'M', u'′′′′'),\n     (0x2058, 'V'),\n+    ]\n+\n+def _seg_21():\n+    return [\n     (0x205F, '3', u' '),\n     (0x2060, 'I'),\n     (0x2061, 'X'),\n@@ -2204,6 +2290,10 @@ uts46data = (\n     (0x2133, 'M', u'm'),\n     (0x2134, 'M', u'o'),\n     (0x2135, 'M', u'א'),\n+    ]\n+\n+def _seg_22():\n+    return [\n     (0x2136, 'M', u'ב'),\n     (0x2137, 'M', u'ג'),\n     (0x2138, 'M', u'ד'),\n@@ -2304,6 +2394,10 @@ uts46data = (\n     (0x2469, 'M', u'10'),\n     (0x246A, 'M', u'11'),\n     (0x246B, 'M', u'12'),\n+    ]\n+\n+def _seg_23():\n+    return [\n     (0x246C, 'M', u'13'),\n     (0x246D, 'M', u'14'),\n     (0x246E, 'M', u'15'),\n@@ -2404,6 +2498,10 @@ uts46data = (\n     (0x24E0, 'M', u'q'),\n     (0x24E1, 'M', u'r'),\n     (0x24E2, 'M', u's'),\n+    ]\n+\n+def _seg_24():\n+    return [\n     (0x24E3, 'M', u't'),\n     (0x24E4, 'M', u'u'),\n     (0x24E5, 'M', u'v'),\n@@ -2504,6 +2602,10 @@ uts46data = (\n     (0x2C80, 'M', u'ⲁ'),\n     (0x2C81, 'V'),\n     (0x2C82, 'M', u'ⲃ'),\n+    ]\n+\n+def _seg_25():\n+    return [\n     (0x2C83, 'V'),\n     (0x2C84, 'M', u'ⲅ'),\n     (0x2C85, 'V'),\n@@ -2604,6 +2706,10 @@ uts46data = (\n     (0x2CEB, 'M', u'ⳬ'),\n     (0x2CEC, 'V'),\n     (0x2CED, 'M', u'ⳮ'),\n+    ]\n+\n+def _seg_26():\n+    return [\n     (0x2CEE, 'V'),\n     (0x2CF2, 'M', u'ⳳ'),\n     (0x2CF3, 'V'),\n@@ -2704,6 +2810,10 @@ uts46data = (\n     (0x2F37, 'M', u'弋'),\n     (0x2F38, 'M', u'弓'),\n     (0x2F39, 'M', u'彐'),\n+    ]\n+\n+def _seg_27():\n+    return [\n     (0x2F3A, 'M', u'彡'),\n     (0x2F3B, 'M', u'彳'),\n     (0x2F3C, 'M', u'心'),\n@@ -2804,6 +2914,10 @@ uts46data = (\n     (0x2F9B, 'M', u'走'),\n     (0x2F9C, 'M', u'足'),\n     (0x2F9D, 'M', u'身'),\n+    ]\n+\n+def _seg_28():\n+    return [\n     (0x2F9E, 'M', u'車'),\n     (0x2F9F, 'M', u'辛'),\n     (0x2FA0, 'M', u'辰'),\n@@ -2904,6 +3018,10 @@ uts46data = (\n     (0x3142, 'M', u'ᄇ'),\n     (0x3143, 'M', u'ᄈ'),\n     (0x3144, 'M', u'ᄡ'),\n+    ]\n+\n+def _seg_29():\n+    return [\n     (0x3145, 'M', u'ᄉ'),\n     (0x3146, 'M', u'ᄊ'),\n     (0x3147, 'M', u'ᄋ'),\n@@ -3004,6 +3122,10 @@ uts46data = (\n     (0x3202, '3', u'(ᄃ)'),\n     (0x3203, '3', u'(ᄅ)'),\n     (0x3204, '3', u'(ᄆ)'),\n+    ]\n+\n+def _seg_30():\n+    return [\n     (0x3205, '3', u'(ᄇ)'),\n     (0x3206, '3', u'(ᄉ)'),\n     (0x3207, '3', u'(ᄋ)'),\n@@ -3104,6 +3226,10 @@ uts46data = (\n     (0x326D, 'M', u'ᄒ'),\n     (0x326E, 'M', u'가'),\n     (0x326F, 'M', u'나'),\n+    ]\n+\n+def _seg_31():\n+    return [\n     (0x3270, 'M', u'다'),\n     (0x3271, 'M', u'라'),\n     (0x3272, 'M', u'마'),\n@@ -3204,6 +3330,10 @@ uts46data = (\n     (0x32D1, 'M', u'イ'),\n     (0x32D2, 'M', u'ウ'),\n     (0x32D3, 'M', u'エ'),\n+    ]\n+\n+def _seg_32():\n+    return [\n     (0x32D4, 'M', u'オ'),\n     (0x32D5, 'M', u'カ'),\n     (0x32D6, 'M', u'キ'),\n@@ -3304,6 +3434,10 @@ uts46data = (\n     (0x3335, 'M', u'フラン'),\n     (0x3336, 'M', u'ヘクタール'),\n     (0x3337, 'M', u'ペソ'),\n+    ]\n+\n+def _seg_33():\n+    return [\n     (0x3338, 'M', u'ペニヒ'),\n     (0x3339, 'M', u'ヘルツ'),\n     (0x333A, 'M', u'ペンス'),\n@@ -3404,6 +3538,10 @@ uts46data = (\n     (0x3399, 'M', u'fm'),\n     (0x339A, 'M', u'nm'),\n     (0x339B, 'M', u'μm'),\n+    ]\n+\n+def _seg_34():\n+    return [\n     (0x339C, 'M', u'mm'),\n     (0x339D, 'M', u'cm'),\n     (0x339E, 'M', u'km'),\n@@ -3504,6 +3642,10 @@ uts46data = (\n     (0x33FD, 'M', u'30日'),\n     (0x33FE, 'M', u'31日'),\n     (0x33FF, 'M', u'gal'),\n+    ]\n+\n+def _seg_35():\n+    return [\n     (0x3400, 'V'),\n     (0x4DB6, 'X'),\n     (0x4DC0, 'V'),\n@@ -3604,6 +3746,10 @@ uts46data = (\n     (0xA72F, 'V'),\n     (0xA732, 'M', u'ꜳ'),\n     (0xA733, 'V'),\n+    ]\n+\n+def _seg_36():\n+    return [\n     (0xA734, 'M', u'ꜵ'),\n     (0xA735, 'V'),\n     (0xA736, 'M', u'ꜷ'),\n@@ -3704,6 +3850,10 @@ uts46data = (\n     (0xA7AA, 'M', u'ɦ'),\n     (0xA7AB, 'X'),\n     (0xA7F8, 'M', u'ħ'),\n+    ]\n+\n+def _seg_37():\n+    return [\n     (0xA7F9, 'M', u'œ'),\n     (0xA7FA, 'V'),\n     (0xA82C, 'X'),\n@@ -3804,6 +3954,10 @@ uts46data = (\n     (0xF92B, 'M', u'狼'),\n     (0xF92C, 'M', u'郎'),\n     (0xF92D, 'M', u'來'),\n+    ]\n+\n+def _seg_38():\n+    return [\n     (0xF92E, 'M', u'冷'),\n     (0xF92F, 'M', u'勞'),\n     (0xF930, 'M', u'擄'),\n@@ -3904,6 +4058,10 @@ uts46data = (\n     (0xF98F, 'M', u'憐'),\n     (0xF990, 'M', u'戀'),\n     (0xF991, 'M', u'撚'),\n+    ]\n+\n+def _seg_39():\n+    return [\n     (0xF992, 'M', u'漣'),\n     (0xF993, 'M', u'煉'),\n     (0xF994, 'M', u'璉'),\n@@ -4004,6 +4162,10 @@ uts46data = (\n     (0xF9F3, 'M', u'麟'),\n     (0xF9F4, 'M', u'林'),\n     (0xF9F5, 'M', u'淋'),\n+    ]\n+\n+def _seg_40():\n+    return [\n     (0xF9F6, 'M', u'臨'),\n     (0xF9F7, 'M', u'立'),\n     (0xF9F8, 'M', u'笠'),\n@@ -4104,6 +4266,10 @@ uts46data = (\n     (0xFA5C, 'M', u'臭'),\n     (0xFA5D, 'M', u'艹'),\n     (0xFA5F, 'M', u'著'),\n+    ]\n+\n+def _seg_41():\n+    return [\n     (0xFA60, 'M', u'褐'),\n     (0xFA61, 'M', u'視'),\n     (0xFA62, 'M', u'謁'),\n@@ -4204,6 +4370,10 @@ uts46data = (\n     (0xFAC2, 'M', u'輸'),\n     (0xFAC3, 'M', u'遲'),\n     (0xFAC4, 'M', u'醙'),\n+    ]\n+\n+def _seg_42():\n+    return [\n     (0xFAC5, 'M', u'鉶'),\n     (0xFAC6, 'M', u'陼'),\n     (0xFAC7, 'M', u'難'),\n@@ -4304,6 +4474,10 @@ uts46data = (\n     (0xFB7A, 'M', u'چ'),\n     (0xFB7E, 'M', u'ڇ'),\n     (0xFB82, 'M', u'ڍ'),\n+    ]\n+\n+def _seg_43():\n+    return [\n     (0xFB84, 'M', u'ڌ'),\n     (0xFB86, 'M', u'ڎ'),\n     (0xFB88, 'M', u'ڈ'),\n@@ -4404,6 +4578,10 @@ uts46data = (\n     (0xFC3C, 'M', u'كم'),\n     (0xFC3D, 'M', u'كى'),\n     (0xFC3E, 'M', u'كي'),\n+    ]\n+\n+def _seg_44():\n+    return [\n     (0xFC3F, 'M', u'لج'),\n     (0xFC40, 'M', u'لح'),\n     (0xFC41, 'M', u'لخ'),\n@@ -4504,6 +4682,10 @@ uts46data = (\n     (0xFCA0, 'M', u'به'),\n     (0xFCA1, 'M', u'تج'),\n     (0xFCA2, 'M', u'تح'),\n+    ]\n+\n+def _seg_45():\n+    return [\n     (0xFCA3, 'M', u'تخ'),\n     (0xFCA4, 'M', u'تم'),\n     (0xFCA5, 'M', u'ته'),\n@@ -4604,6 +4786,10 @@ uts46data = (\n     (0xFD04, 'M', u'خي'),\n     (0xFD05, 'M', u'صى'),\n     (0xFD06, 'M', u'صي'),\n+    ]\n+\n+def _seg_46():\n+    return [\n     (0xFD07, 'M', u'ضى'),\n     (0xFD08, 'M', u'ضي'),\n     (0xFD09, 'M', u'شج'),\n@@ -4704,6 +4890,10 @@ uts46data = (\n     (0xFD87, 'M', u'لمح'),\n     (0xFD89, 'M', u'محج'),\n     (0xFD8A, 'M', u'محم'),\n+    ]\n+\n+def _seg_47():\n+    return [\n     (0xFD8B, 'M', u'محي'),\n     (0xFD8C, 'M', u'مجح'),\n     (0xFD8D, 'M', u'مجم'),\n@@ -4804,6 +4994,10 @@ uts46data = (\n     (0xFE3C, 'M', u'】'),\n     (0xFE3D, 'M', u'《'),\n     (0xFE3E, 'M', u'》'),\n+    ]\n+\n+def _seg_48():\n+    return [\n     (0xFE3F, 'M', u'〈'),\n     (0xFE40, 'M', u'〉'),\n     (0xFE41, 'M', u'「'),\n@@ -4904,6 +5098,10 @@ uts46data = (\n     (0xFF00, 'X'),\n     (0xFF01, '3', u'!'),\n     (0xFF02, '3', u'\"'),\n+    ]\n+\n+def _seg_49():\n+    return [\n     (0xFF03, '3', u'#'),\n     (0xFF04, '3', u'$'),\n     (0xFF05, '3', u'%'),\n@@ -5004,6 +5202,10 @@ uts46data = (\n     (0xFF64, 'M', u'、'),\n     (0xFF65, 'M', u'・'),\n     (0xFF66, 'M', u'ヲ'),\n+    ]\n+\n+def _seg_50():\n+    return [\n     (0xFF67, 'M', u'ァ'),\n     (0xFF68, 'M', u'ィ'),\n     (0xFF69, 'M', u'ゥ'),\n@@ -5104,6 +5306,10 @@ uts46data = (\n     (0xFFCB, 'M', u'ᅨ'),\n     (0xFFCC, 'M', u'ᅩ'),\n     (0xFFCD, 'M', u'ᅪ'),\n+    ]\n+\n+def _seg_51():\n+    return [\n     (0xFFCE, 'M', u'ᅫ'),\n     (0xFFCF, 'M', u'ᅬ'),\n     (0xFFD0, 'X'),\n@@ -5204,6 +5410,10 @@ uts46data = (\n     (0x1041B, 'M', u'𐑃'),\n     (0x1041C, 'M', u'𐑄'),\n     (0x1041D, 'M', u'𐑅'),\n+    ]\n+\n+def _seg_52():\n+    return [\n     (0x1041E, 'M', u'𐑆'),\n     (0x1041F, 'M', u'𐑇'),\n     (0x10420, 'M', u'𐑈'),\n@@ -5304,6 +5514,10 @@ uts46data = (\n     (0x12474, 'X'),\n     (0x13000, 'V'),\n     (0x1342F, 'X'),\n+    ]\n+\n+def _seg_53():\n+    return [\n     (0x16800, 'V'),\n     (0x16A39, 'X'),\n     (0x16F00, 'V'),\n@@ -5404,6 +5618,10 @@ uts46data = (\n     (0x1D43A, 'M', u'g'),\n     (0x1D43B, 'M', u'h'),\n     (0x1D43C, 'M', u'i'),\n+    ]\n+\n+def _seg_54():\n+    return [\n     (0x1D43D, 'M', u'j'),\n     (0x1D43E, 'M', u'k'),\n     (0x1D43F, 'M', u'l'),\n@@ -5504,6 +5722,10 @@ uts46data = (\n     (0x1D49E, 'M', u'c'),\n     (0x1D49F, 'M', u'd'),\n     (0x1D4A0, 'X'),\n+    ]\n+\n+def _seg_55():\n+    return [\n     (0x1D4A2, 'M', u'g'),\n     (0x1D4A3, 'X'),\n     (0x1D4A5, 'M', u'j'),\n@@ -5604,6 +5826,10 @@ uts46data = (\n     (0x1D505, 'M', u'b'),\n     (0x1D506, 'X'),\n     (0x1D507, 'M', u'd'),\n+    ]\n+\n+def _seg_56():\n+    return [\n     (0x1D508, 'M', u'e'),\n     (0x1D509, 'M', u'f'),\n     (0x1D50A, 'M', u'g'),\n@@ -5704,6 +5930,10 @@ uts46data = (\n     (0x1D56C, 'M', u'a'),\n     (0x1D56D, 'M', u'b'),\n     (0x1D56E, 'M', u'c'),\n+    ]\n+\n+def _seg_57():\n+    return [\n     (0x1D56F, 'M', u'd'),\n     (0x1D570, 'M', u'e'),\n     (0x1D571, 'M', u'f'),\n@@ -5804,6 +6034,10 @@ uts46data = (\n     (0x1D5D0, 'M', u'w'),\n     (0x1D5D1, 'M', u'x'),\n     (0x1D5D2, 'M', u'y'),\n+    ]\n+\n+def _seg_58():\n+    return [\n     (0x1D5D3, 'M', u'z'),\n     (0x1D5D4, 'M', u'a'),\n     (0x1D5D5, 'M', u'b'),\n@@ -5904,6 +6138,10 @@ uts46data = (\n     (0x1D634, 'M', u's'),\n     (0x1D635, 'M', u't'),\n     (0x1D636, 'M', u'u'),\n+    ]\n+\n+def _seg_59():\n+    return [\n     (0x1D637, 'M', u'v'),\n     (0x1D638, 'M', u'w'),\n     (0x1D639, 'M', u'x'),\n@@ -6004,6 +6242,10 @@ uts46data = (\n     (0x1D698, 'M', u'o'),\n     (0x1D699, 'M', u'p'),\n     (0x1D69A, 'M', u'q'),\n+    ]\n+\n+def _seg_60():\n+    return [\n     (0x1D69B, 'M', u'r'),\n     (0x1D69C, 'M', u's'),\n     (0x1D69D, 'M', u't'),\n@@ -6104,6 +6346,10 @@ uts46data = (\n     (0x1D6FE, 'M', u'γ'),\n     (0x1D6FF, 'M', u'δ'),\n     (0x1D700, 'M', u'ε'),\n+    ]\n+\n+def _seg_61():\n+    return [\n     (0x1D701, 'M', u'ζ'),\n     (0x1D702, 'M', u'η'),\n     (0x1D703, 'M', u'θ'),\n@@ -6204,6 +6450,10 @@ uts46data = (\n     (0x1D764, 'M', u'ο'),\n     (0x1D765, 'M', u'π'),\n     (0x1D766, 'M', u'ρ'),\n+    ]\n+\n+def _seg_62():\n+    return [\n     (0x1D767, 'M', u'θ'),\n     (0x1D768, 'M', u'σ'),\n     (0x1D769, 'M', u'τ'),\n@@ -6304,6 +6554,10 @@ uts46data = (\n     (0x1D7CA, 'M', u'ϝ'),\n     (0x1D7CC, 'X'),\n     (0x1D7CE, 'M', u'0'),\n+    ]\n+\n+def _seg_63():\n+    return [\n     (0x1D7CF, 'M', u'1'),\n     (0x1D7D0, 'M', u'2'),\n     (0x1D7D1, 'M', u'3'),\n@@ -6404,6 +6658,10 @@ uts46data = (\n     (0x1EE30, 'M', u'ف'),\n     (0x1EE31, 'M', u'ص'),\n     (0x1EE32, 'M', u'ق'),\n+    ]\n+\n+def _seg_64():\n+    return [\n     (0x1EE33, 'X'),\n     (0x1EE34, 'M', u'ش'),\n     (0x1EE35, 'M', u'ت'),\n@@ -6504,6 +6762,10 @@ uts46data = (\n     (0x1EEA2, 'M', u'ج'),\n     (0x1EEA3, 'M', u'د'),\n     (0x1EEA4, 'X'),\n+    ]\n+\n+def _seg_65():\n+    return [\n     (0x1EEA5, 'M', u'و'),\n     (0x1EEA6, 'M', u'ز'),\n     (0x1EEA7, 'M', u'ح'),\n@@ -6604,6 +6866,10 @@ uts46data = (\n     (0x1F140, 'M', u'q'),\n     (0x1F141, 'M', u'r'),\n     (0x1F142, 'M', u's'),\n+    ]\n+\n+def _seg_66():\n+    return [\n     (0x1F143, 'M', u't'),\n     (0x1F144, 'M', u'u'),\n     (0x1F145, 'M', u'v'),\n@@ -6704,6 +6970,10 @@ uts46data = (\n     (0x1F400, 'V'),\n     (0x1F43F, 'X'),\n     (0x1F440, 'V'),\n+    ]\n+\n+def _seg_67():\n+    return [\n     (0x1F441, 'X'),\n     (0x1F442, 'V'),\n     (0x1F4F8, 'X'),\n@@ -6804,6 +7074,10 @@ uts46data = (\n     (0x2F84B, 'M', u'圖'),\n     (0x2F84C, 'M', u'嘆'),\n     (0x2F84D, 'M', u'圗'),\n+    ]\n+\n+def _seg_68():\n+    return [\n     (0x2F84E, 'M', u'噑'),\n     (0x2F84F, 'M', u'噴'),\n     (0x2F850, 'M', u'切'),\n@@ -6904,6 +7178,10 @@ uts46data = (\n     (0x2F8B2, 'M', u'成'),\n     (0x2F8B3, 'M', u'戛'),\n     (0x2F8B4, 'M', u'扝'),\n+    ]\n+\n+def _seg_69():\n+    return [\n     (0x2F8B5, 'M', u'抱'),\n     (0x2F8B6, 'M', u'拔'),\n     (0x2F8B7, 'M', u'捐'),\n@@ -7004,6 +7282,10 @@ uts46data = (\n     (0x2F916, 'M', u'㶖'),\n     (0x2F917, 'M', u'灊'),\n     (0x2F918, 'M', u'災'),\n+    ]\n+\n+def _seg_70():\n+    return [\n     (0x2F919, 'M', u'灷'),\n     (0x2F91A, 'M', u'炭'),\n     (0x2F91B, 'M', u'𠔥'),\n@@ -7104,6 +7386,10 @@ uts46data = (\n     (0x2F97D, 'M', u'聠'),\n     (0x2F97E, 'M', u'𦖨'),\n     (0x2F97F, 'M', u'聰'),\n+    ]\n+\n+def _seg_71():\n+    return [\n     (0x2F980, 'M', u'𣍟'),\n     (0x2F981, 'M', u'䏕'),\n     (0x2F982, 'M', u'育'),\n@@ -7204,6 +7490,10 @@ uts46data = (\n     (0x2F9E1, 'M', u'𨗭'),\n     (0x2F9E2, 'M', u'邔'),\n     (0x2F9E3, 'M', u'郱'),\n+    ]\n+\n+def _seg_72():\n+    return [\n     (0x2F9E4, 'M', u'鄑'),\n     (0x2F9E5, 'M', u'𨜮'),\n     (0x2F9E6, 'M', u'鄛'),\n@@ -7264,4 +7554,80 @@ uts46data = (\n     (0x2FA1E, 'X'),\n     (0xE0100, 'I'),\n     (0xE01F0, 'X'),\n+    ]\n+\n+uts46data = tuple(\n+    _seg_0()\n+    + _seg_1()\n+    + _seg_2()\n+    + _seg_3()\n+    + _seg_4()\n+    + _seg_5()\n+    + _seg_6()\n+    + _seg_7()\n+    + _seg_8()\n+    + _seg_9()\n+    + _seg_10()\n+    + _seg_11()\n+    + _seg_12()\n+    + _seg_13()\n+    + _seg_14()\n+    + _seg_15()\n+    + _seg_16()\n+    + _seg_17()\n+    + _seg_18()\n+    + _seg_19()\n+    + _seg_20()\n+    + _seg_21()\n+    + _seg_22()\n+    + _seg_23()\n+    + _seg_24()\n+    + _seg_25()\n+    + _seg_26()\n+    + _seg_27()\n+    + _seg_28()\n+    + _seg_29()\n+    + _seg_30()\n+    + _seg_31()\n+    + _seg_32()\n+    + _seg_33()\n+    + _seg_34()\n+    + _seg_35()\n+    + _seg_36()\n+    + _seg_37()\n+    + _seg_38()\n+    + _seg_39()\n+    + _seg_40()\n+    + _seg_41()\n+    + _seg_42()\n+    + _seg_43()\n+    + _seg_44()\n+    + _seg_45()\n+    + _seg_46()\n+    + _seg_47()\n+    + _seg_48()\n+    + _seg_49()\n+    + _seg_50()\n+    + _seg_51()\n+    + _seg_52()\n+    + _seg_53()\n+    + _seg_54()\n+    + _seg_55()\n+    + _seg_56()\n+    + _seg_57()\n+    + _seg_58()\n+    + _seg_59()\n+    + _seg_60()\n+    + _seg_61()\n+    + _seg_62()\n+    + _seg_63()\n+    + _seg_64()\n+    + _seg_65()\n+    + _seg_66()\n+    + _seg_67()\n+    + _seg_68()\n+    + _seg_69()\n+    + _seg_70()\n+    + _seg_71()\n+    + _seg_72()\n )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#b2289cd2d5d21bd31cf4a818a4e0ff6951b2317a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 682 | Contributors (this commit): 16 | Commits (past 90d): 7 | Contributors (cumulative): 16 | DMM Complexity: None\n\nDIFF:\n@@ -41,8 +41,8 @@ is at <http://python-requests.org>.\n \"\"\"\n \n __title__ = 'requests'\n-__version__ = '2.12.5'\n-__build__ = 0x021205\n+__version__ = '2.13.0'\n+__build__ = 0x021300\n __author__ = 'Kenneth Reitz'\n __license__ = 'Apache 2.0'\n __copyright__ = 'Copyright 2016 Kenneth Reitz'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#8a58427d8aa73d6af81b6e5f6fd934b3386ef3de", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 43 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 43 | Churn Cumulative: 1764 | Contributors (this commit): 47 | Commits (past 90d): 9 | Contributors (cumulative): 49 | DMM Complexity: 1.0\n\nDIFF:\n@@ -227,6 +227,12 @@ class HTTPDigestAuth(AuthBase):\n         :rtype: requests.Response\n         \"\"\"\n \n+        # If response is not 4xx, do not auth\n+        # See https://github.com/kennethreitz/requests/issues/3772\n+        if not 400 <= r.status_code < 500:\n+            self._thread_local.num_401_calls = 1\n+            return r\n+\n         if self._thread_local.pos is not None:\n             # Rewind the file position indicator of the body to where\n             # it was to resend the request.\n\n@@ -136,6 +136,43 @@ def test_digestauth_401_only_sent_once():\n         close_server.set()\n \n \n+def test_digestauth_only_on_4xx():\n+    \"\"\"Ensure we only send digestauth on 4xx challenges.\n+\n+    See https://github.com/kennethreitz/requests/issues/3772.\n+    \"\"\"\n+    text_200_chal = (b'HTTP/1.1 200 OK\\r\\n'\n+                     b'Content-Length: 0\\r\\n'\n+                     b'WWW-Authenticate: Digest nonce=\"6bf5d6e4da1ce66918800195d6b9130d\"'\n+                     b', opaque=\"372825293d1c26955496c80ed6426e9e\", '\n+                     b'realm=\"me@kennethreitz.com\", qop=auth\\r\\n\\r\\n')\n+\n+    auth = requests.auth.HTTPDigestAuth('user', 'pass')\n+\n+    def digest_response_handler(sock):\n+        # Respond to GET with a 200 containing www-authenticate header.\n+        request_content = consume_socket_content(sock, timeout=0.5)\n+        assert request_content.startswith(b\"GET / HTTP/1.1\")\n+        sock.send(text_200_chal)\n+\n+        # Verify the client didn't respond with auth.\n+        request_content = consume_socket_content(sock, timeout=0.5)\n+        assert request_content == b''\n+\n+        return request_content\n+\n+    close_server = threading.Event()\n+    server = Server(digest_response_handler, wait_to_close_event=close_server)\n+\n+    with server as (host, port):\n+        url = 'http://{0}:{1}/'.format(host, port)\n+        r = requests.get(url, auth=auth)\n+        # Verify server didn't receive auth from us.\n+        assert r.status_code == 200\n+        assert len(r.history) == 0\n+        close_server.set()\n+\n+\n _schemes_by_var_prefix = [\n     ('http', ['http']),\n     ('https', ['https']),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#62176a1ca7207db37273365b4691ed599203b828", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 517 | Contributors (this commit): 8 | Commits (past 90d): 1 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -59,7 +59,7 @@ master_doc = 'index'\n \n # General information about the project.\n project = u'Requests'\n-copyright = u'2016. A <a href=\"http://kennethreitz.com/pages/open-projects.html\">Kenneth Reitz</a> Project'\n+copyright = u'2017. A <a href=\"http://kennethreitz.com/pages/open-projects.html\">Kenneth Reitz</a> Project'\n author = u'Kenneth Reitz'\n \n # The version info for the project you're documenting, acts as replacement for\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#593734b77092439b533e8e0599be6d204867b751", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 129 | Contributors (this commit): 12 | Commits (past 90d): 1 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -87,5 +87,5 @@ codes = LookupDict(name='status_codes')\n for code, titles in _codes.items():\n     for title in titles:\n         setattr(codes, title, code)\n-        if not title.startswith('\\\\'):\n+        if not title.startswith('\\\\') and not title.strartswith('/'):\n             setattr(codes, title.upper(), code)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#b00d8bf474cf5e2850ba83a11b7e372dad4bf119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 131 | Contributors (this commit): 12 | Commits (past 90d): 2 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -87,5 +87,5 @@ codes = LookupDict(name='status_codes')\n for code, titles in _codes.items():\n     for title in titles:\n         setattr(codes, title, code)\n-        if not title.startswith('\\\\') and not title.strartswith('/'):\n+        if not if not title.startswith(('\\\\', '/')):\n             setattr(codes, title.upper(), code)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#571d2c2cd7495e6fb81f656abdd2b3d3f593f1f0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 133 | Contributors (this commit): 12 | Commits (past 90d): 3 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -87,5 +87,5 @@ codes = LookupDict(name='status_codes')\n for code, titles in _codes.items():\n     for title in titles:\n         setattr(codes, title, code)\n-        if not if not title.startswith(('\\\\', '/')):\n+        if not title.startswith(('\\\\', '/')):\n             setattr(codes, title.upper(), code)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#85400d8d6751071ef78f042d1efa72bdcf76cc0e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 86 | Lines Deleted: 10 | Files Changed: 3 | Hunks: 14 | Methods Changed: 13 | Complexity Δ (Sum/Max): 9/6 | Churn Δ: 96 | Churn Cumulative: 7167 | Contributors (this commit): 129 | Commits (past 90d): 47 | Contributors (cumulative): 166 | DMM Complexity: 0.7741935483870968\n\nDIFF:\n@@ -231,13 +231,16 @@ class SessionRedirectMixin(object):\n \n         :rtype: dict\n         \"\"\"\n+        proxies = proxies if proxies is not None else {}\n         headers = prepared_request.headers\n         url = prepared_request.url\n         scheme = urlparse(url).scheme\n-        new_proxies = proxies.copy() if proxies is not None else {}\n+        new_proxies = proxies.copy()\n+        no_proxy = proxies.get('no_proxy')\n \n-        if self.trust_env and not should_bypass_proxies(url):\n-            environ_proxies = get_environ_proxies(url)\n+        bypass_proxy = should_bypass_proxies(url, no_proxy=no_proxy)\n+        if self.trust_env and not bypass_proxy:\n+            environ_proxies = get_environ_proxies(url, no_proxy=no_proxy)\n \n             proxy = environ_proxies.get(scheme, environ_proxies.get('all'))\n \n@@ -651,7 +654,8 @@ class Session(SessionRedirectMixin):\n         # Gather clues from the surrounding environment.\n         if self.trust_env:\n             # Set environment's proxies.\n-            env_proxies = get_environ_proxies(url) or {}\n+            no_proxy = proxies.get('no_proxy') if proxies is not None else None\n+            env_proxies = get_environ_proxies(url, no_proxy=no_proxy)\n             for (k, v) in env_proxies.items():\n                 proxies.setdefault(k, v)\n \n\n@@ -11,6 +11,7 @@ that are also useful for external consumption.\n import cgi\n import codecs\n import collections\n+import contextlib\n import io\n import os\n import re\n@@ -554,7 +555,29 @@ def is_valid_cidr(string_network):\n     return True\n \n \n-def should_bypass_proxies(url):\n+@contextlib.contextmanager\n+def set_environ(env_name, value):\n+    \"\"\"Set the environment variable 'env_name' to 'value'\n+\n+    Save previous value, yield, and then restore the previous value stored in\n+    the environment variable 'env_name'.\n+\n+    If 'value' is None, do nothing\"\"\"\n+    if value is not None:\n+        old_value = os.environ.get(env_name)\n+        os.environ[env_name] = value\n+    try:\n+        yield\n+    finally:\n+        if value is None:\n+            return\n+        if old_value is None:\n+            del os.environ[env_name]\n+        else:\n+            os.environ[env_name] = old_value\n+\n+\n+def should_bypass_proxies(url, no_proxy):\n     \"\"\"\n     Returns whether we should bypass proxies or not.\n \n@@ -564,6 +587,8 @@ def should_bypass_proxies(url):\n \n     # First check whether no_proxy is defined. If it is, check that the URL\n     # we're getting isn't in the no_proxy list.\n+    no_proxy_arg = no_proxy\n+    if no_proxy is None:\n         no_proxy = get_proxy('no_proxy')\n     netloc = urlparse(url).netloc\n \n@@ -597,6 +622,7 @@ def should_bypass_proxies(url):\n     # of Python 2.6, so allow this call to fail. Only catch the specific\n     # exceptions we've seen, though: this call failing in other ways can reveal\n     # legitimate problems.\n+    with set_environ('no_proxy', no_proxy_arg):\n         try:\n             bypass = proxy_bypass(netloc)\n         except (TypeError, socket.gaierror):\n@@ -608,13 +634,13 @@ def should_bypass_proxies(url):\n     return False\n \n \n-def get_environ_proxies(url):\n+def get_environ_proxies(url, no_proxy):\n     \"\"\"\n     Return a dict of environment proxies.\n \n     :rtype: dict\n     \"\"\"\n-    if should_bypass_proxies(url):\n+    if should_bypass_proxies(url, no_proxy=no_proxy):\n         return {}\n     else:\n         return getproxies()\n\n@@ -161,7 +161,7 @@ class TestGetEnvironProxies:\n             'http://localhost.localdomain:5000/v1.0/',\n         ))\n     def test_bypass(self, url):\n-        assert get_environ_proxies(url) == {}\n+        assert get_environ_proxies(url, no_proxy=None) == {}\n \n     @pytest.mark.parametrize(\n         'url', (\n@@ -170,7 +170,32 @@ class TestGetEnvironProxies:\n             'http://www.requests.com/',\n         ))\n     def test_not_bypass(self, url):\n-        assert get_environ_proxies(url) != {}\n+        assert get_environ_proxies(url, no_proxy=None) != {}\n+\n+    @pytest.mark.parametrize(\n+        'url', (\n+            'http://192.168.1.1:5000/',\n+            'http://192.168.1.1/',\n+            'http://www.requests.com/',\n+        ))\n+    def test_bypass_no_proxy_keyword(self, url):\n+        no_proxy = '192.168.1.1,requests.com'\n+        assert get_environ_proxies(url, no_proxy=no_proxy) == {}\n+\n+    @pytest.mark.parametrize(\n+        'url', (\n+            'http://192.168.0.1:5000/',\n+            'http://192.168.0.1/',\n+            'http://172.16.1.1/',\n+            'http://172.16.1.1:5000/',\n+            'http://localhost.localdomain:5000/v1.0/',\n+        ))\n+    def test_not_bypass_no_proxy_keyword(self, url, monkeypatch):\n+        # This is testing that the 'no_proxy' argument overrides the\n+        # environment variable 'no_proxy'\n+        monkeypatch.setenv('http_proxy', 'http://proxy.example.com:3128/')\n+        no_proxy = '192.168.1.1,requests.com'\n+        assert get_environ_proxies(url, no_proxy=no_proxy) != {}\n \n \n class TestIsIPv4Address:\n@@ -525,7 +550,7 @@ def test_should_bypass_proxies(url, expected, monkeypatch):\n     \"\"\"\n     monkeypatch.setenv('no_proxy', '192.168.0.0/24,127.0.0.1,localhost.localdomain,172.16.1.1')\n     monkeypatch.setenv('NO_PROXY', '192.168.0.0/24,127.0.0.1,localhost.localdomain,172.16.1.1')\n-    assert should_bypass_proxies(url) == expected\n+    assert should_bypass_proxies(url, no_proxy=None) == expected\n \n \n @pytest.mark.parametrize(\n@@ -553,3 +578,24 @@ def test_add_dict_to_cookiejar(cookiejar):\n )\n def test_unicode_is_ascii(value, expected):\n     assert unicode_is_ascii(value) is expected\n+\n+\n+@pytest.mark.parametrize(\n+    'url, expected', (\n+            ('http://192.168.0.1:5000/', True),\n+            ('http://192.168.0.1/', True),\n+            ('http://172.16.1.1/', True),\n+            ('http://172.16.1.1:5000/', True),\n+            ('http://localhost.localdomain:5000/v1.0/', True),\n+            ('http://172.16.1.12/', False),\n+            ('http://172.16.1.12:5000/', False),\n+            ('http://google.com:5000/v1.0/', False),\n+    ))\n+def test_should_bypass_proxies_no_proxy(\n+        url, expected, monkeypatch):\n+    \"\"\"Tests for function should_bypass_proxies to check if proxy\n+    can be bypassed or not using the 'no_proxy' argument\n+    \"\"\"\n+    no_proxy = '192.168.0.0/24,127.0.0.1,localhost.localdomain,172.16.1.1'\n+    # Test 'no_proxy' argument\n+    assert should_bypass_proxies(url, no_proxy=no_proxy) == expected\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#70f31a3166c1f9470b5cfad888f828357c1daadd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 57 | Lines Deleted: 9 | Files Changed: 2 | Hunks: 10 | Methods Changed: 4 | Complexity Δ (Sum/Max): 6/5 | Churn Δ: 66 | Churn Cumulative: 7500 | Contributors (this commit): 118 | Commits (past 90d): 23 | Contributors (cumulative): 135 | DMM Complexity: 1.0\n\nDIFF:\n@@ -86,35 +86,39 @@ def merge_hooks(request_hooks, session_hooks, dict_class=OrderedDict):\n \n \n class SessionRedirectMixin(object):\n+\n+    def get_redirect_target(self, resp):\n+        \"\"\"Receives a Response. Returns a redirect URI or ``None``\"\"\"\n+        if resp.is_redirect:\n+            return resp.headers['location']\n+        return None\n+\n     def resolve_redirects(self, resp, req, stream=False, timeout=None,\n                           verify=True, cert=None, proxies=None, **adapter_kwargs):\n         \"\"\"Receives a Response. Returns a generator of Responses.\"\"\"\n \n-        i = 0\n         hist = [] # keep track of history\n \n-        while resp.is_redirect:\n+        url = self.get_redirect_target(resp)\n+        while url:\n             prepared_request = req.copy()\n \n-            if i > 0:\n             # Update history and keep track of redirects.\n+            # resp.history must ignore the original request in this loop\n             hist.append(resp)\n-                new_hist = list(hist)\n-                resp.history = new_hist\n+            resp.history = hist[1:]\n \n             try:\n                 resp.content  # Consume socket so it can be released\n             except (ChunkedEncodingError, ContentDecodingError, RuntimeError):\n                 resp.raw.read(decode_content=False)\n \n-            if i >= self.max_redirects:\n+            if len(resp.history) >= self.max_redirects:\n                 raise TooManyRedirects('Exceeded %s redirects.' % self.max_redirects, response=resp)\n \n             # Release the connection back into the pool.\n             resp.close()\n \n-            url = resp.headers['location']\n-\n             # Handle redirection without scheme (see: RFC 1808 Section 4)\n             if url.startswith('//'):\n                 parsed_rurl = urlparse(resp.url)\n@@ -192,7 +196,8 @@ class SessionRedirectMixin(object):\n \n             extract_cookies_to_jar(self.cookies, prepared_request, resp.raw)\n \n-            i += 1\n+            # extract redirect url, if any, for the next loop\n+            url = self.get_redirect_target(resp)\n             yield resp\n \n     def rebuild_auth(self, prepared_request, response):\n\n@@ -1740,6 +1740,49 @@ class TestRequests:\n         assert 'Transfer-Encoding' in prepared_request.headers\n         assert 'Content-Length' not in prepared_request.headers\n \n+    def test_custom_redirect_mixin(self, httpbin):\n+        \"\"\"Tests a custom mixin to overwrite ``get_redirect_target``.\n+\n+        Ensures a subclassed ``requests.Session`` can handle a certain type of\n+        malformed redirect responses.\n+\n+        1. original request receives a proper response: 302 redirect\n+        2. following the redirect, a malformed response is given:\n+            status code = HTTP 200\n+            location = alternate url\n+        3. the custom session catches the edge case and follows the redirect\n+        \"\"\"\n+        url_final = httpbin('html')\n+        querystring_malformed = urlencode({'location': url_final})\n+        url_redirect_malformed = httpbin('response-headers?%s' % querystring_malformed)\n+        querystring_redirect = urlencode({'url': url_redirect_malformed})\n+        url_redirect = httpbin('redirect-to?%s' % querystring_redirect)\n+        urls_test = [url_redirect,\n+                     url_redirect_malformed,\n+                     url_final,\n+                     ]\n+\n+        class CustomRedirectSession(requests.Session):\n+            def get_redirect_target(self, resp):\n+                # default behavior\n+                if resp.is_redirect:\n+                    return resp.headers['location']\n+                # edge case - check to see if 'location' is in headers anyways\n+                location = resp.headers.get('location')\n+                if location and (location != resp.url):\n+                    return location\n+                return None\n+\n+        session = CustomRedirectSession()\n+        r = session.get(urls_test[0])\n+        assert len(r.history) == 2\n+        assert r.status_code == 200\n+        assert r.history[0].status_code == 302\n+        assert r.history[0].is_redirect\n+        assert r.history[1].status_code == 200\n+        assert not r.history[1].is_redirect\n+        assert r.url == urls_test[2]\n+\n \n class TestCaseInsensitiveDict:\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f47aff68f1352c3a5030fe70bbdf7c00171e207b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 3 | Methods Changed: 4 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 6 | Churn Cumulative: 6939 | Contributors (this commit): 109 | Commits (past 90d): 22 | Contributors (cumulative): 124 | DMM Complexity: 0.0\n\nDIFF:\n@@ -92,7 +92,7 @@ def super_len(o):\n         else:\n             if hasattr(o, 'seek') and total_length is None:\n                 # StringIO and BytesIO have seek but no useable fileno\n-\n+                try:\n                     # seek to end of file\n                     o.seek(0, 2)\n                     total_length = o.tell()\n@@ -100,6 +100,8 @@ def super_len(o):\n                     # seek back to current position to support\n                     # partially read file-like objects\n                     o.seek(current_position or 0)\n+                except (OSError, IOError):\n+                    total_length = 0\n \n     if total_length is None:\n         total_length = 0\n\n@@ -1546,7 +1546,7 @@ class TestRequests:\n             def tell(self):\n                 return 0\n \n-            def seek(self, pos):\n+            def seek(self, pos, whence=0):\n                 raise OSError()\n \n             def __iter__(self):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3664682539fe911a3e19712a0ddec21a515bc16f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 9638 | Contributors (this commit): 173 | Commits (past 90d): 7 | Contributors (cumulative): 173 | DMM Complexity: None\n\nDIFF:\n@@ -672,6 +672,7 @@ class Response(object):\n \n     @property\n     def ok(self):\n+        \"\"\"Returns true if :attr:`status_code` is 'OK'.\"\"\"\n         try:\n             self.raise_for_status()\n         except HTTPError:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7a281e74ecdd74f74efcd813165ec654b2e684f4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 9646 | Contributors (this commit): 173 | Commits (past 90d): 8 | Contributors (cumulative): 173 | DMM Complexity: None\n\nDIFF:\n@@ -672,7 +672,13 @@ class Response(object):\n \n     @property\n     def ok(self):\n-        \"\"\"Returns true if :attr:`status_code` is 'OK'.\"\"\"\n+        \"\"\"Returns True if :attr:`status_code` is less than 400.\n+\n+        This attribute checks if the status code of the response is between\n+        400 and 600 to see if there was a client error or a server error. If\n+        the status code, is between 200 and 400, this will return True. This\n+        is **not** a check to see if the response code is ``200 OK``.\n+        \"\"\"\n         try:\n             self.raise_for_status()\n         except HTTPError:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#8e049bd9eb49485dc98efd6f14ab7f76c084cf8b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 14 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 16 | Churn Cumulative: 9662 | Contributors (this commit): 173 | Commits (past 90d): 9 | Contributors (cumulative): 173 | DMM Complexity: None\n\nDIFF:\n@@ -659,11 +659,23 @@ class Response(object):\n         return '<Response [%s]>' % (self.status_code)\n \n     def __bool__(self):\n-        \"\"\"Returns true if :attr:`status_code` is 'OK'.\"\"\"\n+        \"\"\"Returns True if :attr:`status_code` is less than 400.\n+\n+        This attribute checks if the status code of the response is between\n+        400 and 600 to see if there was a client error or a server error. If\n+        the status code, is between 200 and 400, this will return True. This\n+        is **not** a check to see if the response code is ``200 OK``.\n+        \"\"\"\n         return self.ok\n \n     def __nonzero__(self):\n-        \"\"\"Returns true if :attr:`status_code` is 'OK'.\"\"\"\n+        \"\"\"Returns True if :attr:`status_code` is less than 400.\n+\n+        This attribute checks if the status code of the response is between\n+        400 and 600 to see if there was a client error or a server error. If\n+        the status code, is between 200 and 400, this will return True. This\n+        is **not** a check to see if the response code is ``200 OK``.\n+        \"\"\"\n         return self.ok\n \n     def __iter__(self):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c121b98c4eb1e4ee8927995d9b9f1d6bdccd9349", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 174 | Lines Deleted: 3 | Files Changed: 3 | Hunks: 8 | Methods Changed: 21 | Complexity Δ (Sum/Max): 24/13 | Churn Δ: 177 | Churn Cumulative: 4743 | Contributors (this commit): 76 | Commits (past 90d): 5 | Contributors (cumulative): 89 | DMM Complexity: 1.0\n\nDIFF:\n@@ -8,9 +8,12 @@ Data structures that power Requests.\n \"\"\"\n \n import collections\n+import time\n \n from .compat import OrderedDict\n \n+current_time = getattr(time, 'monotonic', time.time)\n+\n \n class CaseInsensitiveDict(collections.MutableMapping):\n     \"\"\"A case-insensitive ``dict``-like object.\n@@ -103,3 +106,89 @@ class LookupDict(dict):\n \n     def get(self, key, default=None):\n         return self.__dict__.get(key, default)\n+\n+\n+class TimedCacheManaged(object):\n+    \"\"\"\n+    Wrap a function call in a timed cache\n+    \"\"\"\n+    def __init__(self, fnc):\n+        self.fnc = fnc\n+        self.cache = TimedCache()\n+\n+    def __call__(self, *args, **kwargs):\n+        key = args[0]\n+        found = None\n+        try:\n+            found = self.cache[key]\n+        except KeyError:\n+            found = self.fnc(key, **kwargs)\n+            self.cache[key] = found\n+\n+        return found\n+\n+\n+class TimedCache(collections.MutableMapping):\n+    \"\"\"\n+    Evicts entries after expiration_secs. If none are expired and maxlen is hit,\n+    will evict the oldest cached entry\n+    \"\"\"\n+    def __init__(self, maxlen=32, expiration_secs=60):\n+        \"\"\"\n+        :param maxlen: most number of entries to hold on to\n+        :param expiration_secs: the number of seconds to hold on\n+        to entries\n+        \"\"\"\n+        self.maxlen = maxlen\n+        self.expiration_secs = expiration_secs\n+        self._dict = OrderedDict()\n+\n+    def __repr__(self):\n+        return '<TimedCache maxlen:%d len:%d expiration_secs:%d>' % \\\n+            (self.maxlen, len(self._dict), self.expiration_secs)\n+\n+    def __iter__(self):\n+        return map(lambda kv: (kv[0], kv[1][1]), self._dict.items()).__iter__()\n+\n+    def __delitem__(self, item):\n+        return self._dict.__delitem__(item)\n+\n+    def __getitem__(self, key):\n+        \"\"\"\n+        Look up an item in the cache. If the item\n+        has already expired, it will be invalidated and not returned\n+\n+        :param key: which entry to look up\n+        :return: the value in the cache, or None\n+        \"\"\"\n+        occurred, value = self._dict[key]\n+        now = int(current_time())\n+\n+        if now - occurred > self.expiration_secs:\n+            del self._dict[key]\n+            raise KeyError\n+        else:\n+            return value\n+\n+    def __setitem__(self, key, value):\n+        \"\"\"\n+        Locates the value at lookup key, if cache is full, will evict the\n+        oldest entry\n+\n+        :param key: the key to search the cache for\n+        :param value: the value to be added to the cache\n+        \"\"\"\n+        now = int(current_time())\n+\n+        while len(self._dict) >= self.maxlen:\n+            self._dict.popitem(last=False)\n+\n+        return self._dict.__setitem__(key, (now, value))\n+\n+    def __len__(self):\n+        \"\"\":return: the length of the cache\"\"\"\n+        return len(self._dict)\n+\n+    def clear(self):\n+        \"\"\"Clears the cache\"\"\"\n+        return self._dict.clear()\n\n@@ -28,7 +28,7 @@ from .compat import (\n     quote, urlparse, bytes, str, OrderedDict, unquote, getproxies,\n     proxy_bypass, urlunparse, basestring, integer_types)\n from .cookies import RequestsCookieJar, cookiejar_from_dict\n-from .structures import CaseInsensitiveDict\n+from .structures import CaseInsensitiveDict, TimedCache, TimedCacheManaged\n from .exceptions import (\n     InvalidURL, InvalidHeader, FileModeWarning, UnrewindableBodyError)\n \n@@ -579,6 +579,16 @@ def set_environ(env_name, value):\n             os.environ[env_name] = old_value\n \n \n+@TimedCacheManaged\n+def _proxy_bypass_cached(netloc):\n+    \"\"\"\n+    Looks for netloc in the cache, if not found, will call proxy_bypass\n+    for the netloc and store its result in the cache\n+\n+    :rtype: bool\n+    \"\"\"\n+    return proxy_bypass(netloc)\n+\n def should_bypass_proxies(url, no_proxy):\n     \"\"\"\n     Returns whether we should bypass proxies or not.\n@@ -626,7 +636,7 @@ def should_bypass_proxies(url, no_proxy):\n     # legitimate problems.\n     with set_environ('no_proxy', no_proxy_arg):\n         try:\n-            bypass = proxy_bypass(netloc)\n+            bypass = _proxy_bypass_cached(netloc)\n         except (TypeError, socket.gaierror):\n             bypass = False\n \n\n@@ -2,7 +2,7 @@\n \n import pytest\n \n-from requests.structures import CaseInsensitiveDict, LookupDict\n+from requests.structures import CaseInsensitiveDict, LookupDict, TimedCache, TimedCacheManaged\n \n \n class TestCaseInsensitiveDict:\n@@ -74,3 +74,75 @@ class TestLookupDict:\n     @get_item_parameters\n     def test_get(self, key, value):\n         assert self.lookup_dict.get(key) == value\n+\n+\n+class TestTimedCache(object):\n+    @pytest.fixture(autouse=True)\n+    def setup(self):\n+        self.any_value = 'some value'\n+        self.expiration_secs = 60\n+        self.cache = TimedCache(expiration_secs=self.expiration_secs)\n+        yield\n+        self.cache.clear()\n+\n+    def test_get(self):\n+        self.cache['a'] = self.any_value\n+        assert self.cache['a'] is self.any_value\n+\n+    def test_repr(self):\n+        repr = str(self.cache)\n+        assert repr == '<TimedCache maxlen:32 len:0 expiration_secs:60>'\n+\n+    def test_get_expired_item(self, mocker):\n+        self.cache = TimedCache(maxlen=1, expiration_secs=self.expiration_secs)\n+\n+        mocker.patch('requests.structures.current_time', lambda: 0)\n+        self.cache['a'] = self.any_value\n+        mocker.patch('requests.structures.current_time', lambda: self.expiration_secs + 1)\n+        assert self.cache.get('a') is None\n+\n+    def test_evict_first_entry_when_full(self, mocker):\n+        self.cache = TimedCache(maxlen=2, expiration_secs=2)\n+        mocker.patch('requests.structures.current_time', lambda: 0)\n+        self.cache['a'] = self.any_value\n+        mocker.patch('requests.structures.current_time', lambda: 1)\n+        self.cache['b'] = self.any_value\n+        mocker.patch('requests.structures.current_time', lambda: 3)\n+        self.cache['c'] = self.any_value\n+        assert len(self.cache) is 2\n+        with pytest.raises(KeyError, message='Expected key not found'):\n+            self.cache['a']\n+        assert self.cache['b'] is self.any_value\n+        assert self.cache['c'] is self.any_value\n+\n+    def test_delete_item_removes_item(self):\n+        self.cache['a'] = self.any_value\n+        del self.cache['a']\n+        with pytest.raises(KeyError, message='Expected key not found'):\n+            self.cache['a']\n+\n+    def test_iterating_hides_timestamps(self):\n+        self.cache['a'] = 1\n+        self.cache['b'] = 2\n+        expected = [('a', 1), ('b', 2)]\n+        actual = [(key, val) for key, val in self.cache]\n+        assert expected == actual\n+\n+\n+class TestTimedCacheManagedDecorator(object):\n+    def test_caches_repeated_calls(self, mocker):\n+        mocker.patch('requests.structures.current_time', lambda: 0)\n+\n+        nonlocals = {'value': 0}\n+\n+        @TimedCacheManaged\n+        def some_method(x):\n+            nonlocals['value'] = nonlocals['value'] + x\n+            return nonlocals['value']\n+\n+        first_result = some_method(1)\n+        assert first_result is 1\n+        second_result = some_method(1)\n+        assert second_result is 1\n+        third_result = some_method(2)\n+        assert third_result is 3\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
