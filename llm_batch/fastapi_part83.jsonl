{"custom_id": "fastapi#736712173ad75eebcd0e17d49ac30db0a9332b0f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 24 | Lines Deleted: 455 | Files Changed: 5 | Hunks: 8 | Methods Changed: 13 | Complexity Δ (Sum/Max): -7/1 | Churn Δ: 479 | Churn Cumulative: 1319 | Contributors (this commit): 6 | Commits (past 90d): 5 | Contributors (cumulative): 15 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,8 +1,27 @@\n+import importlib\n+from types import ModuleType\n+\n import pytest\n from dirty_equals import IsDict\n from fastapi.testclient import TestClient\n \n-from docs_src.cookie_params.tutorial001 import app\n+from ...utils import needs_py39, needs_py310\n+\n+\n+@pytest.fixture(\n+    name=\"mod\",\n+    params=[\n+        \"tutorial001\",\n+        pytest.param(\"tutorial001_py310\", marks=needs_py310),\n+        \"tutorial001_an\",\n+        pytest.param(\"tutorial001_an_py39\", marks=needs_py39),\n+        pytest.param(\"tutorial001_an_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_mod(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.cookie_params.{request.param}\")\n+\n+    return mod\n \n \n @pytest.mark.parametrize(\n@@ -19,15 +38,15 @@ from docs_src.cookie_params.tutorial001 import app\n         (\"/items\", {\"session\": \"cookiesession\"}, 200, {\"ads_id\": None}),\n     ],\n )\n-def test(path, cookies, expected_status, expected_response):\n-    client = TestClient(app, cookies=cookies)\n+def test(path, cookies, expected_status, expected_response, mod: ModuleType):\n+    client = TestClient(mod.app, cookies=cookies)\n     response = client.get(path)\n     assert response.status_code == expected_status\n     assert response.json() == expected_response\n \n \n-def test_openapi_schema():\n-    client = TestClient(app)\n+def test_openapi_schema(mod: ModuleType):\n+    client = TestClient(mod.app)\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n\n@@ -1,108 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from docs_src.cookie_params.tutorial001_an import app\n-\n-\n-@pytest.mark.parametrize(\n-    \"path,cookies,expected_status,expected_response\",\n-    [\n-        (\"/items\", None, 200, {\"ads_id\": None}),\n-        (\"/items\", {\"ads_id\": \"ads_track\"}, 200, {\"ads_id\": \"ads_track\"}),\n-        (\n-            \"/items\",\n-            {\"ads_id\": \"ads_track\", \"session\": \"cookiesession\"},\n-            200,\n-            {\"ads_id\": \"ads_track\"},\n-        ),\n-        (\"/items\", {\"session\": \"cookiesession\"}, 200, {\"ads_id\": None}),\n-    ],\n-)\n-def test(path, cookies, expected_status, expected_response):\n-    client = TestClient(app, cookies=cookies)\n-    response = client.get(path)\n-    assert response.status_code == expected_status\n-    assert response.json() == expected_response\n-\n-\n-def test_openapi_schema():\n-    client = TestClient(app)\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": False,\n-                            \"schema\": IsDict(\n-                                {\n-                                    \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                                    \"title\": \"Ads Id\",\n-                                }\n-                            )\n-                            | IsDict(\n-                                # TODO: remove when deprecating Pydantic v1\n-                                {\"title\": \"Ads Id\", \"type\": \"string\"}\n-                            ),\n-                            \"name\": \"ads_id\",\n-                            \"in\": \"cookie\",\n-                        }\n-                    ],\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,114 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@needs_py310\n-@pytest.mark.parametrize(\n-    \"path,cookies,expected_status,expected_response\",\n-    [\n-        (\"/items\", None, 200, {\"ads_id\": None}),\n-        (\"/items\", {\"ads_id\": \"ads_track\"}, 200, {\"ads_id\": \"ads_track\"}),\n-        (\n-            \"/items\",\n-            {\"ads_id\": \"ads_track\", \"session\": \"cookiesession\"},\n-            200,\n-            {\"ads_id\": \"ads_track\"},\n-        ),\n-        (\"/items\", {\"session\": \"cookiesession\"}, 200, {\"ads_id\": None}),\n-    ],\n-)\n-def test(path, cookies, expected_status, expected_response):\n-    from docs_src.cookie_params.tutorial001_an_py310 import app\n-\n-    client = TestClient(app, cookies=cookies)\n-    response = client.get(path)\n-    assert response.status_code == expected_status\n-    assert response.json() == expected_response\n-\n-\n-@needs_py310\n-def test_openapi_schema():\n-    from docs_src.cookie_params.tutorial001_an_py310 import app\n-\n-    client = TestClient(app)\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": False,\n-                            \"schema\": IsDict(\n-                                {\n-                                    \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                                    \"title\": \"Ads Id\",\n-                                }\n-                            )\n-                            | IsDict(\n-                                # TODO: remove when deprecating Pydantic v1\n-                                {\"title\": \"Ads Id\", \"type\": \"string\"}\n-                            ),\n-                            \"name\": \"ads_id\",\n-                            \"in\": \"cookie\",\n-                        }\n-                    ],\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,114 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py39\n-\n-\n-@needs_py39\n-@pytest.mark.parametrize(\n-    \"path,cookies,expected_status,expected_response\",\n-    [\n-        (\"/items\", None, 200, {\"ads_id\": None}),\n-        (\"/items\", {\"ads_id\": \"ads_track\"}, 200, {\"ads_id\": \"ads_track\"}),\n-        (\n-            \"/items\",\n-            {\"ads_id\": \"ads_track\", \"session\": \"cookiesession\"},\n-            200,\n-            {\"ads_id\": \"ads_track\"},\n-        ),\n-        (\"/items\", {\"session\": \"cookiesession\"}, 200, {\"ads_id\": None}),\n-    ],\n-)\n-def test(path, cookies, expected_status, expected_response):\n-    from docs_src.cookie_params.tutorial001_an_py39 import app\n-\n-    client = TestClient(app, cookies=cookies)\n-    response = client.get(path)\n-    assert response.status_code == expected_status\n-    assert response.json() == expected_response\n-\n-\n-@needs_py39\n-def test_openapi_schema():\n-    from docs_src.cookie_params.tutorial001_an_py39 import app\n-\n-    client = TestClient(app)\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": False,\n-                            \"schema\": IsDict(\n-                                {\n-                                    \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                                    \"title\": \"Ads Id\",\n-                                }\n-                            )\n-                            | IsDict(\n-                                # TODO: remove when deprecating Pydantic v1\n-                                {\"title\": \"Ads Id\", \"type\": \"string\"}\n-                            ),\n-                            \"name\": \"ads_id\",\n-                            \"in\": \"cookie\",\n-                        }\n-                    ],\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,114 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@needs_py310\n-@pytest.mark.parametrize(\n-    \"path,cookies,expected_status,expected_response\",\n-    [\n-        (\"/items\", None, 200, {\"ads_id\": None}),\n-        (\"/items\", {\"ads_id\": \"ads_track\"}, 200, {\"ads_id\": \"ads_track\"}),\n-        (\n-            \"/items\",\n-            {\"ads_id\": \"ads_track\", \"session\": \"cookiesession\"},\n-            200,\n-            {\"ads_id\": \"ads_track\"},\n-        ),\n-        (\"/items\", {\"session\": \"cookiesession\"}, 200, {\"ads_id\": None}),\n-    ],\n-)\n-def test(path, cookies, expected_status, expected_response):\n-    from docs_src.cookie_params.tutorial001_py310 import app\n-\n-    client = TestClient(app, cookies=cookies)\n-    response = client.get(path)\n-    assert response.status_code == expected_status\n-    assert response.json() == expected_response\n-\n-\n-@needs_py310\n-def test_openapi_schema():\n-    from docs_src.cookie_params.tutorial001_py310 import app\n-\n-    client = TestClient(app)\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/\": {\n-                \"get\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__get\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": False,\n-                            \"schema\": IsDict(\n-                                {\n-                                    \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"null\"}],\n-                                    \"title\": \"Ads Id\",\n-                                }\n-                            )\n-                            | IsDict(\n-                                # TODO: remove when deprecating Pydantic v1\n-                                {\"title\": \"Ads Id\", \"type\": \"string\"}\n-                            ),\n-                            \"name\": \"ads_id\",\n-                            \"in\": \"cookie\",\n-                        }\n-                    ],\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#8015f832d4f7788e5abf21bae4915e96683bea3c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 23 | Lines Deleted: 732 | Files Changed: 5 | Hunks: 8 | Methods Changed: 16 | Complexity Δ (Sum/Max): -10/1 | Churn Δ: 755 | Churn Cumulative: 2469 | Contributors (this commit): 7 | Commits (past 90d): 5 | Contributors (cumulative): 19 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,12 +1,30 @@\n+import importlib\n+\n+import pytest\n from dirty_equals import IsDict\n from fastapi.testclient import TestClient\n \n-from docs_src.extra_data_types.tutorial001 import app\n-\n-client = TestClient(app)\n+from ...utils import needs_py39, needs_py310\n \n \n-def test_extra_types():\n+@pytest.fixture(\n+    name=\"client\",\n+    params=[\n+        \"tutorial001\",\n+        pytest.param(\"tutorial001_py310\", marks=needs_py310),\n+        \"tutorial001_an\",\n+        pytest.param(\"tutorial001_an_py39\", marks=needs_py39),\n+        pytest.param(\"tutorial001_an_py310\", marks=needs_py310),\n+    ],\n+)\n+def get_client(request: pytest.FixtureRequest):\n+    mod = importlib.import_module(f\"docs_src.extra_data_types.{request.param}\")\n+\n+    client = TestClient(mod.app)\n+    return client\n+\n+\n+def test_extra_types(client: TestClient):\n     item_id = \"ff97dd87-a4a5-4a12-b412-cde99f33e00e\"\n     data = {\n         \"start_datetime\": \"2018-12-22T14:00:00+00:00\",\n@@ -27,7 +45,7 @@ def test_extra_types():\n     assert response.json() == expected_response\n \n \n-def test_openapi_schema():\n+def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n\n@@ -1,175 +0,0 @@\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from docs_src.extra_data_types.tutorial001_an import app\n-\n-client = TestClient(app)\n-\n-\n-def test_extra_types():\n-    item_id = \"ff97dd87-a4a5-4a12-b412-cde99f33e00e\"\n-    data = {\n-        \"start_datetime\": \"2018-12-22T14:00:00+00:00\",\n-        \"end_datetime\": \"2018-12-24T15:00:00+00:00\",\n-        \"repeat_at\": \"15:30:00\",\n-        \"process_after\": 300,\n-    }\n-    expected_response = data.copy()\n-    expected_response.update(\n-        {\n-            \"start_process\": \"2018-12-22T14:05:00+00:00\",\n-            \"duration\": 176_100,\n-            \"item_id\": item_id,\n-        }\n-    )\n-    response = client.put(f\"/items/{item_id}\", json=data)\n-    assert response.status_code == 200, response.text\n-    assert response.json() == expected_response\n-\n-\n-def test_openapi_schema():\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\n-                                \"title\": \"Item Id\",\n-                                \"type\": \"string\",\n-                                \"format\": \"uuid\",\n-                            },\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"required\": True,\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"allOf\": [\n-                                            {\n-                                                \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                            }\n-                                        ],\n-                                        \"title\": \"Body\",\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                    }\n-                                )\n-                            }\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Body_read_items_items__item_id__put\": {\n-                    \"title\": \"Body_read_items_items__item_id__put\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"start_datetime\": {\n-                            \"title\": \"Start Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"end_datetime\": {\n-                            \"title\": \"End Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"repeat_at\": IsDict(\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"anyOf\": [\n-                                    {\"type\": \"string\", \"format\": \"time\"},\n-                                    {\"type\": \"null\"},\n-                                ],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"type\": \"string\",\n-                                \"format\": \"time\",\n-                            }\n-                        ),\n-                        \"process_after\": IsDict(\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"string\",\n-                                \"format\": \"duration\",\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"number\",\n-                                \"format\": \"time-delta\",\n-                            }\n-                        ),\n-                    },\n-                    \"required\": [\"start_datetime\", \"end_datetime\", \"process_after\"],\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,184 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.extra_data_types.tutorial001_an_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_extra_types(client: TestClient):\n-    item_id = \"ff97dd87-a4a5-4a12-b412-cde99f33e00e\"\n-    data = {\n-        \"start_datetime\": \"2018-12-22T14:00:00+00:00\",\n-        \"end_datetime\": \"2018-12-24T15:00:00+00:00\",\n-        \"repeat_at\": \"15:30:00\",\n-        \"process_after\": 300,\n-    }\n-    expected_response = data.copy()\n-    expected_response.update(\n-        {\n-            \"start_process\": \"2018-12-22T14:05:00+00:00\",\n-            \"duration\": 176_100,\n-            \"item_id\": item_id,\n-        }\n-    )\n-    response = client.put(f\"/items/{item_id}\", json=data)\n-    assert response.status_code == 200, response.text\n-    assert response.json() == expected_response\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\n-                                \"title\": \"Item Id\",\n-                                \"type\": \"string\",\n-                                \"format\": \"uuid\",\n-                            },\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"required\": True,\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"allOf\": [\n-                                            {\n-                                                \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                            }\n-                                        ],\n-                                        \"title\": \"Body\",\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                    }\n-                                )\n-                            }\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Body_read_items_items__item_id__put\": {\n-                    \"title\": \"Body_read_items_items__item_id__put\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"start_datetime\": {\n-                            \"title\": \"Start Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"end_datetime\": {\n-                            \"title\": \"End Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"repeat_at\": IsDict(\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"anyOf\": [\n-                                    {\"type\": \"string\", \"format\": \"time\"},\n-                                    {\"type\": \"null\"},\n-                                ],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"type\": \"string\",\n-                                \"format\": \"time\",\n-                            }\n-                        ),\n-                        \"process_after\": IsDict(\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"string\",\n-                                \"format\": \"duration\",\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"number\",\n-                                \"format\": \"time-delta\",\n-                            }\n-                        ),\n-                    },\n-                    \"required\": [\"start_datetime\", \"end_datetime\", \"process_after\"],\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,184 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py39\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.extra_data_types.tutorial001_an_py39 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py39\n-def test_extra_types(client: TestClient):\n-    item_id = \"ff97dd87-a4a5-4a12-b412-cde99f33e00e\"\n-    data = {\n-        \"start_datetime\": \"2018-12-22T14:00:00+00:00\",\n-        \"end_datetime\": \"2018-12-24T15:00:00+00:00\",\n-        \"repeat_at\": \"15:30:00\",\n-        \"process_after\": 300,\n-    }\n-    expected_response = data.copy()\n-    expected_response.update(\n-        {\n-            \"start_process\": \"2018-12-22T14:05:00+00:00\",\n-            \"duration\": 176_100,\n-            \"item_id\": item_id,\n-        }\n-    )\n-    response = client.put(f\"/items/{item_id}\", json=data)\n-    assert response.status_code == 200, response.text\n-    assert response.json() == expected_response\n-\n-\n-@needs_py39\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\n-                                \"title\": \"Item Id\",\n-                                \"type\": \"string\",\n-                                \"format\": \"uuid\",\n-                            },\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"required\": True,\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"allOf\": [\n-                                            {\n-                                                \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                            }\n-                                        ],\n-                                        \"title\": \"Body\",\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                    }\n-                                )\n-                            }\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Body_read_items_items__item_id__put\": {\n-                    \"title\": \"Body_read_items_items__item_id__put\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"start_datetime\": {\n-                            \"title\": \"Start Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"end_datetime\": {\n-                            \"title\": \"End Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"repeat_at\": IsDict(\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"anyOf\": [\n-                                    {\"type\": \"string\", \"format\": \"time\"},\n-                                    {\"type\": \"null\"},\n-                                ],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"type\": \"string\",\n-                                \"format\": \"time\",\n-                            }\n-                        ),\n-                        \"process_after\": IsDict(\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"string\",\n-                                \"format\": \"duration\",\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"number\",\n-                                \"format\": \"time-delta\",\n-                            }\n-                        ),\n-                    },\n-                    \"required\": [\"start_datetime\", \"end_datetime\", \"process_after\"],\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n@@ -1,184 +0,0 @@\n-import pytest\n-from dirty_equals import IsDict\n-from fastapi.testclient import TestClient\n-\n-from ...utils import needs_py310\n-\n-\n-@pytest.fixture(name=\"client\")\n-def get_client():\n-    from docs_src.extra_data_types.tutorial001_py310 import app\n-\n-    client = TestClient(app)\n-    return client\n-\n-\n-@needs_py310\n-def test_extra_types(client: TestClient):\n-    item_id = \"ff97dd87-a4a5-4a12-b412-cde99f33e00e\"\n-    data = {\n-        \"start_datetime\": \"2018-12-22T14:00:00+00:00\",\n-        \"end_datetime\": \"2018-12-24T15:00:00+00:00\",\n-        \"repeat_at\": \"15:30:00\",\n-        \"process_after\": 300,\n-    }\n-    expected_response = data.copy()\n-    expected_response.update(\n-        {\n-            \"start_process\": \"2018-12-22T14:05:00+00:00\",\n-            \"duration\": 176_100,\n-            \"item_id\": item_id,\n-        }\n-    )\n-    response = client.put(f\"/items/{item_id}\", json=data)\n-    assert response.status_code == 200, response.text\n-    assert response.json() == expected_response\n-\n-\n-@needs_py310\n-def test_openapi_schema(client: TestClient):\n-    response = client.get(\"/openapi.json\")\n-    assert response.status_code == 200, response.text\n-    assert response.json() == {\n-        \"openapi\": \"3.1.0\",\n-        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"paths\": {\n-            \"/items/{item_id}\": {\n-                \"put\": {\n-                    \"responses\": {\n-                        \"200\": {\n-                            \"description\": \"Successful Response\",\n-                            \"content\": {\"application/json\": {\"schema\": {}}},\n-                        },\n-                        \"422\": {\n-                            \"description\": \"Validation Error\",\n-                            \"content\": {\n-                                \"application/json\": {\n-                                    \"schema\": {\n-                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n-                                    }\n-                                }\n-                            },\n-                        },\n-                    },\n-                    \"summary\": \"Read Items\",\n-                    \"operationId\": \"read_items_items__item_id__put\",\n-                    \"parameters\": [\n-                        {\n-                            \"required\": True,\n-                            \"schema\": {\n-                                \"title\": \"Item Id\",\n-                                \"type\": \"string\",\n-                                \"format\": \"uuid\",\n-                            },\n-                            \"name\": \"item_id\",\n-                            \"in\": \"path\",\n-                        }\n-                    ],\n-                    \"requestBody\": {\n-                        \"required\": True,\n-                        \"content\": {\n-                            \"application/json\": {\n-                                \"schema\": IsDict(\n-                                    {\n-                                        \"allOf\": [\n-                                            {\n-                                                \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                            }\n-                                        ],\n-                                        \"title\": \"Body\",\n-                                    }\n-                                )\n-                                | IsDict(\n-                                    # TODO: remove when deprecating Pydantic v1\n-                                    {\n-                                        \"$ref\": \"#/components/schemas/Body_read_items_items__item_id__put\"\n-                                    }\n-                                )\n-                            }\n-                        },\n-                    },\n-                }\n-            }\n-        },\n-        \"components\": {\n-            \"schemas\": {\n-                \"Body_read_items_items__item_id__put\": {\n-                    \"title\": \"Body_read_items_items__item_id__put\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"start_datetime\": {\n-                            \"title\": \"Start Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"end_datetime\": {\n-                            \"title\": \"End Datetime\",\n-                            \"type\": \"string\",\n-                            \"format\": \"date-time\",\n-                        },\n-                        \"repeat_at\": IsDict(\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"anyOf\": [\n-                                    {\"type\": \"string\", \"format\": \"time\"},\n-                                    {\"type\": \"null\"},\n-                                ],\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Repeat At\",\n-                                \"type\": \"string\",\n-                                \"format\": \"time\",\n-                            }\n-                        ),\n-                        \"process_after\": IsDict(\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"string\",\n-                                \"format\": \"duration\",\n-                            }\n-                        )\n-                        | IsDict(\n-                            # TODO: remove when deprecating Pydantic v1\n-                            {\n-                                \"title\": \"Process After\",\n-                                \"type\": \"number\",\n-                                \"format\": \"time-delta\",\n-                            }\n-                        ),\n-                    },\n-                    \"required\": [\"start_datetime\", \"end_datetime\", \"process_after\"],\n-                },\n-                \"ValidationError\": {\n-                    \"title\": \"ValidationError\",\n-                    \"required\": [\"loc\", \"msg\", \"type\"],\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"loc\": {\n-                            \"title\": \"Location\",\n-                            \"type\": \"array\",\n-                            \"items\": {\n-                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n-                            },\n-                        },\n-                        \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n-                        \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n-                    },\n-                },\n-                \"HTTPValidationError\": {\n-                    \"title\": \"HTTPValidationError\",\n-                    \"type\": \"object\",\n-                    \"properties\": {\n-                        \"detail\": {\n-                            \"title\": \"Detail\",\n-                            \"type\": \"array\",\n-                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n-                        }\n-                    },\n-                },\n-            }\n-        },\n-    }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
