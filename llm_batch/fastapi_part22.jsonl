{"custom_id": "fastapi#56ab106bbbf8054af437821c6683491ca7952c3b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 141 | Contributors (this commit): 1 | Commits (past 90d): 35 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.21.0\"\n+__version__ = \"0.22.0\"\n \n from starlette.background import BackgroundTasks\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#f54d8d57a42420019d384aa3b495402545b0af33", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 90 | Lines Deleted: 37 | Files Changed: 2 | Hunks: 15 | Methods Changed: 8 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 127 | Churn Cumulative: 225 | Contributors (this commit): 3 | Commits (past 90d): 4 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,80 +1,77 @@\n from starlette.responses import HTMLResponse\n \n \n-def get_swagger_ui_html(*, openapi_url: str, title: str) -> HTMLResponse:\n-    return HTMLResponse(\n-        \"\"\"\n+def get_swagger_ui_html(\n+    *,\n+    openapi_url: str,\n+    title: str,\n+    swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui-bundle.js\",\n+    swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui.css\",\n+    swagger_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n+) -> HTMLResponse:\n+    html = f\"\"\"\n     <! doctype html>\n     <html>\n     <head>\n-    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui.css\">\n-    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\n-    <title>\n-    \"\"\"\n-        + title\n-        + \"\"\"\n-    </title>\n+    <link type=\"text/css\" rel=\"stylesheet\" href=\"{swagger_css_url}\">\n+    <link rel=\"shortcut icon\" href=\"{swagger_favicon_url}\">\n+    <title>{title}</title>\n     </head>\n     <body>\n     <div id=\"swagger-ui\">\n     </div>\n-    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui-bundle.js\"></script>\n+    <script src=\"{swagger_js_url}\"></script>\n     <!-- `SwaggerUIBundle` is now available on the page -->\n     <script>\n-            \n-    const ui = SwaggerUIBundle({\n-        url: '\"\"\"\n-        + openapi_url\n-        + \"\"\"',\n+    const ui = SwaggerUIBundle({{\n+        url: '{openapi_url}',\n         dom_id: '#swagger-ui',\n         presets: [\n         SwaggerUIBundle.presets.apis,\n         SwaggerUIBundle.SwaggerUIStandalonePreset\n         ],\n-        layout: \"BaseLayout\",\n-        deepLinking: true\n+        layout: \"BaseLayout\"\n \n-    })\n+    }})\n     </script>\n     </body>\n     </html>\n     \"\"\"\n-    )\n+    return HTMLResponse(html)\n \n \n-def get_redoc_html(*, openapi_url: str, title: str) -> HTMLResponse:\n-    return HTMLResponse(\n-        \"\"\"\n+def get_redoc_html(\n+    *,\n+    openapi_url: str,\n+    title: str,\n+    redoc_js_url: str = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\",\n+    redoc_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n+) -> HTMLResponse:\n+\n+    html = f\"\"\"\n     <!DOCTYPE html>\n     <html>\n     <head>\n-    <title>\n-    \"\"\"\n-        + title\n-        + \"\"\"\n-    </title>\n+    <title>{title}</title>\n     <!-- needed for adaptive design -->\n     <meta charset=\"utf-8\"/>\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n     <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\">\n-    <link rel=\"shortcut icon\" href=\"https://fastapi.tiangolo.com/img/favicon.png\">\n-\n+    <link rel=\"shortcut icon\" href=\"{redoc_favicon_url}\">\n     <!--\n     ReDoc doesn't change outer page styles\n     -->\n     <style>\n-      body {\n+      body {{\n         margin: 0;\n         padding: 0;\n-      }\n+      }}\n     </style>\n     </head>\n     <body>\n-    <redoc spec-url='\"\"\"\n-        + openapi_url\n-        + \"\"\"'></redoc>\n-    <script src=\"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\"> </script>\n+    <redoc spec-url=\"{openapi_url}\"></redoc>\n+    <script src=\"{redoc_js_url}\"> </script>\n     </body>\n     </html>\n     \"\"\"\n-    )\n+    return HTMLResponse(html)\n\n@@ -0,0 +1,56 @@\n+import inspect\n+\n+from fastapi.openapi.docs import get_redoc_html, get_swagger_ui_html\n+\n+\n+def test_strings_in_generated_swagger():\n+    sig = inspect.signature(get_swagger_ui_html)\n+    swagger_js_url = sig.parameters.get(\"swagger_js_url\").default\n+    swagger_css_url = sig.parameters.get(\"swagger_css_url\").default\n+    swagger_favicon_url = sig.parameters.get(\"swagger_favicon_url\").default\n+    html = get_swagger_ui_html(openapi_url=\"/docs\", title=\"title\")\n+    body_content = html.body.decode()\n+    assert swagger_js_url in body_content\n+    assert swagger_css_url in body_content\n+    assert swagger_favicon_url in body_content\n+\n+\n+def test_strings_in_custom_swagger():\n+    swagger_js_url = \"swagger_fake_file.js\"\n+    swagger_css_url = \"swagger_fake_file.css\"\n+    swagger_favicon_url = \"swagger_fake_file.png\"\n+    html = get_swagger_ui_html(\n+        openapi_url=\"/docs\",\n+        title=\"title\",\n+        swagger_js_url=swagger_js_url,\n+        swagger_css_url=swagger_css_url,\n+        swagger_favicon_url=swagger_favicon_url,\n+    )\n+    body_content = html.body.decode()\n+    assert swagger_js_url in body_content\n+    assert swagger_css_url in body_content\n+    assert swagger_favicon_url in body_content\n+\n+\n+def test_strings_in_generated_redoc():\n+    sig = inspect.signature(get_redoc_html)\n+    redoc_js_url = sig.parameters.get(\"redoc_js_url\").default\n+    redoc_favicon_url = sig.parameters.get(\"redoc_favicon_url\").default\n+    html = get_redoc_html(openapi_url=\"/docs\", title=\"title\")\n+    body_content = html.body.decode()\n+    assert redoc_js_url in body_content\n+    assert redoc_favicon_url in body_content\n+\n+\n+def test_strings_in_custom_redoc():\n+    redoc_js_url = \"fake_redoc_file.js\"\n+    redoc_favicon_url = \"fake_redoc_file.png\"\n+    html = get_redoc_html(\n+        openapi_url=\"/docs\",\n+        title=\"title\",\n+        redoc_js_url=redoc_js_url,\n+        redoc_favicon_url=redoc_favicon_url,\n+    )\n+    body_content = html.body.decode()\n+    assert redoc_js_url in body_content\n+    assert redoc_favicon_url in body_content\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#01b43e6e25a0bac85f2612cbb44a5237e976d6ed", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 19 | Lines Deleted: 20 | Files Changed: 1 | Hunks: 6 | Methods Changed: 4 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 39 | Churn Cumulative: 1620 | Contributors (this commit): 5 | Commits (past 90d): 10 | Contributors (cumulative): 5 | DMM Complexity: 1.0\n\nDIFF:\n@@ -9,7 +9,7 @@ from starlette.applications import Starlette\n from starlette.exceptions import ExceptionMiddleware, HTTPException\n from starlette.middleware.errors import ServerErrorMiddleware\n from starlette.requests import Request\n-from starlette.responses import JSONResponse, Response\n+from starlette.responses import HTMLResponse, JSONResponse, Response\n from starlette.routing import BaseRoute\n \n \n@@ -79,29 +79,28 @@ class FastAPI(Starlette):\n \n     def setup(self) -> None:\n         if self.openapi_url:\n-            self.add_route(\n-                self.openapi_url,\n-                lambda req: JSONResponse(self.openapi()),\n-                include_in_schema=False,\n-            )\n+\n+            async def openapi(req: Request) -> JSONResponse:\n+                return JSONResponse(self.openapi())\n+\n+            self.add_route(self.openapi_url, openapi, include_in_schema=False)\n+            openapi_url = self.openapi_prefix + self.openapi_url\n         if self.openapi_url and self.docs_url:\n-            self.add_route(\n-                self.docs_url,\n-                lambda r: get_swagger_ui_html(\n-                    openapi_url=self.openapi_prefix + self.openapi_url,\n-                    title=self.title + \" - Swagger UI\",\n-                ),\n-                include_in_schema=False,\n+\n+            async def swagger_ui_html(req: Request) -> HTMLResponse:\n+                return get_swagger_ui_html(\n+                    openapi_url=openapi_url, title=self.title + \" - Swagger UI\"\n                 )\n+\n+            self.add_route(self.docs_url, swagger_ui_html, include_in_schema=False)\n         if self.openapi_url and self.redoc_url:\n-            self.add_route(\n-                self.redoc_url,\n-                lambda r: get_redoc_html(\n-                    openapi_url=self.openapi_prefix + self.openapi_url,\n-                    title=self.title + \" - ReDoc\",\n-                ),\n-                include_in_schema=False,\n+\n+            async def redoc_html(req: Request) -> HTMLResponse:\n+                return get_redoc_html(\n+                    openapi_url=openapi_url, title=self.title + \" - ReDoc\"\n                 )\n+\n+            self.add_route(self.redoc_url, redoc_html, include_in_schema=False)\n         self.add_exception_handler(HTTPException, http_exception)\n \n     def add_api_route(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#325edd5f00c9325e67b04cbd0d0ac3fb0cbdf4ab", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 185 | Lines Deleted: 5 | Files Changed: 5 | Hunks: 15 | Methods Changed: 18 | Complexity Δ (Sum/Max): 13/4 | Churn Δ: 190 | Churn Cumulative: 3227 | Contributors (this commit): 7 | Commits (past 90d): 18 | Contributors (cumulative): 14 | DMM Complexity: 0.946969696969697\n\nDIFF:\n@@ -1,7 +1,11 @@\n from typing import Any, Callable, Dict, List, Optional, Type, Union\n \n from fastapi import routing\n-from fastapi.openapi.docs import get_redoc_html, get_swagger_ui_html\n+from fastapi.openapi.docs import (\n+    get_redoc_html,\n+    get_swagger_ui_html,\n+    get_swagger_ui_oauth2_redirect_html,\n+)\n from fastapi.openapi.utils import get_openapi\n from fastapi.params import Depends\n from pydantic import BaseModel\n@@ -36,6 +40,7 @@ class FastAPI(Starlette):\n         openapi_prefix: str = \"\",\n         docs_url: Optional[str] = \"/docs\",\n         redoc_url: Optional[str] = \"/redoc\",\n+        swagger_ui_oauth2_redirect_url: Optional[str] = \"/docs/oauth2-redirect\",\n         **extra: Dict[str, Any],\n     ) -> None:\n         self._debug = debug\n@@ -52,6 +57,7 @@ class FastAPI(Starlette):\n         self.openapi_prefix = openapi_prefix.rstrip(\"/\")\n         self.docs_url = docs_url\n         self.redoc_url = redoc_url\n+        self.swagger_ui_oauth2_redirect_url = swagger_ui_oauth2_redirect_url\n         self.extra = extra\n \n         self.openapi_version = \"3.0.2\"\n@@ -89,10 +95,23 @@ class FastAPI(Starlette):\n \n             async def swagger_ui_html(req: Request) -> HTMLResponse:\n                 return get_swagger_ui_html(\n-                    openapi_url=openapi_url, title=self.title + \" - Swagger UI\"\n+                    openapi_url=openapi_url,\n+                    title=self.title + \" - Swagger UI\",\n+                    oauth2_redirect_url=self.swagger_ui_oauth2_redirect_url,\n                 )\n \n             self.add_route(self.docs_url, swagger_ui_html, include_in_schema=False)\n+\n+            if self.swagger_ui_oauth2_redirect_url:\n+\n+                async def swagger_ui_redirect(req: Request) -> HTMLResponse:\n+                    return get_swagger_ui_oauth2_redirect_html()\n+\n+                self.add_route(\n+                    self.swagger_ui_oauth2_redirect_url,\n+                    swagger_ui_redirect,\n+                    include_in_schema=False,\n+                )\n         if self.openapi_url and self.redoc_url:\n \n             async def redoc_html(req: Request) -> HTMLResponse:\n\n@@ -1,3 +1,5 @@\n+from typing import Optional\n+\n from starlette.responses import HTMLResponse\n \n \n@@ -8,7 +10,9 @@ def get_swagger_ui_html(\n     swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui-bundle.js\",\n     swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@3/swagger-ui.css\",\n     swagger_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n+    oauth2_redirect_url: Optional[str] = None,\n ) -> HTMLResponse:\n+\n     html = f\"\"\"\n     <! doctype html>\n     <html>\n@@ -25,14 +29,19 @@ def get_swagger_ui_html(\n     <script>\n     const ui = SwaggerUIBundle({{\n         url: '{openapi_url}',\n+    \"\"\"\n+\n+    if oauth2_redirect_url:\n+        html += f\"oauth2RedirectUrl: window.location.origin + '{oauth2_redirect_url}',\"\n+\n+    html += \"\"\"\n         dom_id: '#swagger-ui',\n         presets: [\n         SwaggerUIBundle.presets.apis,\n         SwaggerUIBundle.SwaggerUIStandalonePreset\n         ],\n         layout: \"BaseLayout\"\n-\n-    }})\n+    })\n     </script>\n     </body>\n     </html>\n@@ -47,7 +56,6 @@ def get_redoc_html(\n     redoc_js_url: str = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\",\n     redoc_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n ) -> HTMLResponse:\n-\n     html = f\"\"\"\n     <!DOCTYPE html>\n     <html>\n@@ -75,3 +83,76 @@ def get_redoc_html(\n     </html>\n     \"\"\"\n     return HTMLResponse(html)\n+\n+\n+def get_swagger_ui_oauth2_redirect_html() -> HTMLResponse:\n+    html = \"\"\"\n+    <!doctype html>\n+    <html lang=\"en-US\">\n+    <body onload=\"run()\">\n+    </body>\n+    </html>\n+    <script>\n+        'use strict';\n+        function run () {\n+            var oauth2 = window.opener.swaggerUIRedirectOauth2;\n+            var sentState = oauth2.state;\n+            var redirectUrl = oauth2.redirectUrl;\n+            var isValid, qp, arr;\n+\n+            if (/code|token|error/.test(window.location.hash)) {\n+                qp = window.location.hash.substring(1);\n+            } else {\n+                qp = location.search.substring(1);\n+            }\n+\n+            arr = qp.split(\"&\")\n+            arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';})\n+            qp = qp ? JSON.parse('{' + arr.join() + '}',\n+                    function (key, value) {\n+                        return key === \"\" ? value : decodeURIComponent(value)\n+                    }\n+            ) : {}\n+\n+            isValid = qp.state === sentState\n+\n+            if ((\n+            oauth2.auth.schema.get(\"flow\") === \"accessCode\"||\n+            oauth2.auth.schema.get(\"flow\") === \"authorizationCode\"\n+            ) && !oauth2.auth.code) {\n+                if (!isValid) {\n+                    oauth2.errCb({\n+                        authId: oauth2.auth.name,\n+                        source: \"auth\",\n+                        level: \"warning\",\n+                        message: \"Authorization may be unsafe, passed state was changed in server Passed state wasn't returned from auth server\"\n+                    });\n+                }\n+\n+                if (qp.code) {\n+                    delete oauth2.state;\n+                    oauth2.auth.code = qp.code;\n+                    oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\n+                } else {\n+                    let oauthErrorMsg\n+                    if (qp.error) {\n+                        oauthErrorMsg = \"[\"+qp.error+\"]: \" +\n+                            (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\n+                            (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\n+                    }\n+\n+                    oauth2.errCb({\n+                        authId: oauth2.auth.name,\n+                        source: \"auth\",\n+                        level: \"error\",\n+                        message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server\"\n+                    });\n+                }\n+            } else {\n+                oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\n+            }\n+            window.close();\n+        }\n+    </script>\n+        \"\"\"\n+    return HTMLResponse(content=html)\n\n@@ -1131,6 +1131,17 @@ def test_swagger_ui():\n     assert response.status_code == 200\n     assert response.headers[\"content-type\"] == \"text/html; charset=utf-8\"\n     assert \"swagger-ui-dist\" in response.text\n+    assert (\n+        f\"oauth2RedirectUrl: window.location.origin + '/docs/oauth2-redirect'\"\n+        in response.text\n+    )\n+\n+\n+def test_swagger_ui_oauth2_redirect():\n+    response = client.get(\"/docs/oauth2-redirect\")\n+    assert response.status_code == 200\n+    assert response.headers[\"content-type\"] == \"text/html; charset=utf-8\"\n+    assert \"window.opener.swaggerUIRedirectOauth2\" in response.text\n \n \n def test_redoc():\n\n@@ -0,0 +1,38 @@\n+from fastapi import FastAPI\n+from starlette.testclient import TestClient\n+\n+swagger_ui_oauth2_redirect_url = \"/docs/redirect\"\n+\n+app = FastAPI(swagger_ui_oauth2_redirect_url=swagger_ui_oauth2_redirect_url)\n+\n+\n+@app.get(\"/items/\")\n+async def read_items():\n+    return {\"id\": \"foo\"}\n+\n+\n+client = TestClient(app)\n+\n+\n+def test_swagger_ui():\n+    response = client.get(\"/docs\")\n+    assert response.status_code == 200\n+    assert response.headers[\"content-type\"] == \"text/html; charset=utf-8\"\n+    assert \"swagger-ui-dist\" in response.text\n+    print(client.base_url)\n+    assert (\n+        f\"oauth2RedirectUrl: window.location.origin + '{swagger_ui_oauth2_redirect_url}'\"\n+        in response.text\n+    )\n+\n+\n+def test_swagger_ui_oauth2_redirect():\n+    response = client.get(swagger_ui_oauth2_redirect_url)\n+    assert response.status_code == 200\n+    assert response.headers[\"content-type\"] == \"text/html; charset=utf-8\"\n+    assert \"window.opener.swaggerUIRedirectOauth2\" in response.text\n+\n+\n+def test_response():\n+    response = client.get(\"/items/\")\n+    assert response.json() == {\"id\": \"foo\"}\n\n@@ -0,0 +1,31 @@\n+from fastapi import FastAPI\n+from starlette.testclient import TestClient\n+\n+app = FastAPI(swagger_ui_oauth2_redirect_url=None)\n+\n+\n+@app.get(\"/items/\")\n+async def read_items():\n+    return {\"id\": \"foo\"}\n+\n+\n+client = TestClient(app)\n+\n+\n+def test_swagger_ui():\n+    response = client.get(\"/docs\")\n+    assert response.status_code == 200\n+    assert response.headers[\"content-type\"] == \"text/html; charset=utf-8\"\n+    assert \"swagger-ui-dist\" in response.text\n+    print(client.base_url)\n+    assert \"oauth2RedirectUrl\" not in response.text\n+\n+\n+def test_swagger_ui_no_oauth2_redirect():\n+    response = client.get(\"/docs/oauth2-redirect\")\n+    assert response.status_code == 404\n+\n+\n+def test_response():\n+    response = client.get(\"/items/\")\n+    assert response.json() == {\"id\": \"foo\"}\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#fc89eb8f81dbce31e783d9d3737bca98c9c0b840", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 143 | Contributors (this commit): 1 | Commits (past 90d): 31 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.22.0\"\n+__version__ = \"0.23.0\"\n \n from starlette.background import BackgroundTasks\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#b087246f2649e1b30545693d7b850e5f277c3a29", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 277 | Lines Deleted: 6 | Files Changed: 11 | Hunks: 20 | Methods Changed: 28 | Complexity Δ (Sum/Max): 34/9 | Churn Δ: 283 | Churn Cumulative: 5363 | Contributors (this commit): 10 | Commits (past 90d): 53 | Contributors (cumulative): 27 | DMM Complexity: 0.9397590361445783\n\nDIFF:\n\n@@ -44,10 +44,9 @@ async def get():\n     return HTMLResponse(html)\n \n \n-@app.websocket_route(\"/ws\")\n+@app.websocket(\"/ws\")\n async def websocket_endpoint(websocket: WebSocket):\n     await websocket.accept()\n     while True:\n         data = await websocket.receive_text()\n         await websocket.send_text(f\"Message text was: {data}\")\n-    await websocket.close()\n\n@@ -0,0 +1,78 @@\n+from fastapi import Cookie, Depends, FastAPI, Header\n+from starlette.responses import HTMLResponse\n+from starlette.status import WS_1008_POLICY_VIOLATION\n+from starlette.websockets import WebSocket\n+\n+app = FastAPI()\n+\n+html = \"\"\"\n+<!DOCTYPE html>\n+<html>\n+    <head>\n+        <title>Chat</title>\n+    </head>\n+    <body>\n+        <h1>WebSocket Chat</h1>\n+        <form action=\"\" onsubmit=\"sendMessage(event)\">\n+            <label>Item ID: <input type=\"text\" id=\"itemId\" autocomplete=\"off\" value=\"foo\"/></label>\n+            <button onclick=\"connect(event)\">Connect</button>\n+            <br>\n+            <label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label>\n+            <button>Send</button>\n+        </form>\n+        <ul id='messages'>\n+        </ul>\n+        <script>\n+        var ws = null;\n+            function connect(event) {\n+                var input = document.getElementById(\"itemId\")\n+                ws = new WebSocket(\"ws://localhost:8000/items/\" + input.value + \"/ws\");\n+                ws.onmessage = function(event) {\n+                    var messages = document.getElementById('messages')\n+                    var message = document.createElement('li')\n+                    var content = document.createTextNode(event.data)\n+                    message.appendChild(content)\n+                    messages.appendChild(message)\n+                };\n+            }\n+            function sendMessage(event) {\n+                var input = document.getElementById(\"messageText\")\n+                ws.send(input.value)\n+                input.value = ''\n+                event.preventDefault()\n+            }\n+        </script>\n+    </body>\n+</html>\n+\"\"\"\n+\n+\n+@app.get(\"/\")\n+async def get():\n+    return HTMLResponse(html)\n+\n+\n+async def get_cookie_or_client(\n+    websocket: WebSocket, session: str = Cookie(None), x_client: str = Header(None)\n+):\n+    if session is None and x_client is None:\n+        await websocket.close(code=WS_1008_POLICY_VIOLATION)\n+    return session or x_client\n+\n+\n+@app.websocket(\"/items/{item_id}/ws\")\n+async def websocket_endpoint(\n+    websocket: WebSocket,\n+    item_id: int,\n+    q: str = None,\n+    cookie_or_client: str = Depends(get_cookie_or_client),\n+):\n+    await websocket.accept()\n+    while True:\n+        data = await websocket.receive_text()\n+        await websocket.send_text(\n+            f\"Session Cookie or X-Client Header value is: {cookie_or_client}\"\n+        )\n+        if q is not None:\n+            await websocket.send_text(f\"Query parameter q is: {q}\")\n+        await websocket.send_text(f\"Message text was: {data}, for item ID: {item_id}\")\n\n@@ -203,6 +203,18 @@ class FastAPI(Starlette):\n \n         return decorator\n \n+    def add_api_websocket_route(\n+        self, path: str, endpoint: Callable, name: str = None\n+    ) -> None:\n+        self.router.add_api_websocket_route(path, endpoint, name=name)\n+\n+    def websocket(self, path: str, name: str = None) -> Callable:\n+        def decorator(func: Callable) -> Callable:\n+            self.add_api_websocket_route(path, func, name=name)\n+            return func\n+\n+        return decorator\n+\n     def include_router(\n         self,\n         router: routing.APIRouter,\n\n@@ -26,6 +26,7 @@ class Dependant:\n         name: str = None,\n         call: Callable = None,\n         request_param_name: str = None,\n+        websocket_param_name: str = None,\n         background_tasks_param_name: str = None,\n         security_scopes_param_name: str = None,\n         security_scopes: List[str] = None,\n@@ -38,6 +39,7 @@ class Dependant:\n         self.dependencies = dependencies or []\n         self.security_requirements = security_schemes or []\n         self.request_param_name = request_param_name\n+        self.websocket_param_name = websocket_param_name\n         self.background_tasks_param_name = background_tasks_param_name\n         self.security_scopes = security_scopes\n         self.security_scopes_param_name = security_scopes_param_name\n\n@@ -33,6 +33,7 @@ from starlette.background import BackgroundTasks\n from starlette.concurrency import run_in_threadpool\n from starlette.datastructures import FormData, Headers, QueryParams, UploadFile\n from starlette.requests import Request\n+from starlette.websockets import WebSocket\n \n param_supported_types = (\n     str,\n@@ -184,6 +185,8 @@ def get_dependant(\n             )\n         elif lenient_issubclass(param.annotation, Request):\n             dependant.request_param_name = param_name\n+        elif lenient_issubclass(param.annotation, WebSocket):\n+            dependant.websocket_param_name = param_name\n         elif lenient_issubclass(param.annotation, BackgroundTasks):\n             dependant.background_tasks_param_name = param_name\n         elif lenient_issubclass(param.annotation, SecurityScopes):\n@@ -279,7 +282,7 @@ def is_coroutine_callable(call: Callable) -> bool:\n \n async def solve_dependencies(\n     *,\n-    request: Request,\n+    request: Union[Request, WebSocket],\n     dependant: Dependant,\n     body: Dict[str, Any] = None,\n     background_tasks: BackgroundTasks = None,\n@@ -326,8 +329,10 @@ async def solve_dependencies(\n         )\n         values.update(body_values)\n         errors.extend(body_errors)\n-    if dependant.request_param_name:\n+    if dependant.request_param_name and isinstance(request, Request):\n         values[dependant.request_param_name] = request\n+    elif dependant.websocket_param_name and isinstance(request, WebSocket):\n+        values[dependant.websocket_param_name] = request\n     if dependant.background_tasks_param_name:\n         if background_tasks is None:\n             background_tasks = BackgroundTasks()\n\n@@ -1,6 +1,7 @@\n import asyncio\n import inspect\n import logging\n+import re\n from typing import Any, Callable, Dict, List, Optional, Type, Union\n \n from fastapi import params\n@@ -21,8 +22,14 @@ from starlette.concurrency import run_in_threadpool\n from starlette.exceptions import HTTPException\n from starlette.requests import Request\n from starlette.responses import JSONResponse, Response\n-from starlette.routing import compile_path, get_name, request_response\n-from starlette.status import HTTP_422_UNPROCESSABLE_ENTITY\n+from starlette.routing import (\n+    compile_path,\n+    get_name,\n+    request_response,\n+    websocket_session,\n+)\n+from starlette.status import HTTP_422_UNPROCESSABLE_ENTITY, WS_1008_POLICY_VIOLATION\n+from starlette.websockets import WebSocket\n \n \n def serialize_response(*, field: Field = None, response: Response) -> Any:\n@@ -97,6 +104,35 @@ def get_app(\n     return app\n \n \n+def get_websocket_app(dependant: Dependant) -> Callable:\n+    async def app(websocket: WebSocket) -> None:\n+        values, errors, _ = await solve_dependencies(\n+            request=websocket, dependant=dependant\n+        )\n+        if errors:\n+            await websocket.close(code=WS_1008_POLICY_VIOLATION)\n+            errors_out = ValidationError(errors)\n+            raise HTTPException(\n+                status_code=HTTP_422_UNPROCESSABLE_ENTITY, detail=errors_out.errors()\n+            )\n+        assert dependant.call is not None, \"dependant.call must me a function\"\n+        await dependant.call(**values)\n+\n+    return app\n+\n+\n+class APIWebSocketRoute(routing.WebSocketRoute):\n+    def __init__(self, path: str, endpoint: Callable, *, name: str = None) -> None:\n+        self.path = path\n+        self.endpoint = endpoint\n+        self.name = get_name(endpoint) if name is None else name\n+        self.dependant = get_dependant(path=path, call=self.endpoint)\n+        self.app = websocket_session(get_websocket_app(dependant=self.dependant))\n+        regex = \"^\" + path + \"$\"\n+        regex = re.sub(\"{([a-zA-Z_][a-zA-Z0-9_]*)}\", r\"(?P<\\1>[^/]+)\", regex)\n+        self.path_regex, self.path_format, self.param_convertors = compile_path(path)\n+\n+\n class APIRoute(routing.Route):\n     def __init__(\n         self,\n@@ -281,6 +317,19 @@ class APIRouter(routing.Router):\n \n         return decorator\n \n+    def add_api_websocket_route(\n+        self, path: str, endpoint: Callable, name: str = None\n+    ) -> None:\n+        route = APIWebSocketRoute(path, endpoint=endpoint, name=name)\n+        self.routes.append(route)\n+\n+    def websocket(self, path: str, name: str = None) -> Callable:\n+        def decorator(func: Callable) -> Callable:\n+            self.add_api_websocket_route(path, func, name=name)\n+            return func\n+\n+        return decorator\n+\n     def include_router(\n         self,\n         router: \"APIRouter\",\n@@ -326,6 +375,10 @@ class APIRouter(routing.Router):\n                     include_in_schema=route.include_in_schema,\n                     name=route.name,\n                 )\n+            elif isinstance(route, APIWebSocketRoute):\n+                self.add_api_websocket_route(\n+                    prefix + route.path, route.endpoint, name=route.name\n+                )\n             elif isinstance(route, routing.WebSocketRoute):\n                 self.add_websocket_route(\n                     prefix + route.path, route.endpoint, name=route.name\n\n\n@@ -0,0 +1,25 @@\n+import pytest\n+from starlette.testclient import TestClient\n+from starlette.websockets import WebSocketDisconnect\n+from websockets.tutorial001 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_main():\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n+    assert b\"<!DOCTYPE html>\" in response.content\n+\n+\n+def test_websocket():\n+    with pytest.raises(WebSocketDisconnect):\n+        with client.websocket_connect(\"/ws\") as websocket:\n+            message = \"Message one\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}\"\n+            message = \"Message two\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}\"\n\n@@ -0,0 +1,83 @@\n+import pytest\n+from starlette.testclient import TestClient\n+from starlette.websockets import WebSocketDisconnect\n+from websockets.tutorial002 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_main():\n+    response = client.get(\"/\")\n+    assert response.status_code == 200\n+    assert b\"<!DOCTYPE html>\" in response.content\n+\n+\n+def test_websocket_with_cookie():\n+    with pytest.raises(WebSocketDisconnect):\n+        with client.websocket_connect(\n+            \"/items/1/ws\", cookies={\"session\": \"fakesession\"}\n+        ) as websocket:\n+            message = \"Message one\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == \"Session Cookie or X-Client Header value is: fakesession\"\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}, for item ID: 1\"\n+            message = \"Message two\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == \"Session Cookie or X-Client Header value is: fakesession\"\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}, for item ID: 1\"\n+\n+\n+def test_websocket_with_header():\n+    with pytest.raises(WebSocketDisconnect):\n+        with client.websocket_connect(\n+            \"/items/2/ws\", headers={\"X-Client\": \"xmen\"}\n+        ) as websocket:\n+            message = \"Message one\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == \"Session Cookie or X-Client Header value is: xmen\"\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}, for item ID: 2\"\n+            message = \"Message two\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == \"Session Cookie or X-Client Header value is: xmen\"\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}, for item ID: 2\"\n+\n+\n+def test_websocket_with_header_and_query():\n+    with pytest.raises(WebSocketDisconnect):\n+        with client.websocket_connect(\n+            \"/items/2/ws?q=baz\", headers={\"X-Client\": \"xmen\"}\n+        ) as websocket:\n+            message = \"Message one\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == \"Session Cookie or X-Client Header value is: xmen\"\n+            data = websocket.receive_text()\n+            assert data == \"Query parameter q is: baz\"\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}, for item ID: 2\"\n+            message = \"Message two\"\n+            websocket.send_text(message)\n+            data = websocket.receive_text()\n+            assert data == \"Session Cookie or X-Client Header value is: xmen\"\n+            data = websocket.receive_text()\n+            assert data == \"Query parameter q is: baz\"\n+            data = websocket.receive_text()\n+            assert data == f\"Message text was: {message}, for item ID: 2\"\n+\n+\n+def test_websocket_no_credentials():\n+    with pytest.raises(WebSocketDisconnect):\n+        client.websocket_connect(\"/items/2/ws\")\n+\n+\n+def test_websocket_invalid_data():\n+    with pytest.raises(WebSocketDisconnect):\n+        client.websocket_connect(\"/items/foo/ws\", headers={\"X-Client\": \"xmen\"})\n\n@@ -28,6 +28,13 @@ async def routerprefixindex(websocket: WebSocket):\n     await websocket.close()\n \n \n+@router.websocket(\"/router2\")\n+async def routerindex(websocket: WebSocket):\n+    await websocket.accept()\n+    await websocket.send_text(\"Hello, router!\")\n+    await websocket.close()\n+\n+\n app.include_router(router)\n app.include_router(prefix_router, prefix=\"/prefix\")\n \n@@ -51,3 +58,10 @@ def test_prefix_router():\n     with client.websocket_connect(\"/prefix/\") as websocket:\n         data = websocket.receive_text()\n         assert data == \"Hello, router with prefix!\"\n+\n+\n+def test_router2():\n+    client = TestClient(app)\n+    with client.websocket_connect(\"/router2\") as websocket:\n+        data = websocket.receive_text()\n+        assert data == \"Hello, router!\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#67f8cb3b4f0e931547f016a701861aacfff2f424", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 145 | Contributors (this commit): 1 | Commits (past 90d): 32 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.23.0\"\n+__version__ = \"0.24.0\"\n \n from starlette.background import BackgroundTasks\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#d8716f94aed15c699bab4b6675b538d485c5b528", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 280 | Lines Deleted: 8 | Files Changed: 6 | Hunks: 60 | Methods Changed: 37 | Complexity Δ (Sum/Max): 6/3 | Churn Δ: 288 | Churn Cumulative: 4772 | Contributors (this commit): 10 | Commits (past 90d): 40 | Contributors (cumulative): 22 | DMM Complexity: 0.8333333333333334\n\nDIFF:\n@@ -1,4 +1,4 @@\n-from typing import Set\n+from typing import List\n \n from fastapi import FastAPI\n from pydantic import BaseModel\n@@ -11,9 +11,9 @@ class Item(BaseModel):\n     description: str = None\n     price: float\n     tax: float = None\n-    tags: Set[str] = []\n+    tags: List[str] = []\n \n \n @app.post(\"/items/\", response_model=Item)\n-async def create_item(*, item: Item):\n+async def create_item(item: Item):\n     return item\n\n@@ -0,0 +1,36 @@\n+from typing import List\n+\n+from fastapi import FastAPI\n+from pydantic import BaseModel\n+\n+app = FastAPI()\n+\n+\n+class Item(BaseModel):\n+    name: str\n+    description: str = None\n+    price: float\n+    tax: float = 10.5\n+    tags: List[str] = []\n+\n+\n+items = {\n+    \"foo\": {\"name\": \"Foo\", \"price\": 50.2},\n+    \"bar\": {\"name\": \"Bar\", \"description\": \"The bartenders\", \"price\": 62, \"tax\": 20.2},\n+    \"baz\": {\"name\": \"Baz\", \"description\": None, \"price\": 50.2, \"tax\": 10.5, \"tags\": []},\n+}\n+\n+\n+@app.get(\"/items/{item_id}\", response_model=Item, response_model_skip_defaults=True)\n+def read_item(item_id: str):\n+    return items[item_id]\n+\n+\n+@app.patch(\"/items/{item_id}\", response_model=Item, response_model_skip_defaults=True)\n+async def update_item(item_id: str, item: Item):\n+    stored_item_data = items[item_id]\n+    stored_item_model = Item(**stored_item_data)\n+    update_data = item.dict(skip_defaults=True)\n+    updated_item = stored_item_model.copy(update=update_data)\n+    items[item_id] = updated_item\n+    return updated_item\n\n@@ -138,6 +138,7 @@ class FastAPI(Starlette):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -156,6 +157,7 @@ class FastAPI(Starlette):\n             deprecated=deprecated,\n             methods=methods,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -176,6 +178,7 @@ class FastAPI(Starlette):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -195,6 +198,7 @@ class FastAPI(Starlette):\n                 deprecated=deprecated,\n                 methods=methods,\n                 operation_id=operation_id,\n+                response_model_skip_defaults=response_model_skip_defaults,\n                 include_in_schema=include_in_schema,\n                 response_class=response_class,\n                 name=name,\n@@ -246,6 +250,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -262,6 +267,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -281,6 +287,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -297,6 +304,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -316,6 +324,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -332,6 +341,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -351,6 +361,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -367,6 +378,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -386,6 +398,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -402,6 +415,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -421,6 +435,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -437,6 +452,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -456,6 +472,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -472,6 +489,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -491,6 +509,7 @@ class FastAPI(Starlette):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -507,6 +526,7 @@ class FastAPI(Starlette):\n             responses=responses or {},\n             deprecated=deprecated,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n\n@@ -11,6 +11,7 @@ def jsonable_encoder(\n     include: Set[str] = None,\n     exclude: Set[str] = set(),\n     by_alias: bool = True,\n+    skip_defaults: bool = False,\n     include_none: bool = True,\n     custom_encoder: dict = {},\n     sqlalchemy_safe: bool = True,\n@@ -18,7 +19,12 @@ def jsonable_encoder(\n     if isinstance(obj, BaseModel):\n         encoder = getattr(obj.Config, \"json_encoders\", custom_encoder)\n         return jsonable_encoder(\n-            obj.dict(include=include, exclude=exclude, by_alias=by_alias),\n+            obj.dict(\n+                include=include,\n+                exclude=exclude,\n+                by_alias=by_alias,\n+                skip_defaults=skip_defaults,\n+            ),\n             include_none=include_none,\n             custom_encoder=encoder,\n             sqlalchemy_safe=sqlalchemy_safe,\n@@ -42,6 +48,7 @@ def jsonable_encoder(\n                 encoded_key = jsonable_encoder(\n                     key,\n                     by_alias=by_alias,\n+                    skip_defaults=skip_defaults,\n                     include_none=include_none,\n                     custom_encoder=custom_encoder,\n                     sqlalchemy_safe=sqlalchemy_safe,\n@@ -49,6 +56,7 @@ def jsonable_encoder(\n                 encoded_value = jsonable_encoder(\n                     value,\n                     by_alias=by_alias,\n+                    skip_defaults=skip_defaults,\n                     include_none=include_none,\n                     custom_encoder=custom_encoder,\n                     sqlalchemy_safe=sqlalchemy_safe,\n@@ -64,6 +72,7 @@ def jsonable_encoder(\n                     include=include,\n                     exclude=exclude,\n                     by_alias=by_alias,\n+                    skip_defaults=skip_defaults,\n                     include_none=include_none,\n                     custom_encoder=custom_encoder,\n                     sqlalchemy_safe=sqlalchemy_safe,\n@@ -91,6 +100,7 @@ def jsonable_encoder(\n     return jsonable_encoder(\n         data,\n         by_alias=by_alias,\n+        skip_defaults=skip_defaults,\n         include_none=include_none,\n         custom_encoder=custom_encoder,\n         sqlalchemy_safe=sqlalchemy_safe,\n\n@@ -32,8 +32,11 @@ from starlette.status import HTTP_422_UNPROCESSABLE_ENTITY, WS_1008_POLICY_VIOLA\n from starlette.websockets import WebSocket\n \n \n-def serialize_response(*, field: Field = None, response: Response) -> Any:\n-    encoded = jsonable_encoder(response)\n+def serialize_response(\n+    *, field: Field = None, response: Response, skip_defaults: bool = False\n+) -> Any:\n+\n+    encoded = jsonable_encoder(response, skip_defaults=skip_defaults)\n     if field:\n         errors = []\n         value, errors_ = field.validate(encoded, {}, loc=(\"response\",))\n@@ -43,7 +46,7 @@ def serialize_response(*, field: Field = None, response: Response) -> Any:\n             errors.extend(errors_)\n         if errors:\n             raise ValidationError(errors)\n-        return jsonable_encoder(value)\n+        return jsonable_encoder(value, skip_defaults=skip_defaults)\n     else:\n         return encoded\n \n@@ -54,6 +57,7 @@ def get_app(\n     status_code: int = 200,\n     response_class: Type[Response] = JSONResponse,\n     response_field: Field = None,\n+    skip_defaults: bool = False,\n ) -> Callable:\n     assert dependant.call is not None, \"dependant.call must be a function\"\n     is_coroutine = asyncio.iscoroutinefunction(dependant.call)\n@@ -93,7 +97,7 @@ def get_app(\n                     raw_response.background = background_tasks\n                 return raw_response\n             response_data = serialize_response(\n-                field=response_field, response=raw_response\n+                field=response_field, response=raw_response, skip_defaults=skip_defaults\n             )\n             return response_class(\n                 content=response_data,\n@@ -151,6 +155,7 @@ class APIRoute(routing.Route):\n         name: str = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n     ) -> None:\n@@ -210,6 +215,7 @@ class APIRoute(routing.Route):\n             methods = [\"GET\"]\n         self.methods = methods\n         self.operation_id = operation_id\n+        self.response_model_skip_defaults = response_model_skip_defaults\n         self.include_in_schema = include_in_schema\n         self.response_class = response_class\n \n@@ -230,6 +236,7 @@ class APIRoute(routing.Route):\n                 status_code=self.status_code,\n                 response_class=self.response_class,\n                 response_field=self.response_field,\n+                skip_defaults=self.response_model_skip_defaults,\n             )\n         )\n \n@@ -251,6 +258,7 @@ class APIRouter(routing.Router):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -269,6 +277,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=methods,\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -290,6 +299,7 @@ class APIRouter(routing.Router):\n         deprecated: bool = None,\n         methods: List[str] = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -309,6 +319,7 @@ class APIRouter(routing.Router):\n                 deprecated=deprecated,\n                 methods=methods,\n                 operation_id=operation_id,\n+                response_model_skip_defaults=response_model_skip_defaults,\n                 include_in_schema=include_in_schema,\n                 response_class=response_class,\n                 name=name,\n@@ -363,6 +374,7 @@ class APIRouter(routing.Router):\n                     deprecated=route.deprecated,\n                     methods=route.methods,\n                     operation_id=route.operation_id,\n+                    response_model_skip_defaults=route.response_model_skip_defaults,\n                     include_in_schema=route.include_in_schema,\n                     response_class=route.response_class,\n                     name=route.name,\n@@ -398,10 +410,12 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n     ) -> Callable:\n+\n         return self.api_route(\n             path=path,\n             response_model=response_model,\n@@ -415,6 +429,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"GET\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -434,6 +449,7 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -451,6 +467,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"PUT\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -470,6 +487,7 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -487,6 +505,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"POST\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -506,6 +525,7 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -523,6 +543,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"DELETE\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -542,6 +563,7 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -559,6 +581,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"OPTIONS\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -578,6 +601,7 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -595,6 +619,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"HEAD\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -614,6 +639,7 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -631,6 +657,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"PATCH\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n@@ -650,6 +677,7 @@ class APIRouter(routing.Router):\n         responses: Dict[Union[int, str], Dict[str, Any]] = None,\n         deprecated: bool = None,\n         operation_id: str = None,\n+        response_model_skip_defaults: bool = False,\n         include_in_schema: bool = True,\n         response_class: Type[Response] = JSONResponse,\n         name: str = None,\n@@ -667,6 +695,7 @@ class APIRouter(routing.Router):\n             deprecated=deprecated,\n             methods=[\"TRACE\"],\n             operation_id=operation_id,\n+            response_model_skip_defaults=response_model_skip_defaults,\n             include_in_schema=include_in_schema,\n             response_class=response_class,\n             name=name,\n\n@@ -0,0 +1,177 @@\n+import pytest\n+from starlette.testclient import TestClient\n+\n+from response_model.tutorial004 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"Fast API\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/{item_id}\": {\n+            \"get\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Read Item\",\n+                \"operationId\": \"read_item_items__item_id__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+            },\n+            \"patch\": {\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                            }\n+                        },\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+                \"summary\": \"Update Item\",\n+                \"operationId\": \"update_item_items__item_id__patch\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item_Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    }\n+                ],\n+                \"requestBody\": {\n+                    \"content\": {\n+                        \"application/json\": {\n+                            \"schema\": {\"$ref\": \"#/components/schemas/Item\"}\n+                        }\n+                    },\n+                    \"required\": True,\n+                },\n+            },\n+        }\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"Item\": {\n+                \"title\": \"Item\",\n+                \"required\": [\"name\", \"price\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n+                    \"price\": {\"title\": \"Price\", \"type\": \"number\"},\n+                    \"description\": {\"title\": \"Description\", \"type\": \"string\"},\n+                    \"tax\": {\"title\": \"Tax\", \"type\": \"number\", \"default\": 10.5},\n+                    \"tags\": {\n+                        \"title\": \"Tags\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                        \"default\": [],\n+                    },\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200\n+    assert response.json() == openapi_schema\n+\n+\n+@pytest.mark.parametrize(\n+    \"url,data\",\n+    [\n+        (\"/items/foo\", {\"name\": \"Foo\", \"price\": 50.2}),\n+        (\n+            \"/items/bar\",\n+            {\"name\": \"Bar\", \"description\": \"The bartenders\", \"price\": 62, \"tax\": 20.2},\n+        ),\n+        (\n+            \"/items/baz\",\n+            {\n+                \"name\": \"Baz\",\n+                \"description\": None,\n+                \"price\": 50.2,\n+                \"tax\": 10.5,\n+                \"tags\": [],\n+            },\n+        ),\n+    ],\n+)\n+def test_get(url, data):\n+    response = client.get(url)\n+    assert response.status_code == 200\n+    assert response.json() == data\n+\n+\n+def test_patch():\n+    response = client.patch(\n+        \"/items/bar\", json={\"name\": \"Barz\", \"price\": 3, \"description\": None}\n+    )\n+    assert response.json() == {\n+        \"name\": \"Barz\",\n+        \"description\": None,\n+        \"price\": 3,\n+        \"tax\": 20.2,\n+    }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
