{"custom_id": "fastapi#2cef119cd75dc60f644fe537885747bd82a6f745", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 7 | Churn Cumulative: 58 | Contributors (this commit): 3 | Commits (past 90d): 1 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -1,14 +1,17 @@\n from fastapi.testclient import TestClient\n from sqlalchemy import create_engine\n from sqlalchemy.orm import sessionmaker\n+from sqlalchemy.pool import StaticPool\n \n from ..database import Base\n from ..main import app, get_db\n \n-SQLALCHEMY_DATABASE_URL = \"sqlite:///./test.db\"\n+SQLALCHEMY_DATABASE_URL = \"sqlite://\"\n \n engine = create_engine(\n-    SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False}\n+    SQLALCHEMY_DATABASE_URL,\n+    connect_args={\"check_same_thread\": False},\n+    poolclass=StaticPool,\n )\n TestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#b4b39d335940487649b03bf929c016b6f84b1128", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 8 | Files Changed: 2 | Hunks: 8 | Methods Changed: 11 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 16 | Churn Cumulative: 1327 | Contributors (this commit): 7 | Commits (past 90d): 3 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -33,7 +33,7 @@ async def hidden_query(\n     return {\"hidden_query\": hidden_query}\n \n \n-openapi_shema = {\n+openapi_schema = {\n     \"openapi\": \"3.0.2\",\n     \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n     \"paths\": {\n@@ -162,7 +162,7 @@ def test_openapi_schema():\n     client = TestClient(app)\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n-    assert response.json() == openapi_shema\n+    assert response.json() == openapi_schema\n \n \n @pytest.mark.parametrize(\n\n@@ -42,7 +42,7 @@ def examples(\n @app.post(\"/example_examples/\")\n def example_examples(\n     item: Item = Body(\n-        example={\"data\": \"Overriden example\"},\n+        example={\"data\": \"Overridden example\"},\n         examples={\n             \"example1\": {\"value\": {\"data\": \"examples example_examples 1\"}},\n             \"example2\": {\"value\": {\"data\": \"examples example_examples 2\"}},\n@@ -76,7 +76,7 @@ def example_examples(\n # def form_example_examples(\n #     lastname: str = Form(\n #         ...,\n-#         example=\"Doe overriden\",\n+#         example=\"Doe overridden\",\n #         examples={\n #             \"example1\": {\"summary\": \"last name summary\", \"value\": \"Doe\"},\n #             \"example2\": {\"value\": \"Doesn't\"},\n@@ -110,7 +110,7 @@ def path_examples(\n @app.get(\"/path_example_examples/{item_id}\")\n def path_example_examples(\n     item_id: str = Path(\n-        example=\"item_overriden\",\n+        example=\"item_overridden\",\n         examples={\n             \"example1\": {\"summary\": \"item ID summary\", \"value\": \"item_1\"},\n             \"example2\": {\"value\": \"item_2\"},\n@@ -147,7 +147,7 @@ def query_examples(\n def query_example_examples(\n     data: Union[str, None] = Query(\n         default=None,\n-        example=\"query_overriden\",\n+        example=\"query_overridden\",\n         examples={\n             \"example1\": {\"summary\": \"Query example 1\", \"value\": \"query1\"},\n             \"example2\": {\"value\": \"query2\"},\n@@ -184,7 +184,7 @@ def header_examples(\n def header_example_examples(\n     data: Union[str, None] = Header(\n         default=None,\n-        example=\"header_overriden\",\n+        example=\"header_overridden\",\n         examples={\n             \"example1\": {\"summary\": \"Query example 1\", \"value\": \"header1\"},\n             \"example2\": {\"value\": \"header2\"},\n@@ -221,7 +221,7 @@ def cookie_examples(\n def cookie_example_examples(\n     data: Union[str, None] = Cookie(\n         default=None,\n-        example=\"cookie_overriden\",\n+        example=\"cookie_overridden\",\n         examples={\n             \"example1\": {\"summary\": \"Query example 1\", \"value\": \"cookie1\"},\n             \"example2\": {\"value\": \"cookie2\"},\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#4721405ef7c970bf3ba08259546dcc0b87cf22c0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 423 | Contributors (this commit): 2 | Commits (past 90d): 6 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.97.0\"\n+__version__ = \"0.98.0\"\n \n from starlette import status as status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#f61217a18a011c597f109be4e6033014c7ff92e9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 101 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 101 | Churn Cumulative: 232 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,101 +0,0 @@\n-import logging\n-from datetime import datetime\n-from pathlib import Path\n-from typing import List, Union\n-\n-import httpx\n-from github import Github\n-from github.NamedUser import NamedUser\n-from pydantic import BaseModel, BaseSettings, SecretStr\n-\n-github_api = \"https://api.github.com\"\n-netlify_api = \"https://api.netlify.com\"\n-\n-\n-class Settings(BaseSettings):\n-    input_token: SecretStr\n-    github_repository: str\n-    github_event_path: Path\n-    github_event_name: Union[str, None] = None\n-\n-\n-class Artifact(BaseModel):\n-    id: int\n-    node_id: str\n-    name: str\n-    size_in_bytes: int\n-    url: str\n-    archive_download_url: str\n-    expired: bool\n-    created_at: datetime\n-    updated_at: datetime\n-\n-\n-class ArtifactResponse(BaseModel):\n-    total_count: int\n-    artifacts: List[Artifact]\n-\n-\n-def get_message(commit: str) -> str:\n-    return f\"Docs preview for commit {commit} at\"\n-\n-\n-if __name__ == \"__main__\":\n-    logging.basicConfig(level=logging.INFO)\n-    settings = Settings()\n-    logging.info(f\"Using config: {settings.json()}\")\n-    g = Github(settings.input_token.get_secret_value())\n-    repo = g.get_repo(settings.github_repository)\n-    owner: NamedUser = repo.owner\n-    headers = {\"Authorization\": f\"token {settings.input_token.get_secret_value()}\"}\n-    prs = list(repo.get_pulls(state=\"open\"))\n-    response = httpx.get(\n-        f\"{github_api}/repos/{settings.github_repository}/actions/artifacts\",\n-        headers=headers,\n-    )\n-    data = response.json()\n-    artifacts_response = ArtifactResponse.parse_obj(data)\n-    for pr in prs:\n-        logging.info(\"-----\")\n-        logging.info(f\"Processing PR #{pr.number}: {pr.title}\")\n-        pr_comments = list(pr.get_issue_comments())\n-        pr_commits = list(pr.get_commits())\n-        last_commit = pr_commits[0]\n-        for pr_commit in pr_commits:\n-            if pr_commit.commit.author.date > last_commit.commit.author.date:\n-                last_commit = pr_commit\n-        commit = last_commit.commit.sha\n-        logging.info(f\"Last commit: {commit}\")\n-        message = get_message(commit)\n-        notified = False\n-        for pr_comment in pr_comments:\n-            if message in pr_comment.body:\n-                notified = True\n-        logging.info(f\"Docs preview was notified: {notified}\")\n-        if not notified:\n-            artifact_name = f\"docs-zip-{commit}\"\n-            use_artifact: Union[Artifact, None] = None\n-            for artifact in artifacts_response.artifacts:\n-                if artifact.name == artifact_name:\n-                    use_artifact = artifact\n-                    break\n-            if not use_artifact:\n-                logging.info(\"Artifact not available\")\n-            else:\n-                logging.info(f\"Existing artifact: {use_artifact.name}\")\n-                response = httpx.post(\n-                    \"https://api.github.com/repos/tiangolo/fastapi/actions/workflows/preview-docs.yml/dispatches\",\n-                    headers=headers,\n-                    json={\n-                        \"ref\": \"master\",\n-                        \"inputs\": {\n-                            \"pr\": f\"{pr.number}\",\n-                            \"name\": artifact_name,\n-                            \"commit\": commit,\n-                        },\n-                    },\n-                )\n-                logging.info(\n-                    f\"Trigger sent, response status: {response.status_code} - content: {response.content}\"\n-                )\n-    logging.info(\"Finished\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#c09e5cdfa70a6c0226e10d93595717bf3c0feedb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 21 | Lines Deleted: 13 | Files Changed: 1 | Hunks: 8 | Methods Changed: 3 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 34 | Churn Cumulative: 638 | Contributors (this commit): 2 | Commits (past 90d): 1 | Contributors (cumulative): 2 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,3 +1,4 @@\n+import json\n import os\n import re\n import shutil\n@@ -133,12 +134,15 @@ def build_lang(\n     build_lang_path = build_dir_path / lang\n     en_lang_path = Path(\"docs/en\")\n     site_path = Path(\"site\").absolute()\n+    build_site_path = Path(\"site_build\").absolute()\n+    build_site_dist_path = build_site_path / lang\n     if lang == \"en\":\n         dist_path = site_path\n     else:\n         dist_path: Path = site_path / lang\n     shutil.rmtree(build_lang_path, ignore_errors=True)\n     shutil.copytree(lang_path, build_lang_path)\n+    if not lang == \"en\":\n         shutil.copytree(en_docs_path / \"data\", build_lang_path / \"data\")\n         overrides_src = en_docs_path / \"overrides\"\n         overrides_dest = build_lang_path / \"overrides\"\n@@ -147,7 +151,9 @@ def build_lang(\n             if not dest_path.exists():\n                 shutil.copy(path, dest_path)\n         en_config_path: Path = en_lang_path / mkdocs_name\n-    en_config: dict = mkdocs.utils.yaml_load(en_config_path.read_text(encoding=\"utf-8\"))\n+        en_config: dict = mkdocs.utils.yaml_load(\n+            en_config_path.read_text(encoding=\"utf-8\")\n+        )\n         nav = en_config[\"nav\"]\n         lang_config_path: Path = lang_path / mkdocs_name\n         lang_config: dict = mkdocs.utils.yaml_load(\n@@ -201,7 +207,10 @@ def build_lang(\n         )\n     current_dir = os.getcwd()\n     os.chdir(build_lang_path)\n-    subprocess.run([\"mkdocs\", \"build\", \"--site-dir\", dist_path], check=True)\n+    shutil.rmtree(build_site_dist_path, ignore_errors=True)\n+    shutil.rmtree(dist_path, ignore_errors=True)\n+    subprocess.run([\"mkdocs\", \"build\", \"--site-dir\", build_site_dist_path], check=True)\n+    shutil.copytree(build_site_dist_path, dist_path, dirs_exist_ok=True)\n     os.chdir(current_dir)\n     typer.secho(f\"Successfully built docs for: {lang}\", color=typer.colors.GREEN)\n \n@@ -271,18 +280,8 @@ def build_all():\n     Build mkdocs site for en, and then build each language inside, end result is located\n     at directory ./site/ with each language inside.\n     \"\"\"\n-    site_path = Path(\"site\").absolute()\n     update_languages(lang=None)\n-    current_dir = os.getcwd()\n-    os.chdir(en_docs_path)\n-    typer.echo(\"Building docs for: en\")\n-    subprocess.run([\"mkdocs\", \"build\", \"--site-dir\", site_path], check=True)\n-    os.chdir(current_dir)\n-    langs = []\n-    for lang in get_lang_paths():\n-        if lang == en_docs_path or not lang.is_dir():\n-            continue\n-        langs.append(lang.name)\n+    langs = [lang.name for lang in get_lang_paths() if lang.is_dir()]\n     cpu_count = os.cpu_count() or 1\n     process_pool_size = cpu_count * 4\n     typer.echo(f\"Using process pool size: {process_pool_size}\")\n@@ -397,6 +396,15 @@ def update_config(lang: str):\n     )\n \n \n+@app.command()\n+def langs_json():\n+    langs = []\n+    for lang_path in get_lang_paths():\n+        if lang_path.is_dir():\n+            langs.append(lang_path.name)\n+    print(json.dumps(langs))\n+\n+\n def get_key_section(\n     *, key_to_section: Dict[Tuple[str, ...], list], key: Tuple[str, ...]\n ) -> list:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#51d3a8ff127fd1ba6c34039961debd38597e403d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 38 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): 7/7 | Churn Δ: 38 | Churn Cumulative: 38 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: 0.20833333333333334\n\nDIFF:\n@@ -0,0 +1,38 @@\n+from typing import Any, List, Union\n+\n+from mkdocs.config.defaults import MkDocsConfig\n+from mkdocs.structure.files import Files\n+from mkdocs.structure.nav import Link, Navigation, Section\n+from mkdocs.structure.pages import Page\n+\n+\n+def generate_renamed_section_items(\n+    items: List[Union[Page, Section, Link]], *, config: MkDocsConfig\n+) -> List[Union[Page, Section, Link]]:\n+    new_items: List[Union[Page, Section, Link]] = []\n+    for item in items:\n+        if isinstance(item, Section):\n+            new_title = item.title\n+            new_children = generate_renamed_section_items(item.children, config=config)\n+            first_child = new_children[0]\n+            if isinstance(first_child, Page):\n+                if first_child.file.src_path.endswith(\"index.md\"):\n+                    # Read the source so that the title is parsed and available\n+                    first_child.read_source(config=config)\n+                    new_title = first_child.title or new_title\n+            # Creating a new section makes it render it collapsed by default\n+            # no idea why, so, let's just modify the existing one\n+            # new_section = Section(title=new_title, children=new_children)\n+            item.title = new_title\n+            item.children = new_children\n+            new_items.append(item)\n+        else:\n+            new_items.append(item)\n+    return new_items\n+\n+\n+def on_nav(\n+    nav: Navigation, *, config: MkDocsConfig, files: Files, **kwargs: Any\n+) -> Navigation:\n+    new_items = generate_renamed_section_items(nav.items, config=config)\n+    return Navigation(items=new_items, pages=nav.pages)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#5656ed09efea3451145087f63e402a0d024622b5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 130 | Lines Deleted: 211 | Files Changed: 2 | Hunks: 39 | Methods Changed: 29 | Complexity Δ (Sum/Max): -7/26 | Churn Δ: 341 | Churn Cumulative: 1017 | Contributors (this commit): 2 | Commits (past 90d): 4 | Contributors (cumulative): 3 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,4 +1,5 @@\n import json\n+import logging\n import os\n import re\n import shutil\n@@ -6,7 +7,7 @@ import subprocess\n from http.server import HTTPServer, SimpleHTTPRequestHandler\n from multiprocessing import Pool\n from pathlib import Path\n-from typing import Dict, List, Optional, Tuple\n+from typing import Any, Dict, List, Optional, Union\n \n import mkdocs.commands.build\n import mkdocs.commands.serve\n@@ -16,6 +17,8 @@ import typer\n import yaml\n from jinja2 import Template\n \n+logging.basicConfig(level=logging.INFO)\n+\n app = typer.Typer()\n \n mkdocs_name = \"mkdocs.yml\"\n@@ -27,19 +30,21 @@ missing_translation_snippet = \"\"\"\n docs_path = Path(\"docs\")\n en_docs_path = Path(\"docs/en\")\n en_config_path: Path = en_docs_path / mkdocs_name\n+site_path = Path(\"site\").absolute()\n+build_site_path = Path(\"site_build\").absolute()\n \n \n-def get_en_config() -> dict:\n+def get_en_config() -> Dict[str, Any]:\n     return mkdocs.utils.yaml_load(en_config_path.read_text(encoding=\"utf-8\"))\n \n \n-def get_lang_paths():\n+def get_lang_paths() -> List[Path]:\n     return sorted(docs_path.iterdir())\n \n \n-def lang_callback(lang: Optional[str]):\n+def lang_callback(lang: Optional[str]) -> Union[str, None]:\n     if lang is None:\n-        return\n+        return None\n     if not lang.isalpha() or len(lang) != 2:\n         typer.echo(\"Use a 2 letter language code, like: es\")\n         raise typer.Abort()\n@@ -54,35 +59,6 @@ def complete_existing_lang(incomplete: str):\n             yield lang_path.name\n \n \n-def get_base_lang_config(lang: str):\n-    en_config = get_en_config()\n-    fastapi_url_base = \"https://fastapi.tiangolo.com/\"\n-    new_config = en_config.copy()\n-    new_config[\"site_url\"] = en_config[\"site_url\"] + f\"{lang}/\"\n-    new_config[\"theme\"][\"logo\"] = fastapi_url_base + en_config[\"theme\"][\"logo\"]\n-    new_config[\"theme\"][\"favicon\"] = fastapi_url_base + en_config[\"theme\"][\"favicon\"]\n-    new_config[\"theme\"][\"language\"] = lang\n-    new_config[\"nav\"] = en_config[\"nav\"][:2]\n-    extra_css = []\n-    css: str\n-    for css in en_config[\"extra_css\"]:\n-        if css.startswith(\"http\"):\n-            extra_css.append(css)\n-        else:\n-            extra_css.append(fastapi_url_base + css)\n-    new_config[\"extra_css\"] = extra_css\n-\n-    extra_js = []\n-    js: str\n-    for js in en_config[\"extra_javascript\"]:\n-        if js.startswith(\"http\"):\n-            extra_js.append(js)\n-        else:\n-            extra_js.append(fastapi_url_base + js)\n-    new_config[\"extra_javascript\"] = extra_js\n-    return new_config\n-\n-\n @app.command()\n def new_lang(lang: str = typer.Argument(..., callback=lang_callback)):\n     \"\"\"\n@@ -95,12 +71,8 @@ def new_lang(lang: str = typer.Argument(..., callback=lang_callback)):\n         typer.echo(f\"The language was already created: {lang}\")\n         raise typer.Abort()\n     new_path.mkdir()\n-    new_config = get_base_lang_config(lang)\n     new_config_path: Path = Path(new_path) / mkdocs_name\n-    new_config_path.write_text(\n-        yaml.dump(new_config, sort_keys=False, width=200, allow_unicode=True),\n-        encoding=\"utf-8\",\n-    )\n+    new_config_path.write_text(\"INHERIT: ../en/mkdocs.yml\\n\", encoding=\"utf-8\")\n     new_config_docs_path: Path = new_path / \"docs\"\n     new_config_docs_path.mkdir()\n     en_index_path: Path = en_docs_path / \"docs\" / \"index.md\"\n@@ -108,11 +80,8 @@ def new_lang(lang: str = typer.Argument(..., callback=lang_callback)):\n     en_index_content = en_index_path.read_text(encoding=\"utf-8\")\n     new_index_content = f\"{missing_translation_snippet}\\n\\n{en_index_content}\"\n     new_index_path.write_text(new_index_content, encoding=\"utf-8\")\n-    new_overrides_gitignore_path = new_path / \"overrides\" / \".gitignore\"\n-    new_overrides_gitignore_path.parent.mkdir(parents=True, exist_ok=True)\n-    new_overrides_gitignore_path.write_text(\"\")\n     typer.secho(f\"Successfully initialized: {new_path}\", color=typer.colors.GREEN)\n-    update_languages(lang=None)\n+    update_languages()\n \n \n @app.command()\n@@ -120,95 +89,29 @@ def build_lang(\n     lang: str = typer.Argument(\n         ..., callback=lang_callback, autocompletion=complete_existing_lang\n     )\n-):\n+) -> None:\n     \"\"\"\n-    Build the docs for a language, filling missing pages with translation notifications.\n+    Build the docs for a language.\n     \"\"\"\n     lang_path: Path = Path(\"docs\") / lang\n     if not lang_path.is_dir():\n         typer.echo(f\"The language translation doesn't seem to exist yet: {lang}\")\n         raise typer.Abort()\n     typer.echo(f\"Building docs for: {lang}\")\n-    build_dir_path = Path(\"docs_build\")\n-    build_dir_path.mkdir(exist_ok=True)\n-    build_lang_path = build_dir_path / lang\n-    en_lang_path = Path(\"docs/en\")\n-    site_path = Path(\"site\").absolute()\n-    build_site_path = Path(\"site_build\").absolute()\n     build_site_dist_path = build_site_path / lang\n     if lang == \"en\":\n         dist_path = site_path\n+        # Don't remove en dist_path as it might already contain other languages.\n+        # When running build_all(), that function already removes site_path.\n+        # All this is only relevant locally, on GitHub Actions all this is done through\n+        # artifacts and multiple workflows, so it doesn't matter if directories are\n+        # removed or not.\n     else:\n-        dist_path: Path = site_path / lang\n-    shutil.rmtree(build_lang_path, ignore_errors=True)\n-    shutil.copytree(lang_path, build_lang_path)\n-    if not lang == \"en\":\n-        shutil.copytree(en_docs_path / \"data\", build_lang_path / \"data\")\n-        overrides_src = en_docs_path / \"overrides\"\n-        overrides_dest = build_lang_path / \"overrides\"\n-        for path in overrides_src.iterdir():\n-            dest_path = overrides_dest / path.name\n-            if not dest_path.exists():\n-                shutil.copy(path, dest_path)\n-        en_config_path: Path = en_lang_path / mkdocs_name\n-        en_config: dict = mkdocs.utils.yaml_load(\n-            en_config_path.read_text(encoding=\"utf-8\")\n-        )\n-        nav = en_config[\"nav\"]\n-        lang_config_path: Path = lang_path / mkdocs_name\n-        lang_config: dict = mkdocs.utils.yaml_load(\n-            lang_config_path.read_text(encoding=\"utf-8\")\n-        )\n-        lang_nav = lang_config[\"nav\"]\n-        # Exclude first 2 entries FastAPI and Languages, for custom handling\n-        use_nav = nav[2:]\n-        lang_use_nav = lang_nav[2:]\n-        file_to_nav = get_file_to_nav_map(use_nav)\n-        sections = get_sections(use_nav)\n-        lang_file_to_nav = get_file_to_nav_map(lang_use_nav)\n-        use_lang_file_to_nav = get_file_to_nav_map(lang_use_nav)\n-        for file in file_to_nav:\n-            file_path = Path(file)\n-            lang_file_path: Path = build_lang_path / \"docs\" / file_path\n-            en_file_path: Path = en_lang_path / \"docs\" / file_path\n-            lang_file_path.parent.mkdir(parents=True, exist_ok=True)\n-            if not lang_file_path.is_file():\n-                en_text = en_file_path.read_text(encoding=\"utf-8\")\n-                lang_text = get_text_with_translate_missing(en_text)\n-                lang_file_path.write_text(lang_text, encoding=\"utf-8\")\n-                file_key = file_to_nav[file]\n-                use_lang_file_to_nav[file] = file_key\n-                if file_key:\n-                    composite_key = ()\n-                    new_key = ()\n-                    for key_part in file_key:\n-                        composite_key += (key_part,)\n-                        key_first_file = sections[composite_key]\n-                        if key_first_file in lang_file_to_nav:\n-                            new_key = lang_file_to_nav[key_first_file]\n-                        else:\n-                            new_key += (key_part,)\n-                    use_lang_file_to_nav[file] = new_key\n-        key_to_section = {(): []}\n-        for file, orig_file_key in file_to_nav.items():\n-            if file in use_lang_file_to_nav:\n-                file_key = use_lang_file_to_nav[file]\n-            else:\n-                file_key = orig_file_key\n-            section = get_key_section(key_to_section=key_to_section, key=file_key)\n-            section.append(file)\n-        new_nav = key_to_section[()]\n-        export_lang_nav = [lang_nav[0], nav[1]] + new_nav\n-        lang_config[\"nav\"] = export_lang_nav\n-        build_lang_config_path: Path = build_lang_path / mkdocs_name\n-        build_lang_config_path.write_text(\n-            yaml.dump(lang_config, sort_keys=False, width=200, allow_unicode=True),\n-            encoding=\"utf-8\",\n-        )\n-    current_dir = os.getcwd()\n-    os.chdir(build_lang_path)\n-    shutil.rmtree(build_site_dist_path, ignore_errors=True)\n+        dist_path = site_path / lang\n         shutil.rmtree(dist_path, ignore_errors=True)\n+    current_dir = os.getcwd()\n+    os.chdir(lang_path)\n+    shutil.rmtree(build_site_dist_path, ignore_errors=True)\n     subprocess.run([\"mkdocs\", \"build\", \"--site-dir\", build_site_dist_path], check=True)\n     shutil.copytree(build_site_dist_path, dist_path, dirs_exist_ok=True)\n     os.chdir(current_dir)\n@@ -227,7 +130,7 @@ index_sponsors_template = \"\"\"\n \"\"\"\n \n \n-def generate_readme_content():\n+def generate_readme_content() -> str:\n     en_index = en_docs_path / \"docs\" / \"index.md\"\n     content = en_index.read_text(\"utf-8\")\n     match_start = re.search(r\"<!-- sponsors -->\", content)\n@@ -247,7 +150,7 @@ def generate_readme_content():\n \n \n @app.command()\n-def generate_readme():\n+def generate_readme() -> None:\n     \"\"\"\n     Generate README.md content from main index.md\n     \"\"\"\n@@ -258,7 +161,7 @@ def generate_readme():\n \n \n @app.command()\n-def verify_readme():\n+def verify_readme() -> None:\n     \"\"\"\n     Verify README.md content from main index.md\n     \"\"\"\n@@ -275,12 +178,13 @@ def verify_readme():\n \n \n @app.command()\n-def build_all():\n+def build_all() -> None:\n     \"\"\"\n     Build mkdocs site for en, and then build each language inside, end result is located\n     at directory ./site/ with each language inside.\n     \"\"\"\n-    update_languages(lang=None)\n+    update_languages()\n+    shutil.rmtree(site_path, ignore_errors=True)\n     langs = [lang.name for lang in get_lang_paths() if lang.is_dir()]\n     cpu_count = os.cpu_count() or 1\n     process_pool_size = cpu_count * 4\n@@ -289,34 +193,16 @@ def build_all():\n         p.map(build_lang, langs)\n \n \n-def update_single_lang(lang: str):\n-    lang_path = docs_path / lang\n-    typer.echo(f\"Updating {lang_path.name}\")\n-    update_config(lang_path.name)\n-\n-\n @app.command()\n-def update_languages(\n-    lang: str = typer.Argument(\n-        None, callback=lang_callback, autocompletion=complete_existing_lang\n-    )\n-):\n+def update_languages() -> None:\n     \"\"\"\n     Update the mkdocs.yml file Languages section including all the available languages.\n-\n-    The LANG argument is a 2-letter language code. If it's not provided, update all the\n-    mkdocs.yml files (for all the languages).\n     \"\"\"\n-    if lang is None:\n-        for lang_path in get_lang_paths():\n-            if lang_path.is_dir():\n-                update_single_lang(lang_path.name)\n-    else:\n-        update_single_lang(lang)\n+    update_config()\n \n \n @app.command()\n-def serve():\n+def serve() -> None:\n     \"\"\"\n     A quick server to preview a built site with translations.\n \n@@ -342,7 +228,7 @@ def live(\n     lang: str = typer.Argument(\n         None, callback=lang_callback, autocompletion=complete_existing_lang\n     )\n-):\n+) -> None:\n     \"\"\"\n     Serve with livereload a docs site for a specific language.\n \n@@ -359,18 +245,8 @@ def live(\n     mkdocs.commands.serve.serve(dev_addr=\"127.0.0.1:8008\")\n \n \n-def update_config(lang: str):\n-    lang_path: Path = docs_path / lang\n-    config_path = lang_path / mkdocs_name\n-    current_config: dict = mkdocs.utils.yaml_load(\n-        config_path.read_text(encoding=\"utf-8\")\n-    )\n-    if lang == \"en\":\n+def update_config() -> None:\n     config = get_en_config()\n-    else:\n-        config = get_base_lang_config(lang)\n-        config[\"nav\"] = current_config[\"nav\"]\n-        config[\"theme\"][\"language\"] = current_config[\"theme\"][\"language\"]\n     languages = [{\"en\": \"/\"}]\n     alternate: List[Dict[str, str]] = config[\"extra\"].get(\"alternate\", [])\n     alternate_dict = {alt[\"link\"]: alt[\"name\"] for alt in alternate}\n@@ -390,7 +266,7 @@ def update_config(lang: str):\n             new_alternate.append({\"link\": url, \"name\": use_name})\n     config[\"nav\"][1] = {\"Languages\": languages}\n     config[\"extra\"][\"alternate\"] = new_alternate\n-    config_path.write_text(\n+    en_config_path.write_text(\n         yaml.dump(config, sort_keys=False, width=200, allow_unicode=True),\n         encoding=\"utf-8\",\n     )\n@@ -405,56 +281,5 @@ def langs_json():\n     print(json.dumps(langs))\n \n \n-def get_key_section(\n-    *, key_to_section: Dict[Tuple[str, ...], list], key: Tuple[str, ...]\n-) -> list:\n-    if key in key_to_section:\n-        return key_to_section[key]\n-    super_key = key[:-1]\n-    title = key[-1]\n-    super_section = get_key_section(key_to_section=key_to_section, key=super_key)\n-    new_section = []\n-    super_section.append({title: new_section})\n-    key_to_section[key] = new_section\n-    return new_section\n-\n-\n-def get_text_with_translate_missing(text: str) -> str:\n-    lines = text.splitlines()\n-    lines.insert(1, missing_translation_snippet)\n-    new_text = \"\\n\".join(lines)\n-    return new_text\n-\n-\n-def get_file_to_nav_map(nav: list) -> Dict[str, Tuple[str, ...]]:\n-    file_to_nav = {}\n-    for item in nav:\n-        if type(item) is str:\n-            file_to_nav[item] = ()\n-        elif type(item) is dict:\n-            item_key = list(item.keys())[0]\n-            sub_nav = item[item_key]\n-            sub_file_to_nav = get_file_to_nav_map(sub_nav)\n-            for k, v in sub_file_to_nav.items():\n-                file_to_nav[k] = (item_key,) + v\n-    return file_to_nav\n-\n-\n-def get_sections(nav: list) -> Dict[Tuple[str, ...], str]:\n-    sections = {}\n-    for item in nav:\n-        if type(item) is str:\n-            continue\n-        elif type(item) is dict:\n-            item_key = list(item.keys())[0]\n-            sub_nav = item[item_key]\n-            sections[(item_key,)] = sub_nav[0]\n-            sub_sections = get_sections(sub_nav)\n-            for k, v in sub_sections.items():\n-                new_key = (item_key,) + k\n-                sections[new_key] = v\n-    return sections\n-\n-\n if __name__ == \"__main__\":\n     app()\n\n@@ -1,11 +1,88 @@\n+from functools import lru_cache\n+from pathlib import Path\n from typing import Any, List, Union\n \n+import material\n from mkdocs.config.defaults import MkDocsConfig\n-from mkdocs.structure.files import Files\n+from mkdocs.structure.files import File, Files\n from mkdocs.structure.nav import Link, Navigation, Section\n from mkdocs.structure.pages import Page\n \n \n+@lru_cache()\n+def get_missing_translation_content(docs_dir: str) -> str:\n+    docs_dir_path = Path(docs_dir)\n+    missing_translation_path = docs_dir_path.parent.parent / \"missing-translation.md\"\n+    return missing_translation_path.read_text(encoding=\"utf-8\")\n+\n+\n+@lru_cache()\n+def get_mkdocs_material_langs() -> List[str]:\n+    material_path = Path(material.__file__).parent\n+    material_langs_path = material_path / \"partials\" / \"languages\"\n+    langs = [file.stem for file in material_langs_path.glob(\"*.html\")]\n+    return langs\n+\n+\n+class EnFile(File):\n+    pass\n+\n+\n+def on_config(config: MkDocsConfig, **kwargs: Any) -> MkDocsConfig:\n+    available_langs = get_mkdocs_material_langs()\n+    dir_path = Path(config.docs_dir)\n+    lang = dir_path.parent.name\n+    if lang in available_langs:\n+        config.theme[\"language\"] = lang\n+    if not (config.site_url or \"\").endswith(f\"{lang}/\") and not lang == \"en\":\n+        config.site_url = f\"{config.site_url}{lang}/\"\n+    return config\n+\n+\n+def resolve_file(*, item: str, files: Files, config: MkDocsConfig) -> None:\n+    item_path = Path(config.docs_dir) / item\n+    if not item_path.is_file():\n+        en_src_dir = (Path(config.docs_dir) / \"../../en/docs\").resolve()\n+        potential_path = en_src_dir / item\n+        if potential_path.is_file():\n+            files.append(\n+                EnFile(\n+                    path=item,\n+                    src_dir=str(en_src_dir),\n+                    dest_dir=config.site_dir,\n+                    use_directory_urls=config.use_directory_urls,\n+                )\n+            )\n+\n+\n+def resolve_files(*, items: List[Any], files: Files, config: MkDocsConfig) -> None:\n+    for item in items:\n+        if isinstance(item, str):\n+            resolve_file(item=item, files=files, config=config)\n+        elif isinstance(item, dict):\n+            assert len(item) == 1\n+            values = list(item.values())\n+            if not values:\n+                continue\n+            if isinstance(values[0], str):\n+                resolve_file(item=values[0], files=files, config=config)\n+            elif isinstance(values[0], list):\n+                resolve_files(items=values[0], files=files, config=config)\n+            else:\n+                raise ValueError(f\"Unexpected value: {values}\")\n+\n+\n+def on_files(files: Files, *, config: MkDocsConfig) -> Files:\n+    resolve_files(items=config.nav or [], files=files, config=config)\n+    if \"logo\" in config.theme:\n+        resolve_file(item=config.theme[\"logo\"], files=files, config=config)\n+    if \"favicon\" in config.theme:\n+        resolve_file(item=config.theme[\"favicon\"], files=files, config=config)\n+    resolve_files(items=config.extra_css, files=files, config=config)\n+    resolve_files(items=config.extra_javascript, files=files, config=config)\n+    return files\n+\n+\n def generate_renamed_section_items(\n     items: List[Union[Page, Section, Link]], *, config: MkDocsConfig\n ) -> List[Union[Page, Section, Link]]:\n@@ -36,3 +113,20 @@ def on_nav(\n ) -> Navigation:\n     new_items = generate_renamed_section_items(nav.items, config=config)\n     return Navigation(items=new_items, pages=nav.pages)\n+\n+\n+def on_pre_page(page: Page, *, config: MkDocsConfig, files: Files) -> Page:\n+    return page\n+\n+\n+def on_page_markdown(\n+    markdown: str, *, page: Page, config: MkDocsConfig, files: Files\n+) -> str:\n+    if isinstance(page.file, EnFile):\n+        missing_translation_content = get_missing_translation_content(config.docs_dir)\n+        header = \"\"\n+        body = markdown\n+        if markdown.startswith(\"#\"):\n+            header, _, body = markdown.partition(\"\\n\\n\")\n+        return f\"{header}\\n\\n{missing_translation_content}\\n\\n{body}\"\n+    return markdown\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#ed297bb2e044a0cc5cb013673447778057b731d7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 20 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 5 | Methods Changed: 3 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 20 | Churn Cumulative: 903 | Contributors (this commit): 2 | Commits (past 90d): 3 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -4,7 +4,9 @@ import os\n import re\n import shutil\n import subprocess\n+from functools import lru_cache\n from http.server import HTTPServer, SimpleHTTPRequestHandler\n+from importlib import metadata\n from multiprocessing import Pool\n from pathlib import Path\n from typing import Any, Dict, List, Optional, Union\n@@ -34,6 +36,12 @@ site_path = Path(\"site\").absolute()\n build_site_path = Path(\"site_build\").absolute()\n \n \n+@lru_cache()\n+def is_mkdocs_insiders() -> bool:\n+    version = metadata.version(\"mkdocs-material\")\n+    return \"insiders\" in version\n+\n+\n def get_en_config() -> Dict[str, Any]:\n     return mkdocs.utils.yaml_load(en_config_path.read_text(encoding=\"utf-8\"))\n \n@@ -59,6 +67,14 @@ def complete_existing_lang(incomplete: str):\n             yield lang_path.name\n \n \n+@app.callback()\n+def callback() -> None:\n+    if is_mkdocs_insiders():\n+        os.environ[\"INSIDERS_FILE\"] = \"../en/mkdocs.insiders.yml\"\n+    # For MacOS with insiders and Cairo\n+    os.environ[\"DYLD_FALLBACK_LIBRARY_PATH\"] = \"/opt/homebrew/lib\"\n+\n+\n @app.command()\n def new_lang(lang: str = typer.Argument(..., callback=lang_callback)):\n     \"\"\"\n@@ -93,6 +109,10 @@ def build_lang(\n     \"\"\"\n     Build the docs for a language.\n     \"\"\"\n+    insiders_env_file = os.environ.get(\"INSIDERS_FILE\")\n+    print(f\"Insiders file {insiders_env_file}\")\n+    if is_mkdocs_insiders():\n+        print(\"Using insiders\")\n     lang_path: Path = Path(\"docs\") / lang\n     if not lang_path.is_dir():\n         typer.echo(f\"The language translation doesn't seem to exist yet: {lang}\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#1f21b16e03260d6935c73fa609b7017357abaf34", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 14 | Churn Cumulative: 831 | Contributors (this commit): 19 | Commits (past 90d): 2 | Contributors (cumulative): 30 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,5 +1,5 @@\n import dataclasses\n-from collections import defaultdict\n+from collections import defaultdict, deque\n from enum import Enum\n from pathlib import PurePath\n from types import GeneratorType\n@@ -124,7 +124,7 @@ def jsonable_encoder(\n                 )\n                 encoded_dict[encoded_key] = encoded_value\n         return encoded_dict\n-    if isinstance(obj, (list, set, frozenset, GeneratorType, tuple)):\n+    if isinstance(obj, (list, set, frozenset, GeneratorType, tuple, deque)):\n         encoded_list = []\n         for item in obj:\n             encoded_list.append(\n\n@@ -1,3 +1,4 @@\n+from collections import deque\n from dataclasses import dataclass\n from datetime import datetime, timezone\n from enum import Enum\n@@ -237,3 +238,12 @@ def test_encode_model_with_path(model_with_path):\n def test_encode_root():\n     model = ModelWithRoot(__root__=\"Foo\")\n     assert jsonable_encoder(model) == \"Foo\"\n+\n+\n+def test_encode_deque_encodes_child_models():\n+    class Model(BaseModel):\n+        test: str\n+\n+    dq = deque([Model(test=\"test\")])\n+\n+    assert jsonable_encoder(dq)[0][\"test\"] == \"test\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#0a8423d792bda91ab74c9c8b0021c9a9388cbd46", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 905 | Contributors (this commit): 2 | Commits (past 90d): 4 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -258,6 +258,8 @@ def live(\n     Takes an optional LANG argument with the name of the language to serve, by default\n     en.\n     \"\"\"\n+    # Enable line numbers during local development to make it easier to highlight\n+    os.environ[\"LINENUMS\"] = \"true\"\n     if lang is None:\n         lang = \"en\"\n     lang_path: Path = docs_path / lang\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#7dad5a820bfe99e49a6cfaefde537e09644c2c2b", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1110 | Lines Deleted: 580 | Files Changed: 321 | Hunks: 481 | Methods Changed: 383 | Complexity Δ (Sum/Max): 27/10 | Churn Δ: 1690 | Churn Cumulative: 89564 | Contributors (this commit): 90 | Commits (past 90d): 612 | Contributors (cumulative): 852 | DMM Complexity: 0.9359605911330049\n\nDIFF:\n@@ -15,7 +15,8 @@ def custom_openapi():\n     openapi_schema = get_openapi(\n         title=\"Custom title\",\n         version=\"2.5.0\",\n-        description=\"This is a very custom OpenAPI schema\",\n+        summary=\"This is a very custom OpenAPI schema\",\n+        description=\"Here's a longer description of the custom **OpenAPI** schema\",\n         routes=app.routes,\n     )\n     openapi_schema[\"info\"][\"x-logo\"] = {\n\n@@ -18,6 +18,7 @@ You will be able to:\n app = FastAPI(\n     title=\"ChimichangApp\",\n     description=description,\n+    summary=\"Deadpool's favorite app. Nuff said.\",\n     version=\"0.0.1\",\n     terms_of_service=\"http://example.com/terms/\",\n     contact={\n\n@@ -0,0 +1,38 @@\n+from fastapi import FastAPI\n+\n+description = \"\"\"\n+ChimichangApp API helps you do awesome stuff. 🚀\n+\n+## Items\n+\n+You can **read items**.\n+\n+## Users\n+\n+You will be able to:\n+\n+* **Create users** (_not implemented_).\n+* **Read users** (_not implemented_).\n+\"\"\"\n+\n+app = FastAPI(\n+    title=\"ChimichangApp\",\n+    description=description,\n+    summary=\"Deadpool's favorite app. Nuff said.\",\n+    version=\"0.0.1\",\n+    terms_of_service=\"http://example.com/terms/\",\n+    contact={\n+        \"name\": \"Deadpoolio the Amazing\",\n+        \"url\": \"http://x-force.example.com/contact/\",\n+        \"email\": \"dp@x-force.example.com\",\n+    },\n+    license_info={\n+        \"name\": \"Apache 2.0\",\n+        \"identifier\": \"MIT\",\n+    },\n+)\n+\n+\n+@app.get(\"/items/\")\n+async def read_items():\n+    return [{\"name\": \"Katana\"}]\n\n@@ -0,0 +1,25 @@\n+from datetime import datetime\n+\n+from fastapi import FastAPI\n+from pydantic import BaseModel\n+\n+app = FastAPI()\n+\n+\n+class Subscription(BaseModel):\n+    username: str\n+    montly_fee: float\n+    start_date: datetime\n+\n+\n+@app.webhooks.post(\"new-subscription\")\n+def new_subscription(body: Subscription):\n+    \"\"\"\n+    When a new user subscribes to your service we'll send you a POST request with this\n+    data to the URL that you register for the event `new-subscription` in the dashboard.\n+    \"\"\"\n+\n+\n+@app.get(\"/users/\")\n+def read_users():\n+    return [\"Rick\", \"Morty\"]\n\n@@ -14,12 +14,14 @@ class Item(BaseModel):\n \n     class Config:\n         schema_extra = {\n-            \"example\": {\n+            \"examples\": [\n+                {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n                 }\n+            ]\n         }\n \n \n\n@@ -12,12 +12,14 @@ class Item(BaseModel):\n \n     class Config:\n         schema_extra = {\n-            \"example\": {\n+            \"examples\": [\n+                {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n                 }\n+            ]\n         }\n \n \n\n@@ -7,10 +7,10 @@ app = FastAPI()\n \n \n class Item(BaseModel):\n-    name: str = Field(example=\"Foo\")\n-    description: Union[str, None] = Field(default=None, example=\"A very nice Item\")\n-    price: float = Field(example=35.4)\n-    tax: Union[float, None] = Field(default=None, example=3.2)\n+    name: str = Field(examples=[\"Foo\"])\n+    description: Union[str, None] = Field(default=None, examples=[\"A very nice Item\"])\n+    price: float = Field(examples=[35.4])\n+    tax: Union[float, None] = Field(default=None, examples=[3.2])\n \n \n @app.put(\"/items/{item_id}\")\n\n@@ -5,10 +5,10 @@ app = FastAPI()\n \n \n class Item(BaseModel):\n-    name: str = Field(example=\"Foo\")\n-    description: str | None = Field(default=None, example=\"A very nice Item\")\n-    price: float = Field(example=35.4)\n-    tax: float | None = Field(default=None, example=3.2)\n+    name: str = Field(examples=[\"Foo\"])\n+    description: str | None = Field(default=None, examples=[\"A very nice Item\"])\n+    price: float = Field(examples=[35.4])\n+    tax: float | None = Field(default=None, examples=[3.2])\n \n \n @app.put(\"/items/{item_id}\")\n\n@@ -17,12 +17,14 @@ class Item(BaseModel):\n async def update_item(\n     item_id: int,\n     item: Item = Body(\n-        example={\n+        examples=[\n+            {\n                 \"name\": \"Foo\",\n                 \"description\": \"A very nice Item\",\n                 \"price\": 35.4,\n                 \"tax\": 3.2,\n-        },\n+            }\n+        ],\n     ),\n ):\n     results = {\"item_id\": item_id, \"item\": item}\n\n@@ -20,12 +20,14 @@ async def update_item(\n     item: Annotated[\n         Item,\n         Body(\n-            example={\n+            examples=[\n+                {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n-            },\n+                }\n+            ],\n         ),\n     ],\n ):\n\n@@ -19,12 +19,14 @@ async def update_item(\n     item: Annotated[\n         Item,\n         Body(\n-            example={\n+            examples=[\n+                {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n-            },\n+                }\n+            ],\n         ),\n     ],\n ):\n\n@@ -19,12 +19,14 @@ async def update_item(\n     item: Annotated[\n         Item,\n         Body(\n-            example={\n+            examples=[\n+                {\n                     \"name\": \"Foo\",\n                     \"description\": \"A very nice Item\",\n                     \"price\": 35.4,\n                     \"tax\": 3.2,\n-            },\n+                }\n+            ],\n         ),\n     ],\n ):\n\n@@ -15,12 +15,14 @@ class Item(BaseModel):\n async def update_item(\n     item_id: int,\n     item: Item = Body(\n-        example={\n+        examples=[\n+            {\n                 \"name\": \"Foo\",\n                 \"description\": \"A very nice Item\",\n                 \"price\": 35.4,\n                 \"tax\": 3.2,\n-        },\n+            }\n+        ],\n     ),\n ):\n     results = {\"item_id\": item_id, \"item\": item}\n\n@@ -18,8 +18,8 @@ async def update_item(\n     *,\n     item_id: int,\n     item: Item = Body(\n-        examples={\n-            \"normal\": {\n+        examples=[\n+            {\n                 \"summary\": \"A normal example\",\n                 \"description\": \"A **normal** item works correctly.\",\n                 \"value\": {\n@@ -29,7 +29,7 @@ async def update_item(\n                     \"tax\": 3.2,\n                 },\n             },\n-            \"converted\": {\n+            {\n                 \"summary\": \"An example with converted data\",\n                 \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                 \"value\": {\n@@ -37,14 +37,14 @@ async def update_item(\n                     \"price\": \"35.4\",\n                 },\n             },\n-            \"invalid\": {\n+            {\n                 \"summary\": \"Invalid data is rejected with an error\",\n                 \"value\": {\n                     \"name\": \"Baz\",\n                     \"price\": \"thirty five point four\",\n                 },\n             },\n-        },\n+        ],\n     ),\n ):\n     results = {\"item_id\": item_id, \"item\": item}\n\n@@ -21,8 +21,8 @@ async def update_item(\n     item: Annotated[\n         Item,\n         Body(\n-            examples={\n-                \"normal\": {\n+            examples=[\n+                {\n                     \"summary\": \"A normal example\",\n                     \"description\": \"A **normal** item works correctly.\",\n                     \"value\": {\n@@ -32,7 +32,7 @@ async def update_item(\n                         \"tax\": 3.2,\n                     },\n                 },\n-                \"converted\": {\n+                {\n                     \"summary\": \"An example with converted data\",\n                     \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                     \"value\": {\n@@ -40,14 +40,14 @@ async def update_item(\n                         \"price\": \"35.4\",\n                     },\n                 },\n-                \"invalid\": {\n+                {\n                     \"summary\": \"Invalid data is rejected with an error\",\n                     \"value\": {\n                         \"name\": \"Baz\",\n                         \"price\": \"thirty five point four\",\n                     },\n                 },\n-            },\n+            ],\n         ),\n     ],\n ):\n\n@@ -20,8 +20,8 @@ async def update_item(\n     item: Annotated[\n         Item,\n         Body(\n-            examples={\n-                \"normal\": {\n+            examples=[\n+                {\n                     \"summary\": \"A normal example\",\n                     \"description\": \"A **normal** item works correctly.\",\n                     \"value\": {\n@@ -31,7 +31,7 @@ async def update_item(\n                         \"tax\": 3.2,\n                     },\n                 },\n-                \"converted\": {\n+                {\n                     \"summary\": \"An example with converted data\",\n                     \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                     \"value\": {\n@@ -39,14 +39,14 @@ async def update_item(\n                         \"price\": \"35.4\",\n                     },\n                 },\n-                \"invalid\": {\n+                {\n                     \"summary\": \"Invalid data is rejected with an error\",\n                     \"value\": {\n                         \"name\": \"Baz\",\n                         \"price\": \"thirty five point four\",\n                     },\n                 },\n-            },\n+            ],\n         ),\n     ],\n ):\n\n@@ -20,8 +20,8 @@ async def update_item(\n     item: Annotated[\n         Item,\n         Body(\n-            examples={\n-                \"normal\": {\n+            examples=[\n+                {\n                     \"summary\": \"A normal example\",\n                     \"description\": \"A **normal** item works correctly.\",\n                     \"value\": {\n@@ -31,7 +31,7 @@ async def update_item(\n                         \"tax\": 3.2,\n                     },\n                 },\n-                \"converted\": {\n+                {\n                     \"summary\": \"An example with converted data\",\n                     \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                     \"value\": {\n@@ -39,14 +39,14 @@ async def update_item(\n                         \"price\": \"35.4\",\n                     },\n                 },\n-                \"invalid\": {\n+                {\n                     \"summary\": \"Invalid data is rejected with an error\",\n                     \"value\": {\n                         \"name\": \"Baz\",\n                         \"price\": \"thirty five point four\",\n                     },\n                 },\n-            },\n+            ],\n         ),\n     ],\n ):\n\n@@ -16,8 +16,8 @@ async def update_item(\n     *,\n     item_id: int,\n     item: Item = Body(\n-        examples={\n-            \"normal\": {\n+        examples=[\n+            {\n                 \"summary\": \"A normal example\",\n                 \"description\": \"A **normal** item works correctly.\",\n                 \"value\": {\n@@ -27,7 +27,7 @@ async def update_item(\n                     \"tax\": 3.2,\n                 },\n             },\n-            \"converted\": {\n+            {\n                 \"summary\": \"An example with converted data\",\n                 \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                 \"value\": {\n@@ -35,14 +35,14 @@ async def update_item(\n                     \"price\": \"35.4\",\n                 },\n             },\n-            \"invalid\": {\n+            {\n                 \"summary\": \"Invalid data is rejected with an error\",\n                 \"value\": {\n                     \"name\": \"Baz\",\n                     \"price\": \"thirty five point four\",\n                 },\n             },\n-        },\n+        ],\n     ),\n ):\n     results = {\"item_id\": item_id, \"item\": item}\n\n@@ -55,6 +55,7 @@ class FastAPI(Starlette):\n         debug: bool = False,\n         routes: Optional[List[BaseRoute]] = None,\n         title: str = \"FastAPI\",\n+        summary: Optional[str] = None,\n         description: str = \"\",\n         version: str = \"0.1.0\",\n         openapi_url: Optional[str] = \"/openapi.json\",\n@@ -85,6 +86,7 @@ class FastAPI(Starlette):\n         root_path_in_servers: bool = True,\n         responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n         callbacks: Optional[List[BaseRoute]] = None,\n+        webhooks: Optional[routing.APIRouter] = None,\n         deprecated: Optional[bool] = None,\n         include_in_schema: bool = True,\n         swagger_ui_parameters: Optional[Dict[str, Any]] = None,\n@@ -95,6 +97,7 @@ class FastAPI(Starlette):\n     ) -> None:\n         self.debug = debug\n         self.title = title\n+        self.summary = summary\n         self.description = description\n         self.version = version\n         self.terms_of_service = terms_of_service\n@@ -110,7 +113,7 @@ class FastAPI(Starlette):\n         self.swagger_ui_parameters = swagger_ui_parameters\n         self.servers = servers or []\n         self.extra = extra\n-        self.openapi_version = \"3.0.2\"\n+        self.openapi_version = \"3.1.0\"\n         self.openapi_schema: Optional[Dict[str, Any]] = None\n         if self.openapi_url:\n             assert self.title, \"A title must be provided for OpenAPI, e.g.: 'My API'\"\n@@ -123,6 +126,7 @@ class FastAPI(Starlette):\n                 \"automatic. Check the docs at \"\n                 \"https://fastapi.tiangolo.com/advanced/sub-applications/\"\n             )\n+        self.webhooks = webhooks or routing.APIRouter()\n         self.root_path = root_path or openapi_prefix\n         self.state: State = State()\n         self.dependency_overrides: Dict[Callable[..., Any], Callable[..., Any]] = {}\n@@ -215,11 +219,13 @@ class FastAPI(Starlette):\n                 title=self.title,\n                 version=self.version,\n                 openapi_version=self.openapi_version,\n+                summary=self.summary,\n                 description=self.description,\n                 terms_of_service=self.terms_of_service,\n                 contact=self.contact,\n                 license_info=self.license_info,\n                 routes=self.routes,\n+                webhooks=self.webhooks.routes,\n                 tags=self.openapi_tags,\n                 servers=self.servers,\n             )\n\n@@ -17,8 +17,8 @@ def get_swagger_ui_html(\n     *,\n     openapi_url: str,\n     title: str,\n-    swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\",\n-    swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\",\n+    swagger_js_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui-bundle.js\",\n+    swagger_css_url: str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@5/swagger-ui.css\",\n     swagger_favicon_url: str = \"https://fastapi.tiangolo.com/img/favicon.png\",\n     oauth2_redirect_url: Optional[str] = None,\n     init_oauth: Optional[Dict[str, Any]] = None,\n\n@@ -1,9 +1,10 @@\n from enum import Enum\n-from typing import Any, Callable, Dict, Iterable, List, Optional, Union\n+from typing import Any, Callable, Dict, Iterable, List, Optional, Set, Union\n \n from fastapi.logger import logger\n from pydantic import AnyUrl, BaseModel, Field\n-from typing_extensions import Literal\n+from typing_extensions import Annotated, Literal\n+from typing_extensions import deprecated as typing_deprecated\n \n try:\n     import email_validator  # type: ignore\n@@ -37,6 +38,7 @@ class Contact(BaseModel):\n \n class License(BaseModel):\n     name: str\n+    identifier: Optional[str] = None\n     url: Optional[AnyUrl] = None\n \n     class Config:\n@@ -45,6 +47,7 @@ class License(BaseModel):\n \n class Info(BaseModel):\n     title: str\n+    summary: Optional[str] = None\n     description: Optional[str] = None\n     termsOfService: Optional[str] = None\n     contact: Optional[Contact] = None\n@@ -56,7 +59,7 @@ class Info(BaseModel):\n \n \n class ServerVariable(BaseModel):\n-    enum: Optional[List[str]] = None\n+    enum: Annotated[Optional[List[str]], Field(min_items=1)] = None\n     default: str\n     description: Optional[str] = None\n \n@@ -102,9 +105,42 @@ class ExternalDocumentation(BaseModel):\n \n \n class Schema(BaseModel):\n+    # Ref: JSON Schema 2020-12: https://json-schema.org/draft/2020-12/json-schema-core.html#name-the-json-schema-core-vocabu\n+    # Core Vocabulary\n+    schema_: Optional[str] = Field(default=None, alias=\"$schema\")\n+    vocabulary: Optional[str] = Field(default=None, alias=\"$vocabulary\")\n+    id: Optional[str] = Field(default=None, alias=\"$id\")\n+    anchor: Optional[str] = Field(default=None, alias=\"$anchor\")\n+    dynamicAnchor: Optional[str] = Field(default=None, alias=\"$dynamicAnchor\")\n     ref: Optional[str] = Field(default=None, alias=\"$ref\")\n-    title: Optional[str] = None\n-    multipleOf: Optional[float] = None\n+    dynamicRef: Optional[str] = Field(default=None, alias=\"$dynamicRef\")\n+    defs: Optional[Dict[str, \"Schema\"]] = Field(default=None, alias=\"$defs\")\n+    comment: Optional[str] = Field(default=None, alias=\"$comment\")\n+    # Ref: JSON Schema 2020-12: https://json-schema.org/draft/2020-12/json-schema-core.html#name-a-vocabulary-for-applying-s\n+    # A Vocabulary for Applying Subschemas\n+    allOf: Optional[List[\"Schema\"]] = None\n+    anyOf: Optional[List[\"Schema\"]] = None\n+    oneOf: Optional[List[\"Schema\"]] = None\n+    not_: Optional[\"Schema\"] = Field(default=None, alias=\"not\")\n+    if_: Optional[\"Schema\"] = Field(default=None, alias=\"if\")\n+    then: Optional[\"Schema\"] = None\n+    else_: Optional[\"Schema\"] = Field(default=None, alias=\"else\")\n+    dependentSchemas: Optional[Dict[str, \"Schema\"]] = None\n+    prefixItems: Optional[List[\"Schema\"]] = None\n+    items: Optional[Union[\"Schema\", List[\"Schema\"]]] = None\n+    contains: Optional[\"Schema\"] = None\n+    properties: Optional[Dict[str, \"Schema\"]] = None\n+    patternProperties: Optional[Dict[str, \"Schema\"]] = None\n+    additionalProperties: Optional[\"Schema\"] = None\n+    propertyNames: Optional[\"Schema\"] = None\n+    unevaluatedItems: Optional[\"Schema\"] = None\n+    unevaluatedProperties: Optional[\"Schema\"] = None\n+    # Ref: JSON Schema Validation 2020-12: https://json-schema.org/draft/2020-12/json-schema-validation.html#name-a-vocabulary-for-structural\n+    # A Vocabulary for Structural Validation\n+    type: Optional[str] = None\n+    enum: Optional[List[Any]] = None\n+    const: Optional[Any] = None\n+    multipleOf: Optional[float] = Field(default=None, gt=0)\n     maximum: Optional[float] = None\n     exclusiveMaximum: Optional[float] = None\n     minimum: Optional[float] = None\n@@ -115,29 +151,41 @@ class Schema(BaseModel):\n     maxItems: Optional[int] = Field(default=None, ge=0)\n     minItems: Optional[int] = Field(default=None, ge=0)\n     uniqueItems: Optional[bool] = None\n+    maxContains: Optional[int] = Field(default=None, ge=0)\n+    minContains: Optional[int] = Field(default=None, ge=0)\n     maxProperties: Optional[int] = Field(default=None, ge=0)\n     minProperties: Optional[int] = Field(default=None, ge=0)\n     required: Optional[List[str]] = None\n-    enum: Optional[List[Any]] = None\n-    type: Optional[str] = None\n-    allOf: Optional[List[\"Schema\"]] = None\n-    oneOf: Optional[List[\"Schema\"]] = None\n-    anyOf: Optional[List[\"Schema\"]] = None\n-    not_: Optional[\"Schema\"] = Field(default=None, alias=\"not\")\n-    items: Optional[Union[\"Schema\", List[\"Schema\"]]] = None\n-    properties: Optional[Dict[str, \"Schema\"]] = None\n-    additionalProperties: Optional[Union[\"Schema\", Reference, bool]] = None\n-    description: Optional[str] = None\n+    dependentRequired: Optional[Dict[str, Set[str]]] = None\n+    # Ref: JSON Schema Validation 2020-12: https://json-schema.org/draft/2020-12/json-schema-validation.html#name-vocabularies-for-semantic-c\n+    # Vocabularies for Semantic Content With \"format\"\n     format: Optional[str] = None\n+    # Ref: JSON Schema Validation 2020-12: https://json-schema.org/draft/2020-12/json-schema-validation.html#name-a-vocabulary-for-the-conten\n+    # A Vocabulary for the Contents of String-Encoded Data\n+    contentEncoding: Optional[str] = None\n+    contentMediaType: Optional[str] = None\n+    contentSchema: Optional[\"Schema\"] = None\n+    # Ref: JSON Schema Validation 2020-12: https://json-schema.org/draft/2020-12/json-schema-validation.html#name-a-vocabulary-for-basic-meta\n+    # A Vocabulary for Basic Meta-Data Annotations\n+    title: Optional[str] = None\n+    description: Optional[str] = None\n     default: Optional[Any] = None\n-    nullable: Optional[bool] = None\n-    discriminator: Optional[Discriminator] = None\n+    deprecated: Optional[bool] = None\n     readOnly: Optional[bool] = None\n     writeOnly: Optional[bool] = None\n+    examples: Optional[List[Any]] = None\n+    # Ref: OpenAPI 3.1.0: https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.0.md#schema-object\n+    # Schema Object\n+    discriminator: Optional[Discriminator] = None\n     xml: Optional[XML] = None\n     externalDocs: Optional[ExternalDocumentation] = None\n-    example: Optional[Any] = None\n-    deprecated: Optional[bool] = None\n+    example: Annotated[\n+        Optional[Any],\n+        typing_deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = None\n \n     class Config:\n         extra: str = \"allow\"\n@@ -248,7 +296,7 @@ class Operation(BaseModel):\n     parameters: Optional[List[Union[Parameter, Reference]]] = None\n     requestBody: Optional[Union[RequestBody, Reference]] = None\n     # Using Any for Specification Extensions\n-    responses: Dict[str, Union[Response, Any]]\n+    responses: Optional[Dict[str, Union[Response, Any]]] = None\n     callbacks: Optional[Dict[str, Union[Dict[str, \"PathItem\"], Reference]]] = None\n     deprecated: Optional[bool] = None\n     security: Optional[List[Dict[str, List[str]]]] = None\n@@ -375,6 +423,7 @@ class Components(BaseModel):\n     links: Optional[Dict[str, Union[Link, Reference]]] = None\n     # Using Any for Specification Extensions\n     callbacks: Optional[Dict[str, Union[Dict[str, PathItem], Reference, Any]]] = None\n+    pathItems: Optional[Dict[str, Union[PathItem, Reference]]] = None\n \n     class Config:\n         extra = \"allow\"\n@@ -392,9 +441,11 @@ class Tag(BaseModel):\n class OpenAPI(BaseModel):\n     openapi: str\n     info: Info\n+    jsonSchemaDialect: Optional[str] = None\n     servers: Optional[List[Server]] = None\n     # Using Any for Specification Extensions\n-    paths: Dict[str, Union[PathItem, Any]]\n+    paths: Optional[Dict[str, Union[PathItem, Any]]] = None\n+    webhooks: Optional[Dict[str, Union[PathItem, Reference]]] = None\n     components: Optional[Components] = None\n     security: Optional[List[Dict[str, List[str]]]] = None\n     tags: Optional[List[Tag]] = None\n\n@@ -106,9 +106,7 @@ def get_openapi_operation_parameters(\n         }\n         if field_info.description:\n             parameter[\"description\"] = field_info.description\n-        if field_info.examples:\n-            parameter[\"examples\"] = jsonable_encoder(field_info.examples)\n-        elif field_info.example != Undefined:\n+        if field_info.example != Undefined:\n             parameter[\"example\"] = jsonable_encoder(field_info.example)\n         if field_info.deprecated:\n             parameter[\"deprecated\"] = field_info.deprecated\n@@ -134,9 +132,7 @@ def get_openapi_operation_request_body(\n     if required:\n         request_body_oai[\"required\"] = required\n     request_media_content: Dict[str, Any] = {\"schema\": body_schema}\n-    if field_info.examples:\n-        request_media_content[\"examples\"] = jsonable_encoder(field_info.examples)\n-    elif field_info.example != Undefined:\n+    if field_info.example != Undefined:\n         request_media_content[\"example\"] = jsonable_encoder(field_info.example)\n     request_body_oai[\"content\"] = {request_media_type: request_media_content}\n     return request_body_oai\n@@ -392,9 +388,11 @@ def get_openapi(\n     *,\n     title: str,\n     version: str,\n-    openapi_version: str = \"3.0.2\",\n+    openapi_version: str = \"3.1.0\",\n+    summary: Optional[str] = None,\n     description: Optional[str] = None,\n     routes: Sequence[BaseRoute],\n+    webhooks: Optional[Sequence[BaseRoute]] = None,\n     tags: Optional[List[Dict[str, Any]]] = None,\n     servers: Optional[List[Dict[str, Union[str, Any]]]] = None,\n     terms_of_service: Optional[str] = None,\n@@ -402,6 +400,8 @@ def get_openapi(\n     license_info: Optional[Dict[str, Union[str, Any]]] = None,\n ) -> Dict[str, Any]:\n     info: Dict[str, Any] = {\"title\": title, \"version\": version}\n+    if summary:\n+        info[\"summary\"] = summary\n     if description:\n         info[\"description\"] = description\n     if terms_of_service:\n@@ -415,13 +415,14 @@ def get_openapi(\n         output[\"servers\"] = servers\n     components: Dict[str, Dict[str, Any]] = {}\n     paths: Dict[str, Dict[str, Any]] = {}\n+    webhook_paths: Dict[str, Dict[str, Any]] = {}\n     operation_ids: Set[str] = set()\n-    flat_models = get_flat_models_from_routes(routes)\n+    flat_models = get_flat_models_from_routes(list(routes or []) + list(webhooks or []))\n     model_name_map = get_model_name_map(flat_models)\n     definitions = get_model_definitions(\n         flat_models=flat_models, model_name_map=model_name_map\n     )\n-    for route in routes:\n+    for route in routes or []:\n         if isinstance(route, routing.APIRoute):\n             result = get_openapi_path(\n                 route=route, model_name_map=model_name_map, operation_ids=operation_ids\n@@ -436,11 +437,30 @@ def get_openapi(\n                     )\n                 if path_definitions:\n                     definitions.update(path_definitions)\n+    for webhook in webhooks or []:\n+        if isinstance(webhook, routing.APIRoute):\n+            result = get_openapi_path(\n+                route=webhook,\n+                model_name_map=model_name_map,\n+                operation_ids=operation_ids,\n+            )\n+            if result:\n+                path, security_schemes, path_definitions = result\n+                if path:\n+                    webhook_paths.setdefault(webhook.path_format, {}).update(path)\n+                if security_schemes:\n+                    components.setdefault(\"securitySchemes\", {}).update(\n+                        security_schemes\n+                    )\n+                if path_definitions:\n+                    definitions.update(path_definitions)\n     if definitions:\n         components[\"schemas\"] = {k: definitions[k] for k in sorted(definitions)}\n     if components:\n         output[\"components\"] = components\n     output[\"paths\"] = paths\n+    if webhook_paths:\n+        output[\"webhooks\"] = webhook_paths\n     if tags:\n         output[\"tags\"] = tags\n     return jsonable_encoder(OpenAPI(**output), by_alias=True, exclude_none=True)  # type: ignore\n\n@@ -1,7 +1,8 @@\n-from typing import Any, Callable, Dict, Optional, Sequence\n+from typing import Any, Callable, List, Optional, Sequence\n \n from fastapi import params\n from pydantic.fields import Undefined\n+from typing_extensions import Annotated, deprecated\n \n \n def Path(  # noqa: N802\n@@ -17,8 +18,14 @@ def Path(  # noqa: N802\n     min_length: Optional[int] = None,\n     max_length: Optional[int] = None,\n     regex: Optional[str] = None,\n-    example: Any = Undefined,\n-    examples: Optional[Dict[str, Any]] = None,\n+    examples: Optional[List[Any]] = None,\n+    example: Annotated[\n+        Optional[Any],\n+        deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = Undefined,\n     deprecated: Optional[bool] = None,\n     include_in_schema: bool = True,\n     **extra: Any,\n@@ -56,8 +63,14 @@ def Query(  # noqa: N802\n     min_length: Optional[int] = None,\n     max_length: Optional[int] = None,\n     regex: Optional[str] = None,\n-    example: Any = Undefined,\n-    examples: Optional[Dict[str, Any]] = None,\n+    examples: Optional[List[Any]] = None,\n+    example: Annotated[\n+        Optional[Any],\n+        deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = Undefined,\n     deprecated: Optional[bool] = None,\n     include_in_schema: bool = True,\n     **extra: Any,\n@@ -96,8 +109,14 @@ def Header(  # noqa: N802\n     min_length: Optional[int] = None,\n     max_length: Optional[int] = None,\n     regex: Optional[str] = None,\n-    example: Any = Undefined,\n-    examples: Optional[Dict[str, Any]] = None,\n+    examples: Optional[List[Any]] = None,\n+    example: Annotated[\n+        Optional[Any],\n+        deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = Undefined,\n     deprecated: Optional[bool] = None,\n     include_in_schema: bool = True,\n     **extra: Any,\n@@ -136,8 +155,14 @@ def Cookie(  # noqa: N802\n     min_length: Optional[int] = None,\n     max_length: Optional[int] = None,\n     regex: Optional[str] = None,\n-    example: Any = Undefined,\n-    examples: Optional[Dict[str, Any]] = None,\n+    examples: Optional[List[Any]] = None,\n+    example: Annotated[\n+        Optional[Any],\n+        deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = Undefined,\n     deprecated: Optional[bool] = None,\n     include_in_schema: bool = True,\n     **extra: Any,\n@@ -177,8 +202,14 @@ def Body(  # noqa: N802\n     min_length: Optional[int] = None,\n     max_length: Optional[int] = None,\n     regex: Optional[str] = None,\n-    example: Any = Undefined,\n-    examples: Optional[Dict[str, Any]] = None,\n+    examples: Optional[List[Any]] = None,\n+    example: Annotated[\n+        Optional[Any],\n+        deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = Undefined,\n     **extra: Any,\n ) -> Any:\n     return params.Body(\n@@ -215,8 +246,14 @@ def Form(  # noqa: N802\n     min_length: Optional[int] = None,\n     max_length: Optional[int] = None,\n     regex: Optional[str] = None,\n-    example: Any = Undefined,\n-    examples: Optional[Dict[str, Any]] = None,\n+    examples: Optional[List[Any]] = None,\n+    example: Annotated[\n+        Optional[Any],\n+        deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = Undefined,\n     **extra: Any,\n ) -> Any:\n     return params.Form(\n@@ -252,8 +289,14 @@ def File(  # noqa: N802\n     min_length: Optional[int] = None,\n     max_length: Optional[int] = None,\n     regex: Optional[str] = None,\n-    example: Any = Undefined,\n-    examples: Optional[Dict[str, Any]] = None,\n+    examples: Optional[List[Any]] = None,\n+    example: Annotated[\n+        Optional[Any],\n+        deprecated(\n+            \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+            \"although still supported. Use examples instead.\"\n+        ),\n+    ] = Undefined,\n     **extra: Any,\n ) -> Any:\n     return params.File(\n\n@@ -1,7 +1,9 @@\n+import warnings\n from enum import Enum\n-from typing import Any, Callable, Dict, Optional, Sequence\n+from typing import Any, Callable, List, Optional, Sequence\n \n from pydantic.fields import FieldInfo, Undefined\n+from typing_extensions import Annotated, deprecated\n \n \n class ParamTypes(Enum):\n@@ -28,16 +30,30 @@ class Param(FieldInfo):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         deprecated: Optional[bool] = None,\n         include_in_schema: bool = True,\n         **extra: Any,\n     ):\n         self.deprecated = deprecated\n+        if example is not Undefined:\n+            warnings.warn(\n+                \"`example` has been depreacated, please use `examples` instead\",\n+                category=DeprecationWarning,\n+                stacklevel=1,\n+            )\n         self.example = example\n-        self.examples = examples\n         self.include_in_schema = include_in_schema\n+        extra_kwargs = {**extra}\n+        if examples:\n+            extra_kwargs[\"examples\"] = examples\n         super().__init__(\n             default=default,\n             alias=alias,\n@@ -50,7 +66,7 @@ class Param(FieldInfo):\n             min_length=min_length,\n             max_length=max_length,\n             regex=regex,\n-            **extra,\n+            **extra_kwargs,\n         )\n \n     def __repr__(self) -> str:\n@@ -74,8 +90,14 @@ class Path(Param):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         deprecated: Optional[bool] = None,\n         include_in_schema: bool = True,\n         **extra: Any,\n@@ -119,8 +141,14 @@ class Query(Param):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         deprecated: Optional[bool] = None,\n         include_in_schema: bool = True,\n         **extra: Any,\n@@ -163,8 +191,14 @@ class Header(Param):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         deprecated: Optional[bool] = None,\n         include_in_schema: bool = True,\n         **extra: Any,\n@@ -207,8 +241,14 @@ class Cookie(Param):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         deprecated: Optional[bool] = None,\n         include_in_schema: bool = True,\n         **extra: Any,\n@@ -250,14 +290,28 @@ class Body(FieldInfo):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         **extra: Any,\n     ):\n         self.embed = embed\n         self.media_type = media_type\n+        if example is not Undefined:\n+            warnings.warn(\n+                \"`example` has been depreacated, please use `examples` instead\",\n+                category=DeprecationWarning,\n+                stacklevel=1,\n+            )\n         self.example = example\n-        self.examples = examples\n+        extra_kwargs = {**extra}\n+        if examples is not None:\n+            extra_kwargs[\"examples\"] = examples\n         super().__init__(\n             default=default,\n             alias=alias,\n@@ -270,7 +324,7 @@ class Body(FieldInfo):\n             min_length=min_length,\n             max_length=max_length,\n             regex=regex,\n-            **extra,\n+            **extra_kwargs,\n         )\n \n     def __repr__(self) -> str:\n@@ -293,8 +347,14 @@ class Form(Body):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         **extra: Any,\n     ):\n         super().__init__(\n@@ -333,8 +393,14 @@ class File(Form):\n         min_length: Optional[int] = None,\n         max_length: Optional[int] = None,\n         regex: Optional[str] = None,\n-        example: Any = Undefined,\n-        examples: Optional[Dict[str, Any]] = None,\n+        examples: Optional[List[Any]] = None,\n+        example: Annotated[\n+            Optional[Any],\n+            deprecated(\n+                \"Deprecated in OpenAPI 3.1.0 that now uses JSON Schema 2020-12, \"\n+                \"although still supported. Use examples instead.\"\n+            ),\n+        ] = Undefined,\n         **extra: Any,\n     ):\n         super().__init__(\n\n@@ -29,7 +29,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/foo\": {\n\n@@ -30,7 +30,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -11,7 +11,7 @@ async def a():\n \n \n openapi_schema = {\n-    \"openapi\": \"3.0.2\",\n+    \"openapi\": \"3.1.0\",\n     \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n     \"paths\": {\n         \"/a\": {\n\n@@ -32,7 +32,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -37,7 +37,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a/{id}\": {\n\n@@ -16,7 +16,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a/{id}\": {\n\n@@ -42,7 +42,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a\": {\n\n@@ -85,7 +85,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a\": {\n\n@@ -118,7 +118,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/default\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/api_route\": {\n\n@@ -75,7 +75,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a/\": {\n\n@@ -86,7 +86,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/with-duplicates\": {\n\n@@ -22,7 +22,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/app\": {\n\n@@ -36,7 +36,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -57,7 +57,7 @@ expected_schema = {\n         }\n     },\n     \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-    \"openapi\": \"3.0.2\",\n+    \"openapi\": \"3.1.0\",\n     \"paths\": {\n         \"/foo\": {\n             \"get\": {\n\n@@ -99,7 +99,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -66,7 +66,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/model/{name}\": {\n\n@@ -48,7 +48,7 @@ def test_top_level_generate_unique_id():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n@@ -249,7 +249,7 @@ def test_router_overrides_generate_unique_id():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n@@ -450,7 +450,7 @@ def test_router_include_overrides_generate_unique_id():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n@@ -661,7 +661,7 @@ def test_subrouter_top_level_include_overrides_generate_unique_id():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n@@ -928,7 +928,7 @@ def test_router_path_operation_overrides_generate_unique_id():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n@@ -1136,7 +1136,7 @@ def test_app_path_operation_overrides_generate_unique_id():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n@@ -1353,7 +1353,7 @@ def test_callback_override_generate_unique_id():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -29,7 +29,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/product\": {\n\n@@ -443,7 +443,7 @@ def test_openapi():\n         assert issubclass(w[-1].category, UserWarning)\n         assert \"Duplicate Operation ID\" in str(w[-1].message)\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/override1\": {\n\n@@ -35,7 +35,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a/compute\": {\n\n@@ -80,7 +80,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -46,7 +46,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -42,7 +42,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -22,7 +22,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -30,7 +30,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"servers\": [\n             {\"url\": \"/\", \"description\": \"Default, relative server\"},\n\n@@ -25,7 +25,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/{user_id}\": {\n\n@@ -34,7 +34,7 @@ async def hidden_query(\n \n \n openapi_schema = {\n-    \"openapi\": \"3.0.2\",\n+    \"openapi\": \"3.1.0\",\n     \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n     \"paths\": {\n         \"/hidden_cookie\": {\n\n@@ -28,7 +28,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -50,7 +50,7 @@ schema = {\n         }\n     },\n     \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-    \"openapi\": \"3.0.2\",\n+    \"openapi\": \"3.1.0\",\n     \"paths\": {\n         \"/\": {\n             \"get\": {\n\n@@ -58,7 +58,7 @@ def test_openapi_schema():\n             }\n         },\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"paths\": {\n             \"/{repeated_alias}\": {\n                 \"get\": {\n\n@@ -32,7 +32,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/{id}\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     assert response.status_code == 200, response.text\n     # insert_assert(response.json())\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/products\": {\n\n@@ -138,7 +138,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/dict\": {\n\n@@ -42,7 +42,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a\": {\n\n@@ -50,7 +50,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/a\": {\n\n@@ -507,7 +507,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/no_response_model-no_annotation-return_model\": {\n\n@@ -50,7 +50,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/valid1\": {\n\n@@ -1,11 +1,13 @@\n from typing import Union\n \n+import pytest\n from fastapi import Body, Cookie, FastAPI, Header, Path, Query\n from fastapi.testclient import TestClient\n from pydantic import BaseModel\n \n-app = FastAPI()\n \n+def create_app():\n+    app = FastAPI()\n \n     class Item(BaseModel):\n         data: str\n@@ -13,52 +15,47 @@ class Item(BaseModel):\n         class Config:\n             schema_extra = {\"example\": {\"data\": \"Data in schema_extra\"}}\n \n-\n     @app.post(\"/schema_extra/\")\n     def schema_extra(item: Item):\n         return item\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.post(\"/example/\")\n         def example(item: Item = Body(example={\"data\": \"Data in Body example\"})):\n             return item\n \n-\n     @app.post(\"/examples/\")\n     def examples(\n         item: Item = Body(\n-        examples={\n-            \"example1\": {\n-                \"summary\": \"example1 summary\",\n-                \"value\": {\"data\": \"Data in Body examples, example1\"},\n-            },\n-            \"example2\": {\"value\": {\"data\": \"Data in Body examples, example2\"}},\n-        },\n+            examples=[\n+                {\"data\": \"Data in Body examples, example1\"},\n+                {\"data\": \"Data in Body examples, example2\"},\n+            ],\n         )\n     ):\n         return item\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.post(\"/example_examples/\")\n         def example_examples(\n             item: Item = Body(\n                 example={\"data\": \"Overridden example\"},\n-        examples={\n-            \"example1\": {\"value\": {\"data\": \"examples example_examples 1\"}},\n-            \"example2\": {\"value\": {\"data\": \"examples example_examples 2\"}},\n-        },\n+                examples=[\n+                    {\"data\": \"examples example_examples 1\"},\n+                    {\"data\": \"examples example_examples 2\"},\n+                ],\n             )\n         ):\n             return item\n \n-\n     # TODO: enable these tests once/if Form(embed=False) is supported\n     # TODO: In that case, define if File() should support example/examples too\n     # @app.post(\"/form_example\")\n     # def form_example(firstname: str = Form(example=\"John\")):\n     #     return firstname\n \n-\n     # @app.post(\"/form_examples\")\n     # def form_examples(\n     #     lastname: str = Form(\n@@ -71,7 +68,6 @@ def example_examples(\n     # ):\n     #     return lastname\n \n-\n     # @app.post(\"/form_example_examples\")\n     # def form_example_examples(\n     #     lastname: str = Form(\n@@ -85,6 +81,7 @@ def example_examples(\n     # ):\n     #     return lastname\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/path_example/{item_id}\")\n         def path_example(\n@@ -94,31 +91,26 @@ def path_example(\n         ):\n             return item_id\n \n-\n     @app.get(\"/path_examples/{item_id}\")\n     def path_examples(\n         item_id: str = Path(\n-        examples={\n-            \"example1\": {\"summary\": \"item ID summary\", \"value\": \"item_1\"},\n-            \"example2\": {\"value\": \"item_2\"},\n-        },\n+            examples=[\"item_1\", \"item_2\"],\n         ),\n     ):\n         return item_id\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/path_example_examples/{item_id}\")\n         def path_example_examples(\n             item_id: str = Path(\n                 example=\"item_overridden\",\n-        examples={\n-            \"example1\": {\"summary\": \"item ID summary\", \"value\": \"item_1\"},\n-            \"example2\": {\"value\": \"item_2\"},\n-        },\n+                examples=[\"item_1\", \"item_2\"],\n             ),\n         ):\n             return item_id\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/query_example/\")\n         def query_example(\n@@ -129,33 +121,28 @@ def query_example(\n         ):\n             return data\n \n-\n     @app.get(\"/query_examples/\")\n     def query_examples(\n         data: Union[str, None] = Query(\n             default=None,\n-        examples={\n-            \"example1\": {\"summary\": \"Query example 1\", \"value\": \"query1\"},\n-            \"example2\": {\"value\": \"query2\"},\n-        },\n+            examples=[\"query1\", \"query2\"],\n         ),\n     ):\n         return data\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/query_example_examples/\")\n         def query_example_examples(\n             data: Union[str, None] = Query(\n                 default=None,\n                 example=\"query_overridden\",\n-        examples={\n-            \"example1\": {\"summary\": \"Query example 1\", \"value\": \"query1\"},\n-            \"example2\": {\"value\": \"query2\"},\n-        },\n+                examples=[\"query1\", \"query2\"],\n             ),\n         ):\n             return data\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/header_example/\")\n         def header_example(\n@@ -166,33 +153,31 @@ def header_example(\n         ):\n             return data\n \n-\n     @app.get(\"/header_examples/\")\n     def header_examples(\n         data: Union[str, None] = Header(\n             default=None,\n-        examples={\n-            \"example1\": {\"summary\": \"header example 1\", \"value\": \"header1\"},\n-            \"example2\": {\"value\": \"header2\"},\n-        },\n+            examples=[\n+                \"header1\",\n+                \"header2\",\n+            ],\n         ),\n     ):\n         return data\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/header_example_examples/\")\n         def header_example_examples(\n             data: Union[str, None] = Header(\n                 default=None,\n                 example=\"header_overridden\",\n-        examples={\n-            \"example1\": {\"summary\": \"Query example 1\", \"value\": \"header1\"},\n-            \"example2\": {\"value\": \"header2\"},\n-        },\n+                examples=[\"header1\", \"header2\"],\n             ),\n         ):\n             return data\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/cookie_example/\")\n         def cookie_example(\n@@ -203,38 +188,33 @@ def cookie_example(\n         ):\n             return data\n \n-\n     @app.get(\"/cookie_examples/\")\n     def cookie_examples(\n         data: Union[str, None] = Cookie(\n             default=None,\n-        examples={\n-            \"example1\": {\"summary\": \"cookie example 1\", \"value\": \"cookie1\"},\n-            \"example2\": {\"value\": \"cookie2\"},\n-        },\n+            examples=[\"cookie1\", \"cookie2\"],\n         ),\n     ):\n         return data\n \n+    with pytest.warns(DeprecationWarning):\n \n         @app.get(\"/cookie_example_examples/\")\n         def cookie_example_examples(\n             data: Union[str, None] = Cookie(\n                 default=None,\n                 example=\"cookie_overridden\",\n-        examples={\n-            \"example1\": {\"summary\": \"Query example 1\", \"value\": \"cookie1\"},\n-            \"example2\": {\"value\": \"cookie2\"},\n-        },\n+                examples=[\"cookie1\", \"cookie2\"],\n             ),\n         ):\n             return data\n \n-\n-client = TestClient(app)\n+    return app\n \n \n def test_call_api():\n+    app = create_app()\n+    client = TestClient(app)\n     response = client.post(\"/schema_extra/\", json={\"data\": \"Foo\"})\n     assert response.status_code == 200, response.text\n     response = client.post(\"/example/\", json={\"data\": \"Foo\"})\n@@ -277,10 +257,12 @@ def test_openapi_schema():\n     * Body(example={}) overrides schema_extra in pydantic model\n     * Body(examples{}) overrides Body(example={}) and schema_extra in pydantic model\n     \"\"\"\n+    app = create_app()\n+    client = TestClient(app)\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/schema_extra/\": {\n@@ -351,20 +333,14 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"},\n-                                \"examples\": {\n-                                    \"example1\": {\n-                                        \"summary\": \"example1 summary\",\n-                                        \"value\": {\n-                                            \"data\": \"Data in Body examples, example1\"\n-                                        },\n-                                    },\n-                                    \"example2\": {\n-                                        \"value\": {\n-                                            \"data\": \"Data in Body examples, example2\"\n+                                \"schema\": {\n+                                    \"allOf\": [{\"$ref\": \"#/components/schemas/Item\"}],\n+                                    \"title\": \"Item\",\n+                                    \"examples\": [\n+                                        {\"data\": \"Data in Body examples, example1\"},\n+                                        {\"data\": \"Data in Body examples, example2\"},\n+                                    ],\n                                 }\n-                                    },\n-                                },\n                             }\n                         },\n                         \"required\": True,\n@@ -394,15 +370,15 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"},\n-                                \"examples\": {\n-                                    \"example1\": {\n-                                        \"value\": {\"data\": \"examples example_examples 1\"}\n-                                    },\n-                                    \"example2\": {\n-                                        \"value\": {\"data\": \"examples example_examples 2\"}\n-                                    },\n+                                \"schema\": {\n+                                    \"allOf\": [{\"$ref\": \"#/components/schemas/Item\"}],\n+                                    \"title\": \"Item\",\n+                                    \"examples\": [\n+                                        {\"data\": \"examples example_examples 1\"},\n+                                        {\"data\": \"examples example_examples 2\"},\n+                                    ],\n                                 },\n+                                \"example\": {\"data\": \"Overridden example\"},\n                             }\n                         },\n                         \"required\": True,\n@@ -463,13 +439,10 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"item ID summary\",\n-                                    \"value\": \"item_1\",\n-                                },\n-                                \"example2\": {\"value\": \"item_2\"},\n+                            \"schema\": {\n+                                \"title\": \"Item Id\",\n+                                \"type\": \"string\",\n+                                \"examples\": [\"item_1\", \"item_2\"],\n                             },\n                             \"name\": \"item_id\",\n                             \"in\": \"path\",\n@@ -500,14 +473,12 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": True,\n-                            \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"item ID summary\",\n-                                    \"value\": \"item_1\",\n-                                },\n-                                \"example2\": {\"value\": \"item_2\"},\n+                            \"schema\": {\n+                                \"title\": \"Item Id\",\n+                                \"type\": \"string\",\n+                                \"examples\": [\"item_1\", \"item_2\"],\n                             },\n+                            \"example\": \"item_overridden\",\n                             \"name\": \"item_id\",\n                             \"in\": \"path\",\n                         }\n@@ -568,13 +539,10 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"Query example 1\",\n-                                    \"value\": \"query1\",\n-                                },\n-                                \"example2\": {\"value\": \"query2\"},\n+                            \"schema\": {\n+                                \"type\": \"string\",\n+                                \"title\": \"Data\",\n+                                \"examples\": [\"query1\", \"query2\"],\n                             },\n                             \"name\": \"data\",\n                             \"in\": \"query\",\n@@ -605,14 +573,12 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"Query example 1\",\n-                                    \"value\": \"query1\",\n-                                },\n-                                \"example2\": {\"value\": \"query2\"},\n+                            \"schema\": {\n+                                \"type\": \"string\",\n+                                \"title\": \"Data\",\n+                                \"examples\": [\"query1\", \"query2\"],\n                             },\n+                            \"example\": \"query_overridden\",\n                             \"name\": \"data\",\n                             \"in\": \"query\",\n                         }\n@@ -642,7 +608,7 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n+                            \"schema\": {\"type\": \"string\", \"title\": \"Data\"},\n                             \"example\": \"header1\",\n                             \"name\": \"data\",\n                             \"in\": \"header\",\n@@ -673,13 +639,10 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"header example 1\",\n-                                    \"value\": \"header1\",\n-                                },\n-                                \"example2\": {\"value\": \"header2\"},\n+                            \"schema\": {\n+                                \"type\": \"string\",\n+                                \"title\": \"Data\",\n+                                \"examples\": [\"header1\", \"header2\"],\n                             },\n                             \"name\": \"data\",\n                             \"in\": \"header\",\n@@ -710,14 +673,12 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"Query example 1\",\n-                                    \"value\": \"header1\",\n-                                },\n-                                \"example2\": {\"value\": \"header2\"},\n+                            \"schema\": {\n+                                \"type\": \"string\",\n+                                \"title\": \"Data\",\n+                                \"examples\": [\"header1\", \"header2\"],\n                             },\n+                            \"example\": \"header_overridden\",\n                             \"name\": \"data\",\n                             \"in\": \"header\",\n                         }\n@@ -747,7 +708,7 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n+                            \"schema\": {\"type\": \"string\", \"title\": \"Data\"},\n                             \"example\": \"cookie1\",\n                             \"name\": \"data\",\n                             \"in\": \"cookie\",\n@@ -778,13 +739,10 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"cookie example 1\",\n-                                    \"value\": \"cookie1\",\n-                                },\n-                                \"example2\": {\"value\": \"cookie2\"},\n+                            \"schema\": {\n+                                \"type\": \"string\",\n+                                \"title\": \"Data\",\n+                                \"examples\": [\"cookie1\", \"cookie2\"],\n                             },\n                             \"name\": \"data\",\n                             \"in\": \"cookie\",\n@@ -815,14 +773,12 @@ def test_openapi_schema():\n                     \"parameters\": [\n                         {\n                             \"required\": False,\n-                            \"schema\": {\"title\": \"Data\", \"type\": \"string\"},\n-                            \"examples\": {\n-                                \"example1\": {\n-                                    \"summary\": \"Query example 1\",\n-                                    \"value\": \"cookie1\",\n-                                },\n-                                \"example2\": {\"value\": \"cookie2\"},\n+                            \"schema\": {\n+                                \"type\": \"string\",\n+                                \"title\": \"Data\",\n+                                \"examples\": [\"cookie1\", \"cookie2\"],\n                             },\n+                            \"example\": \"cookie_overridden\",\n                             \"name\": \"data\",\n                             \"in\": \"cookie\",\n                         }\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -48,7 +48,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -47,7 +47,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -47,7 +47,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -37,7 +37,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -54,7 +54,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -52,7 +52,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -52,7 +52,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -37,7 +37,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -37,7 +37,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -43,7 +43,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -45,7 +45,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -135,7 +135,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/login\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -44,7 +44,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -139,7 +139,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/login\": {\n\n@@ -140,7 +140,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/login\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -45,7 +45,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -47,7 +47,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -49,7 +49,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -53,7 +53,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -80,7 +80,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/http-no-body-statuscode-exception\": {\n\n@@ -87,7 +87,7 @@ def test_openapi_schema():\n     with client:\n         response = client.get(\"/openapi.json\")\n         assert response.json() == {\n-            \"openapi\": \"3.0.2\",\n+            \"openapi\": \"3.1.0\",\n             \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n             \"paths\": {\n                 \"/invoices/\": {\n\n@@ -86,7 +86,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/model-with-tuple/\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -27,7 +27,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -27,7 +27,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -22,7 +22,7 @@ def test_openapi_schema():\n         response = client.get(\"/openapi.json\")\n         assert response.status_code == 200, response.text\n         assert response.json() == {\n-            \"openapi\": \"3.0.2\",\n+            \"openapi\": \"3.1.0\",\n             \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n             \"paths\": {\n                 \"/notes/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/app\": {\n\n@@ -15,7 +15,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/app\": {\n\n@@ -15,7 +15,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"servers\": [\n             {\"url\": \"/api/v1\"},\n\n@@ -15,7 +15,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"servers\": [\n             {\"url\": \"https://stag.example.com\", \"description\": \"Staging environment\"},\n\n@@ -166,7 +166,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -166,7 +166,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -181,7 +181,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -200,7 +200,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -215,7 +215,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -64,7 +64,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -64,7 +64,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -72,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -72,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -72,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -50,7 +50,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -50,7 +50,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -58,7 +58,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -58,7 +58,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -58,7 +58,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -90,7 +90,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -90,7 +90,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -98,7 +98,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -98,7 +98,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -98,7 +98,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/index-weights/\": {\n\n@@ -41,7 +41,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/index-weights/\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -44,7 +44,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -44,7 +44,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -33,7 +33,7 @@ def test_default_openapi():\n     assert response.status_code == 200, response.text\n     response = client.get(\"/openapi.json\")\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -30,7 +30,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -30,7 +30,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -36,7 +36,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -36,7 +36,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -36,7 +36,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -27,7 +27,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/typer\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/fastapi\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/pydantic\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -22,7 +22,7 @@ def test_openapi_schema():\n     assert response.status_code == 200\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/next\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/authors/{author_id}/items/\": {\n\n@@ -26,7 +26,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -26,7 +26,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -64,7 +64,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -64,7 +64,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -72,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -72,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -72,7 +72,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -54,7 +54,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -54,7 +54,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -66,7 +66,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -99,7 +99,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -99,7 +99,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -115,7 +115,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n         response = client.get(\"/openapi.json\")\n         assert response.status_code == 200, response.text\n         assert response.json() == {\n-            \"openapi\": \"3.0.2\",\n+            \"openapi\": \"3.1.0\",\n             \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n             \"paths\": {\n                 \"/items/{item_id}\": {\n\n@@ -17,7 +17,7 @@ def test_openapi_schema():\n         response = client.get(\"/openapi.json\")\n         assert response.status_code == 200, response.text\n         assert response.json() == {\n-            \"openapi\": \"3.0.2\",\n+            \"openapi\": \"3.1.0\",\n             \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n             \"paths\": {\n                 \"/items/\": {\n\n@@ -22,7 +22,7 @@ def test_openapi_schema():\n         response = client.get(\"/openapi.json\")\n         assert response.status_code == 200, response.text\n         assert response.json() == {\n-            \"openapi\": \"3.0.2\",\n+            \"openapi\": \"3.1.0\",\n             \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n             \"paths\": {\n                 \"/predict\": {\n\n@@ -15,11 +15,12 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\n             \"title\": \"Custom title\",\n+            \"summary\": \"This is a very custom OpenAPI schema\",\n+            \"description\": \"Here's a longer description of the custom **OpenAPI** schema\",\n             \"version\": \"2.5.0\",\n-            \"description\": \"This is a very custom OpenAPI schema\",\n             \"x-logo\": {\n                 \"url\": \"https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png\"\n             },\n\n@@ -30,7 +30,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -30,7 +30,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -28,7 +28,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -38,7 +38,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -18,7 +18,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -27,7 +27,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/keyword-weights/\": {\n\n@@ -24,7 +24,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/keyword-weights/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -32,7 +32,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -22,7 +22,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -22,7 +22,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items-header/{item_id}\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/unicorns/{name}\": {\n\n@@ -32,7 +32,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -35,7 +35,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -24,7 +24,7 @@ def test_openapi():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -24,7 +24,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -32,7 +32,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -32,7 +32,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -35,7 +35,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -35,7 +35,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -43,7 +43,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -46,7 +46,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -46,7 +46,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -26,7 +26,7 @@ def test_openapi_schema():\n     assert response.status_code == 200\n     # insert_assert(response.json())\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -26,7 +26,7 @@ def test_openapi_schema():\n     assert response.status_code == 200\n     # insert_assert(response.json())\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema(client: TestClient):\n     assert response.status_code == 200\n     # insert_assert(response.json())\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema(client: TestClient):\n     assert response.status_code == 200\n     # insert_assert(response.json())\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -34,7 +34,7 @@ def test_openapi_schema(client: TestClient):\n     assert response.status_code == 200\n     # insert_assert(response.json())\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,9 +15,10 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\n             \"title\": \"ChimichangApp\",\n+            \"summary\": \"Deadpool's favorite app. Nuff said.\",\n             \"description\": \"\\nChimichangApp API helps you do awesome stuff. 🚀\\n\\n## Items\\n\\nYou can **read items**.\\n\\n## Users\\n\\nYou will be able to:\\n\\n* **Create users** (_not implemented_).\\n* **Read users** (_not implemented_).\\n\",\n             \"termsOfService\": \"http://example.com/terms/\",\n             \"contact\": {\n\n@@ -0,0 +1,49 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.metadata.tutorial001_1 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_items():\n+    response = client.get(\"/items/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == [{\"name\": \"Katana\"}]\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\n+        \"openapi\": \"3.1.0\",\n+        \"info\": {\n+            \"title\": \"ChimichangApp\",\n+            \"summary\": \"Deadpool's favorite app. Nuff said.\",\n+            \"description\": \"\\nChimichangApp API helps you do awesome stuff. 🚀\\n\\n## Items\\n\\nYou can **read items**.\\n\\n## Users\\n\\nYou will be able to:\\n\\n* **Create users** (_not implemented_).\\n* **Read users** (_not implemented_).\\n\",\n+            \"termsOfService\": \"http://example.com/terms/\",\n+            \"contact\": {\n+                \"name\": \"Deadpoolio the Amazing\",\n+                \"url\": \"http://x-force.example.com/contact/\",\n+                \"email\": \"dp@x-force.example.com\",\n+            },\n+            \"license\": {\n+                \"name\": \"Apache 2.0\",\n+                \"identifier\": \"MIT\",\n+            },\n+            \"version\": \"0.0.1\",\n+        },\n+        \"paths\": {\n+            \"/items/\": {\n+                \"get\": {\n+                    \"summary\": \"Read Items\",\n+                    \"operationId\": \"read_items_items__get\",\n+                    \"responses\": {\n+                        \"200\": {\n+                            \"description\": \"Successful Response\",\n+                            \"content\": {\"application/json\": {\"schema\": {}}},\n+                        }\n+                    },\n+                }\n+            }\n+        },\n+    }\n\n@@ -16,7 +16,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -22,7 +22,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/invoices/\": {\n\n\n@@ -0,0 +1,117 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.openapi_webhooks.tutorial001 import app\n+\n+client = TestClient(app)\n+\n+\n+def test_get():\n+    response = client.get(\"/users/\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == [\"Rick\", \"Morty\"]\n+\n+\n+def test_dummy_webhook():\n+    # Just for coverage\n+    app.webhooks.routes[0].endpoint({})\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\n+        \"openapi\": \"3.1.0\",\n+        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+        \"paths\": {\n+            \"/users/\": {\n+                \"get\": {\n+                    \"summary\": \"Read Users\",\n+                    \"operationId\": \"read_users_users__get\",\n+                    \"responses\": {\n+                        \"200\": {\n+                            \"description\": \"Successful Response\",\n+                            \"content\": {\"application/json\": {\"schema\": {}}},\n+                        }\n+                    },\n+                }\n+            }\n+        },\n+        \"webhooks\": {\n+            \"new-subscription\": {\n+                \"post\": {\n+                    \"summary\": \"New Subscription\",\n+                    \"description\": \"When a new user subscribes to your service we'll send you a POST request with this\\ndata to the URL that you register for the event `new-subscription` in the dashboard.\",\n+                    \"operationId\": \"new_subscriptionnew_subscription_post\",\n+                    \"requestBody\": {\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Subscription\"}\n+                            }\n+                        },\n+                        \"required\": True,\n+                    },\n+                    \"responses\": {\n+                        \"200\": {\n+                            \"description\": \"Successful Response\",\n+                            \"content\": {\"application/json\": {\"schema\": {}}},\n+                        },\n+                        \"422\": {\n+                            \"description\": \"Validation Error\",\n+                            \"content\": {\n+                                \"application/json\": {\n+                                    \"schema\": {\n+                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                    }\n+                                }\n+                            },\n+                        },\n+                    },\n+                }\n+            }\n+        },\n+        \"components\": {\n+            \"schemas\": {\n+                \"HTTPValidationError\": {\n+                    \"properties\": {\n+                        \"detail\": {\n+                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                            \"type\": \"array\",\n+                            \"title\": \"Detail\",\n+                        }\n+                    },\n+                    \"type\": \"object\",\n+                    \"title\": \"HTTPValidationError\",\n+                },\n+                \"Subscription\": {\n+                    \"properties\": {\n+                        \"username\": {\"type\": \"string\", \"title\": \"Username\"},\n+                        \"montly_fee\": {\"type\": \"number\", \"title\": \"Montly Fee\"},\n+                        \"start_date\": {\n+                            \"type\": \"string\",\n+                            \"format\": \"date-time\",\n+                            \"title\": \"Start Date\",\n+                        },\n+                    },\n+                    \"type\": \"object\",\n+                    \"required\": [\"username\", \"montly_fee\", \"start_date\"],\n+                    \"title\": \"Subscription\",\n+                },\n+                \"ValidationError\": {\n+                    \"properties\": {\n+                        \"loc\": {\n+                            \"items\": {\n+                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n+                            },\n+                            \"type\": \"array\",\n+                            \"title\": \"Location\",\n+                        },\n+                        \"msg\": {\"type\": \"string\", \"title\": \"Message\"},\n+                        \"type\": {\"type\": \"string\", \"title\": \"Error Type\"},\n+                    },\n+                    \"type\": \"object\",\n+                    \"required\": [\"loc\", \"msg\", \"type\"],\n+                    \"title\": \"ValidationError\",\n+                },\n+            }\n+        },\n+    }\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {},\n     }\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -14,7 +14,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -22,7 +22,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -56,7 +56,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -30,7 +30,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -30,7 +30,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -24,7 +24,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/{file_path}\": {\n\n@@ -51,7 +51,7 @@ def test_openapi():\n     assert response.status_code == 200, response.text\n     data = response.json()\n     assert data == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/models/{model_name}\": {\n\n@@ -35,7 +35,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -60,7 +60,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -67,7 +67,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -45,7 +45,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -45,7 +45,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -33,7 +33,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -33,7 +33,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -33,7 +33,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -33,7 +33,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -33,7 +33,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -33,7 +33,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -33,7 +33,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -66,7 +66,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -43,7 +43,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -43,7 +43,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -55,7 +55,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -66,7 +66,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -76,7 +76,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -77,7 +77,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -77,7 +77,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -96,7 +96,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -96,7 +96,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -54,7 +54,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -54,7 +54,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -82,7 +82,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -82,7 +82,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -70,7 +70,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/login/\": {\n\n@@ -70,7 +70,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/login/\": {\n\n@@ -81,7 +81,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/login/\": {\n\n@@ -112,7 +112,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -112,7 +112,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -131,7 +131,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/files/\": {\n\n@@ -27,7 +27,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/user/\": {\n\n@@ -27,7 +27,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/user/\": {\n\n@@ -36,7 +36,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/user/\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/portal\": {\n\n@@ -15,7 +15,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/teleport\": {\n\n@@ -21,7 +21,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/portal\": {\n\n@@ -31,7 +31,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/portal\": {\n\n@@ -36,7 +36,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/user/\": {\n\n@@ -36,7 +36,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -44,7 +44,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -44,7 +44,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n\n@@ -25,7 +25,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}/name\": {\n\n@@ -35,7 +35,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}/name\": {\n\n@@ -25,7 +25,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}/name\": {\n\n@@ -35,7 +35,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}/name\": {\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n@@ -41,9 +41,11 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"},\n-                                \"examples\": {\n-                                    \"normal\": {\n+                                \"schema\": {\n+                                    \"allOf\": [{\"$ref\": \"#/components/schemas/Item\"}],\n+                                    \"title\": \"Item\",\n+                                    \"examples\": [\n+                                        {\n                                             \"summary\": \"A normal example\",\n                                             \"description\": \"A **normal** item works correctly.\",\n                                             \"value\": {\n@@ -53,19 +55,20 @@ def test_openapi_schema():\n                                                 \"tax\": 3.2,\n                                             },\n                                         },\n-                                    \"converted\": {\n+                                        {\n                                             \"summary\": \"An example with converted data\",\n                                             \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                                             \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         },\n-                                    \"invalid\": {\n+                                        {\n                                             \"summary\": \"Invalid data is rejected with an error\",\n                                             \"value\": {\n                                                 \"name\": \"Baz\",\n                                                 \"price\": \"thirty five point four\",\n                                             },\n                                         },\n-                                },\n+                                    ],\n+                                }\n                             }\n                         },\n                         \"required\": True,\n\n@@ -23,7 +23,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n@@ -41,9 +41,11 @@ def test_openapi_schema():\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"},\n-                                \"examples\": {\n-                                    \"normal\": {\n+                                \"schema\": {\n+                                    \"allOf\": [{\"$ref\": \"#/components/schemas/Item\"}],\n+                                    \"title\": \"Item\",\n+                                    \"examples\": [\n+                                        {\n                                             \"summary\": \"A normal example\",\n                                             \"description\": \"A **normal** item works correctly.\",\n                                             \"value\": {\n@@ -53,19 +55,20 @@ def test_openapi_schema():\n                                                 \"tax\": 3.2,\n                                             },\n                                         },\n-                                    \"converted\": {\n+                                        {\n                                             \"summary\": \"An example with converted data\",\n                                             \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                                             \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         },\n-                                    \"invalid\": {\n+                                        {\n                                             \"summary\": \"Invalid data is rejected with an error\",\n                                             \"value\": {\n                                                 \"name\": \"Baz\",\n                                                 \"price\": \"thirty five point four\",\n                                             },\n                                         },\n-                                },\n+                                    ],\n+                                }\n                             }\n                         },\n                         \"required\": True,\n\n@@ -32,7 +32,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n@@ -50,9 +50,11 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"},\n-                                \"examples\": {\n-                                    \"normal\": {\n+                                \"schema\": {\n+                                    \"allOf\": [{\"$ref\": \"#/components/schemas/Item\"}],\n+                                    \"title\": \"Item\",\n+                                    \"examples\": [\n+                                        {\n                                             \"summary\": \"A normal example\",\n                                             \"description\": \"A **normal** item works correctly.\",\n                                             \"value\": {\n@@ -62,19 +64,20 @@ def test_openapi_schema(client: TestClient):\n                                                 \"tax\": 3.2,\n                                             },\n                                         },\n-                                    \"converted\": {\n+                                        {\n                                             \"summary\": \"An example with converted data\",\n                                             \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                                             \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         },\n-                                    \"invalid\": {\n+                                        {\n                                             \"summary\": \"Invalid data is rejected with an error\",\n                                             \"value\": {\n                                                 \"name\": \"Baz\",\n                                                 \"price\": \"thirty five point four\",\n                                             },\n                                         },\n-                                },\n+                                    ],\n+                                }\n                             }\n                         },\n                         \"required\": True,\n\n@@ -32,7 +32,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n@@ -50,9 +50,11 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"},\n-                                \"examples\": {\n-                                    \"normal\": {\n+                                \"schema\": {\n+                                    \"allOf\": [{\"$ref\": \"#/components/schemas/Item\"}],\n+                                    \"title\": \"Item\",\n+                                    \"examples\": [\n+                                        {\n                                             \"summary\": \"A normal example\",\n                                             \"description\": \"A **normal** item works correctly.\",\n                                             \"value\": {\n@@ -62,19 +64,20 @@ def test_openapi_schema(client: TestClient):\n                                                 \"tax\": 3.2,\n                                             },\n                                         },\n-                                    \"converted\": {\n+                                        {\n                                             \"summary\": \"An example with converted data\",\n                                             \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                                             \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         },\n-                                    \"invalid\": {\n+                                        {\n                                             \"summary\": \"Invalid data is rejected with an error\",\n                                             \"value\": {\n                                                 \"name\": \"Baz\",\n                                                 \"price\": \"thirty five point four\",\n                                             },\n                                         },\n-                                },\n+                                    ],\n+                                }\n                             }\n                         },\n                         \"required\": True,\n\n@@ -32,7 +32,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/{item_id}\": {\n@@ -50,9 +50,11 @@ def test_openapi_schema(client: TestClient):\n                     \"requestBody\": {\n                         \"content\": {\n                             \"application/json\": {\n-                                \"schema\": {\"$ref\": \"#/components/schemas/Item\"},\n-                                \"examples\": {\n-                                    \"normal\": {\n+                                \"schema\": {\n+                                    \"allOf\": [{\"$ref\": \"#/components/schemas/Item\"}],\n+                                    \"title\": \"Item\",\n+                                    \"examples\": [\n+                                        {\n                                             \"summary\": \"A normal example\",\n                                             \"description\": \"A **normal** item works correctly.\",\n                                             \"value\": {\n@@ -62,19 +64,20 @@ def test_openapi_schema(client: TestClient):\n                                                 \"tax\": 3.2,\n                                             },\n                                         },\n-                                    \"converted\": {\n+                                        {\n                                             \"summary\": \"An example with converted data\",\n                                             \"description\": \"FastAPI can convert price `strings` to actual `numbers` automatically\",\n                                             \"value\": {\"name\": \"Bar\", \"price\": \"35.4\"},\n                                         },\n-                                    \"invalid\": {\n+                                        {\n                                             \"summary\": \"Invalid data is rejected with an error\",\n                                             \"value\": {\n                                                 \"name\": \"Baz\",\n                                                 \"price\": \"thirty five point four\",\n                                             },\n                                         },\n-                                },\n+                                    ],\n+                                }\n                             }\n                         },\n                         \"required\": True,\n\n@@ -29,7 +29,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -29,7 +29,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -40,7 +40,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -70,7 +70,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -70,7 +70,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -86,7 +86,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -86,7 +86,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -86,7 +86,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -179,7 +179,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -179,7 +179,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -207,7 +207,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -207,7 +207,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -207,7 +207,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -207,7 +207,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/token\": {\n\n@@ -42,7 +42,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -42,7 +42,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -54,7 +54,7 @@ def test_openapi_schema(client: TestClient):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/me\": {\n\n@@ -89,7 +89,7 @@ def test_openapi_schema(client):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -91,7 +91,7 @@ def test_openapi_schema(client):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -105,7 +105,7 @@ def test_openapi_schema(client):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -105,7 +105,7 @@ def test_openapi_schema(client):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -104,7 +104,7 @@ def test_openapi_schema(client):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -104,7 +104,7 @@ def test_openapi_schema(client):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -97,7 +97,7 @@ def test_openapi_schema(client):\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/users/\": {\n\n@@ -5,7 +5,7 @@ from docs_src.sub_applications.tutorial001 import app\n client = TestClient(app)\n \n openapi_schema_main = {\n-    \"openapi\": \"3.0.2\",\n+    \"openapi\": \"3.1.0\",\n     \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n     \"paths\": {\n         \"/app\": {\n@@ -23,7 +23,7 @@ openapi_schema_main = {\n     },\n }\n openapi_schema_sub = {\n-    \"openapi\": \"3.0.2\",\n+    \"openapi\": \"3.1.0\",\n     \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n     \"paths\": {\n         \"/sub\": {\n\n@@ -9,7 +9,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -9,7 +9,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -39,7 +39,7 @@ def test_openapi_schema():\n     response = client.get(\"/openapi.json\")\n     assert response.status_code == 200, response.text\n     assert response.json() == {\n-        \"openapi\": \"3.0.2\",\n+        \"openapi\": \"3.1.0\",\n         \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n         \"paths\": {\n             \"/items/\": {\n\n@@ -0,0 +1,126 @@\n+from datetime import datetime\n+\n+from fastapi import FastAPI, Security\n+from fastapi.security import HTTPBearer\n+from fastapi.testclient import TestClient\n+from pydantic import BaseModel\n+from typing_extensions import Annotated\n+\n+app = FastAPI()\n+\n+bearer_scheme = HTTPBearer()\n+\n+\n+class Subscription(BaseModel):\n+    username: str\n+    montly_fee: float\n+    start_date: datetime\n+\n+\n+@app.webhooks.post(\"new-subscription\")\n+def new_subscription(\n+    body: Subscription, token: Annotated[str, Security(bearer_scheme)]\n+):\n+    \"\"\"\n+    When a new user subscribes to your service we'll send you a POST request with this\n+    data to the URL that you register for the event `new-subscription` in the dashboard.\n+    \"\"\"\n+\n+\n+client = TestClient(app)\n+\n+\n+def test_dummy_webhook():\n+    # Just for coverage\n+    new_subscription(body={}, token=\"Bearer 123\")\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    # insert_assert(response.json())\n+    assert response.json() == {\n+        \"openapi\": \"3.1.0\",\n+        \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+        \"paths\": {},\n+        \"webhooks\": {\n+            \"new-subscription\": {\n+                \"post\": {\n+                    \"summary\": \"New Subscription\",\n+                    \"description\": \"When a new user subscribes to your service we'll send you a POST request with this\\ndata to the URL that you register for the event `new-subscription` in the dashboard.\",\n+                    \"operationId\": \"new_subscriptionnew_subscription_post\",\n+                    \"requestBody\": {\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\"$ref\": \"#/components/schemas/Subscription\"}\n+                            }\n+                        },\n+                        \"required\": True,\n+                    },\n+                    \"responses\": {\n+                        \"200\": {\n+                            \"description\": \"Successful Response\",\n+                            \"content\": {\"application/json\": {\"schema\": {}}},\n+                        },\n+                        \"422\": {\n+                            \"description\": \"Validation Error\",\n+                            \"content\": {\n+                                \"application/json\": {\n+                                    \"schema\": {\n+                                        \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                    }\n+                                }\n+                            },\n+                        },\n+                    },\n+                    \"security\": [{\"HTTPBearer\": []}],\n+                }\n+            }\n+        },\n+        \"components\": {\n+            \"schemas\": {\n+                \"HTTPValidationError\": {\n+                    \"properties\": {\n+                        \"detail\": {\n+                            \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                            \"type\": \"array\",\n+                            \"title\": \"Detail\",\n+                        }\n+                    },\n+                    \"type\": \"object\",\n+                    \"title\": \"HTTPValidationError\",\n+                },\n+                \"Subscription\": {\n+                    \"properties\": {\n+                        \"username\": {\"type\": \"string\", \"title\": \"Username\"},\n+                        \"montly_fee\": {\"type\": \"number\", \"title\": \"Montly Fee\"},\n+                        \"start_date\": {\n+                            \"type\": \"string\",\n+                            \"format\": \"date-time\",\n+                            \"title\": \"Start Date\",\n+                        },\n+                    },\n+                    \"type\": \"object\",\n+                    \"required\": [\"username\", \"montly_fee\", \"start_date\"],\n+                    \"title\": \"Subscription\",\n+                },\n+                \"ValidationError\": {\n+                    \"properties\": {\n+                        \"loc\": {\n+                            \"items\": {\n+                                \"anyOf\": [{\"type\": \"string\"}, {\"type\": \"integer\"}]\n+                            },\n+                            \"type\": \"array\",\n+                            \"title\": \"Location\",\n+                        },\n+                        \"msg\": {\"type\": \"string\", \"title\": \"Message\"},\n+                        \"type\": {\"type\": \"string\", \"title\": \"Error Type\"},\n+                    },\n+                    \"type\": \"object\",\n+                    \"required\": [\"loc\", \"msg\", \"type\"],\n+                    \"title\": \"ValidationError\",\n+                },\n+            },\n+            \"securitySchemes\": {\"HTTPBearer\": {\"type\": \"http\", \"scheme\": \"bearer\"}},\n+        },\n+    }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
