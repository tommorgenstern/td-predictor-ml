{"custom_id": "flask#7c271401b284e6fcc2040fffe317342e2a17a902", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 14 | Lines Deleted: 17 | Files Changed: 2 | Hunks: 5 | Methods Changed: 3 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 31 | Churn Cumulative: 2616 | Contributors (this commit): 46 | Commits (past 90d): 20 | Contributors (cumulative): 56 | DMM Complexity: 1.0\n\nDIFF:\n@@ -483,8 +483,9 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n                           (default), this value is set by\n                           :meth:`~Flask.get_send_file_max_age` of\n                           :data:`~flask.current_app`.\n-    :param last_modified: the Datetime object representing timestamp for when\n-                          the input file was last modified.\n+    :param last_modified: set the ``Last-Modified`` header to this value,\n+        a :class:`~datetime.datetime` or timestamp.\n+        If a file was passed, this overrides its mtime.\n     \"\"\"\n     mtime = None\n     if isinstance(filename_or_fp, string_types):\n@@ -528,15 +529,10 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n     rv = current_app.response_class(data, mimetype=mimetype, headers=headers,\n                                     direct_passthrough=True)\n \n-    # if we know the file modification date, we can store it as\n-    # the time of the last modification.\n     if last_modified is not None:\n-        if PY2:\n-            rv.last_modified = int(last_modified.strftime(\"%s\"))\n-        else:\n-            rv.last_modified = last_modified.timestamp()\n+        rv.last_modified = last_modified\n     elif mtime is not None:\n-        rv.last_modified = int(mtime)\n+        rv.last_modified = mtime\n \n     rv.cache_control.public = True\n     if cache_timeout is None:\n\n@@ -351,14 +351,15 @@ class TestSendfile(object):\n \n     def test_send_file_last_modified(self):\n         app = flask.Flask(__name__)\n-        with app.test_request_context():\n-            dtm = datetime.datetime.now()\n-            rv = flask.send_file('static/index.html', last_modified=dtm)\n-            if PY2:\n-                assert rv.last_modified == int(dtm.strftime(\"%s\"))\n-            else:\n-                assert rv.last_modified == dtm.timestamp()\n-            rv.close()\n+        last_modified = datetime.datetime(1999, 1, 1)\n+\n+        @app.route('/')\n+        def index():\n+            return flask.send_file(StringIO(\"party like it's\"), last_modified=last_modified)\n+\n+        c = app.test_client()\n+        rv = c.get('/')\n+        assert rv.last_modified == last_modified\n \n     def test_send_file_object(self):\n         app = flask.Flask(__name__)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#5eaed3711685f263d4a34af25b5976f04e6885f2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 15 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 16 | Churn Cumulative: 197 | Contributors (this commit): 7 | Commits (past 90d): 7 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -21,7 +21,8 @@ from click.testing import CliRunner\n from flask import Flask, current_app\n \n from flask.cli import AppGroup, FlaskGroup, NoAppException, ScriptInfo, \\\n-    find_best_app, locate_app, with_appcontext, prepare_exec_for_file\n+    find_best_app, locate_app, with_appcontext, prepare_exec_for_file, \\\n+    find_default_import_path\n \n \n def test_cli_name(test_apps):\n@@ -79,6 +80,19 @@ def test_locate_app(test_apps):\n     pytest.raises(RuntimeError, locate_app, \"cliapp.app:notanapp\")\n \n \n+def test_find_default_import_path(test_apps, monkeypatch, tmpdir):\n+    \"\"\"Test of find_default_import_path.\"\"\"\n+    monkeypatch.delitem(os.environ, 'FLASK_APP', raising=False)\n+    assert find_default_import_path() == None\n+    monkeypatch.setitem(os.environ, 'FLASK_APP', 'notanapp')\n+    assert find_default_import_path() == 'notanapp'\n+    tmpfile = tmpdir.join('testapp.py')\n+    tmpfile.write('')\n+    monkeypatch.setitem(os.environ, 'FLASK_APP', str(tmpfile))\n+    expect_rv = prepare_exec_for_file(str(tmpfile))\n+    assert find_default_import_path() == expect_rv\n+\n+\n def test_scriptinfo(test_apps):\n     \"\"\"Test of ScriptInfo.\"\"\"\n     obj = ScriptInfo(app_import_path=\"cliapp.app:testapp\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d1d82ca8ce7262ad9d27245ce44f86571287810e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 249 | Contributors (this commit): 9 | Commits (past 90d): 3 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '0.12-dev'\n+__version__ = '0.11.1'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#724f04d30597a6d0144958e86f20e816b0d9b1f1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 251 | Contributors (this commit): 9 | Commits (past 90d): 4 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '0.11.1'\n+__version__ = '0.11.2-dev'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#501b8590dd8b262c93d52c92ab4b743af1f5d317", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 48 | Lines Deleted: 4 | Files Changed: 3 | Hunks: 6 | Methods Changed: 9 | Complexity Δ (Sum/Max): 11/9 | Churn Δ: 52 | Churn Cumulative: 1759 | Contributors (this commit): 32 | Commits (past 90d): 18 | Contributors (cumulative): 46 | DMM Complexity: 1.0\n\nDIFF:\n@@ -89,6 +89,13 @@ class Blueprint(_PackageBoundObject):\n     warn_on_modifications = False\n     _got_registered_once = False\n \n+    #: Blueprint local JSON decoder class to use.\n+    # Set to None to use the :class:`~flask.app.Flask.json_encoder`.\n+    json_encoder = None\n+    #: Blueprint local JSON decoder class to use.\n+    # Set to None to use the :class:`~flask.app.Flask.json_decoder`.\n+    json_decoder = None\n+\n     def __init__(self, name, import_name, static_folder=None,\n                  static_url_path=None, template_folder=None,\n                  url_prefix=None, subdomain=None, url_defaults=None,\n\n@@ -94,7 +94,8 @@ class JSONDecoder(_json.JSONDecoder):\n def _dump_arg_defaults(kwargs):\n     \"\"\"Inject default arguments for dump functions.\"\"\"\n     if current_app:\n-        kwargs.setdefault('cls', current_app.json_encoder)\n+        bp = current_app.blueprints.get(request.blueprint, None)\n+        kwargs.setdefault('cls', bp.json_encoder if bp else current_app.json_encoder)\n         if not current_app.config['JSON_AS_ASCII']:\n             kwargs.setdefault('ensure_ascii', False)\n         kwargs.setdefault('sort_keys', current_app.config['JSON_SORT_KEYS'])\n@@ -106,7 +107,8 @@ def _dump_arg_defaults(kwargs):\n def _load_arg_defaults(kwargs):\n     \"\"\"Inject default arguments for load functions.\"\"\"\n     if current_app:\n-        kwargs.setdefault('cls', current_app.json_decoder)\n+        bp = current_app.blueprints.get(request.blueprint, None)\n+        kwargs.setdefault('cls', bp.json_decoder if bp else current_app.json_decoder)\n     else:\n         kwargs.setdefault('cls', JSONDecoder)\n \n\n@@ -90,12 +90,12 @@ class TestJSON(object):\n         app = flask.Flask(__name__)\n \n         app.config['JSON_AS_ASCII'] = True\n-        with app.app_context():\n+        with app.test_request_context():\n             rv = flask.json.dumps(u'\\N{SNOWMAN}')\n             assert rv == '\"\\\\u2603\"'\n \n         app.config['JSON_AS_ASCII'] = False\n-        with app.app_context():\n+        with app.test_request_context():\n             rv = flask.json.dumps(u'\\N{SNOWMAN}')\n             assert rv == u'\"\\u2603\"'\n \n@@ -234,6 +234,41 @@ class TestJSON(object):\n         }), content_type='application/json')\n         assert rv.data == b'\"<42>\"'\n \n+    def test_blueprint_json_customization(self):\n+        class X(object):\n+            def __init__(self, val):\n+                self.val = val\n+        class MyEncoder(flask.json.JSONEncoder):\n+            def default(self, o):\n+                if isinstance(o, X):\n+                    return '<%d>' % o.val\n+                return flask.json.JSONEncoder.default(self, o)\n+        class MyDecoder(flask.json.JSONDecoder):\n+            def __init__(self, *args, **kwargs):\n+                kwargs.setdefault('object_hook', self.object_hook)\n+                flask.json.JSONDecoder.__init__(self, *args, **kwargs)\n+            def object_hook(self, obj):\n+                if len(obj) == 1 and '_foo' in obj:\n+                    return X(obj['_foo'])\n+                return obj\n+\n+        blue = flask.Blueprint('blue', __name__)\n+        blue.json_encoder = MyEncoder\n+        blue.json_decoder = MyDecoder\n+        @blue.route('/bp', methods=['POST'])\n+        def index():\n+            return flask.json.dumps(flask.request.get_json()['x'])\n+\n+        app = flask.Flask(__name__)\n+        app.testing = True\n+        app.register_blueprint(blue)\n+\n+        c = app.test_client()\n+        rv = c.post('/bp', data=flask.json.dumps({\n+            'x': {'_foo': 42}\n+        }), content_type='application/json')\n+        assert rv.data == b'\"<42>\"'\n+\n     def test_modified_url_encoding(self):\n         class ModifiedRequest(flask.Request):\n             url_charset = 'euc-kr'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#4305ebdf6692956a7e21a7195b90505d92f559d8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 6 | Files Changed: 2 | Hunks: 5 | Methods Changed: 3 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 19 | Churn Cumulative: 1168 | Contributors (this commit): 24 | Commits (past 90d): 18 | Contributors (cumulative): 31 | DMM Complexity: 0.0\n\nDIFF:\n@@ -13,6 +13,7 @@ import uuid\n from datetime import date\n from .globals import current_app, request\n from ._compat import text_type, PY2\n+from .ctx import has_request_context\n \n from werkzeug.http import http_date\n from jinja2 import Markup\n@@ -94,8 +95,11 @@ class JSONDecoder(_json.JSONDecoder):\n def _dump_arg_defaults(kwargs):\n     \"\"\"Inject default arguments for dump functions.\"\"\"\n     if current_app:\n-        bp = current_app.blueprints.get(request.blueprint, None)\n-        kwargs.setdefault('cls', bp.json_encoder if bp else current_app.json_encoder)\n+        bp = current_app.blueprints.get(request.blueprint,\n+                                        None) if has_request_context() else None\n+        kwargs.setdefault('cls',\n+                          bp.json_encoder if bp and bp.json_encoder\n+                          else current_app.json_encoder)\n         if not current_app.config['JSON_AS_ASCII']:\n             kwargs.setdefault('ensure_ascii', False)\n         kwargs.setdefault('sort_keys', current_app.config['JSON_SORT_KEYS'])\n@@ -107,8 +111,11 @@ def _dump_arg_defaults(kwargs):\n def _load_arg_defaults(kwargs):\n     \"\"\"Inject default arguments for load functions.\"\"\"\n     if current_app:\n-        bp = current_app.blueprints.get(request.blueprint, None)\n-        kwargs.setdefault('cls', bp.json_decoder if bp else current_app.json_decoder)\n+        bp = current_app.blueprints.get(request.blueprint,\n+                                        None) if has_request_context() else None\n+        kwargs.setdefault('cls',\n+                          bp.json_decoder if bp and bp.json_decoder\n+                          else current_app.json_decoder)\n     else:\n         kwargs.setdefault('cls', JSONDecoder)\n \n\n@@ -90,12 +90,12 @@ class TestJSON(object):\n         app = flask.Flask(__name__)\n \n         app.config['JSON_AS_ASCII'] = True\n-        with app.test_request_context():\n+        with app.app_context():\n             rv = flask.json.dumps(u'\\N{SNOWMAN}')\n             assert rv == '\"\\\\u2603\"'\n \n         app.config['JSON_AS_ASCII'] = False\n-        with app.test_request_context():\n+        with app.app_context():\n             rv = flask.json.dumps(u'\\N{SNOWMAN}')\n             assert rv == u'\"\\u2603\"'\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0514ba2de1751de1b0c9a223c96f6a7145714e6a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 2 | Churn Cumulative: 4231 | Contributors (this commit): 64 | Commits (past 90d): 6 | Contributors (cumulative): 64 | DMM Complexity: 0.0\n\nDIFF:\n@@ -839,6 +839,8 @@ class Flask(_PackageBoundObject):\n         options.setdefault('use_reloader', self.debug)\n         options.setdefault('use_debugger', self.debug)\n         options.setdefault('passthrough_errors', True)\n+        if debug:\n+            self.jinja_env.auto_reload = True\n         try:\n             run_simple(host, port, self, **options)\n         finally:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#5c12721730d18e2eddfe083cf1f6398af8915643", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 16 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 17 | Churn Cumulative: 4248 | Contributors (this commit): 64 | Commits (past 90d): 7 | Contributors (cumulative): 64 | DMM Complexity: None\n\nDIFF:\n@@ -935,22 +935,7 @@ class Flask(_PackageBoundObject):\n \n     @setupmethod\n     def register_blueprint(self, blueprint, **options):\n-        \"\"\"Register a blueprint on the application. For information about \n-        blueprints head over to :ref:`blueprints`.\n-\n-        The blueprint name is passed in as the first argument.\t\n-        Options are passed as additional keyword arguments and forwarded to \n-        `blueprints` in an \"options\" dictionary.\n-\n-        :param subdomain: set a subdomain for the blueprint\n-        :param url_prefix: set the prefix for all URLs defined on the blueprint.\n-                            ``(url_prefix='/<lang code>')``\n-        :param url_defaults: a dictionary with URL defaults that is added to \n-                            each and every URL defined with this blueprint\n-        :param static_folder: add a static folder to urls in this blueprint\n-        :param static_url_path: add a static url path to urls in this blueprint\n-        :param template_folder: set an alternate template folder\n-        :param root_path: set an alternate root path for this blueprint\n+        \"\"\"Registers a blueprint on the application.\n \n         .. versionadded:: 0.7\n         \"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#24289e97af233f11d9c145f80604b2ee416254a1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 17 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 17 | Churn Cumulative: 303 | Contributors (this commit): 6 | Commits (past 90d): 1 | Contributors (cumulative): 6 | DMM Complexity: 1.0\n\nDIFF:\n@@ -14,6 +14,7 @@ import pytest\n import flask\n import logging\n from jinja2 import TemplateNotFound\n+import werkzeug.serving\n \n \n def test_context_processing():\n@@ -346,6 +347,22 @@ def test_templates_auto_reload():\n     app.config['TEMPLATES_AUTO_RELOAD'] = True\n     assert app.jinja_env.auto_reload is True\n \n+def test_templates_auto_reload_debug_run(monkeypatch):\n+    # debug is None in config, config option is None, app.run(debug=True)\n+    rv = {}\n+\n+    # Mocks werkzeug.serving.run_simple method\n+    def run_simple_mock(*args, **kwargs):\n+        rv['passthrough_errors'] = kwargs.get('passthrough_errors')\n+\n+    app = flask.Flask(__name__)\n+    monkeypatch.setattr(werkzeug.serving, 'run_simple', run_simple_mock)\n+\n+    assert app.config['TEMPLATES_AUTO_RELOAD'] is None\n+    assert app.jinja_env.auto_reload is False\n+    app.run(debug=True)\n+    assert app.jinja_env.auto_reload is True\n+\n def test_template_loader_debugging(test_apps):\n     from blueprintapp import app\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1a67e284d043818743ae9ef5a46b6b64a9db56f7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 307 | Contributors (this commit): 6 | Commits (past 90d): 2 | Contributors (cumulative): 6 | DMM Complexity: 0.0\n\nDIFF:\n@@ -349,11 +349,9 @@ def test_templates_auto_reload():\n \n def test_templates_auto_reload_debug_run(monkeypatch):\n     # debug is None in config, config option is None, app.run(debug=True)\n-    rv = {}\n-\n     # Mocks werkzeug.serving.run_simple method\n     def run_simple_mock(*args, **kwargs):\n-        rv['passthrough_errors'] = kwargs.get('passthrough_errors')\n+        pass\n \n     app = flask.Flask(__name__)\n     monkeypatch.setattr(werkzeug.serving, 'run_simple', run_simple_mock)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b8aca21a392c367522eedb93f248f68005c84908", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): -6/0 | Churn Δ: 3 | Churn Cumulative: 446 | Contributors (this commit): 18 | Commits (past 90d): 5 | Contributors (cumulative): 18 | DMM Complexity: None\n\nDIFF:\n@@ -19,9 +19,6 @@ from jinja2 import Markup\n \n # Use the same json implementation as itsdangerous on which we\n # depend anyways.\n-try:\n-    from itsdangerous import simplejson as _json\n-except ImportError:\n from itsdangerous import json as _json\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0e4607000d1e4a33a06c98578ec06226a43cdc56", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 5/5 | Churn Δ: 3 | Churn Cumulative: 1342 | Contributors (this commit): 14 | Commits (past 90d): 9 | Contributors (cumulative): 14 | DMM Complexity: 0.0\n\nDIFF:\n@@ -423,7 +423,8 @@ def run_command(info, host, port, reload, debugger, eager_loading,\n             print(' * Forcing debug mode %s' % (debug and 'on' or 'off'))\n \n     run_simple(host, port, app, use_reloader=reload,\n-               use_debugger=debugger, threaded=with_threads)\n+               use_debugger=debugger, threaded=with_threads,\n+               passthrough_errors=True)\n \n \n @click.command('shell', short_help='Runs a shell in the app context.')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#16471795117bb2d200888e49af5b621377bc1436", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 28 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 5/5 | Churn Δ: 28 | Churn Cumulative: 1370 | Contributors (this commit): 15 | Commits (past 90d): 12 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -304,6 +304,7 @@ class FlaskGroup(AppGroup):\n         if add_default_commands:\n             self.add_command(run_command)\n             self.add_command(shell_command)\n+            self.add_command(routes_command)\n \n         self._loaded_plugin_commands = False\n \n@@ -461,6 +462,33 @@ def shell_command():\n     code.interact(banner=banner, local=ctx)\n \n \n+@click.command('routes', short_help='Show routes for the app.')\n+@click.option('-r', 'order_by', flag_value='rule', default=True, help='Order by route')\n+@click.option('-e', 'order_by', flag_value='endpoint', help='Order by endpoint')\n+@click.option('-m', 'order_by', flag_value='methods', help='Order by methods')\n+@with_appcontext\n+def routes_command(order_by):\n+    \"\"\"Show all routes with endpoints and methods.\"\"\"\n+    from flask.globals import _app_ctx_stack\n+    app = _app_ctx_stack.top.app\n+\n+    order_key = lambda rule: getattr(rule, order_by)\n+    sorted_rules = sorted(app.url_map.iter_rules(), key=order_key)\n+\n+    max_rule = max(len(rule.rule) for rule in sorted_rules)\n+    max_ep = max(len(rule.endpoint) for rule in sorted_rules)\n+    max_meth = max(len(', '.join(rule.methods)) for rule in sorted_rules)\n+\n+    columnformat = '{:<%s}  {:<%s}  {:<%s}' % (max_rule, max_ep, max_meth)\n+    click.echo(columnformat.format('Route', 'Endpoint', 'Methods'))\n+    under_count = max_rule + max_ep + max_meth + 4\n+    click.echo('-' * under_count)\n+\n+    for rule in sorted_rules:\n+        methods = ', '.join(rule.methods)\n+        click.echo(columnformat.format(rule.rule, rule.endpoint, methods))\n+\n+\n cli = FlaskGroup(help=\"\"\"\\\n This shell command acts as general utility script for Flask applications.\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#b8e826c16bbbada9128b70357c218ef79425499d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 59 | Lines Deleted: 1 | Files Changed: 3 | Hunks: 6 | Methods Changed: 6 | Complexity Δ (Sum/Max): 5/3 | Churn Δ: 60 | Churn Cumulative: 1627 | Contributors (this commit): 19 | Commits (past 90d): 19 | Contributors (cumulative): 24 | DMM Complexity: 1.0\n\nDIFF:\n@@ -476,8 +476,11 @@ def routes_command(order_by):\n     sorted_rules = sorted(app.url_map.iter_rules(), key=order_key)\n \n     max_rule = max(len(rule.rule) for rule in sorted_rules)\n+    max_rule = max(max_rule, len('Route'))\n     max_ep = max(len(rule.endpoint) for rule in sorted_rules)\n+    max_ep = max(max_ep, len('Endpoint'))\n     max_meth = max(len(', '.join(rule.methods)) for rule in sorted_rules)\n+    max_meth = max(max_meth, len('Methods'))\n \n     columnformat = '{:<%s}  {:<%s}  {:<%s}' % (max_rule, max_ep, max_meth)\n     click.echo(columnformat.format('Route', 'Endpoint', 'Methods'))\n\n@@ -0,0 +1,18 @@\n+from __future__ import absolute_import, print_function\n+\n+from flask import Flask\n+\n+\n+noroute_app = Flask('noroute app')\n+simpleroute_app = Flask('simpleroute app')\n+only_POST_route_app = Flask('GET route app')\n+\n+\n+@simpleroute_app.route('/simpleroute')\n+def simple():\n+    pass\n+\n+\n+@only_POST_route_app.route('/only-post', methods=['POST'])\n+def only_post():\n+    pass\n\n@@ -20,7 +20,7 @@ import pytest\n from click.testing import CliRunner\n from flask import Flask, current_app\n \n-from flask.cli import AppGroup, FlaskGroup, NoAppException, ScriptInfo, \\\n+from flask.cli import cli, AppGroup, FlaskGroup, NoAppException, ScriptInfo, \\\n     find_best_app, locate_app, with_appcontext, prepare_exec_for_file, \\\n     find_default_import_path\n \n@@ -170,3 +170,40 @@ def test_flaskgroup():\n     result = runner.invoke(cli, ['test'])\n     assert result.exit_code == 0\n     assert result.output == 'flaskgroup\\n'\n+\n+\n+class TestRoutes:\n+    def test_no_route(self, monkeypatch):\n+        monkeypatch.setitem(os.environ, 'FLASK_APP', 'cliapp.routesapp:noroute_app')\n+        runner = CliRunner()\n+        result = runner.invoke(cli, ['routes'], catch_exceptions=False)\n+        assert result.exit_code == 0\n+        assert result.output == \"\"\"\\\n+Route                    Endpoint  Methods           \n+-----------------------------------------------------\n+/static/<path:filename>  static    HEAD, OPTIONS, GET\n+\"\"\"\n+\n+    def test_simple_route(self, monkeypatch):\n+        monkeypatch.setitem(os.environ, 'FLASK_APP', 'cliapp.routesapp:simpleroute_app')\n+        runner = CliRunner()\n+        result = runner.invoke(cli, ['routes'], catch_exceptions=False)\n+        assert result.exit_code == 0\n+        assert result.output == \"\"\"\\\n+Route                    Endpoint  Methods           \n+-----------------------------------------------------\n+/simpleroute             simple    HEAD, OPTIONS, GET\n+/static/<path:filename>  static    HEAD, OPTIONS, GET\n+\"\"\"\n+\n+    def test_only_POST_route(self, monkeypatch):\n+        monkeypatch.setitem(os.environ, 'FLASK_APP', 'cliapp.routesapp:only_POST_route_app')\n+        runner = CliRunner()\n+        result = runner.invoke(cli, ['routes'], catch_exceptions=False)\n+        assert result.exit_code == 0\n+        assert result.output == \"\"\"\\\n+Route                    Endpoint   Methods           \n+------------------------------------------------------\n+/only-post               only_post  POST, OPTIONS     \n+/static/<path:filename>  static     HEAD, OPTIONS, GET\n+\"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1b764cff93696a75c6248b6f956426cbefa097bc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 12 | Files Changed: 1 | Hunks: 13 | Methods Changed: 13 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 23 | Churn Cumulative: 259 | Contributors (this commit): 8 | Commits (past 90d): 9 | Contributors (cumulative): 8 | DMM Complexity: 0.0\n\nDIFF:\n@@ -25,6 +25,11 @@ from flask.cli import cli, AppGroup, FlaskGroup, NoAppException, ScriptInfo, \\\n     find_default_import_path\n \n \n+@pytest.fixture\n+def runner():\n+    return CliRunner()\n+\n+\n def test_cli_name(test_apps):\n     \"\"\"Make sure the CLI object's name is the app's name and not the app itself\"\"\"\n     from cliapp.app import testapp\n@@ -108,7 +113,7 @@ def test_scriptinfo(test_apps):\n     assert obj.load_app() == app\n \n \n-def test_with_appcontext():\n+def test_with_appcontext(runner):\n     \"\"\"Test of with_appcontext.\"\"\"\n     @click.command()\n     @with_appcontext\n@@ -117,13 +122,12 @@ def test_with_appcontext():\n \n     obj = ScriptInfo(create_app=lambda info: Flask(\"testapp\"))\n \n-    runner = CliRunner()\n     result = runner.invoke(testcmd, obj=obj)\n     assert result.exit_code == 0\n     assert result.output == 'testapp\\n'\n \n \n-def test_appgroup():\n+def test_appgroup(runner):\n     \"\"\"Test of with_appcontext.\"\"\"\n     @click.group(cls=AppGroup)\n     def cli():\n@@ -143,7 +147,6 @@ def test_appgroup():\n \n     obj = ScriptInfo(create_app=lambda info: Flask(\"testappgroup\"))\n \n-    runner = CliRunner()\n     result = runner.invoke(cli, ['test'], obj=obj)\n     assert result.exit_code == 0\n     assert result.output == 'testappgroup\\n'\n@@ -153,7 +156,7 @@ def test_appgroup():\n     assert result.output == 'testappgroup\\n'\n \n \n-def test_flaskgroup():\n+def test_flaskgroup(runner):\n     \"\"\"Test FlaskGroup.\"\"\"\n     def create_app(info):\n         return Flask(\"flaskgroup\")\n@@ -166,16 +169,14 @@ def test_flaskgroup():\n     def test():\n         click.echo(current_app.name)\n \n-    runner = CliRunner()\n     result = runner.invoke(cli, ['test'])\n     assert result.exit_code == 0\n     assert result.output == 'flaskgroup\\n'\n \n \n class TestRoutes:\n-    def test_no_route(self, monkeypatch):\n+    def test_no_route(self, runner, monkeypatch):\n         monkeypatch.setitem(os.environ, 'FLASK_APP', 'cliapp.routesapp:noroute_app')\n-        runner = CliRunner()\n         result = runner.invoke(cli, ['routes'], catch_exceptions=False)\n         assert result.exit_code == 0\n         assert result.output == \"\"\"\\\n@@ -184,9 +185,8 @@ Route                    Endpoint  Methods\n /static/<path:filename>  static    HEAD, OPTIONS, GET\n \"\"\"\n \n-    def test_simple_route(self, monkeypatch):\n+    def test_simple_route(self, runner, monkeypatch):\n         monkeypatch.setitem(os.environ, 'FLASK_APP', 'cliapp.routesapp:simpleroute_app')\n-        runner = CliRunner()\n         result = runner.invoke(cli, ['routes'], catch_exceptions=False)\n         assert result.exit_code == 0\n         assert result.output == \"\"\"\\\n@@ -196,9 +196,8 @@ Route                    Endpoint  Methods\n /static/<path:filename>  static    HEAD, OPTIONS, GET\n \"\"\"\n \n-    def test_only_POST_route(self, monkeypatch):\n+    def test_only_POST_route(self, runner, monkeypatch):\n         monkeypatch.setitem(os.environ, 'FLASK_APP', 'cliapp.routesapp:only_POST_route_app')\n-        runner = CliRunner()\n         result = runner.invoke(cli, ['routes'], catch_exceptions=False)\n         assert result.exit_code == 0\n         assert result.output == \"\"\"\\\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1928f28a6863a8bac27705950ce1327d661f4d2d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 40 | Lines Deleted: 34 | Files Changed: 2 | Hunks: 17 | Methods Changed: 1 | Complexity Δ (Sum/Max): -5/0 | Churn Δ: 74 | Churn Cumulative: 1880 | Contributors (this commit): 21 | Commits (past 90d): 14 | Contributors (cumulative): 25 | DMM Complexity: None\n\nDIFF:\n@@ -11,13 +11,16 @@\n # All configuration values have a default; values that are commented out\n # serve to show the default.\n from __future__ import print_function\n-import sys, os\n+from datetime import datetime\n+import os\n+import sys\n+import pkg_resources\n \n # If extensions (or modules to document with autodoc) are in another directory,\n # add these directories to sys.path here. If the directory is relative to the\n # documentation root, use os.path.abspath to make it absolute, like shown here.\n-sys.path.append(os.path.abspath('_themes'))\n-sys.path.append(os.path.abspath('.'))\n+sys.path.append(os.path.join(os.path.dirname(__file__), '_themes'))\n+sys.path.append(os.path.dirname(__file__))\n \n # -- General configuration -----------------------------------------------------\n \n@@ -46,22 +49,21 @@ master_doc = 'index'\n \n # General information about the project.\n project = u'Flask'\n-copyright = u'2015, Armin Ronacher'\n+copyright = u'2010 - {0}, Armin Ronacher'.format(datetime.utcnow().year)\n \n # The version info for the project you're documenting, acts as replacement for\n # |version| and |release|, also used in various other places throughout the\n # built documents.\n-import pkg_resources\n try:\n     release = pkg_resources.get_distribution('Flask').version\n except pkg_resources.DistributionNotFound:\n     print('Flask must be installed to build the documentation.')\n     print('Install from source using `pip install -e .` in a virtualenv.')\n     sys.exit(1)\n-del pkg_resources\n \n if 'dev' in release:\n-    release = release.split('dev')[0] + 'dev'\n+    release = ''.join(release.partition('dev')[:2])\n+\n version = '.'.join(release.split('.')[:2])\n \n # The language for content autogenerated by Sphinx. Refer to documentation\n@@ -100,14 +102,12 @@ exclude_patterns = ['_build']\n \n # The theme to use for HTML and HTML Help pages.  Major themes that come with\n # Sphinx are currently 'default' and 'sphinxdoc'.\n-html_theme = 'flask'\n+# html_theme = 'default'\n \n # Theme options are theme-specific and customize the look and feel of a theme\n # further.  For a list of options available for each theme, see the\n # documentation.\n-html_theme_options = {\n-    'touch_icon':   'touch-icon.png'\n-}\n+# html_theme_options = {}\n \n # Add any paths that contain custom themes here, relative to this directory.\n html_theme_path = ['_themes']\n@@ -126,7 +126,7 @@ html_theme_path = ['_themes']\n # The name of an image file (within the static path) to use as favicon of the\n # docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n # pixels large.\n-html_favicon = \"flask-favicon.ico\"\n+html_favicon = '_static/flask-favicon.ico'\n \n # Add any paths that contain custom static files (such as style sheets) here,\n # relative to this directory. They are copied after the builtin static files,\n@@ -143,9 +143,18 @@ html_static_path = ['_static']\n \n # Custom sidebar templates, maps document names to template names.\n html_sidebars = {\n-    'index':    ['sidebarintro.html', 'sourcelink.html', 'searchbox.html'],\n-    '**':       ['sidebarlogo.html', 'localtoc.html', 'relations.html',\n-                 'sourcelink.html', 'searchbox.html']\n+    'index': [\n+        'sidebarintro.html',\n+        'sourcelink.html',\n+        'searchbox.html'\n+    ],\n+    '**': [\n+        'sidebarlogo.html',\n+        'localtoc.html',\n+        'relations.html',\n+        'sourcelink.html',\n+        'searchbox.html'\n+    ]\n }\n \n # Additional templates that should be rendered to pages, maps page names to\n@@ -187,8 +196,7 @@ htmlhelp_basename = 'Flaskdoc'\n # Grouping the document tree into LaTeX files. List of tuples\n # (source start file, target name, title, author, documentclass [howto/manual]).\n latex_documents = [\n-  ('latexindex', 'Flask.tex', u'Flask Documentation',\n-   u'Armin Ronacher', 'manual'),\n+  ('latexindex', 'Flask.tex', u'Flask Documentation', u'Armin Ronacher', 'manual'),\n ]\n \n # Documents to append as an appendix to all manuals.\n@@ -245,21 +253,23 @@ latex_additional_files = ['flaskstyle.sty', 'logo.pdf']\n #epub_tocdepth = 3\n \n intersphinx_mapping = {\n-    'https://docs.python.org/dev': None,\n-    'http://werkzeug.pocoo.org/docs/': None,\n-    'http://click.pocoo.org/': None,\n-    'http://jinja.pocoo.org/docs/': None,\n-    'http://www.sqlalchemy.org/docs/': None,\n-    'https://wtforms.readthedocs.io/en/latest/': None,\n-    'https://pythonhosted.org/blinker/': None\n+    'python': ('https://docs.python.org/3/', None),\n+    'werkzeug': ('http://werkzeug.pocoo.org/docs/', None),\n+    'click': ('http://click.pocoo.org/', None),\n+    'jinja': ('http://jinja.pocoo.org/docs/', None),\n+    'sqlalchemy': ('http://docs.sqlalchemy.org/en/latest/', None),\n+    'wtforms': ('https://wtforms.readthedocs.io/en/latest/', None),\n+    'blinker': ('https://pythonhosted.org/blinker/', None)\n }\n \n-pygments_style = 'flask_theme_support.FlaskyStyle'\n-\n-# fall back if theme is not there\n try:\n     __import__('flask_theme_support')\n-except ImportError as e:\n+    pygments_style = 'flask_theme_support.FlaskyStyle'\n+    html_theme = 'flask'\n+    html_theme_options = {\n+        'touch_icon': 'touch-icon.png'\n+    }\n+except ImportError:\n     print('-' * 74)\n     print('Warning: Flask themes unavailable.  Building with default theme')\n     print('If you want the Flask themes, run this command and build again:')\n@@ -267,10 +277,6 @@ except ImportError as e:\n     print('  git submodule update --init')\n     print('-' * 74)\n \n-    pygments_style = 'tango'\n-    html_theme = 'default'\n-    html_theme_options = {}\n-\n \n # unwrap decorators\n def unwrap_decorators():\n\n@@ -286,7 +286,7 @@ class FlaskGroup(AppGroup):\n \n     :param add_default_commands: if this is True then the default run and\n                                  shell commands wil be added.\n-    :param add_version_option: adds the :option:`--version` option.\n+    :param add_version_option: adds the ``--version`` option.\n     :param create_app: an optional callback that is passed the script info\n                        and returns the loaded app.\n     \"\"\"\n@@ -410,7 +410,7 @@ def run_command(info, host, port, reload, debugger, eager_loading,\n \n     app = DispatchingApp(info.load_app, use_eager_loading=eager_loading)\n \n-    # Extra startup messages.  This depends a but on Werkzeug internals to\n+    # Extra startup messages.  This depends a bit on Werkzeug internals to\n     # not double execute when the reloader kicks in.\n     if os.environ.get('WERKZEUG_RUN_MAIN') != 'true':\n         # If we have an import path we can print it out now which can help\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#67e391921c50f02190be8407d4a02efe8d2d28f6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 4250 | Contributors (this commit): 65 | Commits (past 90d): 8 | Contributors (cumulative): 65 | DMM Complexity: None\n\nDIFF:\n@@ -1804,7 +1804,7 @@ class Flask(_PackageBoundObject):\n         if it was the return value from the view and further\n         request handling is stopped.\n \n-        This also triggers the :meth:`url_value_processor` functions before\n+        This also triggers the :meth:`url_value_preprocessor` functions before\n         the actual :meth:`before_request` functions are called.\n         \"\"\"\n         bp = _request_ctx_stack.top.request.blueprint\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#516ce59f95a3b5d2fffbcde8abfdf1951e748361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 47 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 3 | Methods Changed: 8 | Complexity Δ (Sum/Max): 9/6 | Churn Δ: 48 | Churn Cumulative: 342 | Contributors (this commit): 13 | Commits (past 90d): 3 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -102,12 +102,16 @@ class View(object):\n         return view\n \n \n+def get_methods(cls):\n+    return getattr(cls, 'methods', []) or []\n+\n+\n class MethodViewType(type):\n \n     def __new__(cls, name, bases, d):\n         rv = type.__new__(cls, name, bases, d)\n         if 'methods' not in d:\n-            methods = set(rv.methods or [])\n+            methods = set(m for b in bases for m in get_methods(b))\n             for key in d:\n                 if key in http_method_funcs:\n                     methods.add(key.upper())\n\n@@ -160,3 +160,45 @@ def test_endpoint_override():\n \n     # But these tests should still pass. We just log a warning.\n     common_test(app)\n+\n+def test_multiple_inheritance():\n+    app = flask.Flask(__name__)\n+\n+    class GetView(flask.views.MethodView):\n+        def get(self):\n+            return 'GET'\n+\n+    class DeleteView(flask.views.MethodView):\n+        def delete(self):\n+            return 'DELETE'\n+\n+    class GetDeleteView(GetView, DeleteView):\n+        pass\n+\n+    app.add_url_rule('/', view_func=GetDeleteView.as_view('index'))\n+\n+    c = app.test_client()\n+    assert c.get('/').data == b'GET'\n+    assert c.delete('/').data == b'DELETE'\n+    assert sorted(GetDeleteView.methods) == ['DELETE', 'GET']\n+\n+def test_remove_method_from_parent():\n+    app = flask.Flask(__name__)\n+\n+    class GetView(flask.views.MethodView):\n+        def get(self):\n+            return 'GET'\n+\n+    class OtherView(flask.views.MethodView):\n+        def post(self):\n+            return 'POST'\n+\n+    class View(GetView, OtherView):\n+        methods = ['GET']\n+\n+    app.add_url_rule('/', view_func=View.as_view('index'))\n+\n+    c = app.test_client()\n+    assert c.get('/').data == b'GET'\n+    assert c.post('/').status_code == 405\n+    assert sorted(View.methods) == ['GET']\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#f19d3bd67e0d8213013cf06f47d951c8735515c8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 14 | Lines Deleted: 11 | Files Changed: 1 | Hunks: 8 | Methods Changed: 1 | Complexity Δ (Sum/Max): -4/0 | Churn Δ: 25 | Churn Cumulative: 284 | Contributors (this commit): 9 | Commits (past 90d): 10 | Contributors (cumulative): 9 | DMM Complexity: 1.0\n\nDIFF:\n@@ -32,24 +32,27 @@ def test_cli_name(test_apps):\n \n \n def test_find_best_app(test_apps):\n-    \"\"\"Test of find_best_app.\"\"\"\n-    class mod:\n+    \"\"\"Test if `find_best_app` behaves as expected with different combinations of input.\"\"\"\n+    class Module:\n         app = Flask('appname')\n-    assert find_best_app(mod) == mod.app\n+    assert find_best_app(Module) == Module.app\n \n-    class mod:\n+    class Module:\n         application = Flask('appname')\n-    assert find_best_app(mod) == mod.application\n+    assert find_best_app(Module) == Module.application\n \n-    class mod:\n+    class Module:\n         myapp = Flask('appname')\n-    assert find_best_app(mod) == mod.myapp\n+    assert find_best_app(Module) == Module.myapp\n \n-    class mod:\n-        myapp = Flask('appname')\n+    class Module:\n+        pass\n+    pytest.raises(NoAppException, find_best_app, Module)\n+\n+    class Module:\n+        myapp1 = Flask('appname1')\n         myapp2 = Flask('appname2')\n-\n-    pytest.raises(NoAppException, find_best_app, mod)\n+    pytest.raises(NoAppException, find_best_app, Module)\n \n \n def test_prepare_exec_for_file(test_apps):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#17d4cb3828b9520be6c4e64e6b7548a561aa6e7a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 23 | Lines Deleted: 2 | Files Changed: 5 | Hunks: 5 | Methods Changed: 0 | Complexity Δ (Sum/Max): 7/7 | Churn Δ: 25 | Churn Cumulative: 25 | Contributors (this commit): 1 | Commits (past 90d): 5 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n\n\n@@ -0,0 +1,16 @@\n+from setuptools import setup\n+\n+setup(\n+    name='flaskr',\n+    packages=['flaskr'],\n+    include_package_data=True,\n+    install_requires=[\n+        'flask',\n+    ],\n+    setup_requires=[\n+        'pytest-runner',\n+    ],\n+    tests_require=[\n+        'pytest',\n+    ],\n+)\n\n@@ -0,0 +1,6 @@\n+import sys, os\n+\n+basedir = os.path.dirname(os.path.abspath(__file__))\n+sys.path.insert(0, basedir + '/../')\n+\n+from flaskr import flaskr\n\\ No newline at end of file\n\n@@ -10,11 +10,10 @@\n \"\"\"\n \n import pytest\n-\n import os\n-import flaskr\n import tempfile\n \n+from context import flaskr\n \n @pytest.fixture\n def client(request):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1e5746bb2b0ca82d2bd77edf1f153fdcca70503f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 55 | Files Changed: 1 | Hunks: 1 | Methods Changed: 4 | Complexity Δ (Sum/Max): -7/0 | Churn Δ: 55 | Churn Cumulative: 122 | Contributors (this commit): 3 | Commits (past 90d): 1 | Contributors (cumulative): 3 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1,55 +0,0 @@\n-from flask import Flask, render_template, session, request, abort, g\n-\n-import requests\n-\n-\n-app = Flask(__name__)\n-app.config.update(\n-    DEBUG=True,\n-    SECRET_KEY='my development key',\n-    PERSONA_JS='https://login.persona.org/include.js',\n-    PERSONA_VERIFIER='https://verifier.login.persona.org/verify',\n-)\n-app.config.from_envvar('PERSONA_SETTINGS', silent=True)\n-\n-\n-@app.before_request\n-def get_current_user():\n-    g.user = None\n-    email = session.get('email')\n-    if email is not None:\n-        g.user = email\n-\n-\n-@app.route('/')\n-def index():\n-    \"\"\"Just a generic index page to show.\"\"\"\n-    return render_template('index.html')\n-\n-\n-@app.route('/_auth/login', methods=['GET', 'POST'])\n-def login_handler():\n-    \"\"\"This is used by the persona.js file to kick off the\n-    verification securely from the server side.  If all is okay\n-    the email address is remembered on the server.\n-    \"\"\"\n-    resp = requests.post(app.config['PERSONA_VERIFIER'], data={\n-        'assertion': request.form['assertion'],\n-        'audience': request.host_url,\n-    }, verify=True)\n-    if resp.ok:\n-        verification_data = resp.json()\n-        if verification_data['status'] == 'okay':\n-            session['email'] = verification_data['email']\n-            return 'OK'\n-\n-    abort(400)\n-\n-\n-@app.route('/_auth/logout', methods=['POST'])\n-def logout_handler():\n-    \"\"\"This is what persona.js will call to sign the user\n-    out again.\n-    \"\"\"\n-    session.clear()\n-    return 'OK'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#0f1cf50f97a617114078be3dbae3152339ff13ad", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 8 | Churn Cumulative: 1669 | Contributors (this commit): 21 | Commits (past 90d): 23 | Contributors (cumulative): 26 | DMM Complexity: 1.0\n\nDIFF:\n@@ -86,7 +86,13 @@ def locate_app(app_id):\n         module = app_id\n         app_obj = None\n \n+    try:\n         __import__(module)\n+    except ImportError:\n+        raise NoAppException('The file/path provided (%s) does not appear to '\n+                             'exist.  Please verify the path is correct.  If '\n+                             'app is not on PYTHONPATH, ensure the extension '\n+                             'is .py' % module)\n     mod = sys.modules[module]\n     if app_obj is None:\n         app = find_best_app(mod)\n\n@@ -80,6 +80,8 @@ def test_locate_app(test_apps):\n     assert locate_app(\"cliapp.app\").name == \"testapp\"\n     assert locate_app(\"cliapp.app:testapp\").name == \"testapp\"\n     assert locate_app(\"cliapp.multiapp:app1\").name == \"app1\"\n+    pytest.raises(NoAppException, locate_app, \"notanpp.py\")\n+    pytest.raises(NoAppException, locate_app, \"cliapp/app\")\n     pytest.raises(RuntimeError, locate_app, \"cliapp.app:notanapp\")\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#c4139e0e5de5ffa8f103956bdcc1ca7cf9e500fd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 28 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 5/3 | Churn Δ: 29 | Churn Cumulative: 500 | Contributors (this commit): 13 | Commits (past 90d): 7 | Contributors (cumulative): 15 | DMM Complexity: 0.6\n\nDIFF:\n@@ -13,6 +13,7 @@\n from contextlib import contextmanager\n from werkzeug.test import Client, EnvironBuilder\n from flask import _request_ctx_stack\n+from flask.json import dumps as json_dumps\n \n try:\n     from werkzeug.urls import url_parse\n@@ -20,7 +21,7 @@ except ImportError:\n     from urlparse import urlsplit as url_parse\n \n \n-def make_test_environ_builder(app, path='/', base_url=None, *args, **kwargs):\n+def make_test_environ_builder(app, path='/', base_url=None, json=None, *args, **kwargs):\n     \"\"\"Creates a new test builder with some application defaults thrown in.\"\"\"\n     http_host = app.config.get('SERVER_NAME')\n     app_root = app.config.get('APPLICATION_ROOT')\n@@ -33,6 +34,18 @@ def make_test_environ_builder(app, path='/', base_url=None, *args, **kwargs):\n             path = url.path\n             if url.query:\n                 path += '?' + url.query\n+\n+    if json:\n+        if 'data' in kwargs:\n+            raise RuntimeError('Client cannot provide both `json` and `data`')\n+        kwargs['data'] = json_dumps(json)\n+\n+        # Only set Content-Type when not explicitly provided\n+        if 'Content-Type' not in kwargs.get('headers', {}):\n+            new_headers = kwargs.get('headers', {}).copy()\n+            new_headers['Content-Type'] = 'application/json'\n+            kwargs['headers'] = new_headers\n+\n     return EnvironBuilder(path, base_url, *args, **kwargs)\n \n \n\n@@ -203,6 +203,20 @@ def test_full_url_request():\n         assert 'gin' in flask.request.form\n         assert 'vodka' in flask.request.args\n \n+def test_json_request():\n+    app = flask.Flask(__name__)\n+    app.testing = True\n+\n+    @app.route('/api', methods=['POST'])\n+    def api():\n+        return ''\n+\n+    with app.test_client() as c:\n+        json_data = {'drink': {'gin': 1, 'tonic': True}, 'price': 10}\n+        rv = c.post('/api', json=json_data)\n+        assert rv.status_code == 200\n+        assert flask.request.get_json() == json_data\n+\n def test_subdomain():\n     app = flask.Flask(__name__)\n     app.config['SERVER_NAME'] = 'example.com'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
