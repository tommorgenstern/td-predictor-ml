{"custom_id": "keras#033983d524b248e8de2236a36662422475653aee", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 115 | Contributors (this commit): 2 | Commits (past 90d): 1 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -95,7 +95,8 @@ def test_preprocess_input_symbolic():\n     assert_allclose(out1, out2.transpose(1, 2, 0))\n \n \n-def test_decode_predictions():\n+def DISABLED_test_decode_predictions():\n+    # Disabled due to SSL issues on Travis.\n     x = np.zeros((2, 1000))\n     x[0, 372] = 1.0\n     x[1, 549] = 1.0\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#d3512f7cfd0aba4ccf20f1d58729454a18718699", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 16 | Churn Cumulative: 367 | Contributors (this commit): 2 | Commits (past 90d): 1 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -739,8 +739,12 @@ class EarlyStopping(Callback):\n             to qualify as an improvement, i.e. an absolute\n             change of less than min_delta, will count as no\n             improvement.\n-        patience: number of epochs with no improvement\n-            after which training will be stopped.\n+        patience: number of epochs that produced the monitored\n+            quantity with no improvement after which training will\n+            be stopped.\n+            Validation quantities may not be produced for every\n+            epoch, if the validation frequency\n+            (`model.fit(validation_freq=5)`) is greater than one.\n         verbose: verbosity mode.\n         mode: one of {auto, min, max}. In `min` mode,\n             training will stop when the quantity\n@@ -959,8 +963,12 @@ class ReduceLROnPlateau(Callback):\n         monitor: quantity to be monitored.\n         factor: factor by which the learning rate will\n             be reduced. new_lr = lr * factor\n-        patience: number of epochs with no improvement\n-            after which learning rate will be reduced.\n+        patience: number of epochs that produced the monitored\n+            quantity with no improvement after which training will\n+            be stopped.\n+            Validation quantities may not be produced for every\n+            epoch, if the validation frequency\n+            (`model.fit(validation_freq=5)`) is greater than one.\n         verbose: int. 0: quiet, 1: update messages.\n         mode: one of {auto, min, max}. In `min` mode,\n             lr will be reduced when the quantity\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#cf9595ae20be49917f2a19b24467e822ac878269", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 49 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 5 | Methods Changed: 7 | Complexity Δ (Sum/Max): 18/17 | Churn Δ: 50 | Churn Cumulative: 2758 | Contributors (this commit): 29 | Commits (past 90d): 6 | Contributors (cumulative): 39 | DMM Complexity: 0.4594594594594595\n\nDIFF:\n@@ -608,7 +608,6 @@ class OrderedEnqueuer(SequenceEnqueuer):\n                 try:\n                     future = self.queue.get(block=True)\n                     inputs = future.get(timeout=30)\n-                    self.queue.task_done()\n                 except mp.TimeoutError:\n                     idx = future.idx\n                     warnings.warn(\n@@ -616,6 +615,9 @@ class OrderedEnqueuer(SequenceEnqueuer):\n                         ' It could be because a worker has died.'.format(idx),\n                         UserWarning)\n                     inputs = self.sequence[idx]\n+                finally:\n+                    self.queue.task_done()\n+\n                 if inputs is not None:\n                     yield inputs\n         except Exception:\n\n@@ -5,6 +5,7 @@ import time\n import sys\n import tarfile\n import threading\n+import signal\n import shutil\n import zipfile\n from itertools import cycle\n@@ -211,6 +212,25 @@ class FaultSequence(Sequence):\n         pass\n \n \n+class SlowSequence(Sequence):\n+    def __init__(self, shape, value=1.0):\n+        self.shape = shape\n+        self.inner = value\n+        self.wait = True\n+\n+    def __getitem__(self, item):\n+        if self.wait:\n+            self.wait = False\n+            time.sleep(40)\n+        return np.ones(self.shape, dtype=np.uint32) * item * self.inner\n+\n+    def __len__(self):\n+        return 10\n+\n+    def on_epoch_end(self):\n+        pass\n+\n+\n @threadsafe_generator\n def create_generator_from_sequence_threads(ds):\n     for i in cycle(range(len(ds))):\n@@ -335,6 +355,32 @@ def test_ordered_enqueuer_fail_threads():\n         next(gen_output)\n \n \n+def test_ordered_enqueuer_timeout_threads():\n+    enqueuer = OrderedEnqueuer(SlowSequence([3, 10, 10, 3]),\n+                               use_multiprocessing=False)\n+\n+    def handler(signum, frame):\n+        raise TimeoutError('Sequence deadlocked')\n+\n+    old = signal.signal(signal.SIGALRM, handler)\n+    signal.setitimer(signal.ITIMER_REAL, 60)\n+    with pytest.warns(UserWarning) as record:\n+        enqueuer.start(5, 10)\n+        gen_output = enqueuer.get()\n+        for epoch_num in range(2):\n+            acc = []\n+            for i in range(10):\n+                acc.append(next(gen_output)[0, 0, 0, 0])\n+            assert acc == list(range(10)), 'Order was not keep in ' \\\n+                                           'OrderedEnqueuer with threads'\n+        enqueuer.stop()\n+    assert len(record) == 1\n+    assert str(record[0].message) == 'The input 0 could not be retrieved. ' \\\n+                                     'It could be because a worker has died.'\n+    signal.setitimer(signal.ITIMER_REAL, 0)\n+    signal.signal(signal.SIGALRM, old)\n+\n+\n @use_spawn\n def test_on_epoch_end_processes():\n     enqueuer = OrderedEnqueuer(DummySequence([3, 10, 10, 3]),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#9080613dbc6f0840d7544bccc416121f0864a7fd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 22 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 6/5 | Churn Δ: 25 | Churn Cumulative: 18060 | Contributors (this commit): 155 | Commits (past 90d): 21 | Contributors (cumulative): 170 | DMM Complexity: 0.25\n\nDIFF:\n@@ -109,6 +109,12 @@ def eager(func):\n     return eager_fn_wrapper\n \n \n+def _has_compat_v1():\n+    if hasattr(tf, 'compat') and hasattr(tf.compat, 'v1'):\n+        return True\n+    return False\n+\n+\n def get_uid(prefix=''):\n     \"\"\"Provides a unique UID given a string prefix.\n \n@@ -2270,7 +2276,11 @@ def _fused_normalize_batch_in_training(x, gamma, beta, reduction_axes,\n     if beta.dtype != tf.float32:\n         beta = tf.cast(beta, tf.float32)\n \n-    return tf.nn.fused_batch_norm(\n+    if _has_compat_v1:\n+        fused_batch_norm = tf.compat.v1.nn.fused_batch_norm\n+    else:\n+        fused_batch_norm = tf.nn.fused_batch_norm\n+    return fused_batch_norm(\n         x,\n         gamma,\n         beta,\n@@ -2373,7 +2383,12 @@ def batch_normalization(x, mean, var, beta, gamma, axis=-1, epsilon=1e-3):\n             if var.dtype != tf.float32:\n                 var = tf.cast(var, tf.float32)\n \n-            y, _, _ = tf.nn.fused_batch_norm(\n+            if _has_compat_v1:\n+                fused_batch_norm = tf.compat.v1.nn.fused_batch_norm\n+            else:\n+                fused_batch_norm = tf.nn.fused_batch_norm\n+\n+            y, _, _ = fused_batch_norm(\n                 x,\n                 gamma,\n                 beta,\n\n@@ -853,7 +853,11 @@ def get(identifier):\n     if K.backend() == 'tensorflow':\n         # Wrap TF optimizer instances\n         if tf.__version__.startswith('1.'):\n-            if isinstance(identifier, tf.train.Optimizer):\n+            try:\n+                TFOpt = tf.compat.v1.train.Optimizer\n+            except AttributeError:\n+                TFOpt = tf.train.Optimizer\n+            if isinstance(identifier, TFOpt):\n                 return TFOptimizer(identifier)\n         elif isinstance(identifier, tf.keras.optimizers.Optimizer):\n             return TFOptimizer(identifier)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#977d55ccc7c6315abdecd645aea8d389a5b53ffc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 2 | Churn Cumulative: 1646 | Contributors (this commit): 8 | Commits (past 90d): 8 | Contributors (cumulative): 8 | DMM Complexity: 0.0\n\nDIFF:\n@@ -1212,6 +1212,8 @@ class Layer(object):\n         # Keep track of metric instance created in subclassed model/layer.\n         # We do this so that we can maintain the correct order of metrics by adding\n         # the instance to the `metrics` list as soon as it is created.\n+        if not hasattr(_DISABLE_TRACKING, 'value'):\n+            _DISABLE_TRACKING.value = False\n         if not _DISABLE_TRACKING.value:\n             from .. import metrics as metrics_module\n             if isinstance(value, metrics_module.Metric):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#4f94a15eb79c89da6fbd4f04436452aa42142d82", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 2043 | Contributors (this commit): 26 | Commits (past 90d): 3 | Contributors (cumulative): 26 | DMM Complexity: None\n\nDIFF:\n@@ -33,7 +33,7 @@ from ..utils.generic_utils import Progbar\n \n if sys.version_info[0] == 2:\n     def urlretrieve(url, filename, reporthook=None, data=None):\n-        \"\"\"Replacement for `urlretrive` for Python 2.\n+        \"\"\"Replacement for `urlretrieve` for Python 2.\n \n         Under Python 2, `urlretrieve` relies on `FancyURLopener` from legacy\n         `urllib` module, known to have issues with proxy management.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#04cbccc8038c105374eef6eb2ce96d6746999860", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1266 | Contributors (this commit): 12 | Commits (past 90d): 6 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -1019,7 +1019,7 @@ def call_metric_function(metric_fn,\n                          mask=None):\n     \"\"\"Invokes metric function and returns the metric result tensor.\"\"\"\n     if mask is not None:\n-        mask = math_ops.cast(mask, y_pred.dtype)\n+        mask = K.cast(mask, y_pred.dtype)\n         if weights is None:\n             # Use mask as sample weight.\n             weights = mask\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#9ad5a18fdfe7c3cb7ff828bc1d6b42b75660db6c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 5 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 13 | Churn Cumulative: 2453 | Contributors (this commit): 33 | Commits (past 90d): 1 | Contributors (cumulative): 33 | DMM Complexity: 0.0\n\nDIFF:\n@@ -269,7 +269,7 @@ def add_np_implementation(function, docstring):\n \n \n def read_file(path):\n-    with open(path) as f:\n+    with open(path, encoding='utf-8') as f:\n         return f.read()\n \n \n@@ -326,7 +326,7 @@ def get_module_docstring(filepath):\n \n     Also finds the line at which the docstring ends.\n     \"\"\"\n-    co = compile(open(filepath).read(), filepath, 'exec')\n+    co = compile(open(filepath, encoding='utf-8').read(), filepath, 'exec')\n     if co.co_consts and isinstance(co.co_consts[0], six.string_types):\n         docstring = co.co_consts[0]\n     else:\n@@ -347,8 +347,9 @@ def copy_examples(examples_dir, destination_dir):\n         module_path = os.path.join(examples_dir, file)\n         docstring, starting_line = get_module_docstring(module_path)\n         destination_file = os.path.join(destination_dir, file[:-2] + 'md')\n-        with open(destination_file, 'w+') as f_out, \\\n-                open(os.path.join(examples_dir, file), 'r+') as f_in:\n+        with open(destination_file, 'w+', encoding='utf-8') as f_out, \\\n+                open(os.path.join(examples_dir, file),\n+                     'r+', encoding='utf-8') as f_in:\n \n             f_out.write(docstring + '\\n\\n')\n \n@@ -391,7 +392,7 @@ def generate(sources_dir):\n     readme = read_file(os.path.join(str(keras_dir), 'README.md'))\n     index = read_file(os.path.join(template_dir, 'index.md'))\n     index = index.replace('{{autogenerated}}', readme[readme.find('##'):])\n-    with open(os.path.join(sources_dir, 'index.md'), 'w') as f:\n+    with open(os.path.join(sources_dir, 'index.md'), 'w', encoding='utf-8') as f:\n         f.write(index)\n \n     print('Generating docs for Keras %s.' % keras.__version__)\n@@ -457,7 +458,7 @@ def generate(sources_dir):\n         subdir = os.path.dirname(path)\n         if not os.path.exists(subdir):\n             os.makedirs(subdir)\n-        with open(path, 'w') as f:\n+        with open(path, 'w', encoding='utf-8') as f:\n             f.write(mkdown)\n \n     shutil.copyfile(os.path.join(str(keras_dir), 'CONTRIBUTING.md'),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f2bbf98b1b48213c16c8e94807d5435817d797ad", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 22 | Lines Deleted: 11 | Files Changed: 3 | Hunks: 8 | Methods Changed: 4 | Complexity Δ (Sum/Max): 2/1 | Churn Δ: 33 | Churn Cumulative: 12417 | Contributors (this commit): 91 | Commits (past 90d): 10 | Contributors (cumulative): 109 | DMM Complexity: 1.0\n\nDIFF:\n@@ -5,7 +5,7 @@ from __future__ import absolute_import\n from __future__ import division\n from __future__ import print_function\n \n-from ..engine.base_layer import Layer, InputSpec, disable_tracking\n+from ..engine.base_layer import Layer, InputSpec\n from .. import initializers\n from .. import regularizers\n from .. import constraints\n\n@@ -46,7 +46,6 @@ class StackedRNNCells(Layer):\n     ```\n     \"\"\"\n \n-    @disable_tracking\n     def __init__(self, cells, **kwargs):\n         for cell in cells:\n             if not hasattr(cell, 'call'):\n@@ -391,7 +390,6 @@ class RNN(Layer):\n     ```\n     \"\"\"\n \n-    @disable_tracking\n     def __init__(self, cell,\n                  return_sequences=False,\n                  return_state=False,\n@@ -410,7 +408,7 @@ class RNN(Layer):\n                              '(tuple of integers, '\n                              'one integer per RNN state).')\n         super(RNN, self).__init__(**kwargs)\n-        self.cell = cell\n+        self._set_cell(cell)\n         self.return_sequences = return_sequences\n         self.return_state = return_state\n         self.go_backwards = go_backwards\n@@ -424,6 +422,13 @@ class RNN(Layer):\n         self.constants_spec = None\n         self._num_constants = None\n \n+    @disable_tracking\n+    def _set_cell(self, cell):\n+        # This is isolated in its own method in order to use\n+        # the disable_tracking decorator without altering the\n+        # visible signature of __init__.\n+        self.cell = cell\n+\n     @property\n     def states(self):\n         if self._states is None:\n\n@@ -360,18 +360,12 @@ class Bidirectional(Wrapper):\n     ```\n     \"\"\"\n \n-    @disable_tracking\n     def __init__(self, layer, merge_mode='concat', weights=None, **kwargs):\n         if merge_mode not in ['sum', 'mul', 'ave', 'concat', None]:\n             raise ValueError('Invalid merge mode. '\n                              'Merge mode should be one of '\n                              '{\"sum\", \"mul\", \"ave\", \"concat\", None}')\n-        self.forward_layer = copy.copy(layer)\n-        config = layer.get_config()\n-        config['go_backwards'] = not config['go_backwards']\n-        self.backward_layer = layer.__class__.from_config(config)\n-        self.forward_layer.name = 'forward_' + self.forward_layer.name\n-        self.backward_layer.name = 'backward_' + self.backward_layer.name\n+        self._set_sublayers(layer)\n         self.merge_mode = merge_mode\n         if weights:\n             nw = len(weights)\n@@ -386,6 +380,18 @@ class Bidirectional(Wrapper):\n         self.input_spec = layer.input_spec\n         self._num_constants = None\n \n+    @disable_tracking\n+    def _set_sublayers(self, layer):\n+        # This is isolated in its own method in order to use\n+        # the disable_tracking decorator without altering the\n+        # visible signature of __init__.\n+        self.forward_layer = copy.copy(layer)\n+        config = layer.get_config()\n+        config['go_backwards'] = not config['go_backwards']\n+        self.backward_layer = layer.__class__.from_config(config)\n+        self.forward_layer.name = 'forward_' + self.forward_layer.name\n+        self.backward_layer.name = 'backward_' + self.backward_layer.name\n+\n     @property\n     def trainable(self):\n         return self._trainable\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#5be4ed3d9e7548dfa9d51d1d045a3f951d11c2b1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 3 | Churn Cumulative: 1943 | Contributors (this commit): 16 | Commits (past 90d): 4 | Contributors (cumulative): 16 | DMM Complexity: 1.0\n\nDIFF:\n@@ -639,7 +639,10 @@ def model_from_yaml(yaml_string, custom_objects=None):\n     # Returns\n         A Keras model instance (uncompiled).\n     \"\"\"\n+    if hasattr(yaml, 'FullLoader'):\n         config = yaml.load(yaml_string, Loader=yaml.FullLoader)\n+    else:\n+        config = yaml.load(yaml_string)\n     from ..layers import deserialize\n     return deserialize(config, custom_objects=custom_objects)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#985521ee7050df39f9c06f53b54e17927bd1e6ea", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 1473 | Contributors (this commit): 12 | Commits (past 90d): 1 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -43,8 +43,8 @@ class LocallyConnected1D(Layer):\n             specifying the length of the 1D convolution window.\n         strides: An integer or tuple/list of a single integer,\n             specifying the stride length of the convolution.\n-            Specifying any stride value != 1 is incompatible with specifying\n-            any `dilation_rate` value != 1.\n+            Specifying any `strides!=1` is incompatible with specifying\n+            any `dilation_rate!=1`.\n         padding: Currently only supports `\"valid\"` (case-insensitive).\n             `\"same\"` may be supported in the future.\n         data_format: String, one of `channels_first`, `channels_last`.\n@@ -250,9 +250,9 @@ class LocallyConnected2D(Layer):\n \n     # Input shape\n         4D tensor with shape:\n-        `(samples, channels, rows, cols)` if data_format='channels_first'\n+        `(samples, channels, rows, cols)` if `data_format='channels_first'`\n         or 4D tensor with shape:\n-        `(samples, rows, cols, channels)` if data_format='channels_last'.\n+        `(samples, rows, cols, channels)` if `data_format='channels_last'`.\n \n     # Output shape\n         4D tensor with shape:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f0464c94c3844ba38cfa501fa3928a2bff828011", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 1 | Churn Cumulative: 297 | Contributors (this commit): 15 | Commits (past 90d): 1 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -245,6 +245,7 @@ def plot_model(model,\n         extension = extension[1:]\n     dot.write(to_file, format=extension)\n     # Return the image as a Jupyter Image object, to be displayed in-line.\n+    if extension != 'pdf':\n         try:\n             from IPython import display\n             return display.Image(filename=to_file)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#16bd239e34d853f3bf7ae99f14e0324f924ca371", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 3/3 | Churn Δ: 4 | Churn Cumulative: 371 | Contributors (this commit): 3 | Commits (past 90d): 2 | Contributors (cumulative): 3 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1155,6 +1155,10 @@ class CSVLogger(Callback):\n         self.csv_file.close()\n         self.writer = None\n \n+    def __del__(self):\n+        if hasattr(self, 'csv_file') and not self.csv_file.closed:\n+            self.csv_file.close()\n+\n \n class LambdaCallback(Callback):\n     r\"\"\"Callback for creating simple, custom callbacks on-the-fly.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#481e99d6b0baa829c0ac74e1045204299622691c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 4 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 9826 | Contributors (this commit): 64 | Commits (past 90d): 5 | Contributors (cumulative): 64 | DMM Complexity: None\n\nDIFF:\n@@ -1206,7 +1206,7 @@ class GRUCell(Layer):\n         recurrent_activation: Activation function to use\n             for the recurrent step\n             (see [activations](../activations.md)).\n-            Default: hard sigmoid (`hard_sigmoid`).\n+            Default: sigmoid (`sigmoid`).\n             If you pass `None`, no activation is applied\n             (ie. \"linear\" activation: `a(x) = x`).\n         use_bias: Boolean, whether the layer uses a bias vector.\n@@ -1543,7 +1543,7 @@ class GRU(RNN):\n         recurrent_activation: Activation function to use\n             for the recurrent step\n             (see [activations](../activations.md)).\n-            Default: hard sigmoid (`hard_sigmoid`).\n+            Default: sigmoid (`sigmoid`).\n             If you pass `None`, no activation is applied\n             (ie. \"linear\" activation: `a(x) = x`).\n         use_bias: Boolean, whether the layer uses a bias vector.\n@@ -1808,7 +1808,7 @@ class LSTMCell(Layer):\n         recurrent_activation: Activation function to use\n             for the recurrent step\n             (see [activations](../activations.md)).\n-            Default: hard sigmoid (`hard_sigmoid`).\n+            Default: sigmoid (`sigmoid`).\n             If you pass `None`, no activation is applied\n             (ie. \"linear\" activation: `a(x) = x`).x\n         use_bias: Boolean, whether the layer uses a bias vector.\n@@ -2096,7 +2096,7 @@ class LSTM(RNN):\n         recurrent_activation: Activation function to use\n             for the recurrent step\n             (see [activations](../activations.md)).\n-            Default: hard sigmoid (`hard_sigmoid`).\n+            Default: sigmoid (`sigmoid`).\n             If you pass `None`, no activation is applied\n             (ie. \"linear\" activation: `a(x) = x`).\n         use_bias: Boolean, whether the layer uses a bias vector.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#8904340b4f0ca94e4aa8a3dbc5e955591962d0a1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 9874 | Contributors (this commit): 97 | Commits (past 90d): 9 | Contributors (cumulative): 97 | DMM Complexity: None\n\nDIFF:\n@@ -1276,7 +1276,7 @@ class Model(Network):\n             batch_size: Integer or `None`.\n                 Number of samples per gradient update.\n                 If unspecified, `batch_size` will default to 32.\n-                Do not specify the `batch_size` is your data is in the\n+                Do not specify the `batch_size` if your data is in the\n                 form of symbolic tensors, generators, or\n                 `keras.utils.Sequence` instances (since they generate batches).\n             verbose: 0 or 1. Verbosity mode.\n@@ -1385,7 +1385,7 @@ class Model(Network):\n             batch_size: Integer or `None`.\n                 Number of samples per gradient update.\n                 If unspecified, `batch_size` will default to 32.\n-                Do not specify the `batch_size` is your data is in the\n+                Do not specify the `batch_size` if your data is in the\n                 form of symbolic tensors, generators, or\n                 `keras.utils.Sequence` instances (since they generate batches).\n             verbose: Verbosity mode, 0 or 1.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f295e8ee39d4ba841ac281a9337d69c7bc5e0eb6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 540 | Contributors (this commit): 22 | Commits (past 90d): 6 | Contributors (cumulative): 23 | DMM Complexity: None\n\nDIFF:\n@@ -23,4 +23,4 @@ from .layers import Input\n from .models import Model\r\n from .models import Sequential\r\n \r\n-__version__ = '2.3.0'\r\n+__version__ = '2.3.1'\r\n\n@@ -24,7 +24,7 @@ and is distributed under the MIT license.\n '''\n \n setup(name='Keras',\n-      version='2.3.0',\n+      version='2.3.1',\n       description='Deep Learning for humans',\n       long_description=long_description,\n       author='Francois Chollet',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#c8f66d15a717241b22ad7a65f3dec80894449fce", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 1 | Churn Cumulative: 2386 | Contributors (this commit): 18 | Commits (past 90d): 1 | Contributors (cumulative): 18 | DMM Complexity: None\n\nDIFF:\n@@ -824,6 +824,7 @@ class ConvLSTM2D(ConvRNN2D):\n             incompatible with specifying any `strides` value != 1.\n         activation: Activation function to use\n             (see [activations](../activations.md)).\n+            tanh is applied by default.\n         recurrent_activation: Activation function to use\n             for the recurrent step\n             (see [activations](../activations.md)).\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#b75b2f7dcf5d3c83e33b8b2bc86f1d2543263a59", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 25 | Lines Deleted: 25 | Files Changed: 5 | Hunks: 14 | Methods Changed: 8 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 50 | Churn Cumulative: 4008 | Contributors (this commit): 76 | Commits (past 90d): 10 | Contributors (cumulative): 98 | DMM Complexity: None\n\nDIFF:\n@@ -32,19 +32,19 @@ def normalize_tuple(value, n, name):\n         try:\n             value_tuple = tuple(value)\n         except TypeError:\n-            raise ValueError('The `' + name + '` argument must be a tuple of ' +\n-                             str(n) + ' integers. Received: ' + str(value))\n+            raise ValueError('The `{}` argument must be a tuple of {} '\n+                             'integers. Received: {}'.format(name, n, value))\n         if len(value_tuple) != n:\n-            raise ValueError('The `' + name + '` argument must be a tuple of ' +\n-                             str(n) + ' integers. Received: ' + str(value))\n+            raise ValueError('The `{}` argument must be a tuple of {} '\n+                             'integers. Received: {}'.format(name, n, value))\n         for single_value in value_tuple:\n             try:\n                 int(single_value)\n             except ValueError:\n-                raise ValueError('The `' + name + '` argument must be a tuple of ' +\n-                                 str(n) + ' integers. Received: ' + str(value) + ' '\n-                                 'including element ' + str(single_value) + ' of '\n-                                 'type ' + str(type(single_value)))\n+                raise ValueError('The `{}` argument must be a tuple of {} '\n+                                 'integers. Received: {} including element {} '\n+                                 'of type {}'.format(name, n, value, single_value,\n+                                                     type(single_value)))\n     return value_tuple\n \n \n@@ -55,7 +55,7 @@ def normalize_padding(value):\n         allowed.add('full')\n     if padding not in allowed:\n         raise ValueError('The `padding` argument must be one of \"valid\", \"same\" '\n-                         '(or \"causal\" for Conv1D). Received: ' + str(padding))\n+                         '(or \"causal\" for Conv1D). Received: {}'.format(padding))\n     return padding\n \n \n\n@@ -195,10 +195,10 @@ def get_file(fname,\n         # File found; verify integrity if a hash was provided.\n         if file_hash is not None:\n             if not validate_file(fpath, file_hash, algorithm=hash_algorithm):\n-                print('A local file was found, but it seems to be '\n-                      'incomplete or outdated because the ' + hash_algorithm +\n-                      ' file hash does not match the original value of ' +\n-                      file_hash + ' so we will re-download the data.')\n+                print('A local file was found, but it seems to be incomplete'\n+                      ' or outdated because the {} file hash does not match '\n+                      'the original value of {} so we will re-download the '\n+                      'data.'.format(hash_algorithm, file_hash))\n                 download = True\n     else:\n         download = True\n@@ -725,9 +725,9 @@ class GeneratorEnqueuer(SequenceEnqueuer):\n             while self.queue.qsize() > 0:\n                 last_ones.append(self.queue.get(block=True))\n             # Wait for them to complete\n-            list(map(lambda f: f.wait(), last_ones))\n+            [f.wait() for f in last_ones]\n             # Keep the good ones\n-            last_ones = [future.get() for future in last_ones if future.successful()]\n+            last_ones = (future.get() for future in last_ones if future.successful())\n             for inputs in last_ones:\n                 if inputs is not None:\n                     yield inputs\n\n@@ -126,7 +126,7 @@ def deserialize_keras_object(identifier, module_objects=None,\n         # In this case we are dealing with a Keras config dictionary.\n         config = identifier\n         if 'class_name' not in config or 'config' not in config:\n-            raise ValueError('Improper config format: ' + str(config))\n+            raise ValueError('Improper config format: {}'.format(config))\n         class_name = config['class_name']\n         if custom_objects and class_name in custom_objects:\n             cls = custom_objects[class_name]\n@@ -136,8 +136,8 @@ def deserialize_keras_object(identifier, module_objects=None,\n             module_objects = module_objects or {}\n             cls = module_objects.get(class_name)\n             if cls is None:\n-                raise ValueError('Unknown ' + printable_module_name +\n-                                 ': ' + class_name)\n+                raise ValueError('Unknown {}: {}'.format(printable_module_name,\n+                                                         class_name))\n         if hasattr(cls, 'from_config'):\n             custom_objects = custom_objects or {}\n             if has_arg(cls.from_config, 'custom_objects'):\n@@ -163,12 +163,12 @@ def deserialize_keras_object(identifier, module_objects=None,\n         else:\n             fn = module_objects.get(function_name)\n             if fn is None:\n-                raise ValueError('Unknown ' + printable_module_name +\n-                                 ':' + function_name)\n+                raise ValueError('Unknown {}: {}'.format(printable_module_name,\n+                                                         function_name))\n         return fn\n     else:\n-        raise ValueError('Could not interpret serialized ' +\n-                         printable_module_name + ': ' + identifier)\n+        raise ValueError('Could not interpret serialized '\n+                         '{}: {}'.format(printable_module_name, identifier))\n \n \n def func_dump(func):\n@@ -514,7 +514,7 @@ def unpack_singleton(x):\n \n def object_list_uid(object_list):\n     object_list = to_list(object_list)\n-    return ', '.join([str(abs(id(x))) for x in object_list])\n+    return ', '.join((str(abs(id(x))) for x in object_list))\n \n \n def is_all_none(iterable_or_element):\n\n@@ -153,7 +153,7 @@ def multi_gpu_model(model, gpus=None, cpu_merge=True, cpu_relocation=False):\n     if not gpus:\n         # Using all visible GPUs when not specifying `gpus`\n         # e.g. CUDA_VISIBLE_DEVICES=0,2 python keras_mgpu.py\n-        gpus = len([x for x in available_devices if '/gpu:' in x])\n+        gpus = len((x for x in available_devices if '/gpu:' in x))\n \n     if isinstance(gpus, (list, tuple)):\n         if len(gpus) <= 1:\n\n@@ -149,7 +149,7 @@ def model_to_dot(model,\n                 inputlabels = str(layer.input_shape)\n             elif hasattr(layer, 'input_shapes'):\n                 inputlabels = ', '.join(\n-                    [str(ishape) for ishape in layer.input_shapes])\n+                    (str(ishape) for ishape in layer.input_shapes))\n             else:\n                 inputlabels = 'multiple'\n             label = '%s\\n|{input:|output:}|{{%s}|{%s}}' % (label,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#2b1f8ed204609954ab04f7a8c123d400f929e9fb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 9882 | Contributors (this commit): 98 | Commits (past 90d): 10 | Contributors (cumulative): 98 | DMM Complexity: None\n\nDIFF:\n@@ -1274,7 +1274,7 @@ class Model(Network):\n                 `y` should not be specified (since targets will be obtained\n                 from `x`).\n             batch_size: Integer or `None`.\n-                Number of samples per gradient update.\n+                Number of samples per evaluation step.\n                 If unspecified, `batch_size` will default to 32.\n                 Do not specify the `batch_size` if your data is in the\n                 form of symbolic tensors, generators, or\n@@ -1383,7 +1383,7 @@ class Model(Network):\n                 - None (default) if feeding from framework-native\n                   tensors (e.g. TensorFlow data tensors).\n             batch_size: Integer or `None`.\n-                Number of samples per gradient update.\n+                Number of samples to be predicted at once.\n                 If unspecified, `batch_size` will default to 32.\n                 Do not specify the `batch_size` if your data is in the\n                 form of symbolic tensors, generators, or\n@@ -1755,7 +1755,7 @@ class Model(Network):\n                 Optional for `Sequence`: if unspecified, will use\n                 the `len(generator)` as a number of steps.\n             callbacks: List of `keras.callbacks.Callback` instances.\n-                List of callbacks to apply during training.\n+                List of callbacks to apply during evaluation.\n                 See [callbacks](/callbacks).\n             max_queue_size: maximum size for the generator queue\n             workers: Integer. Maximum number of processes to spin up\n@@ -1813,7 +1813,7 @@ class Model(Network):\n                 Optional for `Sequence`: if unspecified, will use\n                 the `len(generator)` as a number of steps.\n             callbacks: List of `keras.callbacks.Callback` instances.\n-                List of callbacks to apply during training.\n+                List of callbacks to apply during prediction.\n                 See [callbacks](/callbacks).\n             max_queue_size: Maximum size for the generator queue.\n             workers: Integer. Maximum number of processes to spin up\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f242c6421fe93468064441551cdab66e70f631d8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 2 | Churn Cumulative: 2455 | Contributors (this commit): 34 | Commits (past 90d): 2 | Contributors (cumulative): 34 | DMM Complexity: 0.0\n\nDIFF:\n@@ -84,6 +84,8 @@ def post_process_signature(signature):\n             signature = 'keras.utils.' + '.'.join(parts[3:])\n         if parts[1] == 'backend':\n             signature = 'keras.backend.' + '.'.join(parts[3:])\n+        if parts[1] == 'callbacks':\n+            signature = 'keras.callbacks.' + '.'.join(parts[3:])\n     return signature\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#e25f68dc092883191519a55ab82649ea5f57c296", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 622 | Contributors (this commit): 20 | Commits (past 90d): 1 | Contributors (cumulative): 20 | DMM Complexity: None\n\nDIFF:\n@@ -24,7 +24,7 @@ else:\n \n \n class HDF5Matrix(object):\n-    \"\"\"Representation of HDF5 dataset to be used instead of a Numpy array.\n+    \"\"\"Representation of HDF5 dataset to be used instead of a NumPy array.\n \n     # Example\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#afff7b4326f380a54c73400d1e2ae03890162bdf", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 51 | Lines Deleted: 49 | Files Changed: 1 | Hunks: 41 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 100 | Churn Cumulative: 1906 | Contributors (this commit): 17 | Commits (past 90d): 1 | Contributors (cumulative): 17 | DMM Complexity: None\n\nDIFF:\n@@ -76,10 +76,10 @@ class MaxPooling1D(_Pooling1D):\n             If None, it will default to `pool_size`.\n         padding: One of `\"valid\"` or `\"same\"` (case-insensitive).\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, steps, features)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, steps, features)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, features, steps)`.\n \n@@ -124,10 +124,10 @@ class AveragePooling1D(_Pooling1D):\n             If None, it will default to `pool_size`.\n         padding: One of `\"valid\"` or `\"same\"` (case-insensitive).\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, steps, features)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, steps, features)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, features, steps)`.\n \n@@ -228,15 +228,15 @@ class MaxPooling2D(_Pooling2D):\n             If None, it will default to `pool_size`.\n         padding: One of `\"valid\"` or `\"same\"` (case-insensitive).\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, height, width, channels)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, height, width, channels)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, channels, height, width)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n@@ -273,7 +273,7 @@ class AveragePooling2D(_Pooling2D):\n     \"\"\"Average pooling operation for spatial data.\n \n     # Arguments\n-        pool_size: integer or tuple of 2 integers,\n+        pool_size: Integer or tuple of 2 integers,\n             factors by which to downscale (vertical, horizontal).\n             (2, 2) will halve the input in both spatial dimension.\n             If only one integer is specified, the same window length\n@@ -283,15 +283,15 @@ class AveragePooling2D(_Pooling2D):\n             If None, it will default to `pool_size`.\n         padding: One of `\"valid\"` or `\"same\"` (case-insensitive).\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, height, width, channels)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, height, width, channels)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, channels, height, width)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n@@ -387,21 +387,22 @@ class MaxPooling3D(_Pooling3D):\n     \"\"\"Max pooling operation for 3D data (spatial or spatio-temporal).\n \n     # Arguments\n-        pool_size: tuple of 3 integers,\n+        pool_size: Integer or tuple of 3 integers,\n             factors by which to downscale (dim1, dim2, dim3).\n             (2, 2, 2) will halve the size of the 3D input in each dimension.\n-        strides: tuple of 3 integers, or None. Strides values.\n+        strides: Integer, tuple of 3 integers, or None. Strides values.\n+                If None, it will default to `pool_size`.\n         padding: One of `\"valid\"` or `\"same\"` (case-insensitive).\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n+            `\"channels_last\"` corresponds to inputs with shape\n             `(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`\n-            while `channels_first` corresponds to inputs with shape\n+            while `\"channels_first\"` corresponds to inputs with shape\n             `(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n@@ -437,21 +438,22 @@ class AveragePooling3D(_Pooling3D):\n     \"\"\"Average pooling operation for 3D data (spatial or spatio-temporal).\n \n     # Arguments\n-        pool_size: tuple of 3 integers,\n+        pool_size: Integer or tuple of 3 integers,\n             factors by which to downscale (dim1, dim2, dim3).\n             (2, 2, 2) will halve the size of the 3D input in each dimension.\n-        strides: tuple of 3 integers, or None. Strides values.\n+        strides: Integer, tuple of 3 integers, or None. Strides values.\n+            If None, it will default to `pool_size`.\n         padding: One of `\"valid\"` or `\"same\"` (case-insensitive).\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n+            `\"channels_last\"` corresponds to inputs with shape\n             `(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`\n-            while `channels_first` corresponds to inputs with shape\n+            while `\"channels_first\"` corresponds to inputs with shape\n             `(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n@@ -513,10 +515,10 @@ class GlobalAveragePooling1D(_GlobalPooling1D):\n \n     # Arguments\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, steps, features)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, steps, features)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, features, steps)`.\n \n@@ -559,10 +561,10 @@ class GlobalMaxPooling1D(_GlobalPooling1D):\n \n     # Arguments\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, steps, features)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, steps, features)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, features, steps)`.\n \n@@ -614,15 +616,15 @@ class GlobalAveragePooling2D(_GlobalPooling2D):\n \n     # Arguments\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, height, width, channels)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, height, width, channels)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, channels, height, width)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n@@ -649,15 +651,15 @@ class GlobalMaxPooling2D(_GlobalPooling2D):\n \n     # Arguments\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n-            `(batch, height, width, channels)` while `channels_first`\n+            `\"channels_last\"` corresponds to inputs with shape\n+            `(batch, height, width, channels)` while `\"channels_first\"`\n             corresponds to inputs with shape\n             `(batch, channels, height, width)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n@@ -709,15 +711,15 @@ class GlobalAveragePooling3D(_GlobalPooling3D):\n \n     # Arguments\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n+            `\"channels_last\"` corresponds to inputs with shape\n             `(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`\n-            while `channels_first` corresponds to inputs with shape\n+            while `\"channels_first\"` corresponds to inputs with shape\n             `(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n@@ -744,15 +746,15 @@ class GlobalMaxPooling3D(_GlobalPooling3D):\n \n     # Arguments\n         data_format: A string,\n-            one of `channels_last` (default) or `channels_first`.\n+            one of `\"channels_last\"` (default) or `\"channels_first\"`.\n             The ordering of the dimensions in the inputs.\n-            `channels_last` corresponds to inputs with shape\n+            `\"channels_last\"` corresponds to inputs with shape\n             `(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`\n-            while `channels_first` corresponds to inputs with shape\n+            while `\"channels_first\"` corresponds to inputs with shape\n             `(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`.\n             It defaults to the `image_data_format` value found in your\n             Keras config file at `~/.keras/keras.json`.\n-            If you never set it, then it will be \"channels_last\".\n+            If you never set it, then it will be `\"channels_last\"`.\n \n     # Input shape\n         - If `data_format='channels_last'`:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
