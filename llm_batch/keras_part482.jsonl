{"custom_id": "keras#f7c6035fd753aed38c7c6e3d88614d0a816b8ec4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 18 | Churn Cumulative: 873 | Contributors (this commit): 7 | Commits (past 90d): 23 | Contributors (cumulative): 7 | DMM Complexity: 0.5\n\nDIFF:\n@@ -336,10 +336,13 @@ class _BaseOptimizer(tf.__internal__.tracking.AutoTrackable):\n                 learning_rate, learning_rate_schedule.LearningRateSchedule\n             ):\n                 # Create a variable to hold the current learning rate.\n+                current_learning_rate = tf.convert_to_tensor(\n+                    learning_rate(self.iterations)\n+                )\n                 self._current_learning_rate = tf.Variable(\n-                    learning_rate(self.iterations),\n-                    name=\"learning_rate\",\n-                    dtype=tf.float32,\n+                    current_learning_rate,\n+                    name=\"current_learning_rate\",\n+                    dtype=current_learning_rate.dtype,\n                     trainable=False,\n                 )\n                 return learning_rate\n@@ -507,10 +510,13 @@ class _BaseOptimizer(tf.__internal__.tracking.AutoTrackable):\n                     self._learning_rate(self.iterations)\n                 )\n             else:\n+                current_learning_rate = tf.convert_to_tensor(\n+                    self._learning_rate(self.iterations)\n+                )\n                 self._current_learning_rate = tf.Variable(\n-                    self._learning_rate(self.iterations),\n-                    name=\"learning_rate\",\n-                    dtype=tf.float32,\n+                    current_learning_rate,\n+                    name=\"current_learning_rate\",\n+                    dtype=current_learning_rate.dtype,\n                     trainable=False,\n                 )\n         grads_and_vars = optimizer_utils.filter_empty_gradients(grads_and_vars)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f49e66c72ea5fe337c5292ee42f61cd75bc74727", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 30 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/1 | Churn Δ: 30 | Churn Cumulative: 1423 | Contributors (this commit): 8 | Commits (past 90d): 45 | Contributors (cumulative): 13 | DMM Complexity: 1.0\n\nDIFF:\n@@ -118,6 +118,16 @@ class _BaseOptimizer(tf.__internal__.tracking.AutoTrackable):\n                     \" for `optimizer_experimental.Optimizer`.\"\n                 )\n \n+    def _create_or_restore_slot_variable(self, **kwargs):\n+        raise ValueError(\n+            \"You are trying to restore a checkpoint from a legacy Keras \"\n+            \"optimizer into a v2.11+ Optimizer, which can cause \"\n+            \"errors. Please update the optimizer referenced in your code \"\n+            \"to be an instance of \"\n+            \"`tf.keras.optimizers.legacy.Optimizer`, e.g.: \"\n+            f\"`tf.keras.optimizer.legacy.{self.__class__.__name__}`.\"\n+        )\n+\n     def _var_key(self, variable):\n         \"\"\"Get a unique identifier of the given variable.\"\"\"\n         # Get the distributed variable if it exists.\n\n@@ -382,6 +382,26 @@ class OptimizerFuntionalityTest(tf.test.TestCase, parameterized.TestCase):\n             model.optimizer.iterations.numpy(),\n         )\n \n+    def testRestoreOldOptimizerCheckpoint(self):\n+        inputs = keras.layers.Input(shape=(1,))\n+        outputs = keras.layers.Dense(1)(inputs)\n+        model = keras.Model(inputs=inputs, outputs=outputs)\n+        optimizer = adam_old.Adam()\n+        x = tf.expand_dims(tf.convert_to_tensor([1, 1, 1, 0, 0, 0]), axis=1)\n+        y = tf.expand_dims(tf.convert_to_tensor([1, 1, 1, 0, 0, 0]), axis=1)\n+        model.compile(loss=\"mse\", optimizer=optimizer)\n+        path = os.path.join(self.get_temp_dir(), \"ckpt\")\n+        checkpoint_callback = keras.callbacks.ModelCheckpoint(path)\n+        model.fit(x, y, callbacks=[checkpoint_callback])\n+\n+        new_model = keras.Model(inputs=inputs, outputs=outputs)\n+        new_optimizer = adam_new.Adam()\n+        new_model.compile(loss=\"mse\", optimizer=new_optimizer)\n+        with self.assertRaisesRegex(\n+            ValueError, \"You are trying to restore a checkpoint.*Adam.*\"\n+        ):\n+            new_model.load_weights(path)\n+\n     @parameterized.product(optimizer_fn=OPTIMIZER_FN)\n     def testSaveAndLoadOptimizerWithModel(self, optimizer_fn):\n         inputs = keras.layers.Input(shape=(1,))\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#5d98cd2e88c6d33cc2e5c783981eb7073c46d3fe", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 9 | Files Changed: 1 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 12 | Churn Cumulative: 1420 | Contributors (this commit): 11 | Commits (past 90d): 9 | Contributors (cumulative): 11 | DMM Complexity: 0.0\n\nDIFF:\n@@ -153,9 +153,7 @@ class LayerUtilsTest(tf.test.TestCase):\n                 \"_________________________________________________________________\\n\"  # noqa: E501\n             )\n \n-            fin_str = \"\"\n-            for line in lines:\n-                fin_str += line\n+            fin_str = \"\".join(lines)\n \n             self.assertIn(fin_str, check_str)\n             self.assertEqual(len(lines), 25)\n@@ -286,9 +284,7 @@ class LayerUtilsTest(tf.test.TestCase):\n                 \"____________________________________________________________________________\\n\"  # noqa: E501\n             )\n \n-            fin_str = \"\"\n-            for line in lines:\n-                fin_str += line\n+            fin_str = \"\".join(lines)\n \n             self.assertIn(fin_str, check_str)\n             self.assertEqual(len(lines), 15)\n@@ -362,9 +358,7 @@ class LayerUtilsTest(tf.test.TestCase):\n                 \"____________________________________________________________________________\\n\"  # noqa: E501\n             )\n \n-            fin_str = \"\"\n-            for line in lines:\n-                fin_str += line\n+            fin_str = \"\".join(lines)\n \n             self.assertIn(fin_str, check_str)\n             self.assertEqual(len(lines), 25)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#2f90b1f2a987aed5c1df9970a14e3913b974f348", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 1423 | Contributors (this commit): 11 | Commits (past 90d): 8 | Contributors (cumulative): 11 | DMM Complexity: 0.0\n\nDIFF:\n@@ -327,9 +327,8 @@ class LayerUtilsTest(tf.test.TestCase):\n             )\n             self.assertTrue(tf.io.gfile.exists(fpath))\n             writer.close()\n-            reader = open(fpath, \"r\")\n+            with open(fpath, \"r\") as reader:\n                 lines = reader.readlines()\n-            reader.close()\n             check_str = (\n                 'Model: \"model_2\"\\n'\n                 \"____________________________________________________________________________\\n\"  # noqa: E501\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#aafd0db4e1dcb06cb9df5999e45996139b1626e0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 1426 | Contributors (this commit): 11 | Commits (past 90d): 9 | Contributors (cumulative): 11 | DMM Complexity: 0.0\n\nDIFF:\n@@ -75,9 +75,8 @@ class LayerUtilsTest(tf.test.TestCase):\n             layer_utils.print_summary(model, print_fn=print_to_file)\n             self.assertTrue(tf.io.gfile.exists(fpath))\n             writer.close()\n-            reader = open(fpath, \"r\")\n+            with open(fpath, \"r\") as reader:\n                 lines = reader.readlines()\n-            reader.close()\n             self.assertEqual(len(lines), 15)\n         except ImportError:\n             pass\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#f14b6afa3da0e3a620e3393ade7609a811644e87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 1429 | Contributors (this commit): 11 | Commits (past 90d): 10 | Contributors (cumulative): 11 | DMM Complexity: 0.0\n\nDIFF:\n@@ -223,9 +223,8 @@ class LayerUtilsTest(tf.test.TestCase):\n             )\n             self.assertTrue(tf.io.gfile.exists(fpath))\n             writer.close()\n-            reader = open(fpath, \"r\")\n+            with open(fpath, \"r\") as reader:\n                 lines = reader.readlines()\n-            reader.close()\n             # The output content are slightly different for the input shapes\n             # between v1 and v2.\n             if tf.__internal__.tf2.enabled():\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#72ba6a0900d9dd0eb633bd48e2f0456ba01a8557", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 6 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 9 | Churn Cumulative: 1438 | Contributors (this commit): 11 | Commits (past 90d): 11 | Contributors (cumulative): 11 | DMM Complexity: 0.0\n\nDIFF:\n@@ -260,9 +260,8 @@ class LayerUtilsTest(tf.test.TestCase):\n             )\n             self.assertTrue(tf.io.gfile.exists(fpath))\n             writer.close()\n-            reader = open(fpath, \"r\")\n+            with open(fpath, \"r\") as reader:\n                 lines = reader.readlines()\n-            reader.close()\n             check_str = (\n                 'Model: \"trainable\"\\n'\n                 \"____________________________________________________________________________\\n\"  # noqa: E501\n@@ -390,9 +389,8 @@ class LayerUtilsTest(tf.test.TestCase):\n             )\n             self.assertTrue(tf.io.gfile.exists(fpath))\n             writer.close()\n-            reader = open(fpath, \"r\")\n+            with open(fpath, \"r\") as reader:\n                 lines = reader.readlines()\n-            reader.close()\n             # The expected lenght with no layer filter is 15\n             # we filtered out 2 lines by excluding the layer 'dense'\n             self.assertEqual(len(lines), 15 - 2)\n@@ -438,9 +436,8 @@ class LayerUtilsTest(tf.test.TestCase):\n             )\n             self.assertTrue(tf.io.gfile.exists(fpath))\n             writer.close()\n-            reader = open(fpath, \"r\")\n+            with open(fpath, \"r\") as reader:\n                 lines = reader.readlines()\n-            reader.close()\n             check_str = (\n                 'Model: \"model\"\\n'\n                 \"_________________________________________________________________\\n\"  # noqa: E501\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#9212be9cc89e9717a6d666ddaf46962ead107932", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 235 | Contributors (this commit): 7 | Commits (past 90d): 5 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -60,12 +60,11 @@ class TextDatasetFromDirectoryTest(test_combinations.TestCase):\n         for i in range(count):\n             path = paths[i % len(paths)]\n             filename = os.path.join(path, f\"text_{i}.txt\")\n-            f = open(os.path.join(temp_dir, filename), \"w\")\n+            with open(os.path.join(temp_dir, filename), \"w\") as f:\n                 text = \"\".join(\n                     [random.choice(string.printable) for _ in range(length)]\n                 )\n                 f.write(text)\n-            f.close()\n         return temp_dir\n \n     def test_text_dataset_from_directory_standalone(self):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#2ff6990b0bb6eda79fdba8c7093760c384083182", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 7 | Churn Cumulative: 242 | Contributors (this commit): 7 | Commits (past 90d): 6 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -73,10 +73,11 @@ class TextDatasetFromDirectoryTest(test_combinations.TestCase):\n         directory = self._prepare_directory(count=7, num_classes=2)\n         for i in range(3):\n             filename = f\"text_{i}.txt\"\n-            f = open(os.path.join(directory, filename), \"w\")\n-            text = \"\".join([random.choice(string.printable) for _ in range(20)])\n+            with open(os.path.join(directory, filename), \"w\") as f:\n+                text = \"\".join(\n+                    [random.choice(string.printable) for _ in range(20)]\n+                )\n                 f.write(text)\n-            f.close()\n \n         dataset = text_dataset.text_dataset_from_directory(\n             directory, batch_size=5, label_mode=None, max_length=10\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#4b2537521ef067d919d8faf56dea75855c47e37c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 246 | Contributors (this commit): 7 | Commits (past 90d): 7 | Contributors (cumulative): 7 | DMM Complexity: 0.0\n\nDIFF:\n@@ -74,9 +74,7 @@ class TextDatasetFromDirectoryTest(test_combinations.TestCase):\n         for i in range(3):\n             filename = f\"text_{i}.txt\"\n             with open(os.path.join(directory, filename), \"w\") as f:\n-                text = \"\".join(\n-                    [random.choice(string.printable) for _ in range(20)]\n-                )\n+                text = \"\".join([random.choice(string.printable) for _ in range(20)])\n                 f.write(text)\n                 \n         dataset = text_dataset.text_dataset_from_directory(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#fb2b0b0b6fb59359cb3739e4cbc4eaa57feb1be9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 250 | Contributors (this commit): 7 | Commits (past 90d): 8 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -74,7 +74,9 @@ class TextDatasetFromDirectoryTest(test_combinations.TestCase):\n         for i in range(3):\n             filename = f\"text_{i}.txt\"\n             with open(os.path.join(directory, filename), \"w\") as f:\n-                text = \"\".join([random.choice(string.printable) for _ in range(20)])\n+                text = \"\".join(\n+                    [random.choice(string.printable) for _ in range(20)]\n+                )\n                 f.write(text)\n                 \n         dataset = text_dataset.text_dataset_from_directory(\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#57bbc18e9b987474d96f81bb53695ee3ad029be0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 20 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 20 | Churn Cumulative: 272 | Contributors (this commit): 7 | Commits (past 90d): 18 | Contributors (cumulative): 12 | DMM Complexity: 1.0\n\nDIFF:\n@@ -14,6 +14,7 @@\n # ==============================================================================\n \"\"\"Contains the Dropout layer.\"\"\"\n \n+import numbers\n \n import tensorflow.compat.v2 as tf\n \n@@ -105,6 +106,9 @@ class Dropout(base_layer.BaseRandomLayer):\n         return tf.convert_to_tensor(noise_shape)\n \n     def call(self, inputs, training=None):\n+        if isinstance(self.rate, numbers.Real) and self.rate == 0:\n+            return tf.identity(inputs)\n+\n         if training is None:\n             training = backend.learning_phase()\n \n\n@@ -51,6 +51,22 @@ class DropoutTest(test_combinations.TestCase):\n         # Test that dropout mask is shared across second dim.\n         self.assertAllClose(out_np[:, 0, :], out_np[:, 1, :])\n \n+    @test_utils.run_v2_only\n+    def test_dropout_with_zero_rate(self):\n+        inputs = np.ones((20, 5, 10))\n+        dropout = keras.layers.Dropout(0.0, force_generator=True)\n+        dropout.build((20, 5, 10))\n+        # Make sure we don't use the RNG when the dropout rate is 0\n+        # (for performance).\n+        rng_state_var = tf.constant(\n+            dropout._random_generator._generator._state_var\n+        )\n+        output = dropout(inputs, training=True)\n+        self.assertAllClose(inputs, output)\n+        self.assertAllClose(\n+            rng_state_var, dropout._random_generator._generator._state_var\n+        )\n+\n     def test_dropout_with_savemodel(self):\n         inputs = keras.Input(shape=(5, 10))\n         layer = keras.layers.Dropout(0.5, force_generator=True)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#18e56297492618b8999992914ba7b0cd3a5e61d5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 17 | Churn Cumulative: 891 | Contributors (this commit): 6 | Commits (past 90d): 9 | Contributors (cumulative): 6 | DMM Complexity: 1.0\n\nDIFF:\n@@ -414,6 +414,9 @@ class ObjectPathMappingTest(test_util.DTensorBaseTest):\n         self.assertEqual(model.layers[0].kernel.name, \"d1/kernel:0\")\n         self.assertEqual(model.layers[0].bias.name, \"d1/bias:0\")\n \n+    @tf.compat.v1.test.mock.patch.dict(\n+        \"os.environ\", {\"DTENSOR_ENABLE_CHECKPOINT_V2\": \"True\"}\n+    )\n     def test_checkpoint(self):\n         layout_map = layout_map_lib.LayoutMap(mesh=self.mesh)\n         with layout_map.scope():\n@@ -423,13 +426,19 @@ class ObjectPathMappingTest(test_util.DTensorBaseTest):\n                     SubclassLayer(10),\n                 ]\n             )\n-        cpt = tf.experimental.dtensor.DTensorCheckpoint(\n-            mesh=self.mesh, root=model\n+        cpt = tf.train.Checkpoint(root=model)\n+        options = tf.train.CheckpointOptions(\n+            experimental_io_device=dtensor.device_name()\n         )\n         tmpdir = self.get_temp_dir()\n         self.addCleanup(shutil.rmtree, tmpdir, ignore_errors=True)\n-        saved_path = cpt.save(os.path.join(tmpdir, \"checkpoint\"))\n-        cpt.restore(saved_path)\n+\n+        saved_path = cpt.save(\n+            os.path.join(tmpdir, \"checkpoint\"),\n+            options=options,\n+        )\n+\n+        cpt.restore(saved_path, options=options)\n \n \n if __name__ == \"__main__\":\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#318c1204ac5a6f1250874a2eebee7e6af6efe7dc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 6 | Churn Cumulative: 19792 | Contributors (this commit): 135 | Commits (past 90d): 28 | Contributors (cumulative): 135 | DMM Complexity: 0.5\n\nDIFF:\n@@ -3833,6 +3833,9 @@ def concat(tensors, axis=0):\n     \"\"\"Concats `tensor`s along `axis`.\"\"\"\n     if isinstance(tensors[0], tf.SparseTensor):\n         return tf.sparse.concat(axis=axis, sp_inputs=tensors)\n+    elif _is_scalar(tensors[0]):\n+        return tf.stack(tensors, axis=axis)\n+    else:\n         return tf.concat(tensors, axis=axis)\n \n \n@@ -3861,6 +3864,9 @@ def potentially_ragged_concat(tensors):\n     )\n     if tf.math.reduce_all(constant_dims).numpy().item():\n         # All non-batch dims are constant\n+        if _is_scalar(tensors[0]):\n+            return tf.stack(tensors, axis=0)\n+        else:\n             return tf.concat(tensors, axis=0)\n \n     # First, identify constant inner dimensions by finding the\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#558cc60f713d7d388364fc0ce92a7c61555a586c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 755 | Contributors (this commit): 9 | Commits (past 90d): 6 | Contributors (cumulative): 9 | DMM Complexity: 1.0\n\nDIFF:\n@@ -368,6 +368,7 @@ class TestDistributionStrategyDnnCorrectness(\n         Arguments:\n           distribution: distribute test configuration\n         \"\"\"\n+        self.skipTest(\"TODO(b/234354008): Requires fetching data from network.\")\n         (train_images, train_labels), _ = fashion_mnist.load_data()\n         # add channel dimension to make 2D data into 3D, since some ops of the\n         # model require it.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#c366c4a435658bba0402182b8b8d981d12fdcc53", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 17 | Lines Deleted: 3 | Files Changed: 4 | Hunks: 6 | Methods Changed: 7 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 20 | Churn Cumulative: 8293 | Contributors (this commit): 18 | Commits (past 90d): 70 | Contributors (cumulative): 39 | DMM Complexity: 0.5454545454545454\n\nDIFF:\n@@ -1270,7 +1270,9 @@ class LossScaleOptimizerV3(\n         unscaled_grads = self.get_unscaled_gradients(grads)\n         return list(zip(unscaled_grads, weights))\n \n-    def apply_gradients(self, grads_and_vars, skip_gradients_aggregation=False):\n+    def apply_gradients(\n+        self, grads_and_vars, skip_gradients_aggregation=False, **kwargs\n+    ):\n         if tf.distribute.in_cross_replica_context():\n             raise ValueError(\n                 \"apply_gradients() must be called in a replica context.\"\n@@ -1284,7 +1286,13 @@ class LossScaleOptimizerV3(\n         )\n \n         grads_and_vars = optimizer_utils.filter_empty_gradients(grads_and_vars)\n-        if not skip_gradients_aggregation:\n+        # `experimental_aggregate_gradients` is an arg in `apply_gradients` of\n+        # v2 optimizer -- the reverse of `skip_gradients_aggregation`.\n+        # We read it from kwargs for backward compatibility.\n+        experimental_aggregate_gradients = kwargs.pop(\n+            \"experimental_aggregate_gradients\", True\n+        )\n+        if not skip_gradients_aggregation and experimental_aggregate_gradients:\n             # We must aggregate the gradients here instead of in\n             # self.optimizer.apply_gradients, so that any NaN or Inf gradients\n             # are propagated to each replica. If any replica has a NaN or Inf\n\n@@ -742,7 +742,10 @@ class LossScaleOptimizerTest(tf.test.TestCase, parameterized.TestCase):\n \n         class MyOptimizer(sgd_experimental.SGD):\n             def apply_gradients(\n-                self, grads_and_vars, skip_gradients_aggregation=False\n+                self,\n+                grads_and_vars,\n+                skip_gradients_aggregation=False,\n+                experimental_aggregate_gradients=True,\n             ):\n                 for grad, _ in grads_and_vars:\n                     outer_self.assertIsInstance(grad, tf.Tensor)\n\n@@ -639,6 +639,7 @@ class _BaseOptimizer(tf.__internal__.tracking.AutoTrackable):\n             Python dictionary.\n         \"\"\"\n         config = {\n+            \"name\": self.name,\n             \"clipnorm\": self.clipnorm,\n             \"global_clipnorm\": self.global_clipnorm,\n             \"clipvalue\": self.clipvalue,\n\n@@ -302,9 +302,11 @@ class OptimizerFuntionalityTest(tf.test.TestCase, parameterized.TestCase):\n             use_ema=True,\n             ema_momentum=0.5,\n             ema_overwrite_frequency=50,\n+            name=\"custom_adam\",\n         )\n         config = optimizer.get_config()\n         expected_config = {\n+            \"name\": \"custom_adam\",\n             \"learning_rate\": np.float32(0.05),\n             \"beta_1\": 0.7,\n             \"beta_2\": 0.77,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#428dc46f3f9b53e21fa9b771f86f3943fb66c884", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 19796 | Contributors (this commit): 136 | Commits (past 90d): 28 | Contributors (cumulative): 136 | DMM Complexity: None\n\nDIFF:\n@@ -1864,7 +1864,7 @@ class Model(base_layer.Layer, version_utils.ModelVersionSelector):\n               argument is not supported with array inputs.\n             callbacks: List of `keras.callbacks.Callback` instances. List of\n               callbacks to apply during evaluation. See\n-              [callbacks](/api_docs/python/tf/keras/callbacks).\n+              [callbacks](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks).\n             max_queue_size: Integer. Used for generator or\n               `keras.utils.Sequence` input only. Maximum size for the generator\n               queue. If unspecified, `max_queue_size` will default to 10.\n@@ -2160,7 +2160,7 @@ class Model(base_layer.Layer, version_utils.ModelVersionSelector):\n                 run until the input dataset is exhausted.\n             callbacks: List of `keras.callbacks.Callback` instances.\n                 List of callbacks to apply during prediction.\n-                See [callbacks](/api_docs/python/tf/keras/callbacks).\n+                See [callbacks](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks).\n             max_queue_size: Integer. Used for generator or\n                 `keras.utils.Sequence` input only. Maximum size for the\n                 generator queue. If unspecified, `max_queue_size` will default\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#13e6a8c2fa5fcad302b04fc1fb0b56d441aa2624", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 953 | Contributors (this commit): 11 | Commits (past 90d): 6 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -117,7 +117,7 @@ class Dense(Layer):\n         super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n \n         self.units = int(units) if not isinstance(units, int) else units\n-        if self.units < 0:\n+        if self.units <= 0:\n             raise ValueError(\n                 \"Received an invalid value for `units`, expected \"\n                 f\"a positive integer. Received: units={units}\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#0142057859208671e2f089214c7b1784778a0da5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 795 | Contributors (this commit): 7 | Commits (past 90d): 7 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -121,7 +121,7 @@ class SimpleRNNCell(DropoutRNNCellMixin, base_layer.BaseRandomLayer):\n         recurrent_dropout=0.0,\n         **kwargs,\n     ):\n-        if units < 0:\n+        if units <= 0:\n             raise ValueError(\n                 \"Received an invalid value for argument `units`, \"\n                 f\"expected a positive integer, got {units}.\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#d2239e188b61f8d95cd487458dc1ebf3db8697b3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 2174 | Contributors (this commit): 9 | Commits (past 90d): 6 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -139,7 +139,7 @@ class LSTMCell(DropoutRNNCellMixin, base_layer.BaseRandomLayer):\n         recurrent_dropout=0.0,\n         **kwargs,\n     ):\n-        if units < 0:\n+        if units <= 0:\n             raise ValueError(\n                 \"Received an invalid value for argument `units`, \"\n                 f\"expected a positive integer, got {units}.\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#a270ddc6fdc1746e25aec2b9f760c57cd17ce35d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 2053 | Contributors (this commit): 8 | Commits (past 90d): 6 | Contributors (cumulative): 8 | DMM Complexity: None\n\nDIFF:\n@@ -135,7 +135,7 @@ class GRUCell(DropoutRNNCellMixin, base_layer.BaseRandomLayer):\n         reset_after=True,\n         **kwargs,\n     ):\n-        if units < 0:\n+        if units <= 0:\n             raise ValueError(\n                 \"Received an invalid value for argument `units`, \"\n                 f\"expected a positive integer, got {units}.\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#c2eca423a5bc4fb6ac4ea19ca3952f7db4a821d4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 398 | Contributors (this commit): 7 | Commits (past 90d): 3 | Contributors (cumulative): 7 | DMM Complexity: None\n\nDIFF:\n@@ -16,8 +16,8 @@\n \"\"\"ResNet v2 models for Keras.\n \n Reference:\n-  - [Identity Mappings in Deep Residual Networks]\n-    (https://arxiv.org/abs/1603.05027) (CVPR 2016)\n+  - [Identity Mappings in Deep Residual Networks](\n+      https://arxiv.org/abs/1603.05027) (CVPR 2016)\n \"\"\"\n \n from keras.applications import imagenet_utils\n@@ -154,8 +154,8 @@ decode_predictions.__doc__ = imagenet_utils.decode_predictions.__doc__\n DOC = \"\"\"\n \n   Reference:\n-  - [Identity Mappings in Deep Residual Networks]\n-    (https://arxiv.org/abs/1603.05027) (CVPR 2016)\n+  - [Identity Mappings in Deep Residual Networks](\n+      https://arxiv.org/abs/1603.05027) (CVPR 2016)\n \n   For image classification use cases, see\n   [this page for detailed examples](\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#1b503709fa9b18c8ca6654606b2d2321384e1c03", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 21 | Lines Deleted: 178 | Files Changed: 3 | Hunks: 9 | Methods Changed: 10 | Complexity Δ (Sum/Max): -10/0 | Churn Δ: 199 | Churn Cumulative: 30629 | Contributors (this commit): 140 | Commits (past 90d): 33 | Contributors (cumulative): 158 | DMM Complexity: 0.0\n\nDIFF:\n@@ -2160,7 +2160,8 @@ class Model(base_layer.Layer, version_utils.ModelVersionSelector):\n                 run until the input dataset is exhausted.\n             callbacks: List of `keras.callbacks.Callback` instances.\n                 List of callbacks to apply during prediction.\n-                See [callbacks](https://www.tensorflow.org/api_docs/python/tf/keras/callbacks).\n+                See [callbacks](\n+                https://www.tensorflow.org/api_docs/python/tf/keras/callbacks).\n             max_queue_size: Integer. Used for generator or\n                 `keras.utils.Sequence` input only. Maximum size for the\n                 generator queue. If unspecified, `max_queue_size` will default\n\n@@ -252,8 +252,9 @@ class BaseImageAugmentationLayer(base_layer.BaseRandomLayer):\n     `augment_label()`, which handles label augmentation if the layer supports\n     that.\n \n-    `augment_bounding_boxes()`, which handles the bounding box augmentation, if\n-    the layer supports that.\n+    `augment_bounding_boxes()` is not implemented by this layer. Please use\n+    preprocessing layers in [KerasCV](https://keras.io/keras_cv/)\n+    for bounding box augmentation support.\n \n     `get_random_transformation()`, which should produce a random transformation\n     setting. The tranformation object, which could be any type, will be passed\n@@ -404,7 +405,13 @@ class BaseImageAugmentationLayer(base_layer.BaseRandomLayer):\n         Returns:\n           output 2D tensor, which will be forward to `layer.call()`.\n         \"\"\"\n-        raise NotImplementedError()\n+        layer = self.__class__.__name__\n+        raise NotImplementedError(\n+            \"In order to use bounding_boxes, \"\n+            \"please use \"\n+            f\"keras_cv.layers.{layer} \"\n+            f\"instead of keras.layers.{layer}.\"\n+        )\n \n     @doc_controls.for_subclass_implementers\n     def get_random_transformation(\n@@ -768,37 +775,6 @@ class RandomFlip(BaseImageAugmentationLayer):\n             \"flip_vertical\": flip_vertical,\n         }\n \n-    def augment_bounding_boxes(\n-        self, image, bounding_boxes, transformation=None\n-    ):\n-        transformation = transformation or self.get_random_transformation()\n-        image = tf.expand_dims(image, 0)\n-        image_shape = tf.shape(image)\n-        h = image_shape[H_AXIS]\n-        w = image_shape[W_AXIS]\n-        bboxes_out = tf.identity(bounding_boxes)\n-        if transformation[\"flip_horizontal\"]:\n-            bboxes_out = tf.stack(\n-                [\n-                    w - bboxes_out[:, 2],\n-                    bboxes_out[:, 1],\n-                    w - bboxes_out[:, 0],\n-                    bboxes_out[:, 3],\n-                ],\n-                axis=-1,\n-            )\n-        if transformation[\"flip_vertical\"]:\n-            bboxes_out = tf.stack(\n-                [\n-                    bboxes_out[:, 0],\n-                    h - bboxes_out[:, 3],\n-                    bboxes_out[:, 2],\n-                    h - bboxes_out[:, 1],\n-                ],\n-                axis=-1,\n-            )\n-        return bboxes_out\n-\n     def compute_output_shape(self, input_shape):\n         return input_shape\n \n@@ -1302,63 +1278,6 @@ class RandomRotation(BaseImageAugmentationLayer):\n         output.set_shape(original_shape)\n         return output\n \n-    def augment_bounding_boxes(self, image, bounding_boxes, transformation):\n-        image = tf.expand_dims(image, 0)\n-        image_shape = tf.shape(image)\n-        h = image_shape[H_AXIS]\n-        w = image_shape[W_AXIS]\n-        bbox_dtype = bounding_boxes.dtype\n-        # origin coordinates, all the points on the image are rotated around\n-        # this point\n-        origin_x, origin_y = int(h / 2), int(w / 2)\n-        angle = transformation[\"angle\"]\n-        angle = -angle\n-        # calculate coordinates of all four corners of the bounding box\n-        point = tf.stack(\n-            [\n-                tf.stack([bounding_boxes[:, 0], bounding_boxes[:, 1]], axis=1),\n-                tf.stack([bounding_boxes[:, 2], bounding_boxes[:, 1]], axis=1),\n-                tf.stack([bounding_boxes[:, 2], bounding_boxes[:, 3]], axis=1),\n-                tf.stack([bounding_boxes[:, 0], bounding_boxes[:, 3]], axis=1),\n-            ],\n-            axis=1,\n-        )\n-        # point_x : x coordinates of all corners of the bounding box\n-        point_x = tf.gather(point, [0], axis=2)\n-        # point_y : y cordinates of all corners of the bounding box\n-        point_y = tf.gather(point, [1], axis=2)\n-        # rotated bbox coordinates\n-        # new_x : new position of x coordinates of corners of bounding box\n-        new_x = (\n-            origin_x\n-            + tf.multiply(\n-                tf.cos(angle), tf.cast((point_x - origin_x), dtype=tf.float32)\n-            )\n-            - tf.multiply(\n-                tf.sin(angle), tf.cast((point_y - origin_y), dtype=tf.float32)\n-            )\n-        )\n-        # new_y : new position of y coordinates of corners of bounding box\n-        new_y = (\n-            origin_y\n-            + tf.multiply(\n-                tf.sin(angle), tf.cast((point_x - origin_x), dtype=tf.float32)\n-            )\n-            + tf.multiply(\n-                tf.cos(angle), tf.cast((point_y - origin_y), dtype=tf.float32)\n-            )\n-        )\n-        # rotated bbox coordinates\n-        out = tf.concat([new_x, new_y], axis=2)\n-        # find readjusted coordinates of bounding box to represent it in corners\n-        # format\n-        min_cordinates = tf.math.reduce_min(out, axis=1)\n-        max_cordinates = tf.math.reduce_max(out, axis=1)\n-        bboxes_out = tf.concat([min_cordinates, max_cordinates], axis=1)\n-        # cordinates cannot be float values, it is casted to int32\n-        bboxes_out = tf.cast(bboxes_out, bbox_dtype)\n-        return bboxes_out\n-\n     def augment_label(self, label, transformation):\n         return label\n \n\n@@ -704,46 +704,7 @@ class RandomFlipTest(test_combinations.TestCase):\n         self.assertAllEqual(layer(inputs).dtype, \"uint8\")\n \n     @test_utils.run_v2_only\n-    def test_augment_bbox_horizontal(self):\n-        image = tf.zeros([1, 20, 20, 3])\n-        bboxes = np.array([[0, 0, 10, 10], [4, 4, 12, 12]], dtype=\"int32\")\n-        layer = image_preprocessing.RandomFlip()\n-        output = layer.augment_bounding_boxes(\n-            image,\n-            bboxes,\n-            transformation={\"flip_horizontal\": True, \"flip_vertical\": False},\n-        )\n-        expected_output = [[10, 0, 20, 10], [8, 4, 16, 12]]\n-        self.assertAllClose(expected_output, output)\n-\n-    @test_utils.run_v2_only\n-    def test_augment_bbox_vertical(self):\n-        image = tf.zeros([1, 20, 20, 3])\n-        bboxes = np.array([[0, 0, 10, 10], [4, 4, 12, 12]], dtype=\"int32\")\n-        layer = image_preprocessing.RandomFlip()\n-        output = layer.augment_bounding_boxes(\n-            image,\n-            bboxes,\n-            transformation={\"flip_horizontal\": False, \"flip_vertical\": True},\n-        )\n-        expected_output = [[0, 10, 10, 20], [4, 8, 12, 16]]\n-        self.assertAllClose(expected_output, output)\n-\n-    @test_utils.run_v2_only\n-    def test_augment_bbox_both(self):\n-        image = tf.zeros([1, 20, 20, 3])\n-        bboxes = np.array([[0, 0, 10, 10], [4, 4, 12, 12]], dtype=\"int32\")\n-        layer = image_preprocessing.RandomFlip()\n-        output = layer.augment_bounding_boxes(\n-            image,\n-            bboxes,\n-            transformation={\"flip_horizontal\": True, \"flip_vertical\": True},\n-        )\n-        expected_output = [[10, 10, 20, 20], [8, 8, 16, 16]]\n-        self.assertAllClose(expected_output, output)\n-\n-    @test_utils.run_v2_only\n-    def test_augment_bbox_batched_input(self):\n+    def test_bounding_box_error(self):\n         image = tf.zeros([20, 20, 3])\n         bboxes = np.array(\n             [\n@@ -753,19 +714,16 @@ class RandomFlipTest(test_combinations.TestCase):\n             dtype=\"int32\",\n         )\n         input = {\"images\": [image, image], \"bounding_boxes\": bboxes}\n-        mock_random = [True, True, True, True]\n-        with tf.compat.v1.test.mock.patch.object(\n-            np.random,\n-            \"choice\",\n-            side_effect=mock_random,\n+        layer = \"RandomFlip\"\n+        with self.assertRaisesRegex(\n+            NotImplementedError,\n+            \"In order to use bounding_boxes, \"\n+            \"please use \"\n+            f\"keras_cv.layers.{layer} \"\n+            f\"instead of keras.layers.{layer}.\",\n         ):\n             layer = image_preprocessing.RandomFlip()\n-            output = layer(input, training=True)\n-        expected_output = [\n-            [[10, 10, 20, 20], [8, 8, 16, 16]],\n-            [[10, 10, 20, 20], [8, 8, 16, 16]],\n-        ]\n-        self.assertAllClose(expected_output, output[\"bounding_boxes\"])\n+            layer(input)\n \n \n @test_combinations.run_all_keras_modes(always_skip_v1=True)\n@@ -2001,41 +1959,6 @@ class RandomRotationTest(test_combinations.TestCase):\n             expected_output = np.reshape(expected_output, (5, 5, 1))\n             self.assertAllClose(expected_output, output_image)\n \n-    def test_augment_bbox(self):\n-        with test_utils.use_gpu():\n-            input_image = np.random.random((512, 512, 3)).astype(np.float32)\n-            bboxes = tf.convert_to_tensor(\n-                [[200, 200, 400, 400], [100, 100, 300, 300]]\n-            )\n-            # 180 rotation.\n-            layer = image_preprocessing.RandomRotation(factor=(0.5, 0.5))\n-            output_bbox = layer.augment_bounding_boxes(\n-                input_image,\n-                bboxes,\n-                transformation=layer.get_random_transformation(),\n-            )\n-            expected_output = np.asarray(\n-                [[111, 112, 312, 312], [212, 211, 412, 412]]\n-            ).astype(np.int32)\n-            expected_output = np.reshape(expected_output, (2, 4))\n-            self.assertAllClose(expected_output, output_bbox)\n-\n-    def test_augment_bbox_dict_input(self):\n-        with test_utils.use_gpu():\n-            input_image = np.random.random((512, 512, 3)).astype(np.float32)\n-            bboxes = tf.convert_to_tensor(\n-                [[200, 200, 400, 400], [100, 100, 300, 300]]\n-            )\n-            input = {\"images\": input_image, \"bounding_boxes\": bboxes}\n-            # 180 rotation.\n-            layer = image_preprocessing.RandomRotation(factor=(0.0833, 0.0833))\n-            output_bbox = layer(input)\n-            expected_output = np.asarray(\n-                [[179, 135, 452, 408], [42, 98, 316, 372]]\n-            ).astype(np.int32)\n-            expected_output = np.reshape(expected_output, (2, 4))\n-            self.assertAllClose(expected_output, output_bbox[\"bounding_boxes\"])\n-\n     @test_utils.run_v2_only\n     def test_output_dtypes(self):\n         inputs = np.array([[[1], [2]], [[3], [4]]], dtype=\"float64\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#b498eb3b5cec3f6a7af35f6a03ddf90b55886095", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 8 | Churn Cumulative: 3137 | Contributors (this commit): 8 | Commits (past 90d): 4 | Contributors (cumulative): 15 | DMM Complexity: 1.0\n\nDIFF:\n@@ -164,6 +164,7 @@ class CategoryEncoding(base_layer.Layer):\n         self.sparse = sparse\n \n     def compute_output_shape(self, input_shape):\n+        input_shape = list(input_shape)\n         if not input_shape:\n             return tf.TensorShape([self.num_tokens])\n         if self.output_mode == ONE_HOT and input_shape[-1] != 1:\n\n@@ -48,6 +48,13 @@ class CategoryEncodingInputTest(\n         output_data = layer(category_data, count_weights=weight_data)\n         self.assertAllEqual(output_data, expected_output)\n \n+    def test_compute_output_shape(self):\n+        layer = category_encoding.CategoryEncoding(5)\n+        output_shape = layer.compute_output_shape((None, 1))\n+        self.assertListEqual(output_shape.as_list(), [None, 5])\n+        output_shape = layer.compute_output_shape([None, 1])\n+        self.assertListEqual(output_shape.as_list(), [None, 5])\n+\n     def test_dense_input_sparse_output(self):\n         input_array = tf.constant([[1, 2, 3], [3, 3, 0]])\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#18248b084f932e294402f0b772b49ed162c25208", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 955 | Contributors (this commit): 12 | Commits (past 90d): 4 | Contributors (cumulative): 12 | DMM Complexity: None\n\nDIFF:\n@@ -117,7 +117,7 @@ class Dense(Layer):\n         super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n \n         self.units = int(units) if not isinstance(units, int) else units\n-        if self.units <= 0:\n+        if self.units < 0:\n             raise ValueError(\n                 \"Received an invalid value for `units`, expected \"\n                 f\"a positive integer. Received: units={units}\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "keras#ff614c0bfb3987903f95cf191a03514eed495795", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 10585 | Contributors (this commit): 34 | Commits (past 90d): 8 | Contributors (cumulative): 34 | DMM Complexity: None\n\nDIFF:\n@@ -841,7 +841,7 @@ class Layer(tf.Module, version_utils.LayerVersionSelector):\n                 instead of an integer.\n \n         Returns:\n-            An input shape tuple.\n+            An output shape tuple.\n         \"\"\"\n         if tf.executing_eagerly():\n             # In this case we build the model first in order to do shape\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
