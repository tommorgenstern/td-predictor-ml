{"custom_id": "fastapi#166088775a03ab07af60e8dd6875dd4be8cf50ac", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 269 | Contributors (this commit): 2 | Commits (past 90d): 5 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,6 +1,6 @@\n \"\"\"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\"\"\n \n-__version__ = \"0.61.1\"\n+__version__ = \"0.61.2\"\n \n from starlette import status\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "fastapi#313bbe802fc9c2d16ff0203d82420f5279b7c45d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 7485 | Lines Deleted: 217 | Files Changed: 18 | Hunks: 188 | Methods Changed: 121 | Complexity Δ (Sum/Max): 40/43 | Churn Δ: 7702 | Churn Cumulative: 16395 | Contributors (this commit): 47 | Commits (past 90d): 19 | Contributors (cumulative): 98 | DMM Complexity: 0.4339622641509434\n\nDIFF:\n@@ -0,0 +1,11 @@\n+from fastapi import Header, HTTPException\n+\n+\n+async def get_token_header(x_token: str = Header(...)):\n+    if x_token != \"fake-super-secret-token\":\n+        raise HTTPException(status_code=400, detail=\"X-Token header invalid\")\n+\n+\n+async def get_query_token(token: str):\n+    if token != \"jessica\":\n+        raise HTTPException(status_code=400, detail=\"No Jessica token provided\")\n\n\n@@ -0,0 +1,8 @@\n+from fastapi import APIRouter\n+\n+router = APIRouter()\n+\n+\n+@router.post(\"/\")\n+async def update_admin():\n+    return {\"message\": \"Admin getting schwifty\"}\n\n@@ -1,20 +1,23 @@\n-from fastapi import Depends, FastAPI, Header, HTTPException\n+from fastapi import Depends, FastAPI\n \n+from .dependencies import get_query_token, get_token_header\n+from .internal import admin\n from .routers import items, users\n \n-app = FastAPI()\n-\n-\n-async def get_token_header(x_token: str = Header(...)):\n-    if x_token != \"fake-super-secret-token\":\n-        raise HTTPException(status_code=400, detail=\"X-Token header invalid\")\n+app = FastAPI(dependencies=[Depends(get_query_token)])\n \n \n app.include_router(users.router)\n+app.include_router(items.router)\n app.include_router(\n-    items.router,\n-    prefix=\"/items\",\n-    tags=[\"items\"],\n+    admin.router,\n+    prefix=\"/admin\",\n+    tags=[\"admin\"],\n     dependencies=[Depends(get_token_header)],\n-    responses={404: {\"description\": \"Not found\"}},\n+    responses={418: {\"description\": \"I'm a teapot\"}},\n )\n+\n+\n+@app.get(\"/\")\n+async def root():\n+    return {\"message\": \"Hello Bigger Applications!\"}\n\n@@ -1,16 +1,28 @@\n-from fastapi import APIRouter, HTTPException\n+from fastapi import APIRouter, Depends, HTTPException\n \n-router = APIRouter()\n+from ..dependencies import get_token_header\n+\n+router = APIRouter(\n+    prefix=\"/items\",\n+    tags=[\"items\"],\n+    dependencies=[Depends(get_token_header)],\n+    responses={404: {\"description\": \"Not found\"}},\n+)\n+\n+\n+fake_items_db = {\"plumbus\": {\"name\": \"Plumbus\"}, \"gun\": {\"name\": \"Portal Gun\"}}\n \n \n @router.get(\"/\")\n async def read_items():\n-    return [{\"name\": \"Item Foo\"}, {\"name\": \"item Bar\"}]\n+    return fake_items_db\n \n \n @router.get(\"/{item_id}\")\n async def read_item(item_id: str):\n-    return {\"name\": \"Fake Specific Item\", \"item_id\": item_id}\n+    if item_id not in fake_items_db:\n+        raise HTTPException(status_code=404, detail=\"Item not found\")\n+    return {\"name\": fake_items_db[item_id][\"name\"], \"item_id\": item_id}\n \n \n @router.put(\n@@ -19,6 +31,8 @@ async def read_item(item_id: str):\n     responses={403: {\"description\": \"Operation forbidden\"}},\n )\n async def update_item(item_id: str):\n-    if item_id != \"foo\":\n-        raise HTTPException(status_code=403, detail=\"You can only update the item: foo\")\n-    return {\"item_id\": item_id, \"name\": \"The Fighters\"}\n+    if item_id != \"plumbus\":\n+        raise HTTPException(\n+            status_code=403, detail=\"You can only update the item: plumbus\"\n+        )\n+    return {\"item_id\": item_id, \"name\": \"The great Plumbus\"}\n\n@@ -5,7 +5,7 @@ router = APIRouter()\n \n @router.get(\"/users/\", tags=[\"users\"])\n async def read_users():\n-    return [{\"username\": \"Foo\"}, {\"username\": \"Bar\"}]\n+    return [{\"username\": \"Rick\"}, {\"username\": \"Morty\"}]\n \n \n @router.get(\"/users/me\", tags=[\"users\"])\n\n@@ -0,0 +1,25 @@\n+from fastapi import Depends, FastAPI, Header, HTTPException\n+\n+\n+async def verify_token(x_token: str = Header(...)):\n+    if x_token != \"fake-super-secret-token\":\n+        raise HTTPException(status_code=400, detail=\"X-Token header invalid\")\n+\n+\n+async def verify_key(x_key: str = Header(...)):\n+    if x_key != \"fake-super-secret-key\":\n+        raise HTTPException(status_code=400, detail=\"X-Key header invalid\")\n+    return x_key\n+\n+\n+app = FastAPI(dependencies=[Depends(verify_token), Depends(verify_key)])\n+\n+\n+@app.get(\"/items/\")\n+async def read_items():\n+    return [{\"item\": \"Portal Gun\"}, {\"item\": \"Plumbus\"}]\n+\n+\n+@app.get(\"/users/\")\n+async def read_users():\n+    return [{\"username\": \"Rick\"}, {\"username\": \"Morty\"}]\n\n@@ -1,7 +1,6 @@\n from typing import Optional\n \n from fastapi import APIRouter, FastAPI\n-from fastapi.responses import JSONResponse\n from pydantic import BaseModel, HttpUrl\n \n app = FastAPI()\n@@ -23,7 +22,7 @@ class InvoiceEventReceived(BaseModel):\n     ok: bool\n \n \n-invoices_callback_router = APIRouter(default_response_class=JSONResponse)\n+invoices_callback_router = APIRouter()\n \n \n @invoices_callback_router.post(\n\n@@ -2,6 +2,7 @@ from typing import Any, Callable, Dict, List, Optional, Sequence, Type, Union\n \n from fastapi import routing\n from fastapi.concurrency import AsyncExitStack\n+from fastapi.datastructures import Default, DefaultPlaceholder\n from fastapi.encoders import DictIntStrAny, SetIntStr\n from fastapi.exception_handlers import (\n     http_exception_handler,\n@@ -38,7 +39,8 @@ class FastAPI(Starlette):\n         openapi_url: Optional[str] = \"/openapi.json\",\n         openapi_tags: Optional[List[Dict[str, Any]]] = None,\n         servers: Optional[List[Dict[str, Union[str, Any]]]] = None,\n-        default_response_class: Type[Response] = JSONResponse,\n+        dependencies: Optional[Sequence[Depends]] = None,\n+        default_response_class: Type[Response] = Default(JSONResponse),\n         docs_url: Optional[str] = \"/docs\",\n         redoc_url: Optional[str] = \"/redoc\",\n         swagger_ui_oauth2_redirect_url: Optional[str] = \"/docs/oauth2-redirect\",\n@@ -52,16 +54,25 @@ class FastAPI(Starlette):\n         openapi_prefix: str = \"\",\n         root_path: str = \"\",\n         root_path_in_servers: bool = True,\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n+        deprecated: bool = None,\n+        include_in_schema: bool = True,\n         **extra: Any,\n     ) -> None:\n-        self.default_response_class = default_response_class\n         self._debug = debug\n         self.state = State()\n         self.router: routing.APIRouter = routing.APIRouter(\n-            routes,\n+            routes=routes,\n             dependency_overrides_provider=self,\n             on_startup=on_startup,\n             on_shutdown=on_shutdown,\n+            default_response_class=default_response_class,\n+            dependencies=dependencies,\n+            callbacks=callbacks,\n+            deprecated=deprecated,\n+            include_in_schema=include_in_schema,\n+            responses=responses,\n         )\n         self.exception_handlers = (\n             {} if exception_handlers is None else dict(exception_handlers)\n@@ -203,7 +214,9 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Union[Type[Response], DefaultPlaceholder] = Default(\n+            JSONResponse\n+        ),\n         name: Optional[str] = None,\n     ) -> None:\n         self.router.add_api_route(\n@@ -211,12 +224,12 @@ class FastAPI(Starlette):\n             endpoint=endpoint,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=methods,\n             operation_id=operation_id,\n@@ -227,7 +240,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n         )\n \n@@ -253,7 +266,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n     ) -> Callable:\n         def decorator(func: Callable) -> Callable:\n@@ -262,12 +275,12 @@ class FastAPI(Starlette):\n                 func,\n                 response_model=response_model,\n                 status_code=status_code,\n-                tags=tags or [],\n+                tags=tags,\n                 dependencies=dependencies,\n                 summary=summary,\n                 description=description,\n                 response_description=response_description,\n-                responses=responses or {},\n+                responses=responses,\n                 deprecated=deprecated,\n                 methods=methods,\n                 operation_id=operation_id,\n@@ -278,7 +291,7 @@ class FastAPI(Starlette):\n                 response_model_exclude_defaults=response_model_exclude_defaults,\n                 response_model_exclude_none=response_model_exclude_none,\n                 include_in_schema=include_in_schema,\n-                response_class=response_class or self.default_response_class,\n+                response_class=response_class,\n                 name=name,\n             )\n             return func\n@@ -305,16 +318,21 @@ class FastAPI(Starlette):\n         tags: Optional[List[str]] = None,\n         dependencies: Optional[Sequence[Depends]] = None,\n         responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        default_response_class: Optional[Type[Response]] = None,\n+        deprecated: bool = None,\n+        include_in_schema: bool = True,\n+        default_response_class: Type[Response] = Default(JSONResponse),\n+        callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> None:\n         self.router.include_router(\n             router,\n             prefix=prefix,\n             tags=tags,\n             dependencies=dependencies,\n-            responses=responses or {},\n-            default_response_class=default_response_class\n-            or self.default_response_class,\n+            responses=responses,\n+            deprecated=deprecated,\n+            include_in_schema=include_in_schema,\n+            default_response_class=default_response_class,\n+            callbacks=callbacks,\n         )\n \n     def get(\n@@ -338,7 +356,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -346,12 +364,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -361,7 +379,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -387,7 +405,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -395,12 +413,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -410,7 +428,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -436,7 +454,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -444,12 +462,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -459,7 +477,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -485,7 +503,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -493,12 +511,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             response_model_include=response_model_include,\n             response_model_exclude=response_model_exclude,\n@@ -508,7 +526,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -534,7 +552,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -542,12 +560,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -557,7 +575,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -583,7 +601,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -591,12 +609,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -606,7 +624,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -632,7 +650,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -640,12 +658,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -655,7 +673,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -681,7 +699,7 @@ class FastAPI(Starlette):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[routing.APIRoute]] = None,\n     ) -> Callable:\n@@ -689,12 +707,12 @@ class FastAPI(Starlette):\n             path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -704,7 +722,7 @@ class FastAPI(Starlette):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n\n@@ -1,4 +1,4 @@\n-from typing import Any, Callable, Iterable, Type\n+from typing import Any, Callable, Iterable, Type, TypeVar\n \n from starlette.datastructures import UploadFile as StarletteUploadFile\n \n@@ -13,3 +13,34 @@ class UploadFile(StarletteUploadFile):\n         if not isinstance(v, StarletteUploadFile):\n             raise ValueError(f\"Expected UploadFile, received: {type(v)}\")\n         return v\n+\n+\n+class DefaultPlaceholder:\n+    \"\"\"\n+    You shouldn't use this class directly.\n+\n+    It's used internally to recognize when a default value has been overwritten, even\n+    if the overriden default value was truthy.\n+    \"\"\"\n+\n+    def __init__(self, value: Any):\n+        self.value = value\n+\n+    def __bool__(self) -> bool:\n+        return bool(self.value)\n+\n+    def __eq__(self, o: object) -> bool:\n+        return isinstance(o, DefaultPlaceholder) and o.value == self.value\n+\n+\n+DefaultType = TypeVar(\"DefaultType\")\n+\n+\n+def Default(value: DefaultType) -> DefaultType:\n+    \"\"\"\n+    You shouldn't use this function directly.\n+\n+    It's used internally to recognize when a default value has been overwritten, even\n+    if the overriden default value was truthy.\n+    \"\"\"\n+    return DefaultPlaceholder(value)  # type: ignore\n\n@@ -3,6 +3,7 @@ from enum import Enum\n from typing import Any, Dict, List, Optional, Sequence, Set, Tuple, Type, Union, cast\n \n from fastapi import routing\n+from fastapi.datastructures import DefaultPlaceholder\n from fastapi.dependencies.models import Dependant\n from fastapi.dependencies.utils import get_flat_dependant, get_flat_params\n from fastapi.encoders import jsonable_encoder\n@@ -159,8 +160,12 @@ def get_openapi_path(\n     security_schemes: Dict[str, Any] = {}\n     definitions: Dict[str, Any] = {}\n     assert route.methods is not None, \"Methods must be a list\"\n-    assert route.response_class, \"A response class is needed to generate OpenAPI\"\n-    route_response_media_type: Optional[str] = route.response_class.media_type\n+    if isinstance(route.response_class, DefaultPlaceholder):\n+        current_response_class: Type[routing.Response] = route.response_class.value\n+    else:\n+        current_response_class = route.response_class\n+    assert current_response_class, \"A response class is needed to generate OpenAPI\"\n+    route_response_media_type: Optional[str] = current_response_class.media_type\n     if route.include_in_schema:\n         for method in route.methods:\n             operation = get_openapi_operation_metadata(route=route, method=method)\n@@ -205,7 +210,7 @@ def get_openapi_path(\n                 and route.status_code not in STATUS_CODES_WITH_NO_BODY\n             ):\n                 response_schema = {\"type\": \"string\"}\n-                if lenient_issubclass(route.response_class, JSONResponse):\n+                if lenient_issubclass(current_response_class, JSONResponse):\n                     if route.response_field:\n                         response_schema, _, _ = field_schema(\n                             route.response_field,\n\n@@ -5,6 +5,7 @@ import json\n from typing import Any, Callable, Dict, List, Optional, Sequence, Set, Type, Union\n \n from fastapi import params\n+from fastapi.datastructures import Default, DefaultPlaceholder\n from fastapi.dependencies.models import Dependant\n from fastapi.dependencies.utils import (\n     get_body_field,\n@@ -19,6 +20,7 @@ from fastapi.utils import (\n     create_cloned_field,\n     create_response_field,\n     generate_operation_id_for_path,\n+    get_value_or_default,\n )\n from pydantic import BaseModel\n from pydantic.error_wrappers import ErrorWrapper, ValidationError\n@@ -139,7 +141,7 @@ def get_request_handler(\n     dependant: Dependant,\n     body_field: Optional[ModelField] = None,\n     status_code: int = 200,\n-    response_class: Type[Response] = JSONResponse,\n+    response_class: Union[Type[Response], DefaultPlaceholder] = Default(JSONResponse),\n     response_field: Optional[ModelField] = None,\n     response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n     response_model_exclude: Optional[Union[SetIntStr, DictIntStrAny]] = None,\n@@ -152,6 +154,10 @@ def get_request_handler(\n     assert dependant.call is not None, \"dependant.call must be a function\"\n     is_coroutine = asyncio.iscoroutinefunction(dependant.call)\n     is_body_form = body_field and isinstance(body_field.field_info, params.Form)\n+    if isinstance(response_class, DefaultPlaceholder):\n+        actual_response_class: Type[Response] = response_class.value\n+    else:\n+        actual_response_class = response_class\n \n     async def app(request: Request) -> Response:\n         try:\n@@ -198,7 +204,7 @@ def get_request_handler(\n                 exclude_none=response_model_exclude_none,\n                 is_coroutine=is_coroutine,\n             )\n-            response = response_class(\n+            response = actual_response_class(\n                 content=response_data,\n                 status_code=status_code,\n                 background=background_tasks,\n@@ -277,7 +283,9 @@ class APIRoute(routing.Route):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Union[Type[Response], DefaultPlaceholder] = Default(\n+            JSONResponse\n+        ),\n         dependency_overrides_provider: Optional[Any] = None,\n         callbacks: Optional[List[\"APIRoute\"]] = None,\n     ) -> None:\n@@ -372,7 +380,7 @@ class APIRoute(routing.Route):\n             dependant=self.dependant,\n             body_field=self.body_field,\n             status_code=self.status_code,\n-            response_class=self.response_class or JSONResponse,\n+            response_class=self.response_class,\n             response_field=self.secure_cloned_response_field,\n             response_model_include=self.response_model_include,\n             response_model_exclude=self.response_model_exclude,\n@@ -387,14 +395,22 @@ class APIRoute(routing.Route):\n class APIRouter(routing.Router):\n     def __init__(\n         self,\n+        *,\n+        prefix: str = \"\",\n+        tags: Optional[List[str]] = None,\n+        dependencies: Optional[Sequence[params.Depends]] = None,\n+        default_response_class: Type[Response] = Default(JSONResponse),\n+        responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n         routes: Optional[List[routing.BaseRoute]] = None,\n         redirect_slashes: bool = True,\n         default: Optional[ASGIApp] = None,\n         dependency_overrides_provider: Optional[Any] = None,\n         route_class: Type[APIRoute] = APIRoute,\n-        default_response_class: Optional[Type[Response]] = None,\n         on_startup: Optional[Sequence[Callable]] = None,\n         on_shutdown: Optional[Sequence[Callable]] = None,\n+        deprecated: bool = None,\n+        include_in_schema: bool = True,\n     ) -> None:\n         super().__init__(\n             routes=routes,\n@@ -403,6 +419,18 @@ class APIRouter(routing.Router):\n             on_startup=on_startup,\n             on_shutdown=on_shutdown,\n         )\n+        if prefix:\n+            assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n+            assert not prefix.endswith(\n+                \"/\"\n+            ), \"A path prefix must not end with '/', as the routes will start with '/'\"\n+        self.prefix = prefix\n+        self.tags: List[str] = tags or []\n+        self.dependencies = list(dependencies or []) or []\n+        self.deprecated = deprecated\n+        self.include_in_schema = include_in_schema\n+        self.responses = responses or {}\n+        self.callbacks = callbacks or []\n         self.dependency_overrides_provider = dependency_overrides_provider\n         self.route_class = route_class\n         self.default_response_class = default_response_class\n@@ -430,24 +458,40 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Union[Type[Response], DefaultPlaceholder] = Default(\n+            JSONResponse\n+        ),\n         name: Optional[str] = None,\n         route_class_override: Optional[Type[APIRoute]] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> None:\n         route_class = route_class_override or self.route_class\n+        responses = responses or {}\n+        combined_responses = {**self.responses, **responses}\n+        current_response_class = get_value_or_default(\n+            response_class, self.default_response_class\n+        )\n+        current_tags = self.tags.copy()\n+        if tags:\n+            current_tags.extend(tags)\n+        current_dependencies = self.dependencies.copy()\n+        if dependencies:\n+            current_dependencies.extend(dependencies)\n+        current_callbacks = self.callbacks.copy()\n+        if callbacks:\n+            current_callbacks.extend(callbacks)\n         route = route_class(\n-            path,\n+            self.prefix + path,\n             endpoint=endpoint,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n-            dependencies=dependencies,\n+            tags=current_tags,\n+            dependencies=current_dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n-            deprecated=deprecated,\n+            responses=combined_responses,\n+            deprecated=deprecated or self.deprecated,\n             methods=methods,\n             operation_id=operation_id,\n             response_model_include=response_model_include,\n@@ -456,11 +500,11 @@ class APIRouter(routing.Router):\n             response_model_exclude_unset=response_model_exclude_unset,\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n-            include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            include_in_schema=include_in_schema and self.include_in_schema,\n+            response_class=current_response_class,\n             name=name,\n             dependency_overrides_provider=self.dependency_overrides_provider,\n-            callbacks=callbacks,\n+            callbacks=current_callbacks,\n         )\n         self.routes.append(route)\n \n@@ -486,7 +530,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -496,12 +540,12 @@ class APIRouter(routing.Router):\n                 func,\n                 response_model=response_model,\n                 status_code=status_code,\n-                tags=tags or [],\n+                tags=tags,\n                 dependencies=dependencies,\n                 summary=summary,\n                 description=description,\n                 response_description=response_description,\n-                responses=responses or {},\n+                responses=responses,\n                 deprecated=deprecated,\n                 methods=methods,\n                 operation_id=operation_id,\n@@ -512,7 +556,7 @@ class APIRouter(routing.Router):\n                 response_model_exclude_defaults=response_model_exclude_defaults,\n                 response_model_exclude_none=response_model_exclude_none,\n                 include_in_schema=include_in_schema,\n-                response_class=response_class or self.default_response_class,\n+                response_class=response_class,\n                 name=name,\n                 callbacks=callbacks,\n             )\n@@ -545,8 +589,11 @@ class APIRouter(routing.Router):\n         prefix: str = \"\",\n         tags: Optional[List[str]] = None,\n         dependencies: Optional[Sequence[params.Depends]] = None,\n+        default_response_class: Type[Response] = Default(JSONResponse),\n         responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\n-        default_response_class: Optional[Type[Response]] = None,\n+        callbacks: Optional[List[APIRoute]] = None,\n+        deprecated: bool = None,\n+        include_in_schema: bool = True,\n     ) -> None:\n         if prefix:\n             assert prefix.startswith(\"/\"), \"A path prefix must start with '/'\"\n@@ -566,19 +613,39 @@ class APIRouter(routing.Router):\n         for route in router.routes:\n             if isinstance(route, APIRoute):\n                 combined_responses = {**responses, **route.responses}\n+                use_response_class = get_value_or_default(\n+                    route.response_class,\n+                    router.default_response_class,\n+                    default_response_class,\n+                    self.default_response_class,\n+                )\n+                current_tags = []\n+                if tags:\n+                    current_tags.extend(tags)\n+                if route.tags:\n+                    current_tags.extend(route.tags)\n+                current_dependencies: List[params.Depends] = []\n+                if dependencies:\n+                    current_dependencies.extend(dependencies)\n+                if route.dependencies:\n+                    current_dependencies.extend(route.dependencies)\n+                current_callbacks = []\n+                if callbacks:\n+                    current_callbacks.extend(callbacks)\n+                if route.callbacks:\n+                    current_callbacks.extend(route.callbacks)\n                 self.add_api_route(\n                     prefix + route.path,\n                     route.endpoint,\n                     response_model=route.response_model,\n                     status_code=route.status_code,\n-                    tags=(route.tags or []) + (tags or []),\n-                    dependencies=list(dependencies or [])\n-                    + list(route.dependencies or []),\n+                    tags=current_tags,\n+                    dependencies=current_dependencies,\n                     summary=route.summary,\n                     description=route.description,\n                     response_description=route.response_description,\n                     responses=combined_responses,\n-                    deprecated=route.deprecated,\n+                    deprecated=route.deprecated or deprecated or self.deprecated,\n                     methods=route.methods,\n                     operation_id=route.operation_id,\n                     response_model_include=route.response_model_include,\n@@ -587,11 +654,13 @@ class APIRouter(routing.Router):\n                     response_model_exclude_unset=route.response_model_exclude_unset,\n                     response_model_exclude_defaults=route.response_model_exclude_defaults,\n                     response_model_exclude_none=route.response_model_exclude_none,\n-                    include_in_schema=route.include_in_schema,\n-                    response_class=route.response_class or default_response_class,\n+                    include_in_schema=route.include_in_schema\n+                    and self.include_in_schema\n+                    and include_in_schema,\n+                    response_class=use_response_class,\n                     name=route.name,\n                     route_class_override=type(route),\n-                    callbacks=route.callbacks,\n+                    callbacks=current_callbacks,\n                 )\n             elif isinstance(route, routing.Route):\n                 self.add_route(\n@@ -635,7 +704,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -643,12 +712,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"GET\"],\n             operation_id=operation_id,\n@@ -659,7 +728,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -685,7 +754,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -693,12 +762,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"PUT\"],\n             operation_id=operation_id,\n@@ -709,7 +778,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -735,7 +804,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -743,12 +812,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"POST\"],\n             operation_id=operation_id,\n@@ -759,7 +828,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -785,7 +854,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -793,12 +862,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"DELETE\"],\n             operation_id=operation_id,\n@@ -809,7 +878,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -835,7 +904,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -843,12 +912,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"OPTIONS\"],\n             operation_id=operation_id,\n@@ -859,7 +928,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -885,7 +954,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -893,12 +962,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"HEAD\"],\n             operation_id=operation_id,\n@@ -909,7 +978,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -935,7 +1004,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -943,12 +1012,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"PATCH\"],\n             operation_id=operation_id,\n@@ -959,7 +1028,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n@@ -985,7 +1054,7 @@ class APIRouter(routing.Router):\n         response_model_exclude_defaults: bool = False,\n         response_model_exclude_none: bool = False,\n         include_in_schema: bool = True,\n-        response_class: Optional[Type[Response]] = None,\n+        response_class: Type[Response] = Default(JSONResponse),\n         name: Optional[str] = None,\n         callbacks: Optional[List[APIRoute]] = None,\n     ) -> Callable:\n@@ -994,12 +1063,12 @@ class APIRouter(routing.Router):\n             path=path,\n             response_model=response_model,\n             status_code=status_code,\n-            tags=tags or [],\n+            tags=tags,\n             dependencies=dependencies,\n             summary=summary,\n             description=description,\n             response_description=response_description,\n-            responses=responses or {},\n+            responses=responses,\n             deprecated=deprecated,\n             methods=[\"TRACE\"],\n             operation_id=operation_id,\n@@ -1010,7 +1079,7 @@ class APIRouter(routing.Router):\n             response_model_exclude_defaults=response_model_exclude_defaults,\n             response_model_exclude_none=response_model_exclude_none,\n             include_in_schema=include_in_schema,\n-            response_class=response_class or self.default_response_class,\n+            response_class=response_class,\n             name=name,\n             callbacks=callbacks,\n         )\n\n@@ -5,6 +5,7 @@ from enum import Enum\n from typing import Any, Dict, Optional, Set, Type, Union, cast\n \n import fastapi\n+from fastapi.datastructures import DefaultPlaceholder, DefaultType\n from fastapi.openapi.constants import REF_PREFIX\n from pydantic import BaseConfig, BaseModel, create_model\n from pydantic.class_validators import Validator\n@@ -136,3 +137,21 @@ def deep_dict_update(main_dict: dict, update_dict: dict) -> None:\n             deep_dict_update(main_dict[key], update_dict[key])\n         else:\n             main_dict[key] = update_dict[key]\n+\n+\n+def get_value_or_default(\n+    first_item: Union[DefaultPlaceholder, DefaultType],\n+    *extra_items: Union[DefaultPlaceholder, DefaultType],\n+) -> Union[DefaultPlaceholder, DefaultType]:\n+    \"\"\"\n+    Pass items or `DefaultPlaceholder`s by descending priority.\n+\n+    The first one to _not_ be a `DefaultPlaceholder` will be returned.\n+\n+    Otherwise, the first item (a `DefaultPlaceholder`) will be returned.\n+    \"\"\"\n+    items = (first_item,) + extra_items\n+    for item in items:\n+        if not isinstance(item, DefaultPlaceholder):\n+            return item\n+    return first_item\n\n@@ -1,7 +1,22 @@\n import pytest\n from fastapi import UploadFile\n+from fastapi.datastructures import Default\n \n \n def test_upload_file_invalid():\n     with pytest.raises(ValueError):\n         UploadFile.validate(\"not a Starlette UploadFile\")\n+\n+\n+def test_default_placeholder_equals():\n+    placeholder_1 = Default(\"a\")\n+    placeholder_2 = Default(\"a\")\n+    assert placeholder_1 == placeholder_2\n+    assert placeholder_1.value == placeholder_2.value\n+\n+\n+def test_default_placeholder_bool():\n+    placeholder_a = Default(\"a\")\n+    placeholder_b = Default(\"\")\n+    assert placeholder_a\n+    assert not placeholder_b\n\n@@ -0,0 +1,6613 @@\n+import pytest\n+from fastapi import APIRouter, Depends, FastAPI, Response\n+from fastapi.responses import JSONResponse\n+from fastapi.testclient import TestClient\n+\n+\n+class ResponseLevel0(JSONResponse):\n+    media_type = \"application/x-level-0\"\n+\n+\n+class ResponseLevel1(JSONResponse):\n+    media_type = \"application/x-level-1\"\n+\n+\n+class ResponseLevel2(JSONResponse):\n+    media_type = \"application/x-level-2\"\n+\n+\n+class ResponseLevel3(JSONResponse):\n+    media_type = \"application/x-level-3\"\n+\n+\n+class ResponseLevel4(JSONResponse):\n+    media_type = \"application/x-level-4\"\n+\n+\n+class ResponseLevel5(JSONResponse):\n+    media_type = \"application/x-level-5\"\n+\n+\n+async def dep0(response: Response):\n+    response.headers[\"x-level0\"] = \"True\"\n+\n+\n+async def dep1(response: Response):\n+    response.headers[\"x-level1\"] = \"True\"\n+\n+\n+async def dep2(response: Response):\n+    response.headers[\"x-level2\"] = \"True\"\n+\n+\n+async def dep3(response: Response):\n+    response.headers[\"x-level3\"] = \"True\"\n+\n+\n+async def dep4(response: Response):\n+    response.headers[\"x-level4\"] = \"True\"\n+\n+\n+async def dep5(response: Response):\n+    response.headers[\"x-level5\"] = \"True\"\n+\n+\n+callback_router0 = APIRouter()\n+\n+\n+@callback_router0.get(\"/\")\n+async def callback0(level0: str):\n+    pass  # pragma: nocover\n+\n+\n+callback_router1 = APIRouter()\n+\n+\n+@callback_router1.get(\"/\")\n+async def callback1(level1: str):\n+    pass  # pragma: nocover\n+\n+\n+callback_router2 = APIRouter()\n+\n+\n+@callback_router2.get(\"/\")\n+async def callback2(level2: str):\n+    pass  # pragma: nocover\n+\n+\n+callback_router3 = APIRouter()\n+\n+\n+@callback_router3.get(\"/\")\n+async def callback3(level3: str):\n+    pass  # pragma: nocover\n+\n+\n+callback_router4 = APIRouter()\n+\n+\n+@callback_router4.get(\"/\")\n+async def callback4(level4: str):\n+    pass  # pragma: nocover\n+\n+\n+callback_router5 = APIRouter()\n+\n+\n+@callback_router5.get(\"/\")\n+async def callback5(level5: str):\n+    pass  # pragma: nocover\n+\n+\n+app = FastAPI(\n+    dependencies=[Depends(dep0)],\n+    responses={\n+        400: {\"description\": \"Client error level 0\"},\n+        500: {\"description\": \"Server error level 0\"},\n+    },\n+    default_response_class=ResponseLevel0,\n+    callbacks=callback_router0.routes,\n+)\n+\n+router2_override = APIRouter(\n+    prefix=\"/level2\",\n+    tags=[\"level2a\", \"level2b\"],\n+    dependencies=[Depends(dep2)],\n+    responses={\n+        402: {\"description\": \"Client error level 2\"},\n+        502: {\"description\": \"Server error level 2\"},\n+    },\n+    default_response_class=ResponseLevel2,\n+    callbacks=callback_router2.routes,\n+    deprecated=True,\n+)\n+router2_default = APIRouter()\n+router4_override = APIRouter(\n+    prefix=\"/level4\",\n+    tags=[\"level4a\", \"level4b\"],\n+    dependencies=[Depends(dep4)],\n+    responses={\n+        404: {\"description\": \"Client error level 4\"},\n+        504: {\"description\": \"Server error level 4\"},\n+    },\n+    default_response_class=ResponseLevel4,\n+    callbacks=callback_router4.routes,\n+    deprecated=True,\n+)\n+router4_default = APIRouter()\n+\n+\n+@app.get(\n+    \"/override1\",\n+    tags=[\"path1a\", \"path1b\"],\n+    responses={\n+        401: {\"description\": \"Client error level 1\"},\n+        501: {\"description\": \"Server error level 1\"},\n+    },\n+    deprecated=True,\n+    callbacks=callback_router1.routes,\n+    dependencies=[Depends(dep1)],\n+    response_class=ResponseLevel1,\n+)\n+async def path1_override(level1: str):\n+    return level1\n+\n+\n+@app.get(\"/default1\")\n+async def path1_default(level1: str):\n+    return level1\n+\n+\n+@router2_override.get(\n+    \"/override3\",\n+    tags=[\"path3a\", \"path3b\"],\n+    responses={\n+        403: {\"description\": \"Client error level 3\"},\n+        503: {\"description\": \"Server error level 3\"},\n+    },\n+    deprecated=True,\n+    callbacks=callback_router3.routes,\n+    dependencies=[Depends(dep3)],\n+    response_class=ResponseLevel3,\n+)\n+async def path3_override_router2_override(level3: str):\n+    return level3\n+\n+\n+@router2_override.get(\"/default3\",)\n+async def path3_default_router2_override(level3: str):\n+    return level3\n+\n+\n+@router2_default.get(\n+    \"/override3\",\n+    tags=[\"path3a\", \"path3b\"],\n+    responses={\n+        403: {\"description\": \"Client error level 3\"},\n+        503: {\"description\": \"Server error level 3\"},\n+    },\n+    deprecated=True,\n+    callbacks=callback_router3.routes,\n+    dependencies=[Depends(dep3)],\n+    response_class=ResponseLevel3,\n+)\n+async def path3_override_router2_default(level3: str):\n+    return level3\n+\n+\n+@router2_default.get(\"/default3\")\n+async def path3_default_router2_default(level3: str):\n+    return level3\n+\n+\n+@router4_override.get(\n+    \"/override5\",\n+    tags=[\"path5a\", \"path5b\"],\n+    responses={\n+        405: {\"description\": \"Client error level 5\"},\n+        505: {\"description\": \"Server error level 5\"},\n+    },\n+    deprecated=True,\n+    callbacks=callback_router5.routes,\n+    dependencies=[Depends(dep5)],\n+    response_class=ResponseLevel5,\n+)\n+async def path5_override_router4_override(level5: str):\n+    return level5\n+\n+\n+@router4_override.get(\"/default5\",)\n+async def path5_default_router4_override(level5: str):\n+    return level5\n+\n+\n+@router4_default.get(\n+    \"/override5\",\n+    tags=[\"path5a\", \"path5b\"],\n+    responses={\n+        405: {\"description\": \"Client error level 5\"},\n+        505: {\"description\": \"Server error level 5\"},\n+    },\n+    deprecated=True,\n+    callbacks=callback_router5.routes,\n+    dependencies=[Depends(dep5)],\n+    response_class=ResponseLevel5,\n+)\n+async def path5_override_router4_default(level5: str):\n+    return level5\n+\n+\n+@router4_default.get(\"/default5\",)\n+async def path5_default_router4_default(level5: str):\n+    return level5\n+\n+\n+router2_override.include_router(\n+    router4_override,\n+    prefix=\"/level3\",\n+    tags=[\"level3a\", \"level3b\"],\n+    dependencies=[Depends(dep3)],\n+    responses={\n+        403: {\"description\": \"Client error level 3\"},\n+        503: {\"description\": \"Server error level 3\"},\n+    },\n+    default_response_class=ResponseLevel3,\n+    callbacks=callback_router3.routes,\n+)\n+\n+router2_override.include_router(\n+    router4_default,\n+    prefix=\"/level3\",\n+    tags=[\"level3a\", \"level3b\"],\n+    dependencies=[Depends(dep3)],\n+    responses={\n+        403: {\"description\": \"Client error level 3\"},\n+        503: {\"description\": \"Server error level 3\"},\n+    },\n+    default_response_class=ResponseLevel3,\n+    callbacks=callback_router3.routes,\n+)\n+\n+router2_override.include_router(router4_override)\n+\n+router2_override.include_router(router4_default)\n+\n+router2_default.include_router(\n+    router4_override,\n+    prefix=\"/level3\",\n+    tags=[\"level3a\", \"level3b\"],\n+    dependencies=[Depends(dep3)],\n+    responses={\n+        403: {\"description\": \"Client error level 3\"},\n+        503: {\"description\": \"Server error level 3\"},\n+    },\n+    default_response_class=ResponseLevel3,\n+    callbacks=callback_router3.routes,\n+)\n+\n+router2_default.include_router(\n+    router4_default,\n+    prefix=\"/level3\",\n+    tags=[\"level3a\", \"level3b\"],\n+    dependencies=[Depends(dep3)],\n+    responses={\n+        403: {\"description\": \"Client error level 3\"},\n+        503: {\"description\": \"Server error level 3\"},\n+    },\n+    default_response_class=ResponseLevel3,\n+    callbacks=callback_router3.routes,\n+)\n+\n+router2_default.include_router(router4_override)\n+\n+router2_default.include_router(router4_default)\n+\n+\n+app.include_router(\n+    router2_override,\n+    prefix=\"/level1\",\n+    tags=[\"level1a\", \"level1b\"],\n+    dependencies=[Depends(dep1)],\n+    responses={\n+        401: {\"description\": \"Client error level 1\"},\n+        501: {\"description\": \"Server error level 1\"},\n+    },\n+    default_response_class=ResponseLevel1,\n+    callbacks=callback_router1.routes,\n+)\n+\n+app.include_router(\n+    router2_default,\n+    prefix=\"/level1\",\n+    tags=[\"level1a\", \"level1b\"],\n+    dependencies=[Depends(dep1)],\n+    responses={\n+        401: {\"description\": \"Client error level 1\"},\n+        501: {\"description\": \"Server error level 1\"},\n+    },\n+    default_response_class=ResponseLevel1,\n+    callbacks=callback_router1.routes,\n+)\n+\n+app.include_router(router2_override)\n+\n+app.include_router(router2_default)\n+\n+client = TestClient(app)\n+\n+\n+def test_openapi():\n+    client = TestClient(app)\n+    response = client.get(\"/openapi.json\")\n+    assert response.json() == openapi_schema\n+\n+\n+def test_level1_override():\n+    response = client.get(\"/override1?level1=foo\")\n+    assert response.json() == \"foo\"\n+    assert response.headers[\"content-type\"] == \"application/x-level-1\"\n+    assert \"x-level0\" in response.headers\n+    assert \"x-level1\" in response.headers\n+    assert \"x-level2\" not in response.headers\n+    assert \"x-level3\" not in response.headers\n+    assert \"x-level4\" not in response.headers\n+    assert \"x-level5\" not in response.headers\n+\n+\n+def test_level1_default():\n+    response = client.get(\"/default1?level1=foo\")\n+    assert response.json() == \"foo\"\n+    assert response.headers[\"content-type\"] == \"application/x-level-0\"\n+    assert \"x-level0\" in response.headers\n+    assert \"x-level1\" not in response.headers\n+    assert \"x-level2\" not in response.headers\n+    assert \"x-level3\" not in response.headers\n+    assert \"x-level4\" not in response.headers\n+    assert \"x-level5\" not in response.headers\n+\n+\n+@pytest.mark.parametrize(\"override1\", [True, False])\n+@pytest.mark.parametrize(\"override2\", [True, False])\n+@pytest.mark.parametrize(\"override3\", [True, False])\n+def test_paths_level3(override1, override2, override3):\n+    url = \"\"\n+    content_type_level = \"0\"\n+    if override1:\n+        url += \"/level1\"\n+        content_type_level = \"1\"\n+    if override2:\n+        url += \"/level2\"\n+        content_type_level = \"2\"\n+    if override3:\n+        url += \"/override3\"\n+        content_type_level = \"3\"\n+    else:\n+        url += \"/default3\"\n+    url += \"?level3=foo\"\n+    response = client.get(url)\n+    assert response.json() == \"foo\"\n+    assert (\n+        response.headers[\"content-type\"] == f\"application/x-level-{content_type_level}\"\n+    )\n+    assert \"x-level0\" in response.headers\n+    assert not override1 or \"x-level1\" in response.headers\n+    assert not override2 or \"x-level2\" in response.headers\n+    assert not override3 or \"x-level3\" in response.headers\n+\n+\n+@pytest.mark.parametrize(\"override1\", [True, False])\n+@pytest.mark.parametrize(\"override2\", [True, False])\n+@pytest.mark.parametrize(\"override3\", [True, False])\n+@pytest.mark.parametrize(\"override4\", [True, False])\n+@pytest.mark.parametrize(\"override5\", [True, False])\n+def test_paths_level5(override1, override2, override3, override4, override5):\n+    url = \"\"\n+    content_type_level = \"0\"\n+    if override1:\n+        url += \"/level1\"\n+        content_type_level = \"1\"\n+    if override2:\n+        url += \"/level2\"\n+        content_type_level = \"2\"\n+    if override3:\n+        url += \"/level3\"\n+        content_type_level = \"3\"\n+    if override4:\n+        url += \"/level4\"\n+        content_type_level = \"4\"\n+    if override5:\n+        url += \"/override5\"\n+        content_type_level = \"5\"\n+    else:\n+        url += \"/default5\"\n+    url += \"?level5=foo\"\n+    response = client.get(url)\n+    assert response.json() == \"foo\"\n+    assert (\n+        response.headers[\"content-type\"] == f\"application/x-level-{content_type_level}\"\n+    )\n+    assert \"x-level0\" in response.headers\n+    assert not override1 or \"x-level1\" in response.headers\n+    assert not override2 or \"x-level2\" in response.headers\n+    assert not override3 or \"x-level3\" in response.headers\n+    assert not override4 or \"x-level4\" in response.headers\n+    assert not override5 or \"x-level5\" in response.headers\n+\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/override1\": {\n+            \"get\": {\n+                \"tags\": [\"path1a\", \"path1b\"],\n+                \"summary\": \"Path1 Override\",\n+                \"operationId\": \"path1_override_override1_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                        \"name\": \"level1\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-1\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/default1\": {\n+            \"get\": {\n+                \"summary\": \"Path1 Default\",\n+                \"operationId\": \"path1_default_default1_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                        \"name\": \"level1\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-0\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    }\n+                },\n+            }\n+        },\n+        \"/level1/level2/override3\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"path3a\",\n+                    \"path3b\",\n+                ],\n+                \"summary\": \"Path3 Override Router2 Override\",\n+                \"operationId\": \"path3_override_router2_override_level1_level2_override3_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                        \"name\": \"level3\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-3\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback3\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback3\",\n+                                \"operationId\": \"callback3__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level3\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/default3\": {\n+            \"get\": {\n+                \"tags\": [\"level1a\", \"level1b\", \"level2a\", \"level2b\"],\n+                \"summary\": \"Path3 Default Router2 Override\",\n+                \"operationId\": \"path3_default_router2_override_level1_level2_default3_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                        \"name\": \"level3\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-2\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/level3/level4/override5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"level3a\",\n+                    \"level3b\",\n+                    \"level4a\",\n+                    \"level4b\",\n+                    \"path5a\",\n+                    \"path5b\",\n+                ],\n+                \"summary\": \"Path5 Override Router4 Override\",\n+                \"operationId\": \"path5_override_router4_override_level1_level2_level3_level4_override5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-5\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"404\": {\"description\": \"Client error level 4\"},\n+                    \"405\": {\"description\": \"Client error level 5\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                    \"504\": {\"description\": \"Server error level 4\"},\n+                    \"505\": {\"description\": \"Server error level 5\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback3\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback3\",\n+                                \"operationId\": \"callback3__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level3\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback4\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback4\",\n+                                \"operationId\": \"callback4__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level4\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level4\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback5\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback5\",\n+                                \"operationId\": \"callback5__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level5\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/level3/level4/default5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"level3a\",\n+                    \"level3b\",\n+                    \"level4a\",\n+                    \"level4b\",\n+                ],\n+                \"summary\": \"Path5 Default Router4 Override\",\n+                \"operationId\": \"path5_default_router4_override_level1_level2_level3_level4_default5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-4\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"404\": {\"description\": \"Client error level 4\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                    \"504\": {\"description\": \"Server error level 4\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback3\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback3\",\n+                                \"operationId\": \"callback3__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level3\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback4\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback4\",\n+                                \"operationId\": \"callback4__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level4\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level4\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/level3/override5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"level3a\",\n+                    \"level3b\",\n+                    \"path5a\",\n+                    \"path5b\",\n+                ],\n+                \"summary\": \"Path5 Override Router4 Default\",\n+                \"operationId\": \"path5_override_router4_default_level1_level2_level3_override5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-5\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"405\": {\"description\": \"Client error level 5\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                    \"505\": {\"description\": \"Server error level 5\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback3\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback3\",\n+                                \"operationId\": \"callback3__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level3\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback5\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback5\",\n+                                \"operationId\": \"callback5__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level5\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/level3/default5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"level3a\",\n+                    \"level3b\",\n+                ],\n+                \"summary\": \"Path5 Default Router4 Default\",\n+                \"operationId\": \"path5_default_router4_default_level1_level2_level3_default5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-3\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback3\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback3\",\n+                                \"operationId\": \"callback3__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level3\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/level4/override5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"level4a\",\n+                    \"level4b\",\n+                    \"path5a\",\n+                    \"path5b\",\n+                ],\n+                \"summary\": \"Path5 Override Router4 Override\",\n+                \"operationId\": \"path5_override_router4_override_level1_level2_level4_override5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-5\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"404\": {\"description\": \"Client error level 4\"},\n+                    \"405\": {\"description\": \"Client error level 5\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"504\": {\"description\": \"Server error level 4\"},\n+                    \"505\": {\"description\": \"Server error level 5\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback4\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback4\",\n+                                \"operationId\": \"callback4__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level4\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level4\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback5\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback5\",\n+                                \"operationId\": \"callback5__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level5\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/level4/default5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"level4a\",\n+                    \"level4b\",\n+                ],\n+                \"summary\": \"Path5 Default Router4 Override\",\n+                \"operationId\": \"path5_default_router4_override_level1_level2_level4_default5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-4\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"404\": {\"description\": \"Client error level 4\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"504\": {\"description\": \"Server error level 4\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback4\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback4\",\n+                                \"operationId\": \"callback4__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level4\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level4\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/override5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level2a\",\n+                    \"level2b\",\n+                    \"path5a\",\n+                    \"path5b\",\n+                ],\n+                \"summary\": \"Path5 Override Router4 Default\",\n+                \"operationId\": \"path5_override_router4_default_level1_level2_override5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-5\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"405\": {\"description\": \"Client error level 5\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                    \"505\": {\"description\": \"Server error level 5\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback5\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback5\",\n+                                \"operationId\": \"callback5__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level5\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level2/default5\": {\n+            \"get\": {\n+                \"tags\": [\"level1a\", \"level1b\", \"level2a\", \"level2b\"],\n+                \"summary\": \"Path5 Default Router4 Default\",\n+                \"operationId\": \"path5_default_router4_default_level1_level2_default5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-2\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"402\": {\"description\": \"Client error level 2\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"502\": {\"description\": \"Server error level 2\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback2\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback2\",\n+                                \"operationId\": \"callback2__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level2\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level2\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/override3\": {\n+            \"get\": {\n+                \"tags\": [\"level1a\", \"level1b\", \"path3a\", \"path3b\"],\n+                \"summary\": \"Path3 Override Router2 Default\",\n+                \"operationId\": \"path3_override_router2_default_level1_override3_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                        \"name\": \"level3\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-3\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback3\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback3\",\n+                                \"operationId\": \"callback3__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level3\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/default3\": {\n+            \"get\": {\n+                \"tags\": [\"level1a\", \"level1b\"],\n+                \"summary\": \"Path3 Default Router2 Default\",\n+                \"operationId\": \"path3_default_router2_default_level1_default3_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                        \"name\": \"level3\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-1\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+            }\n+        },\n+        \"/level1/level3/level4/override5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level3a\",\n+                    \"level3b\",\n+                    \"level4a\",\n+                    \"level4b\",\n+                    \"path5a\",\n+                    \"path5b\",\n+                ],\n+                \"summary\": \"Path5 Override Router4 Override\",\n+                \"operationId\": \"path5_override_router4_override_level1_level3_level4_override5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-5\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"404\": {\"description\": \"Client error level 4\"},\n+                    \"405\": {\"description\": \"Client error level 5\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                    \"504\": {\"description\": \"Server error level 4\"},\n+                    \"505\": {\"description\": \"Server error level 5\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback1\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback1\",\n+                                \"operationId\": \"callback1__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level1\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level1\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback3\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback3\",\n+                                \"operationId\": \"callback3__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level3\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level3\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback4\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback4\",\n+                                \"operationId\": \"callback4__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level4\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level4\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                    \"callback5\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback5\",\n+                                \"operationId\": \"callback5__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level5\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n+                },\n+                \"deprecated\": True,\n+            }\n+        },\n+        \"/level1/level3/level4/default5\": {\n+            \"get\": {\n+                \"tags\": [\n+                    \"level1a\",\n+                    \"level1b\",\n+                    \"level3a\",\n+                    \"level3b\",\n+                    \"level4a\",\n+                    \"level4b\",\n+                ],\n+                \"summary\": \"Path5 Default Router4 Override\",\n+                \"operationId\": \"path5_default_router4_override_level1_level3_level4_default5_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Level5\", \"type\": \"string\"},\n+                        \"name\": \"level5\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/x-level-4\": {\"schema\": {}}},\n+                    },\n+                    \"400\": {\"description\": \"Client error level 0\"},\n+                    \"401\": {\"description\": \"Client error level 1\"},\n+                    \"403\": {\"description\": \"Client error level 3\"},\n+                    \"404\": {\"description\": \"Client error level 4\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                    \"500\": {\"description\": \"Server error level 0\"},\n+                    \"501\": {\"description\": \"Server error level 1\"},\n+                    \"503\": {\"description\": \"Server error level 3\"},\n+                    \"504\": {\"description\": \"Server error level 4\"},\n+                },\n+                \"callbacks\": {\n+                    \"callback0\": {\n+                        \"/\": {\n+                            \"get\": {\n+                                \"summary\": \"Callback0\",\n+                                \"operationId\": \"callback0__get\",\n+                                \"parameters\": [\n+                                    {\n+                                        \"name\": \"level0\",\n+                                        \"in\": \"query\",\n+                                        \"required\": True,\n+                                        \"schema\": {\"title\": \"Level0\", \"type\": \"string\"},\n+                                    }\n+                                ],\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n@@ -1,7 +1,6 @@\n from typing import Optional\n \n from fastapi import APIRouter, FastAPI\n-from fastapi.responses import JSONResponse\n from fastapi.testclient import TestClient\n from pydantic import BaseModel, HttpUrl\n \n@@ -24,14 +23,27 @@ class InvoiceEventReceived(BaseModel):\n     ok: bool\n \n \n-invoices_callback_router = APIRouter(default_response_class=JSONResponse)\n+invoices_callback_router = APIRouter()\n \n \n @invoices_callback_router.post(\n     \"{$callback_url}/invoices/{$request.body.id}\", response_model=InvoiceEventReceived,\n )\n def invoice_notification(body: InvoiceEvent):\n-    pass\n+    pass  # pragma: nocover\n+\n+\n+class Event(BaseModel):\n+    name: str\n+    total: float\n+\n+\n+events_callback_router = APIRouter()\n+\n+\n+@events_callback_router.get(\"{$callback_url}/events/{$request.body.title}\")\n+def event_callback(event: Event):\n+    pass  # pragma: nocover\n \n \n subrouter = APIRouter()\n@@ -58,7 +70,7 @@ def create_invoice(invoice: Invoice, callback_url: Optional[HttpUrl] = None):\n     return {\"msg\": \"Invoice received\"}\n \n \n-app.include_router(subrouter)\n+app.include_router(subrouter, callbacks=events_callback_router.routes)\n \n client = TestClient(app)\n \n@@ -110,6 +122,40 @@ openapi_schema = {\n                     },\n                 },\n                 \"callbacks\": {\n+                    \"event_callback\": {\n+                        \"{$callback_url}/events/{$request.body.title}\": {\n+                            \"get\": {\n+                                \"summary\": \"Event Callback\",\n+                                \"operationId\": \"event_callback__callback_url__events___request_body_title__get\",\n+                                \"requestBody\": {\n+                                    \"required\": True,\n+                                    \"content\": {\n+                                        \"application/json\": {\n+                                            \"schema\": {\n+                                                \"$ref\": \"#/components/schemas/Event\"\n+                                            }\n+                                        }\n+                                    },\n+                                },\n+                                \"responses\": {\n+                                    \"200\": {\n+                                        \"description\": \"Successful Response\",\n+                                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                                    },\n+                                    \"422\": {\n+                                        \"description\": \"Validation Error\",\n+                                        \"content\": {\n+                                            \"application/json\": {\n+                                                \"schema\": {\n+                                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                                }\n+                                            }\n+                                        },\n+                                    },\n+                                },\n+                            }\n+                        }\n+                    },\n                     \"invoice_notification\": {\n                         \"{$callback_url}/invoices/{$request.body.id}\": {\n                             \"post\": {\n@@ -149,13 +195,22 @@ openapi_schema = {\n                                 },\n                             }\n                         }\n-                    }\n+                    },\n                 },\n             }\n         }\n     },\n     \"components\": {\n         \"schemas\": {\n+            \"Event\": {\n+                \"title\": \"Event\",\n+                \"required\": [\"name\", \"total\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"name\": {\"title\": \"Name\", \"type\": \"string\"},\n+                    \"total\": {\"title\": \"Total\", \"type\": \"number\"},\n+                },\n+            },\n             \"HTTPValidationError\": {\n                 \"title\": \"HTTPValidationError\",\n                 \"type\": \"object\",\n@@ -225,8 +280,3 @@ def test_get():\n     )\n     assert response.status_code == 200, response.text\n     assert response.json() == {\"msg\": \"Invoice received\"}\n-\n-\n-def test_dummy_callback():\n-    # Just for coverage\n-    invoice_notification({})\n\n@@ -11,32 +11,17 @@ openapi_schema = {\n     \"paths\": {\n         \"/users/\": {\n             \"get\": {\n-                \"responses\": {\n-                    \"200\": {\n-                        \"description\": \"Successful Response\",\n-                        \"content\": {\"application/json\": {\"schema\": {}}},\n-                    }\n-                },\n                 \"tags\": [\"users\"],\n                 \"summary\": \"Read Users\",\n                 \"operationId\": \"read_users_users__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n                     }\n-        },\n-        \"/users/me\": {\n-            \"get\": {\n-                \"responses\": {\n-                    \"200\": {\n-                        \"description\": \"Successful Response\",\n-                        \"content\": {\"application/json\": {\"schema\": {}}},\n-                    }\n-                },\n-                \"tags\": [\"users\"],\n-                \"summary\": \"Read User Me\",\n-                \"operationId\": \"read_user_me_users_me_get\",\n-            }\n-        },\n-        \"/users/{username}\": {\n-            \"get\": {\n+                ],\n                 \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n@@ -53,6 +38,41 @@ openapi_schema = {\n                         },\n                     },\n                 },\n+            }\n+        },\n+        \"/users/me\": {\n+            \"get\": {\n+                \"tags\": [\"users\"],\n+                \"summary\": \"Read User Me\",\n+                \"operationId\": \"read_user_me_users_me_get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/users/{username}\": {\n+            \"get\": {\n                 \"tags\": [\"users\"],\n                 \"summary\": \"Read User\",\n                 \"operationId\": \"read_user_users__username__get\",\n@@ -62,14 +82,15 @@ openapi_schema = {\n                         \"schema\": {\"title\": \"Username\", \"type\": \"string\"},\n                         \"name\": \"username\",\n                         \"in\": \"path\",\n-                    }\n-                ],\n-            }\n                     },\n-        \"/items/\": {\n-            \"get\": {\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n+                    },\n+                ],\n                 \"responses\": {\n-                    \"404\": {\"description\": \"Not found\"},\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n                         \"content\": {\"application/json\": {\"schema\": {}}},\n@@ -85,27 +106,33 @@ openapi_schema = {\n                         },\n                     },\n                 },\n+            }\n+        },\n+        \"/items/\": {\n+            \"get\": {\n                 \"tags\": [\"items\"],\n                 \"summary\": \"Read Items\",\n                 \"operationId\": \"read_items_items__get\",\n                 \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n+                    },\n                     {\n                         \"required\": True,\n                         \"schema\": {\"title\": \"X-Token\", \"type\": \"string\"},\n                         \"name\": \"x-token\",\n                         \"in\": \"header\",\n-                    }\n-                ],\n-            }\n                     },\n-        \"/items/{item_id}\": {\n-            \"get\": {\n+                ],\n                 \"responses\": {\n-                    \"404\": {\"description\": \"Not found\"},\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n                         \"content\": {\"application/json\": {\"schema\": {}}},\n                     },\n+                    \"404\": {\"description\": \"Not found\"},\n                     \"422\": {\n                         \"description\": \"Validation Error\",\n                         \"content\": {\n@@ -117,6 +144,10 @@ openapi_schema = {\n                         },\n                     },\n                 },\n+            }\n+        },\n+        \"/items/{item_id}\": {\n+            \"get\": {\n                 \"tags\": [\"items\"],\n                 \"summary\": \"Read Item\",\n                 \"operationId\": \"read_item_items__item_id__get\",\n@@ -127,6 +158,12 @@ openapi_schema = {\n                         \"name\": \"item_id\",\n                         \"in\": \"path\",\n                     },\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n+                    },\n                     {\n                         \"required\": True,\n                         \"schema\": {\"title\": \"X-Token\", \"type\": \"string\"},\n@@ -134,11 +171,119 @@ openapi_schema = {\n                         \"in\": \"header\",\n                     },\n                 ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"404\": {\"description\": \"Not found\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n             },\n             \"put\": {\n+                \"tags\": [\"items\", \"custom\"],\n+                \"summary\": \"Update Item\",\n+                \"operationId\": \"update_item_items__item_id__put\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n+                        \"name\": \"item_id\",\n+                        \"in\": \"path\",\n+                    },\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n+                    },\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"X-Token\", \"type\": \"string\"},\n+                        \"name\": \"x-token\",\n+                        \"in\": \"header\",\n+                    },\n+                ],\n                 \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n                     \"404\": {\"description\": \"Not found\"},\n                     \"403\": {\"description\": \"Operation forbidden\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            },\n+        },\n+        \"/admin/\": {\n+            \"post\": {\n+                \"tags\": [\"admin\"],\n+                \"summary\": \"Update Admin\",\n+                \"operationId\": \"update_admin_admin__post\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n+                    },\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"X-Token\", \"type\": \"string\"},\n+                        \"name\": \"x-token\",\n+                        \"in\": \"header\",\n+                    },\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"418\": {\"description\": \"I'm a teapot\"},\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/\": {\n+            \"get\": {\n+                \"summary\": \"Root\",\n+                \"operationId\": \"root__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"Token\", \"type\": \"string\"},\n+                        \"name\": \"token\",\n+                        \"in\": \"query\",\n+                    }\n+                ],\n+                \"responses\": {\n                     \"200\": {\n                         \"description\": \"Successful Response\",\n                         \"content\": {\"application/json\": {\"schema\": {}}},\n@@ -154,28 +299,22 @@ openapi_schema = {\n                         },\n                     },\n                 },\n-                \"tags\": [\"custom\", \"items\"],\n-                \"summary\": \"Update Item\",\n-                \"operationId\": \"update_item_items__item_id__put\",\n-                \"parameters\": [\n-                    {\n-                        \"required\": True,\n-                        \"schema\": {\"title\": \"Item Id\", \"type\": \"string\"},\n-                        \"name\": \"item_id\",\n-                        \"in\": \"path\",\n-                    },\n-                    {\n-                        \"required\": True,\n-                        \"schema\": {\"title\": \"X-Token\", \"type\": \"string\"},\n-                        \"name\": \"x-token\",\n-                        \"in\": \"header\",\n-                    },\n-                ],\n-            },\n+            }\n         },\n     },\n     \"components\": {\n         \"schemas\": {\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n             \"ValidationError\": {\n                 \"title\": \"ValidationError\",\n                 \"required\": [\"loc\", \"msg\", \"type\"],\n@@ -190,49 +329,64 @@ openapi_schema = {\n                     \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n                 },\n             },\n-            \"HTTPValidationError\": {\n-                \"title\": \"HTTPValidationError\",\n-                \"type\": \"object\",\n-                \"properties\": {\n-                    \"detail\": {\n-                        \"title\": \"Detail\",\n-                        \"type\": \"array\",\n-                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n         }\n     },\n-            },\n }\n+\n+\n+no_jessica = {\n+    \"detail\": [\n+        {\n+            \"loc\": [\"query\", \"token\"],\n+            \"msg\": \"field required\",\n+            \"type\": \"value_error.missing\",\n         },\n+    ]\n }\n \n \n @pytest.mark.parametrize(\n     \"path,expected_status,expected_response,headers\",\n     [\n-        (\"/users\", 200, [{\"username\": \"Foo\"}, {\"username\": \"Bar\"}], {}),\n-        (\"/users/foo\", 200, {\"username\": \"foo\"}, {}),\n-        (\"/users/me\", 200, {\"username\": \"fakecurrentuser\"}, {}),\n         (\n-            \"/items\",\n+            \"/users?token=jessica\",\n             200,\n-            [{\"name\": \"Item Foo\"}, {\"name\": \"item Bar\"}],\n+            [{\"username\": \"Rick\"}, {\"username\": \"Morty\"}],\n+            {},\n+        ),\n+        (\"/users\", 422, no_jessica, {}),\n+        (\"/users/foo?token=jessica\", 200, {\"username\": \"foo\"}, {}),\n+        (\"/users/foo\", 422, no_jessica, {}),\n+        (\"/users/me?token=jessica\", 200, {\"username\": \"fakecurrentuser\"}, {}),\n+        (\"/users/me\", 422, no_jessica, {}),\n+        (\n+            \"/items?token=jessica\",\n+            200,\n+            {\"plumbus\": {\"name\": \"Plumbus\"}, \"gun\": {\"name\": \"Portal Gun\"}},\n             {\"X-Token\": \"fake-super-secret-token\"},\n         ),\n+        (\"/items\", 422, no_jessica, {\"X-Token\": \"fake-super-secret-token\"}),\n         (\n-            \"/items/bar\",\n+            \"/items/plumbus?token=jessica\",\n             200,\n-            {\"name\": \"Fake Specific Item\", \"item_id\": \"bar\"},\n+            {\"name\": \"Plumbus\", \"item_id\": \"plumbus\"},\n             {\"X-Token\": \"fake-super-secret-token\"},\n         ),\n-        (\"/items\", 400, {\"detail\": \"X-Token header invalid\"}, {\"X-Token\": \"invalid\"}),\n+        (\"/items/plumbus\", 422, no_jessica, {\"X-Token\": \"fake-super-secret-token\"}),\n         (\n-            \"/items/bar\",\n+            \"/items?token=jessica\",\n             400,\n             {\"detail\": \"X-Token header invalid\"},\n             {\"X-Token\": \"invalid\"},\n         ),\n         (\n-            \"/items\",\n+            \"/items/bar?token=jessica\",\n+            400,\n+            {\"detail\": \"X-Token header invalid\"},\n+            {\"X-Token\": \"invalid\"},\n+        ),\n+        (\n+            \"/items?token=jessica\",\n             422,\n             {\n                 \"detail\": [\n@@ -246,7 +400,7 @@ openapi_schema = {\n             {},\n         ),\n         (\n-            \"/items/bar\",\n+            \"/items/plumbus?token=jessica\",\n             422,\n             {\n                 \"detail\": [\n@@ -259,6 +413,8 @@ openapi_schema = {\n             },\n             {},\n         ),\n+        (\"/?token=jessica\", 200, {\"message\": \"Hello Bigger Applications!\"}, {}),\n+        (\"/\", 422, no_jessica, {}),\n         (\"/openapi.json\", 200, openapi_schema, {}),\n     ],\n )\n@@ -273,11 +429,16 @@ def test_put_no_header():\n     assert response.status_code == 422, response.text\n     assert response.json() == {\n         \"detail\": [\n+            {\n+                \"loc\": [\"query\", \"token\"],\n+                \"msg\": \"field required\",\n+                \"type\": \"value_error.missing\",\n+            },\n             {\n                 \"loc\": [\"header\", \"x-token\"],\n                 \"msg\": \"field required\",\n                 \"type\": \"value_error.missing\",\n-            }\n+            },\n         ]\n     }\n \n@@ -289,12 +450,30 @@ def test_put_invalid_header():\n \n \n def test_put():\n-    response = client.put(\"/items/foo\", headers={\"X-Token\": \"fake-super-secret-token\"})\n+    response = client.put(\n+        \"/items/plumbus?token=jessica\", headers={\"X-Token\": \"fake-super-secret-token\"}\n+    )\n     assert response.status_code == 200, response.text\n-    assert response.json() == {\"item_id\": \"foo\", \"name\": \"The Fighters\"}\n+    assert response.json() == {\"item_id\": \"plumbus\", \"name\": \"The great Plumbus\"}\n \n \n def test_put_forbidden():\n-    response = client.put(\"/items/bar\", headers={\"X-Token\": \"fake-super-secret-token\"})\n+    response = client.put(\n+        \"/items/bar?token=jessica\", headers={\"X-Token\": \"fake-super-secret-token\"}\n+    )\n     assert response.status_code == 403, response.text\n-    assert response.json() == {\"detail\": \"You can only update the item: foo\"}\n+    assert response.json() == {\"detail\": \"You can only update the item: plumbus\"}\n+\n+\n+def test_admin():\n+    response = client.post(\n+        \"/admin/?token=jessica\", headers={\"X-Token\": \"fake-super-secret-token\"}\n+    )\n+    assert response.status_code == 200, response.text\n+    assert response.json() == {\"message\": \"Admin getting schwifty\"}\n+\n+\n+def test_admin_invalid_header():\n+    response = client.post(\"/admin/\", headers={\"X-Token\": \"invalid\"})\n+    assert response.status_code == 400, response.text\n+    assert response.json() == {\"detail\": \"X-Token header invalid\"}\n\n@@ -0,0 +1,209 @@\n+from fastapi.testclient import TestClient\n+\n+from docs_src.dependencies.tutorial012 import app\n+\n+client = TestClient(app)\n+\n+openapi_schema = {\n+    \"openapi\": \"3.0.2\",\n+    \"info\": {\"title\": \"FastAPI\", \"version\": \"0.1.0\"},\n+    \"paths\": {\n+        \"/items/\": {\n+            \"get\": {\n+                \"summary\": \"Read Items\",\n+                \"operationId\": \"read_items_items__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"X-Token\", \"type\": \"string\"},\n+                        \"name\": \"x-token\",\n+                        \"in\": \"header\",\n+                    },\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"X-Key\", \"type\": \"string\"},\n+                        \"name\": \"x-key\",\n+                        \"in\": \"header\",\n+                    },\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+        \"/users/\": {\n+            \"get\": {\n+                \"summary\": \"Read Users\",\n+                \"operationId\": \"read_users_users__get\",\n+                \"parameters\": [\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"X-Token\", \"type\": \"string\"},\n+                        \"name\": \"x-token\",\n+                        \"in\": \"header\",\n+                    },\n+                    {\n+                        \"required\": True,\n+                        \"schema\": {\"title\": \"X-Key\", \"type\": \"string\"},\n+                        \"name\": \"x-key\",\n+                        \"in\": \"header\",\n+                    },\n+                ],\n+                \"responses\": {\n+                    \"200\": {\n+                        \"description\": \"Successful Response\",\n+                        \"content\": {\"application/json\": {\"schema\": {}}},\n+                    },\n+                    \"422\": {\n+                        \"description\": \"Validation Error\",\n+                        \"content\": {\n+                            \"application/json\": {\n+                                \"schema\": {\n+                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n+                                }\n+                            }\n+                        },\n+                    },\n+                },\n+            }\n+        },\n+    },\n+    \"components\": {\n+        \"schemas\": {\n+            \"HTTPValidationError\": {\n+                \"title\": \"HTTPValidationError\",\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"detail\": {\n+                        \"title\": \"Detail\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"$ref\": \"#/components/schemas/ValidationError\"},\n+                    }\n+                },\n+            },\n+            \"ValidationError\": {\n+                \"title\": \"ValidationError\",\n+                \"required\": [\"loc\", \"msg\", \"type\"],\n+                \"type\": \"object\",\n+                \"properties\": {\n+                    \"loc\": {\n+                        \"title\": \"Location\",\n+                        \"type\": \"array\",\n+                        \"items\": {\"type\": \"string\"},\n+                    },\n+                    \"msg\": {\"title\": \"Message\", \"type\": \"string\"},\n+                    \"type\": {\"title\": \"Error Type\", \"type\": \"string\"},\n+                },\n+            },\n+        }\n+    },\n+}\n+\n+\n+def test_openapi_schema():\n+    response = client.get(\"/openapi.json\")\n+    assert response.status_code == 200, response.text\n+    assert response.json() == openapi_schema\n+\n+\n+def test_get_no_headers_items():\n+    response = client.get(\"/items/\")\n+    assert response.status_code == 422, response.text\n+    assert response.json() == {\n+        \"detail\": [\n+            {\n+                \"loc\": [\"header\", \"x-token\"],\n+                \"msg\": \"field required\",\n+                \"type\": \"value_error.missing\",\n+            },\n+            {\n+                \"loc\": [\"header\", \"x-key\"],\n+                \"msg\": \"field required\",\n+                \"type\": \"value_error.missing\",\n+            },\n+        ]\n+    }\n+\n+\n+def test_get_no_headers_users():\n+    response = client.get(\"/users/\")\n+    assert response.status_code == 422, response.text\n+    assert response.json() == {\n+        \"detail\": [\n+            {\n+                \"loc\": [\"header\", \"x-token\"],\n+                \"msg\": \"field required\",\n+                \"type\": \"value_error.missing\",\n+            },\n+            {\n+                \"loc\": [\"header\", \"x-key\"],\n+                \"msg\": \"field required\",\n+                \"type\": \"value_error.missing\",\n+            },\n+        ]\n+    }\n+\n+\n+def test_get_invalid_one_header_items():\n+    response = client.get(\"/items/\", headers={\"X-Token\": \"invalid\"})\n+    assert response.status_code == 400, response.text\n+    assert response.json() == {\"detail\": \"X-Token header invalid\"}\n+\n+\n+def test_get_invalid_one_users():\n+    response = client.get(\"/users/\", headers={\"X-Token\": \"invalid\"})\n+    assert response.status_code == 400, response.text\n+    assert response.json() == {\"detail\": \"X-Token header invalid\"}\n+\n+\n+def test_get_invalid_second_header_items():\n+    response = client.get(\n+        \"/items/\", headers={\"X-Token\": \"fake-super-secret-token\", \"X-Key\": \"invalid\"}\n+    )\n+    assert response.status_code == 400, response.text\n+    assert response.json() == {\"detail\": \"X-Key header invalid\"}\n+\n+\n+def test_get_invalid_second_header_users():\n+    response = client.get(\n+        \"/users/\", headers={\"X-Token\": \"fake-super-secret-token\", \"X-Key\": \"invalid\"}\n+    )\n+    assert response.status_code == 400, response.text\n+    assert response.json() == {\"detail\": \"X-Key header invalid\"}\n+\n+\n+def test_get_valid_headers_items():\n+    response = client.get(\n+        \"/items/\",\n+        headers={\n+            \"X-Token\": \"fake-super-secret-token\",\n+            \"X-Key\": \"fake-super-secret-key\",\n+        },\n+    )\n+    assert response.status_code == 200, response.text\n+    assert response.json() == [{\"item\": \"Portal Gun\"}, {\"item\": \"Plumbus\"}]\n+\n+\n+def test_get_valid_headers_users():\n+    response = client.get(\n+        \"/users/\",\n+        headers={\n+            \"X-Token\": \"fake-super-secret-token\",\n+            \"X-Key\": \"fake-super-secret-key\",\n+        },\n+    )\n+    assert response.status_code == 200, response.text\n+    assert response.json() == [{\"username\": \"Rick\"}, {\"username\": \"Morty\"}]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
