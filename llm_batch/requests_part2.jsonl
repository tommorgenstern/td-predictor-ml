{"custom_id": "requests#e403a8a42c3fb94e95c48e71fdb944811a2b45f4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 19 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 3 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 19 | Churn Cumulative: 753 | Contributors (this commit): 1 | Commits (past 90d): 21 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -344,17 +344,36 @@ def delete(url, params={}, headers={}, auth=None):\n \n \n def add_autoauth(url, authobject):\n+\t\"\"\"Registers given AuthObject to given URL domain. for auto-activation.\n+\tOnce a URL is registered with an AuthObject, the configured HTTP\n+\tAuthentication will be used for all requests with URLS containing the given\n+\tURL string.\n+\n+\tExample: ::\n+\t    >>> c_auth = requests.AuthObject('kennethreitz', 'xxxxxxx')\n+\t    >>> requests.add_autoauth('https://convore.com/api/', c_auth)\n+\t    >>> r = requests.get('https://convore.com/api/account/verify.json')\n+\t    # Automatically HTTP Authenticated! Wh00t!\n+\n+\t:param url: Base URL for given AuthObject to auto-activate for.\n+\t:param authobject: AuthObject to auto-activate.\n+\t\"\"\"\n \tglobal AUTOAUTHS\n \t\n \tAUTOAUTHS.append((url, authobject))\n \n \n def _detect_auth(url, auth):\n+\t\"\"\"Returns registered AuthObject for given url if available, defaulting to\n+\tgiven AuthObject.\"\"\"\n \n \treturn _get_autoauth(url) if not auth else auth\n \n \t\n def _get_autoauth(url):\n+\t\"\"\"Returns registered AuthObject for given url if available.\n+\t\"\"\"\n+\t\n \tfor (autoauth_url, auth) in AUTOAUTHS:\n \t\tif autoauth_url in url: \n \t\t\treturn auth\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9f4ce17a29ead608a42649b3fec4a85b9911dbc9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 50 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -21,7 +21,7 @@ required = []\n \n setup(\n \tname='requests',\n-\tversion='0.0.1',\n+\tversion='0.2.0',\n \tdescription='Python HTTP Library that\\'s actually usable.',\n \tlong_description=open('README.rst').read() + '\\n\\n' +\n \t                 open('HISTORY.rst').read(),\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#fdd54e14d68123899e61dd651176264b1276f416", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 754 | Contributors (this commit): 1 | Commits (past 90d): 22 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -48,7 +48,6 @@ class Request(object):\n \t\"\"\"The :class:`Request` object. It carries out all functionality of\n \tRequests. Recommended interface is with the Requests functions.\n \t\n-\t\n \t\"\"\"\n \t\n \t_METHODS = ('GET', 'HEAD', 'PUT', 'POST', 'DELETE')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4a3f55997bc73d9ff8312cfae68a028728b49f66", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 38 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 3 | Methods Changed: 8 | Complexity Δ (Sum/Max): 8/8 | Churn Δ: 40 | Churn Cumulative: 51 | Contributors (this commit): 1 | Commits (past 90d): 3 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -5,7 +5,43 @@ import unittest\n \n import requests\n \n-print requests.get('http://kennethreitz.com').headers\n+\n+class RequestsTestSuite(unittest.TestCase):\n+\t\"\"\"Requests test cases.\"\"\"\n+\t\n+\tdef setUp(self):\n+\t\tpass\n+\n+\tdef tearDown(self):\n+\t\t\"\"\"Teardown.\"\"\"\n+\t\tpass\n+\t\t\n+\tdef test_invalid_url(self):\n+\t\tself.assertRaises(ValueError, requests.get, 'hiwpefhipowhefopw')\n+\n+\tdef test_HTTP_200_OK_GET(self):\n+\t\tr = requests.get('http://google.com')\n+\t\tself.assertEqual(r.status_code, 200)\n+\n+\tdef test_HTTPS_200_OK_GET(self):\n+\t\tr = requests.get('https://google.com')\n+\t\tself.assertEqual(r.status_code, 200)\n+\n+\tdef test_HTTP_200_OK_HEAD(self):\n+\t\tr = requests.head('http://google.com')\n+\t\tself.assertEqual(r.status_code, 200)\n+\n+\tdef test_HTTPS_200_OK_HEAD(self):\n+\t\tr = requests.head('https://google.com')\n+\t\tself.assertEqual(r.status_code, 200)\n+\n+\tdef test_AUTH_HTTPS_200_OK_GET(self):\n+\t\tauth = requests.AuthObject('requeststest', 'requeststest')\n+\t\turl = 'https://convore.com/api/account/verify.json'\n+\t\tr = requests.get(url, auth=auth)\n+\n+\t\tself.assertEqual(r.status_code, 200)\n \n \n-r = requests.Request()\n\\ No newline at end of file\n+if __name__ == '__main__':\n+\tunittest.main()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e76fa915341f750dff6f1ac77bc3d77ff7134450", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 232 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 232 | Churn Cumulative: 232 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -0,0 +1,232 @@\n+# -*- coding: utf-8 -*-\n+#\n+# Requests documentation build configuration file, created by\n+# sphinx-quickstart on Sun Feb 13 23:54:25 2011.\n+#\n+# This file is execfile()d with the current directory set to its containing dir.\n+#\n+# Note that not all possible configuration values are present in this\n+# autogenerated file.\n+#\n+# All configuration values have a default; values that are commented out\n+# serve to show the default.\n+\n+import sys, os\n+\n+# If extensions (or modules to document with autodoc) are in another directory,\n+# add these directories to sys.path here. If the directory is relative to the\n+# documentation root, use os.path.abspath to make it absolute, like shown here.\n+#sys.path.insert(0, os.path.abspath('.'))\n+\n+# -- General configuration -----------------------------------------------------\n+\n+# If your documentation needs a minimal Sphinx version, state it here.\n+#needs_sphinx = '1.0'\n+\n+# Add any Sphinx extension module names here, as strings. They can be extensions\n+# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.\n+extensions = ['sphinx.ext.autodoc', 'sphinx.ext.todo', 'sphinx.ext.coverage', 'sphinx.ext.pngmath', 'sphinx.ext.jsmath', 'sphinx.ext.viewcode']\n+\n+# Add any paths that contain templates here, relative to this directory.\n+templates_path = ['_templates']\n+\n+# The suffix of source filenames.\n+source_suffix = '.rst'\n+\n+# The encoding of source files.\n+#source_encoding = 'utf-8-sig'\n+\n+# The master toctree document.\n+master_doc = 'index'\n+\n+# General information about the project.\n+project = u'Requests'\n+copyright = u'2011, Kenneth Reitz'\n+\n+# The version info for the project you're documenting, acts as replacement for\n+# |version| and |release|, also used in various other places throughout the\n+# built documents.\n+#\n+# The short X.Y version.\n+version = '0.2.0'\n+# The full version, including alpha/beta/rc tags.\n+release = '0.2.0'\n+\n+# The language for content autogenerated by Sphinx. Refer to documentation\n+# for a list of supported languages.\n+#language = None\n+\n+# There are two options for replacing |today|: either, you set today to some\n+# non-false value, then it is used:\n+#today = ''\n+# Else, today_fmt is used as the format for a strftime call.\n+#today_fmt = '%B %d, %Y'\n+\n+# List of patterns, relative to source directory, that match files and\n+# directories to ignore when looking for source files.\n+exclude_patterns = ['_build']\n+\n+# The reST default role (used for this markup: `text`) to use for all documents.\n+#default_role = None\n+\n+# If true, '()' will be appended to :func: etc. cross-reference text.\n+#add_function_parentheses = True\n+\n+# If true, the current module name will be prepended to all description\n+# unit titles (such as .. function::).\n+#add_module_names = True\n+\n+# If true, sectionauthor and moduleauthor directives will be shown in the\n+# output. They are ignored by default.\n+#show_authors = False\n+\n+# The name of the Pygments (syntax highlighting) style to use.\n+pygments_style = 'sphinx'\n+\n+# A list of ignored prefixes for module index sorting.\n+#modindex_common_prefix = []\n+\n+\n+# -- Options for HTML output ---------------------------------------------------\n+\n+# The theme to use for HTML and HTML Help pages.  See the documentation for\n+# a list of builtin themes.\n+html_theme = 'default'\n+\n+# Theme options are theme-specific and customize the look and feel of a theme\n+# further.  For a list of options available for each theme, see the\n+# documentation.\n+#html_theme_options = {}\n+\n+# Add any paths that contain custom themes here, relative to this directory.\n+#html_theme_path = []\n+\n+# The name for this set of Sphinx documents.  If None, it defaults to\n+# \"<project> v<release> documentation\".\n+#html_title = None\n+\n+# A shorter title for the navigation bar.  Default is the same as html_title.\n+#html_short_title = None\n+\n+# The name of an image file (relative to this directory) to place at the top\n+# of the sidebar.\n+#html_logo = None\n+\n+# The name of an image file (within the static path) to use as favicon of the\n+# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n+# pixels large.\n+#html_favicon = None\n+\n+# Add any paths that contain custom static files (such as style sheets) here,\n+# relative to this directory. They are copied after the builtin static files,\n+# so a file named \"default.css\" will overwrite the builtin \"default.css\".\n+html_static_path = ['_static']\n+\n+# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,\n+# using the given strftime format.\n+#html_last_updated_fmt = '%b %d, %Y'\n+\n+# If true, SmartyPants will be used to convert quotes and dashes to\n+# typographically correct entities.\n+#html_use_smartypants = True\n+\n+# Custom sidebar templates, maps document names to template names.\n+#html_sidebars = {}\n+\n+# Additional templates that should be rendered to pages, maps page names to\n+# template names.\n+#html_additional_pages = {}\n+\n+# If false, no module index is generated.\n+#html_domain_indices = True\n+\n+# If false, no index is generated.\n+#html_use_index = True\n+\n+# If true, the index is split into individual pages for each letter.\n+#html_split_index = False\n+\n+# If true, links to the reST sources are added to the pages.\n+#html_show_sourcelink = True\n+\n+# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n+#html_show_sphinx = True\n+\n+# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n+#html_show_copyright = True\n+\n+# If true, an OpenSearch description file will be output, and all pages will\n+# contain a <link> tag referring to it.  The value of this option must be the\n+# base URL from which the finished HTML is served.\n+#html_use_opensearch = ''\n+\n+# This is the file name suffix for HTML files (e.g. \".xhtml\").\n+#html_file_suffix = None\n+\n+# Output file base name for HTML help builder.\n+htmlhelp_basename = 'Requestsdoc'\n+\n+\n+# -- Options for LaTeX output --------------------------------------------------\n+\n+# The paper size ('letter' or 'a4').\n+#latex_paper_size = 'letter'\n+\n+# The font size ('10pt', '11pt' or '12pt').\n+#latex_font_size = '10pt'\n+\n+# Grouping the document tree into LaTeX files. List of tuples\n+# (source start file, target name, title, author, documentclass [howto/manual]).\n+latex_documents = [\n+  ('index', 'Requests.tex', u'Requests Documentation',\n+   u'Kenneth Reitz', 'manual'),\n+]\n+\n+# The name of an image file (relative to this directory) to place at the top of\n+# the title page.\n+#latex_logo = None\n+\n+# For \"manual\" documents, if this is true, then toplevel headings are parts,\n+# not chapters.\n+#latex_use_parts = False\n+\n+# If true, show page references after internal links.\n+#latex_show_pagerefs = False\n+\n+# If true, show URL addresses after external links.\n+#latex_show_urls = False\n+\n+# Additional stuff for the LaTeX preamble.\n+#latex_preamble = ''\n+\n+# Documents to append as an appendix to all manuals.\n+#latex_appendices = []\n+\n+# If false, no module index is generated.\n+#latex_domain_indices = True\n+\n+\n+# -- Options for manual page output --------------------------------------------\n+\n+# One entry per manual page. List of tuples\n+# (source start file, name, description, authors, manual section).\n+man_pages = [\n+    ('index', 'requests', u'Requests Documentation',\n+     [u'Kenneth Reitz'], 1)\n+]\n+\n+# If true, show URL addresses after external links.\n+#man_show_urls = False\n+\n+# -- Options for Texinfo output ------------------------------------------------\n+\n+# Grouping the document tree into Texinfo files. List of tuples\n+# (source start file, target name, title, author,\n+#  dir menu entry, description, category)\n+texinfo_documents = [\n+  ('index', 'Requests', u'Requests Documentation', u'Kenneth Reitz',\n+   'Requests', 'One line description of project.', 'Miscellaneous'),\n+]\n+\n+# Documents to append as an appendix to all manuals.\n+texinfo_appendices = []\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#18db8b8445951c6b2d77fcb5d4934e8ca2dd1d6e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 5 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -1,3 +1,3 @@\n # -*- coding: utf-8 -*-\n \n-from core import *\n\\ No newline at end of file\n+from .core import *\n\\ No newline at end of file\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#bb4577802990599b68820c1b41e231918c50d97c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 2 | Methods Changed: 1 | Complexity Δ (Sum/Max): 4/4 | Churn Δ: 13 | Churn Cumulative: 767 | Contributors (this commit): 1 | Commits (past 90d): 23 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -62,6 +62,12 @@ class Request(object):\n \t\tself.auth = None\n \t\tself.sent = False\n \t\t\n+\tdef __repr__(self):\n+\t\ttry:\n+\t\t\trepr = '<Request [%s]>' % (self.method)\n+\t\texcept:\n+\t\t\trepr = '<Request object>'\n+\t\treturn repr\n \t\n \tdef __setattr__(self, name, value):\n \t\tif (name == 'method') and (value):\n@@ -211,6 +217,13 @@ class Response(object):\n \t\tself.status_code = None\n \t\tself.headers = dict()\n \t\t\n+\tdef __repr__(self):\n+\t\ttry:\n+\t\t\trepr = '<Response [%s]>' % (self.status_code)\n+\t\texcept:\n+\t\t\trepr = '<Response object>'\n+\t\treturn repr\n+\n \t\n class AuthObject(object):\n \t\"\"\"The :class:`AuthObject` is a simple HTTP Authentication token. When\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f66eafdffdc8fa9a33e97a7c8f0d927ef72a1fdb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 14 | Files Changed: 1 | Hunks: 12 | Methods Changed: 6 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 26 | Churn Cumulative: 793 | Contributors (this commit): 1 | Commits (past 90d): 24 | Contributors (cumulative): 1 | DMM Complexity: 0.0\n\nDIFF:\n@@ -30,11 +30,8 @@ class _Request(urllib2.Request):\n     setting of HTTP methods.\n     \"\"\"\n \t\n-\tdef __init__(self, url,\n-\t\t\t\t\tdata=None, headers={}, origin_req_host=None,\n-\t\t\t\t\tunverifiable=False, method=None):\n-\t\turllib2.Request.__init__( self, url, data, headers, origin_req_host,\n-\t\t\t\t\t\t\t\t  unverifiable)\n+\tdef __init__(self, url, data=None, headers={}, origin_req_host=None, unverifiable=False, method=None):\n+\t\turllib2.Request.__init__( self, url, data, headers, origin_req_host, unverifiable)\n \t\tself.method = method\n \n \tdef get_method(self):\n@@ -47,7 +44,6 @@ class _Request(urllib2.Request):\n class Request(object):\n     \"\"\"The :class:`Request` object. It carries out all functionality of\n     Requests. Recommended interface is with the Requests functions.\n-\t\n     \"\"\"\n \t\n \t_METHODS = ('GET', 'HEAD', 'PUT', 'POST', 'DELETE')\n@@ -62,6 +58,7 @@ class Request(object):\n \t\tself.auth = None\n \t\tself.sent = False\n \t\t\n+\t\t\n \tdef __repr__(self):\n \t\ttry:\n \t\t\trepr = '<Request [%s]>' % (self.method)\n@@ -69,6 +66,7 @@ class Request(object):\n \t\t\trepr = '<Request object>'\n \t\treturn repr\n \t\n+\t\n \tdef __setattr__(self, name, value):\n \t\tif (name == 'method') and (value):\n \t\t\tif not value in self._METHODS:\n@@ -85,8 +83,7 @@ class Request(object):\n \n \t\t\n \tdef _get_opener(self):\n-\t\t\"\"\" Creates appropriate opener object for urllib2.\n-\t\t\"\"\"\n+\t    \"\"\"Creates appropriate opener object for urllib2.\"\"\"\n \t\t\n \t\tif self.auth:\n \n@@ -113,10 +110,12 @@ class Request(object):\n         :param anyway: If True, request will be sent, even if it has\n         already been sent.\n         \"\"\"\n+\n \t\tself._checks()\n \n \t\tsuccess = False\n \n+\n \t\tif self.method in ('GET', 'HEAD', 'DELETE'):\n \t\t\tif (not self.sent) or anyway:\n \n@@ -170,8 +169,6 @@ class Request(object):\n \t\t\t\t\tself.response.status_code = why.code\n \n \n-\n-\n \t\telif self.method == 'POST':\n \t\t\tif (not self.sent) or anyway:\n \n@@ -229,7 +226,7 @@ class AuthObject(object):\n     \"\"\"The :class:`AuthObject` is a simple HTTP Authentication token. When\n     given to a Requests function, it enables Basic HTTP Authentication for that\n     Request. You can also enable Authorization for domain realms with AutoAuth.\n-\tSee AutoAuth for more details.s\n+    See AutoAuth for more details.\n     \n     :param username: Username to authenticate with.\n     :param password: Password for given username.\n@@ -370,6 +367,7 @@ def add_autoauth(url, authobject):\n     :param url: Base URL for given AuthObject to auto-activate for.\n     :param authobject: AuthObject to auto-activate.\n     \"\"\"\n+\n \tglobal AUTOAUTHS\n \t\n \tAUTOAUTHS.append((url, authobject))\n@@ -377,14 +375,14 @@ def add_autoauth(url, authobject):\n \n def _detect_auth(url, auth):\n     \"\"\"Returns registered AuthObject for given url if available, defaulting to\n-\tgiven AuthObject.\"\"\"\n+    given AuthObject.\n+    \"\"\"\n \n \treturn _get_autoauth(url) if not auth else auth\n \n \t\n def _get_autoauth(url):\n-\t\"\"\"Returns registered AuthObject for given url if available.\n-\t\"\"\"\n+    \"\"\"Returns registered AuthObject for given url if available.\"\"\"\n \t\n \tfor (autoauth_url, auth) in AUTOAUTHS:\n \t\tif autoauth_url in url: \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#800b03457b6a80c0310940c03bffe7e6dd5b3286", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 794 | Contributors (this commit): 1 | Commits (past 90d): 25 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -390,6 +390,7 @@ def _get_autoauth(url):\n \t\t\t\n \treturn None\n \n+\n class RequestException(Exception):\n \t\"\"\"There was an ambiguous exception that occured while handling your request.\"\"\"\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9ad8589efd625fe125345a6e1508ee5be78fd547", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 52 | Contributors (this commit): 1 | Commits (past 90d): 3 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -37,7 +37,7 @@ setup(\n \t\t# 'Development Status :: 5 - Production/Stable',\n \t\t'Intended Audience :: Developers',\n \t\t'Natural Language :: English',\n-\t\t'License :: OSI Approved :: MIT License',\n+\t\t'License :: OSI Approved :: ISC License (ISCL)',\n \t\t'Programming Language :: Python',\n         # 'Programming Language :: Python :: 2.5',\n         'Programming Language :: Python :: 2.6',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d961000b96d2f67de97ccee6d150c30353c9b3c4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 795 | Contributors (this commit): 1 | Commits (past 90d): 26 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -342,7 +342,6 @@ def delete(url, params={}, headers={}, auth=None):\n \n \tr.url = url\n \tr.method = 'DELETE'\n-\t# return response object\n \t\n \tr.headers = headers\n \tr.auth = _detect_auth(url, auth)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e6d5e5319ecba82021143624c1040d0ad01bce41", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 4 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 801 | Contributors (this commit): 1 | Commits (past 90d): 27 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -283,12 +283,13 @@ def head(url, params={}, headers={}, auth=None):\n \treturn r.response\n \n \n-def post(url, data={}, headers={}, auth=None):\n+def post(url, data={}, headers={}, multipart_files={}, auth=None):\n \t\"\"\"Sends a POST request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n     :param data: (optional) Dictionary of POST Data to send with the :class:`Request`.\n     :param headers: (optional) Dictionary of HTTP Headers to sent with the :class:`Request`.\n+    :param multipart_files: (optional) Dictoinary of 'filename': file-like-objects for multipart encoding upload.\n     :param auth: (optional) AuthObject to enable Basic HTTP Auth.\n     \"\"\"\n \t\n@@ -306,12 +307,13 @@ def post(url, data={}, headers={}, auth=None):\n \treturn r.response\n \t\n \t\n-def put(url, data='', headers={}, auth=None):\n+def put(url, data='', headers={}, multipart_files={}, auth=None):\n \t\"\"\"Sends a PUT request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n     :param data: (optional) Bytes of PUT Data to send with the :class:`Request`.\n     :param headers: (optional) Dictionary of HTTP Headers to sent with the :class:`Request`.\n+    :param multipart_files: (optional) Dictoinary of 'filename': file-like-objects for multipart encoding upload.\n     :param auth: (optional) AuthObject to enable Basic HTTP Auth.\n     \"\"\"\n \t\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#221bed27dda5e3c2c051de72b5553c73d6183985", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 804 | Contributors (this commit): 1 | Commits (past 90d): 28 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -13,6 +13,9 @@\n import urllib\n import urllib2\n \n+from poster.encode import multipart_encode\n+from poster.streaminghttp import register_openers\n+\n \n __title__ = 'requests'\n __version__ = '0.2.0'\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#127bbbb18dccc0bb0522377c7b81b99b63b84a68", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 1 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -0,0 +1 @@\n+import poster\n\\ No newline at end of file\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7dd37d5ea91cd26c869a39b5a200136305c6f3bb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 42 | Contributors (this commit): 1 | Commits (past 90d): 5 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -1,3 +1,4 @@\n # -*- coding: utf-8 -*-\n \n+import packages\n from .core import *\n\\ No newline at end of file\n\n@@ -26,7 +26,7 @@ New releases of poster will always have a version number that compares greater\n than an older version of poster.\n New in version 0.6.\"\"\"\n \n-import poster.streaminghttp\n-import poster.encode\n+import streaminghttp\n+import encode\n \n version = (0, 8, 0) # Thanks JP!\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f7abfa8a1426b018b99c9ac3237331b55bf7103c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 5 | Files Changed: 1 | Hunks: 8 | Methods Changed: 4 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 23 | Churn Cumulative: 827 | Contributors (this commit): 1 | Commits (past 90d): 29 | Contributors (cumulative): 1 | DMM Complexity: 0.3333333333333333\n\nDIFF:\n@@ -13,8 +13,8 @@\n import urllib\n import urllib2\n \n-from poster.encode import multipart_encode\n-from poster.streaminghttp import register_openers\n+from .packages.poster.encode import multipart_encode\n+from .packages.poster.streaminghttp import register_openers\n \n \n __title__ = 'requests'\n@@ -54,6 +54,7 @@ class Request(object):\n \tdef __init__(self):\n \t\tself.url = None\n \t\tself.headers = dict()\n+\t\tself.multipart_files = None\n \t\tself.method = None\n \t\tself.params = {}\n \t\tself.data = {}\n@@ -175,17 +176,26 @@ class Request(object):\n \t\telif self.method == 'POST':\n \t\t\tif (not self.sent) or anyway:\n \n-\t\t\t\treq = _Request(self.url, method='POST')\n+\t\t\t\tif self.multipart_files:\n+\t\t\t\t\tregister_openers()\n+\t\t\t\t\tdatagen, headers = multipart_encode(self.multipart_files)\n+\t\t\t\t\treq = _Request(self.url, data=datagen, headers=headers, method='POST')\n \n \t\t\t\t\tif self.headers:\n+\t\t\t\t\t\treq.headers.update(self.headers)\n+\t\t\t\t\n+\t\t\t\telse:\n+\t\t\t\t\treq = _Request(self.url, method='POST')\n \t\t\t\t\treq.headers = self.headers\n \n-\t\t\t\t# url encode form data if it's a dict\n \t\t\t\t\tif isinstance(self.data, dict):\n \t\t\t\t\t\treq.data = urllib.urlencode(self.data)\n \t\t\t\t\telse:\n \t\t\t\t\t\treq.data = self.data\n \t\t\t\t\t\n+\t\t\t\t# url encode form data if it's a dict\n+\n+\n \t\t\t\ttry:\n \n \t\t\t\t\topener = self._get_opener()\n@@ -286,7 +296,7 @@ def head(url, params={}, headers={}, auth=None):\n \treturn r.response\n \n \n-def post(url, data={}, headers={}, multipart_files={}, auth=None):\n+def post(url, data={}, headers={}, multipart_files=None, auth=None):\n \t\"\"\"Sends a POST request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n@@ -302,6 +312,9 @@ def post(url, data={}, headers={}, multipart_files={}, auth=None):\n \tr.method = 'POST'\n \tr.data = data\n \t\n+\tif multipart_files:\n+\t\tr.multipart_files = multipart_files\n+\t\n \tr.headers = headers\n \tr.auth = _detect_auth(url, auth)\n \t\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#a16278e85dc1dda84e55f2f63e4d56cb60329601", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 11 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 15 | Churn Cumulative: 842 | Contributors (this commit): 1 | Commits (past 90d): 30 | Contributors (cumulative): 1 | DMM Complexity: 0.0\n\nDIFF:\n@@ -64,11 +64,7 @@ class Request(object):\n \t\t\n \t\t\n \tdef __repr__(self):\n-\t\ttry:\n-\t\t\trepr = '<Request [%s]>' % (self.method)\n-\t\texcept:\n-\t\t\trepr = '<Request object>'\n-\t\treturn repr\n+\t\treturn '<Request [%s]>' % (self.method)\n \t\n \t\n \tdef __setattr__(self, name, value):\n@@ -207,7 +203,7 @@ class Request(object):\n \n \t\t\t\t\tsuccess = True\n \n-\t\t\t\texcept urllib2.HTTPError, why:\n+\t\t\t\texcept(urllib2.HTTPError, why):\n \t\t\t\t\tself.response.status_code = why.code\n \n \t\t\n@@ -228,11 +224,8 @@ class Response(object):\n \t\tself.headers = dict()\n \t\t\n \tdef __repr__(self):\n-\t\ttry:\n-\t\t\trepr = '<Response [%s]>' % (self.status_code)\n-\t\texcept:\n-\t\t\trepr = '<Response object>'\n-\t\treturn repr\n+\t\treturn '<Response [%s]>' % (self.status_code)\n+\t\t\n \n \t\n class AuthObject(object):\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4c8b428bbd3800cafa0e3764512eb719f67315f0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 848 | Contributors (this commit): 1 | Commits (past 90d): 31 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -141,7 +141,7 @@ class Request(object):\n \t\t\t\t\t\tself.response.content = resp.read()\n \n \t\t\t\t\tsuccess = True\n-\t\t\t\texcept urllib2.HTTPError, why:\n+\t\t\t\texcept urllib2.HTTPError as why:\n \t\t\t\t\tself.response.status_code = why.code\n \n \n@@ -165,7 +165,7 @@ class Request(object):\n \n \t\t\t\t\tsuccess = True\n \n-\t\t\t\texcept urllib2.HTTPError, why:\n+\t\t\t\texcept urllib2.HTTPError as why:\n \t\t\t\t\tself.response.status_code = why.code\n \n \n@@ -203,7 +203,7 @@ class Request(object):\n \n \t\t\t\t\tsuccess = True\n \n-\t\t\t\texcept(urllib2.HTTPError, why):\n+\t\t\t\texcept urllib2.HTTPError as why:\n \t\t\t\t\tself.response.status_code = why.code\n \n \t\t\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#4c192ec5acd4417fe60b5a63ea3c6a5c034c1d45", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 3 | Hunks: 4 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 51 | Contributors (this commit): 1 | Commits (past 90d): 10 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -1,4 +1,4 @@\n # -*- coding: utf-8 -*-\n \n-import packages\n+from . import packages\n from .core import *\n\n@@ -1 +1 @@\n-import poster\n\\ No newline at end of file\n+from . import poster\n\n@@ -26,7 +26,7 @@ New releases of poster will always have a version number that compares greater\n than an older version of poster.\n New in version 0.6.\"\"\"\n \n-import streaminghttp\n-import encode\n+from . import streaminghttp\n+from . import encode\n \n version = (0, 8, 0) # Thanks JP!\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#3216bda17432dcb0e7480ba0068b927f7ff746b5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 14 | Churn Cumulative: 862 | Contributors (this commit): 1 | Commits (past 90d): 32 | Contributors (cumulative): 1 | DMM Complexity: 0.0\n\nDIFF:\n@@ -148,6 +148,16 @@ class Request(object):\n \t\telif self.method == 'PUT':\n \t\t\tif (not self.sent) or anyway:\n \n+\t\t\t\tif self.multipart_files:\n+\t\t\t\t\tregister_openers()\n+\t\t\t\t\tdatagen, headers = multipart_encode(self.multipart_files)\n+\t\t\t\t\treq = _Request(self.url, data=datagen, headers=headers, method='PUT')\n+\n+\t\t\t\t\tif self.headers:\n+\t\t\t\t\t\treq.headers.update(self.headers)\n+\n+\t\t\t\telse:\n+\n \t\t\t\t\treq = _Request(self.url, method='PUT')\n \n \t\t\t\t\tif self.headers:\n@@ -184,14 +194,12 @@ class Request(object):\n \t\t\t\t\treq = _Request(self.url, method='POST')\n \t\t\t\t\treq.headers = self.headers\n \n+\t\t\t\t\t# url encode form data if it's a dict\n \t\t\t\t\tif isinstance(self.data, dict):\n \t\t\t\t\t\treq.data = urllib.urlencode(self.data)\n \t\t\t\t\telse:\n \t\t\t\t\t\treq.data = self.data\n \n-\t\t\t\t# url encode form data if it's a dict\n-\n-\n \t\t\t\ttry:\n \n \t\t\t\t\topener = self._get_opener()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e89eba79dfb51e7d88de1fe85ba2b61ed92a8dac", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 5 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 868 | Contributors (this commit): 1 | Commits (past 90d): 33 | Contributors (cumulative): 1 | DMM Complexity: 0.25\n\nDIFF:\n@@ -137,8 +137,9 @@ class Request(object):\n \t\t\t\t\tresp = opener(req)\n \t\t\t\t\tself.response.status_code = resp.code\n \t\t\t\t\tself.response.headers = resp.info().dict\n-\t\t\t\t\tif self.method.lower() == 'get':\n+\t\t\t\t\tif self.method == 'GET':\n \t\t\t\t\t\tself.response.content = resp.read()\n+\t\t\t\t\tself.response.url = resp.url\n \n \t\t\t\t\tsuccess = True\n \t\t\t\texcept urllib2.HTTPError as why:\n@@ -172,6 +173,7 @@ class Request(object):\n \t\t\t\t\tself.response.status_code = resp.code\n \t\t\t\t\tself.response.headers = resp.info().dict\n \t\t\t\t\tself.response.content = resp.read()\n+\t\t\t\t\tself.response.url = resp.url\n \n \t\t\t\t\tsuccess = True\n \n@@ -208,6 +210,7 @@ class Request(object):\n \t\t\t\t\tself.response.status_code = resp.code\n \t\t\t\t\tself.response.headers = resp.info().dict\n \t\t\t\t\tself.response.content = resp.read()\n+\t\t\t\t\tself.response.url = resp.url\n \n \t\t\t\t\tsuccess = True\n \n@@ -230,6 +233,7 @@ class Response(object):\n \t\tself.content = None\n \t\tself.status_code = None\n \t\tself.headers = dict()\n+\t\tself.url = None\n \t\t\n \tdef __repr__(self):\n \t\treturn '<Response [%s]>' % (self.status_code)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#324c572b6496f2f39cf0f266012df1f9f4930568", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 12 | Files Changed: 1 | Hunks: 11 | Methods Changed: 6 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 24 | Churn Cumulative: 892 | Contributors (this commit): 1 | Commits (past 90d): 34 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -54,7 +54,7 @@ class Request(object):\n \tdef __init__(self):\n \t\tself.url = None\n \t\tself.headers = dict()\n-\t\tself.multipart_files = None\n+\t\tself.files = None\n \t\tself.method = None\n \t\tself.params = {}\n \t\tself.data = {}\n@@ -149,9 +149,9 @@ class Request(object):\n \t\telif self.method == 'PUT':\n \t\t\tif (not self.sent) or anyway:\n \n-\t\t\t\tif self.multipart_files:\n+\t\t\t\tif self.files:\n \t\t\t\t\tregister_openers()\n-\t\t\t\t\tdatagen, headers = multipart_encode(self.multipart_files)\n+\t\t\t\t\tdatagen, headers = multipart_encode(self.files)\n \t\t\t\t\treq = _Request(self.url, data=datagen, headers=headers, method='PUT')\n \n \t\t\t\t\tif self.headers:\n@@ -184,9 +184,9 @@ class Request(object):\n \t\telif self.method == 'POST':\n \t\t\tif (not self.sent) or anyway:\n \n-\t\t\t\tif self.multipart_files:\n+\t\t\t\tif self.files:\n \t\t\t\t\tregister_openers()\n-\t\t\t\t\tdatagen, headers = multipart_encode(self.multipart_files)\n+\t\t\t\t\tdatagen, headers = multipart_encode(self.files)\n \t\t\t\t\treq = _Request(self.url, data=datagen, headers=headers, method='POST')\n \n \t\t\t\t\tif self.headers:\n@@ -301,13 +301,13 @@ def head(url, params={}, headers={}, auth=None):\n \treturn r.response\n \n \n-def post(url, data={}, headers={}, multipart_files=None, auth=None):\n+def post(url, data={}, headers={}, files=None, auth=None):\n \t\"\"\"Sends a POST request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n     :param data: (optional) Dictionary of POST Data to send with the :class:`Request`.\n     :param headers: (optional) Dictionary of HTTP Headers to sent with the :class:`Request`.\n-    :param multipart_files: (optional) Dictoinary of 'filename': file-like-objects for multipart encoding upload.\n+    :param files: (optional) Dictionary of 'filename': file-like-objects for multipart encoding upload.\n     :param auth: (optional) AuthObject to enable Basic HTTP Auth.\n     \"\"\"\n \t\n@@ -317,8 +317,8 @@ def post(url, data={}, headers={}, multipart_files=None, auth=None):\n \tr.method = 'POST'\n \tr.data = data\n \t\n-\tif multipart_files:\n-\t\tr.multipart_files = multipart_files\n+\tif files:\n+\t\tr.files = files\n \t\n \tr.headers = headers\n \tr.auth = _detect_auth(url, auth)\n@@ -328,13 +328,13 @@ def post(url, data={}, headers={}, multipart_files=None, auth=None):\n \treturn r.response\n \t\n \t\n-def put(url, data='', headers={}, multipart_files={}, auth=None):\n+def put(url, data='', headers={}, files={}, auth=None):\n \t\"\"\"Sends a PUT request. Returns :class:`Response` object.\n \n     :param url: URL for the new :class:`Request` object.\n     :param data: (optional) Bytes of PUT Data to send with the :class:`Request`.\n     :param headers: (optional) Dictionary of HTTP Headers to sent with the :class:`Request`.\n-    :param multipart_files: (optional) Dictoinary of 'filename': file-like-objects for multipart encoding upload.\n+    :param files: (optional) Dictionary of 'filename': file-like-objects for multipart encoding upload.\n     :param auth: (optional) AuthObject to enable Basic HTTP Auth.\n     \"\"\"\n \t\n@@ -343,7 +343,7 @@ def put(url, data='', headers={}, multipart_files={}, auth=None):\n \tr.url = url\n \tr.method = 'PUT'\n \tr.data = data\n-\t\n+\tr.files = files\n \tr.headers = headers\n \tr.auth = _detect_auth(url, auth)\n \t\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#02834e353d7a9d9a6dff5a2c2ee5ba477f83d46c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 14 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 14 | Churn Cumulative: 65 | Contributors (this commit): 1 | Commits (past 90d): 4 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1,7 +1,9 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n+\n import unittest\n+from cStringIO import StringIO\n \n import requests\n \n@@ -42,6 +44,18 @@ class RequestsTestSuite(unittest.TestCase):\n \n \t\tself.assertEqual(r.status_code, 200)\n \n+\tdef test_POSTBIN_GET_POST_FILES(self):\n+\n+\t\tbin = requests.post('http://www.postbin.org/')\n+\t\tself.assertEqual(bin.status_code, 200)\n+\n+\t\tpost = requests.post(bin.url, data={'some': 'data'})\n+\t\tself.assertEqual(post.status_code, 201)\n+\n+\t\tpost2 = requests.post(bin.url, files={'some': StringIO('data')})\n+\t\tself.assertEqual(post2.status_code, 201)\n+\n+\n \n if __name__ == '__main__':\n \tunittest.main()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9f9ebecec27108db292a31397e44d447f4ebfeb9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 3 | Files Changed: 2 | Hunks: 3 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 952 | Contributors (this commit): 1 | Commits (past 90d): 39 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -18,8 +18,8 @@ from .packages.poster.streaminghttp import register_openers\n \n \n __title__ = 'requests'\n-__version__ = '0.2.0'\n-__build__ = 0x000200\n+__version__ = '0.2.1'\n+__build__ = 0x000201\n __author__ = 'Kenneth Reitz'\n __license__ = 'ISC'\n __copyright__ = 'Copyright 2011 Kenneth Reitz'\n\n@@ -21,7 +21,7 @@ required = []\n \n setup(\n \tname='requests',\n-\tversion='0.2.0',\n+\tversion='0.2.1',\n \tdescription='Python HTTP Library that\\'s actually usable.',\n \tlong_description=open('README.rst').read() + '\\n\\n' +\n \t                 open('HISTORY.rst').read(),\n@@ -30,6 +30,8 @@ setup(\n \turl='https://github.com/kennethreitz/requests',\n \tpackages= [\n \t\t'requests',\n+\t\t'requests.packages',\n+\t\t'requests.packages.poster'\n \t],\n \tinstall_requires=required,\n \tlicense='ISC',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e1659ed7afb674006f6ce07f9908a7bccb7a8474", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 5 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 11 | Churn Cumulative: 67 | Contributors (this commit): 1 | Commits (past 90d): 5 | Contributors (cumulative): 1 | DMM Complexity: 0.0\n\nDIFF:\n@@ -7,12 +7,13 @@ import sys\n from distutils.core import setup\n \n \n-def publish():\n-\t\"\"\"Publish to PyPi\"\"\"\n-\tos.system(\"python setup.py sdist upload\")\n \t\n if sys.argv[-1] == \"publish\":\n-\tpublish()\n+\tos.system(\"python setup.py sdist upload\")\n+\tsys.exit()\n+\n+if sys.argv[-1] == \"test\":\n+\tos.system(\"python test_requests.py\")\n \tsys.exit()\n \t\n required = []\n@@ -22,7 +23,7 @@ required = []\n setup(\n \tname='requests',\n \tversion='0.2.1',\n-\tdescription='Python HTTP Library that\\'s actually usable.',\n+\tdescription='Awesome Python HTTP Library that\\'s actually usable.',\n \tlong_description=open('README.rst').read() + '\\n\\n' +\n \t                 open('HISTORY.rst').read(),\n \tauthor='Kenneth Reitz',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#10280c697dcfd3d334f1c9c381a11c324bb550bc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 19 | Lines Deleted: 20 | Files Changed: 1 | Hunks: 9 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 39 | Churn Cumulative: 935 | Contributors (this commit): 1 | Commits (past 90d): 36 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -100,8 +100,16 @@ class Request(object):\n \t\t\treturn urllib2.urlopen\n \n \n+\tdef _build_response(self, resp):\n+\t\t\"\"\"Build internal Response object from given response.\"\"\"\n+\t\t\n+\t\tself.response.status_code = resp.code\n+\t\tself.response.headers = resp.info().dict\n+\t\tself.response.content = resp.read()\n+\t\tself.response.url = resp.url\n+\n \tdef send(self, anyway=False):\n-\t\t\"\"\"Sends the request. Returns True of successfull, false if not.\n+\t\t\"\"\"Sends the request. Returns True of successful, false if not.\n         If there was an HTTPError during transmission,\n         self.response.status_code will contain the HTTPError code.\n \n@@ -135,15 +143,12 @@ class Request(object):\n \n \t\t\t\ttry:\n \t\t\t\t\tresp = opener(req)\n-\t\t\t\t\tself.response.status_code = resp.code\n-\t\t\t\t\tself.response.headers = resp.info().dict\n-\t\t\t\t\tif self.method == 'GET':\n-\t\t\t\t\t\tself.response.content = resp.read()\n-\t\t\t\t\tself.response.url = resp.url\n-\n+\t\t\t\t\tself._build_response(resp)\n \t\t\t\t\tsuccess = True\n+\n \t\t\t\texcept urllib2.HTTPError as why:\n-\t\t\t\t\tself.response.status_code = why.code\n+\t\t\t\t\tself._build_response(why)\n+\t\t\t\t\tsuccess = False\n \n \n \t\telif self.method == 'PUT':\n@@ -170,15 +175,12 @@ class Request(object):\n \t\t\t\t\topener = self._get_opener()\n \t\t\t\t\tresp =  opener(req)\n \n-\t\t\t\t\tself.response.status_code = resp.code\n-\t\t\t\t\tself.response.headers = resp.info().dict\n-\t\t\t\t\tself.response.content = resp.read()\n-\t\t\t\t\tself.response.url = resp.url\n-\n+\t\t\t\t\tself._build_response(resp)\n \t\t\t\t\tsuccess = True\n \n \t\t\t\texcept urllib2.HTTPError as why:\n-\t\t\t\t\tself.response.status_code = why.code\n+\t\t\t\t\tself._build_response(why)\n+\t\t\t\t\tsuccess = False\n \n \n \t\telif self.method == 'POST':\n@@ -207,15 +209,12 @@ class Request(object):\n \t\t\t\t\topener = self._get_opener()\n \t\t\t\t\tresp =  opener(req)\n \n-\t\t\t\t\tself.response.status_code = resp.code\n-\t\t\t\t\tself.response.headers = resp.info().dict\n-\t\t\t\t\tself.response.content = resp.read()\n-\t\t\t\t\tself.response.url = resp.url\n-\n+\t\t\t\t\tself._build_response(resp)\n \t\t\t\t\tsuccess = True\n \n \t\t\t\texcept urllib2.HTTPError as why:\n-\t\t\t\t\tself.response.status_code = why.code\n+\t\t\t\t\tsself._build_response(why)\n+\t\t\t\t\tsuccess = False\n \n \t\t\n \t\tself.sent = True if success else False\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#09740c35e1e148b41a7f1384a38e33011471d9dc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 937 | Contributors (this commit): 1 | Commits (past 90d): 37 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -213,7 +213,7 @@ class Request(object):\n \t\t\t\t\tsuccess = True\n \n \t\t\t\texcept urllib2.HTTPError as why:\n-\t\t\t\t\tsself._build_response(why)\n+\t\t\t\t\tself._build_response(why)\n \t\t\t\t\tsuccess = False\n \n \t\t\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#f70e89a163208076f12577cd98ce09650b9d1241", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 940 | Contributors (this commit): 1 | Commits (past 90d): 38 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -11,6 +11,9 @@\n \"\"\"\n \n import urllib\n+try:\n+\tfrom eventlet.green import urllib2\n+except ImportError:\n \timport urllib2\n \n from .packages.poster.encode import multipart_encode\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
