{"custom_id": "requests#fd926e74c3879776bcba42ac6f204302417aa1e8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 858 | Contributors (this commit): 20 | Commits (past 90d): 2 | Contributors (cumulative): 20 | DMM Complexity: None\n\nDIFF:\n@@ -19,7 +19,7 @@ Basic GET usage:\n    >>> b'Python is a programming language' in r.content\n    True\n \n-Basic POST usage:\n+... or POST:\n \n    >>> payload = dict(key1='value1', key2='value2')\n    >>> r = requests.post('https://httpbin.org/post', data=payload)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#7d7d9ebacfb99ef1edb5412505a2402affedd848", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 702 | Contributors (this commit): 31 | Commits (past 90d): 2 | Contributors (cumulative): 31 | DMM Complexity: None\n\nDIFF:\n@@ -106,4 +106,8 @@ setup(\n         'socks': ['PySocks>=1.5.6, !=1.5.7'],\n         'socks:sys_platform == \"win32\" and python_version == \"2.7\"': ['win_inet_pton'],\n     },\n+    project_urls={\n+        'Documentation': 'http://docs.python-requests.org',\n+        'Source': 'https://github.com/kennethreitz/requests',\n+    },\n )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#a345b776fb2cf67d1a1810349e71fd60a83f53eb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 46 | Lines Deleted: 42 | Files Changed: 1 | Hunks: 21 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 88 | Churn Cumulative: 642 | Contributors (this commit): 9 | Commits (past 90d): 1 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -21,8 +21,8 @@ import os\n # sys.path.insert(0, os.path.abspath('.'))\n \n # Insert Requests' path into the system.\n-sys.path.insert(0, os.path.abspath('..'))\n-sys.path.insert(0, os.path.abspath('_themes'))\n+sys.path.insert(0, os.path.abspath(\"..\"))\n+sys.path.insert(0, os.path.abspath(\"_themes\"))\n \n import requests\n \n@@ -36,30 +36,30 @@ import requests\n # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n # ones.\n extensions = [\n-    'sphinx.ext.autodoc',\n-    'sphinx.ext.intersphinx',\n-    'sphinx.ext.todo',\n-    'sphinx.ext.viewcode',\n+    \"sphinx.ext.autodoc\",\n+    \"sphinx.ext.intersphinx\",\n+    \"sphinx.ext.todo\",\n+    \"sphinx.ext.viewcode\",\n ]\n \n # Add any paths that contain templates here, relative to this directory.\n-templates_path = ['_templates']\n+templates_path = [\"_templates\"]\n \n # The suffix(es) of source filenames.\n # You can specify multiple suffix as a list of string:\n # source_suffix = ['.rst', '.md']\n-source_suffix = '.rst'\n+source_suffix = \".rst\"\n \n # The encoding of source files.\n # source_encoding = 'utf-8-sig'\n \n # The master toctree document.\n-master_doc = 'index'\n+master_doc = \"index\"\n \n # General information about the project.\n-project = u'Requests'\n-copyright = u'MMXVIII. A <a href=\"http://kennethreitz.com/pages/open-projects.html\">Kenneth Reitz</a> Project'\n-author = u'Kenneth Reitz'\n+project = u\"Requests\"\n+copyright = u'MMXVIX. A <a href=\"http://kennethreitz.com/pages/open-projects.html\">Kenneth Reitz</a> Project'\n+author = u\"Kenneth Reitz\"\n \n # The version info for the project you're documenting, acts as replacement for\n # |version| and |release|, also used in various other places throughout the\n@@ -85,7 +85,7 @@ language = None\n \n # List of patterns, relative to source directory, that match files and\n # directories to ignore when looking for source files.\n-exclude_patterns = ['_build']\n+exclude_patterns = [\"_build\"]\n \n # The reST default role (used for this markup: `text`) to use for all\n # documents.\n@@ -103,7 +103,7 @@ add_module_names = True\n # show_authors = False\n \n # The name of the Pygments (syntax highlighting) style to use.\n-pygments_style = 'flask_theme_support.FlaskyStyle'\n+pygments_style = \"flask_theme_support.FlaskyStyle\"\n \n # A list of ignored prefixes for module index sorting.\n # modindex_common_prefix = []\n@@ -119,18 +119,18 @@ todo_include_todos = True\n \n # The theme to use for HTML and HTML Help pages.  See the documentation for\n # a list of builtin themes.\n-html_theme = 'alabaster'\n+html_theme = \"alabaster\"\n \n # Theme options are theme-specific and customize the look and feel of a theme\n # further.  For a list of options available for each theme, see the\n # documentation.\n html_theme_options = {\n-    'show_powered_by': False,\n-    'github_user': 'requests',\n-    'github_repo': 'requests',\n-    'github_banner': True,\n-    'show_related': False,\n-    'note_bg': '#FFF59C'\n+    \"show_powered_by\": False,\n+    \"github_user\": \"requests\",\n+    \"github_repo\": \"requests\",\n+    \"github_banner\": True,\n+    \"show_related\": False,\n+    \"note_bg\": \"#FFF59C\",\n }\n \n # Add any paths that contain custom themes here, relative to this directory.\n@@ -155,7 +155,7 @@ html_theme_options = {\n # Add any paths that contain custom static files (such as style sheets) here,\n # relative to this directory. They are copied after the builtin static files,\n # so a file named \"default.css\" will overwrite the builtin \"default.css\".\n-html_static_path = ['_static']\n+html_static_path = [\"_static\"]\n \n # Add any extra paths that contain custom files (such as robots.txt or\n # .htaccess) here, relative to this directory. These files are copied\n@@ -172,10 +172,15 @@ html_use_smartypants = False\n \n # Custom sidebar templates, maps document names to template names.\n html_sidebars = {\n-    'index':    ['sidebarintro.html', 'sourcelink.html', 'searchbox.html',\n-                 'hacks.html'],\n-    '**':       ['sidebarlogo.html', 'localtoc.html', 'relations.html',\n-                 'sourcelink.html', 'searchbox.html', 'hacks.html']\n+    \"index\": [\"sidebarintro.html\", \"sourcelink.html\", \"searchbox.html\", \"hacks.html\"],\n+    \"**\": [\n+        \"sidebarlogo.html\",\n+        \"localtoc.html\",\n+        \"relations.html\",\n+        \"sourcelink.html\",\n+        \"searchbox.html\",\n+        \"hacks.html\",\n+    ],\n }\n \n # Additional templates that should be rendered to pages, maps page names to\n@@ -223,20 +228,17 @@ html_show_copyright = True\n # html_search_scorer = 'scorer.js'\n \n # Output file base name for HTML help builder.\n-htmlhelp_basename = 'Requestsdoc'\n+htmlhelp_basename = \"Requestsdoc\"\n \n # -- Options for LaTeX output ---------------------------------------------\n \n latex_elements = {\n     # The paper size ('letterpaper' or 'a4paper').\n     #'papersize': 'letterpaper',\n-\n     # The font size ('10pt', '11pt' or '12pt').\n     #'pointsize': '10pt',\n-\n     # Additional stuff for the LaTeX preamble.\n     #'preamble': '',\n-\n     # Latex figure (float) alignment\n     #'figure_align': 'htbp',\n }\n@@ -245,8 +247,7 @@ latex_elements = {\n # (source start file, target name, title,\n #  author, documentclass [howto, manual, or own class]).\n latex_documents = [\n-    (master_doc, 'Requests.tex', u'Requests Documentation',\n-     u'Kenneth Reitz', 'manual'),\n+    (master_doc, \"Requests.tex\", u\"Requests Documentation\", u\"Kenneth Reitz\", \"manual\")\n ]\n \n # The name of an image file (relative to this directory) to place at the top of\n@@ -274,10 +275,7 @@ latex_documents = [\n \n # One entry per manual page. List of tuples\n # (source start file, name, description, authors, manual section).\n-man_pages = [\n-    (master_doc, 'requests', u'Requests Documentation',\n-     [author], 1)\n-]\n+man_pages = [(master_doc, \"requests\", u\"Requests Documentation\", [author], 1)]\n \n # If true, show URL addresses after external links.\n # man_show_urls = False\n@@ -289,9 +287,15 @@ man_pages = [\n # (source start file, target name, title, author,\n #  dir menu entry, description, category)\n texinfo_documents = [\n-    (master_doc, 'Requests', u'Requests Documentation',\n-     author, 'Requests', 'One line description of project.',\n-     'Miscellaneous'),\n+    (\n+        master_doc,\n+        \"Requests\",\n+        u\"Requests Documentation\",\n+        author,\n+        \"Requests\",\n+        \"One line description of project.\",\n+        \"Miscellaneous\",\n+    )\n ]\n \n # Documents to append as an appendix to all manuals.\n@@ -353,7 +357,7 @@ epub_copyright = copyright\n # epub_post_files = []\n \n # A list of files that should not be packed into the epub file.\n-epub_exclude_files = ['search.html']\n+epub_exclude_files = [\"search.html\"]\n \n # The depth of the table of contents in toc.ncx.\n # epub_tocdepth = 3\n@@ -377,6 +381,6 @@ epub_exclude_files = ['search.html']\n # epub_use_index = True\n \n intersphinx_mapping = {\n-    'python': ('https://docs.python.org/3/', None),\n-    'urllib3': ('https://urllib3.readthedocs.io/en/latest', None),\n+    \"python\": (\"https://docs.python.org/3/\", None),\n+    \"urllib3\": (\"https://urllib3.readthedocs.io/en/latest\", None),\n }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#8b773a4fed7fa58be984d55511f8e9247cfa4202", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 860 | Contributors (this commit): 20 | Commits (past 90d): 3 | Contributors (cumulative): 20 | DMM Complexity: None\n\nDIFF:\n@@ -24,7 +24,7 @@ Basic GET usage:\n    >>> payload = dict(key1='value1', key2='value2')\n    >>> r = requests.post('https://httpbin.org/post', data=payload)\n    >>> r.json()\n-   {'args': {}, 'data': '', 'files': {}, 'form': {'key1': 'value1', 'key2': 'value2'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Connection': 'close', 'Content-Length': '23', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/...'}, 'json': None, 'origin': '...', 'url': 'https://httpbin.org/post'}\n+   {'args': {}, 'data': '', 'files': {}, 'form': {'key1': 'value1', 'key2': 'value2'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '23', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/...'}, 'json': None, 'origin': '...', 'url': 'https://httpbin.org/post'}\n \n The other HTTP methods are supported - see `requests.api`. Full documentation\n is at <http://python-requests.org>.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#a310b5ab34f905460486878fb97facf56690676c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 9772 | Contributors (this commit): 188 | Commits (past 90d): 3 | Contributors (cumulative): 188 | DMM Complexity: None\n\nDIFF:\n@@ -608,7 +608,7 @@ class Response(object):\n \n         #: File-like object representation of response (for advanced usage).\n         #: Use of ``raw`` requires that ``stream=True`` be set on the request.\n-        # This requirement does not apply for use internally to Requests.\n+        #: This requirement does not apply for use internally to Requests.\n         self.raw = None\n \n         #: Final URL location of Response.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d91fe00983f1c66b9a428fe1ad15bf6ea8238972", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 8 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 5 | Methods Changed: 4 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 8 | Churn Cumulative: 9780 | Contributors (this commit): 189 | Commits (past 90d): 3 | Contributors (cumulative): 189 | DMM Complexity: 0.16666666666666666\n\nDIFF:\n@@ -640,6 +640,8 @@ class Response(object):\n         #: is a response.\n         self.request = None\n \n+        self.error = None\n+\n     def __enter__(self):\n         return self\n \n@@ -750,10 +752,13 @@ class Response(object):\n                     for chunk in self.raw.stream(chunk_size, decode_content=True):\n                         yield chunk\n                 except ProtocolError as e:\n+                    self._error = e\n                     raise ChunkedEncodingError(e)\n                 except DecodeError as e:\n+                    self._error = e\n                     raise ContentDecodingError(e)\n                 except ReadTimeoutError as e:\n+                    self._error = e\n                     raise ConnectionError(e)\n             else:\n                 # Standard file-like object.\n@@ -827,6 +832,9 @@ class Response(object):\n             else:\n                 self._content = b''.join(self.iter_content(CONTENT_CHUNK_SIZE)) or b''\n \n+        if self._error is not None:\n+            raise self._error\n+\n         self._content_consumed = True\n         # don't need to release the connection; that's been handled by urllib3\n         # since we exhausted the data.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#bd100472443dcf4189630f6b1ed3ec0a61259dd8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 57 | Lines Deleted: 7 | Files Changed: 2 | Hunks: 8 | Methods Changed: 6 | Complexity Δ (Sum/Max): 5/3 | Churn Δ: 64 | Churn Cumulative: 10211 | Contributors (this commit): 193 | Commits (past 90d): 5 | Contributors (cumulative): 198 | DMM Complexity: 1.0\n\nDIFF:\n@@ -640,7 +640,9 @@ class Response(object):\n         #: is a response.\n         self.request = None\n \n-        self.error = None\n+        #: If there was an error in the processing of content,\n+        #: then save the error that would return the same error when you re-appeal.\n+        self._error = None\n \n     def __enter__(self):\n         return self\n@@ -751,15 +753,21 @@ class Response(object):\n                 try:\n                     for chunk in self.raw.stream(chunk_size, decode_content=True):\n                         yield chunk\n+\n                 except ProtocolError as e:\n-                    self._error = e\n-                    raise ChunkedEncodingError(e)\n+                    self._error = ChunkedEncodingError(e)\n+\n                 except DecodeError as e:\n-                    self._error = e\n-                    raise ContentDecodingError(e)\n+                    self._error = ContentDecodingError(e)\n+\n                 except ReadTimeoutError as e:\n-                    self._error = e\n-                    raise ConnectionError(e)\n+                    self._error = ConnectionError(e)\n+\n+                finally:\n+                    # if we had an error - throw the saved error\n+                    if self._error:\n+                        raise self._error\n+\n             else:\n                 # Standard file-like object.\n                 while True:\n@@ -832,6 +840,7 @@ class Response(object):\n             else:\n                 self._content = b''.join(self.iter_content(CONTENT_CHUNK_SIZE)) or b''\n \n+        # if we had an error - throw the saved error\n         if self._error is not None:\n             raise self._error\n \n\n@@ -3,6 +3,7 @@\n import pytest\n import threading\n import requests\n+from requests.exceptions import ChunkedEncodingError\n \n from tests.testserver.server import Server, consume_socket_content\n \n@@ -307,3 +308,43 @@ def test_fragment_update_on_redirect():\n         assert r.url == 'http://{}:{}/final-url/#relevant-section'.format(host, port)\n \n         close_server.set()\n+\n+\n+def test_response_content_retains_error():\n+    \"\"\"Verify that accessing response.content retains an error.\n+\n+    See https://github.com/kennethreitz/requests/issues/4965\n+    \"\"\"\n+\n+    data = \"Some random stuff to read from remove server.\\n\"\n+\n+    def response_handler(sock):\n+        req = consume_socket_content(sock, timeout=0.5)\n+\n+        # Send invalid chunked data (length mismatch)\n+        sock.send(\n+            b'HTTP/1.1 200 OK\\r\\n'\n+            b'Transfer-Encoding: chunked\\r\\n'\n+            b'\\r\\n2\\r\\n42\\r\\n8\\r\\n123\\r\\n'  # 5 bytes missing\n+        )\n+\n+    close_server = threading.Event()\n+    server = Server(response_handler, wait_to_close_event=close_server)\n+\n+    with server as (host, port):\n+        url = 'http://{}:{}/path'.format(host, port)\n+        r = requests.post(url, stream=True)\n+        with pytest.raises(ChunkedEncodingError):\n+            r.content\n+\n+    # Access the bad response data again, I would expect the same\n+    # error again.\n+\n+    try:\n+        content = r.content\n+    except ChunkedEncodingError:\n+        pass  # fine, same exception\n+    else:\n+        assert False, \"error response has content: {0!r}\".format(content)\n+    close_server.set()\n+\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#68e581f1b5b4425a0ee950a2433fc3c92e671d0f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 705 | Contributors (this commit): 31 | Commits (past 90d): 2 | Contributors (cumulative): 31 | DMM Complexity: None\n\nDIFF:\n@@ -79,7 +79,7 @@ setup(\n     package_data={'': ['LICENSE', 'NOTICE'], 'requests': ['*.pem']},\n     package_dir={'requests': 'requests'},\n     include_package_data=True,\n-    python_requires=\">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\",\n+    python_requires=\">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\",\n     install_requires=requires,\n     license=about['__license__'],\n     zip_safe=False,\n@@ -92,7 +92,6 @@ setup(\n         'Programming Language :: Python :: 2',\n         'Programming Language :: Python :: 2.7',\n         'Programming Language :: Python :: 3',\n-        'Programming Language :: Python :: 3.4',\n         'Programming Language :: Python :: 3.5',\n         'Programming Language :: Python :: 3.6',\n         'Programming Language :: Python :: 3.7',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#aeda65bbe57ac5edbcc2d80db85d010befb7d419", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 6 | Files Changed: 3 | Hunks: 5 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 12 | Churn Cumulative: 1705 | Contributors (this commit): 42 | Commits (past 90d): 8 | Contributors (cumulative): 54 | DMM Complexity: None\n\nDIFF:\n@@ -57,10 +57,10 @@ def check_compatibility(urllib3_version, chardet_version):\n     # Check urllib3 for compatibility.\n     major, minor, patch = urllib3_version  # noqa: F811\n     major, minor, patch = int(major), int(minor), int(patch)\n-    # urllib3 >= 1.21.1, <= 1.24\n+    # urllib3 >= 1.21.1, <= 1.25\n     assert major == 1\n     assert minor >= 21\n-    assert minor <= 24\n+    assert minor <= 25\n \n     # Check chardet for compatibility.\n     major, minor, patch = chardet_version.split('.')[:3]\n\n@@ -5,10 +5,10 @@\n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n __url__ = 'http://python-requests.org'\n-__version__ = '2.21.0'\n-__build__ = 0x022100\n+__version__ = '2.22.0'\n+__build__ = 0x022200\n __author__ = 'Kenneth Reitz'\n __author_email__ = 'me@kennethreitz.org'\n __license__ = 'Apache 2.0'\n-__copyright__ = 'Copyright 2018 Kenneth Reitz'\n+__copyright__ = 'Copyright 2019 Kenneth Reitz'\n __cake__ = u'\\u2728 \\U0001f370 \\u2728'\n\n@@ -44,7 +44,7 @@ packages = ['requests']\n requires = [\n     'chardet>=3.0.2,<3.1.0',\n     'idna>=2.5,<2.9',\n-    'urllib3>=1.21.1,<1.25',\n+    'urllib3>=1.21.1,<1.26,!=1.25.0,!=1.25.1',\n     'certifi>=2017.4.17'\n \n ]\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#67a0e90b6b5f5a4bec5fdd744a0a662892e92830", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 13 | Churn Cumulative: 877 | Contributors (this commit): 20 | Commits (past 90d): 3 | Contributors (cumulative): 20 | DMM Complexity: None\n\nDIFF:\n@@ -23,8 +23,17 @@ Basic GET usage:\n \n    >>> payload = dict(key1='value1', key2='value2')\n    >>> r = requests.post('https://httpbin.org/post', data=payload)\n-   >>> r.json()\n-   {'args': {}, 'data': '', 'files': {}, 'form': {'key1': 'value1', 'key2': 'value2'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '23', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/...'}, 'json': None, 'origin': '...', 'url': 'https://httpbin.org/post'}\n+   >>> print(r.text)\n+   ... # doctest: +ELLIPSIS\n+   ... # doctest: +NORMALIZE_WHITESPACE\n+   {\n+     ...\n+     \"form\": {\n+       \"key1\": \"value1\",\n+       \"key2\": \"value2\"\n+     },\n+     ...\n+   }\n \n The other HTTP methods are supported - see `requests.api`. Full documentation\n is at <http://python-requests.org>.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#6d2a5072ca0851e37f7c529f27d13edfddc8c1dd", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 879 | Contributors (this commit): 20 | Commits (past 90d): 4 | Contributors (cumulative): 20 | DMM Complexity: None\n\nDIFF:\n@@ -24,8 +24,6 @@ Basic GET usage:\n    >>> payload = dict(key1='value1', key2='value2')\n    >>> r = requests.post('https://httpbin.org/post', data=payload)\n    >>> print(r.text)\n-   ... # doctest: +ELLIPSIS\n-   ... # doctest: +NORMALIZE_WHITESPACE\n    {\n      ...\n      \"form\": {\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d88240ba449f1c92006102adc475543d5e649ffa", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1573 | Contributors (this commit): 48 | Commits (past 90d): 1 | Contributors (cumulative): 48 | DMM Complexity: None\n\nDIFF:\n@@ -50,7 +50,7 @@ def _basic_auth_str(username, password):\n             \"Non-string passwords will no longer be supported in Requests \"\n             \"3.0.0. Please convert the object you've passed in ({!r}) to \"\n             \"a string or bytes object in the near future to avoid \"\n-            \"problems.\".format(password),\n+            \"problems.\".format(type(password)),\n             category=DeprecationWarning,\n         )\n         password = str(password)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#dc75b3ca0b4c95648eb07b92cb414394d99c13a0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 2175 | Contributors (this commit): 54 | Commits (past 90d): 7 | Contributors (cumulative): 60 | DMM Complexity: None\n\nDIFF:\n@@ -54,7 +54,7 @@ test_requirements = [\n     'pytest-mock',\n     'pytest-xdist',\n     'PySocks>=1.5.6, !=1.5.7',\n-    'pytest>=2.8.0'\n+    'pytest>=3'\n ]\n \n about = {}\n\n@@ -33,7 +33,8 @@ class TestSuperLen:\n         'stream, value', (\n             (StringIO.StringIO, 'Test'),\n             (BytesIO, b'Test'),\n-            pytest.mark.skipif('cStringIO is None')((cStringIO, 'Test')),\n+            pytest.param(cStringIO, 'Test',\n+                         marks=pytest.mark.skipif('cStringIO is None')),\n         ))\n     def test_io_streams(self, stream, value):\n         \"\"\"Ensures that we properly deal with different kinds of IO streams.\"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#47cb8bae1afedb600007683048eff4572850a34e", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 5 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 6 | Churn Cumulative: 3520 | Contributors (this commit): 100 | Commits (past 90d): 1 | Contributors (cumulative): 100 | DMM Complexity: 0.75\n\nDIFF:\n@@ -201,10 +201,7 @@ class SessionRedirectMixin(object):\n                 prepared_request.body = None\n \n             headers = prepared_request.headers\n-            try:\n-                del headers['Cookie']\n-            except KeyError:\n-                pass\n+            headers.pop('Cookie', None)\n \n             # Extract any cookies sent on the response to the cookiejar\n             # in the new request. Because we've mutated our copied prepared\n@@ -271,7 +268,6 @@ class SessionRedirectMixin(object):\n         if new_auth is not None:\n             prepared_request.prepare_auth(new_auth)\n \n-        return\n \n     def rebuild_proxies(self, prepared_request, proxies):\n         \"\"\"This method re-evaluates the proxy configuration by considering the\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#45c2e679e0923cd8519db31b31d0573928c6d1f4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 6 | Churn Cumulative: 3526 | Contributors (this commit): 100 | Commits (past 90d): 2 | Contributors (cumulative): 100 | DMM Complexity: None\n\nDIFF:\n@@ -162,7 +162,7 @@ class SessionRedirectMixin(object):\n                 resp.raw.read(decode_content=False)\n \n             if len(resp.history) >= self.max_redirects:\n-                raise TooManyRedirects('Exceeded %s redirects.' % self.max_redirects, response=resp)\n+                raise TooManyRedirects('Exceeded {} redirects.'.format(self.max_redirects), response=resp)\n \n             # Release the connection back into the pool.\n             resp.close()\n@@ -170,7 +170,7 @@ class SessionRedirectMixin(object):\n             # Handle redirection without scheme (see: RFC 1808 Section 4)\n             if url.startswith('//'):\n                 parsed_rurl = urlparse(resp.url)\n-                url = '%s:%s' % (to_native_string(parsed_rurl.scheme), url)\n+                url = ':'.join([to_native_string(parsed_rurl.scheme), url])\n \n             # Normalize url case and attach previous fragment if needed (RFC 7231 7.1.2)\n             parsed = urlparse(url)\n@@ -728,7 +728,7 @@ class Session(SessionRedirectMixin):\n                 return adapter\n \n         # Nothing matches :-/\n-        raise InvalidSchema(\"No connection adapters were found for '%s'\" % url)\n+        raise InvalidSchema(\"No connection adapters were found for {!r}\".format(url))\n \n     def close(self):\n         \"\"\"Closes all adapters and as such the session\"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c8d8b4b513986ef415cdfbcf0fc6006bcd5492d6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 1244 | Contributors (this commit): 52 | Commits (past 90d): 1 | Contributors (cumulative): 52 | DMM Complexity: 1.0\n\nDIFF:\n@@ -92,7 +92,9 @@ def head(url, **kwargs):\n     r\"\"\"Sends a HEAD request.\n \n     :param url: URL for the new :class:`Request` object.\n-    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n+    :param \\*\\*kwargs: Optional arguments that ``request`` takes. If\n+        `allow_redirects` is not provided, it will be set to `False` (as\n+        opposed to the default :meth:`request` behavior).\n     :return: :class:`Response <Response>` object\n     :rtype: requests.Response\n     \"\"\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#2da7fe08586aeaff614c017a9a834a22c937384a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 47 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): -6/0 | Churn Δ: 49 | Churn Cumulative: 1302 | Contributors (this commit): 50 | Commits (past 90d): 1 | Contributors (cumulative): 50 | DMM Complexity: 1.0\n\nDIFF:\n@@ -435,7 +435,6 @@ class HTTPAdapter(BaseAdapter):\n             timeout = TimeoutSauce(connect=timeout, read=timeout)\n \n         try:\n-            if not chunked:\n             resp = conn.urlopen(\n                 method=request.method,\n                 url=url,\n@@ -446,54 +445,10 @@ class HTTPAdapter(BaseAdapter):\n                 preload_content=False,\n                 decode_content=False,\n                 retries=self.max_retries,\n-                    timeout=timeout\n+                timeout=timeout,\n+                chunked=chunked\n             )\n \n-            # Send the request.\n-            else:\n-                if hasattr(conn, 'proxy_pool'):\n-                    conn = conn.proxy_pool\n-\n-                low_conn = conn._get_conn(timeout=DEFAULT_POOL_TIMEOUT)\n-\n-                try:\n-                    low_conn.putrequest(request.method,\n-                                        url,\n-                                        skip_accept_encoding=True)\n-\n-                    for header, value in request.headers.items():\n-                        low_conn.putheader(header, value)\n-\n-                    low_conn.endheaders()\n-\n-                    for i in request.body:\n-                        low_conn.send(hex(len(i))[2:].encode('utf-8'))\n-                        low_conn.send(b'\\r\\n')\n-                        low_conn.send(i)\n-                        low_conn.send(b'\\r\\n')\n-                    low_conn.send(b'0\\r\\n\\r\\n')\n-\n-                    # Receive the response from the server\n-                    try:\n-                        # For Python 2.7, use buffering of HTTP responses\n-                        r = low_conn.getresponse(buffering=True)\n-                    except TypeError:\n-                        # For compatibility with Python 3.3+\n-                        r = low_conn.getresponse()\n-\n-                    resp = HTTPResponse.from_httplib(\n-                        r,\n-                        pool=conn,\n-                        connection=low_conn,\n-                        preload_content=False,\n-                        decode_content=False\n-                    )\n-                except:\n-                    # If we hit any problems here, clean up the connection.\n-                    # Then, reraise so that we can handle the actual exception.\n-                    low_conn.close()\n-                    raise\n-\n         except (ProtocolError, socket.error) as err:\n             raise ConnectionError(err, request=request)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c79d61b9537635e88c3198172c58e29cf6ef26d5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1246 | Contributors (this commit): 53 | Commits (past 90d): 2 | Contributors (cumulative): 53 | DMM Complexity: None\n\nDIFF:\n@@ -16,7 +16,7 @@ from . import sessions\n def request(method, url, **kwargs):\n     \"\"\"Constructs and sends a :class:`Request <Request>`.\n \n-    :param method: method for the new :class:`Request` object.\n+    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS`, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.\n     :param url: URL for the new :class:`Request` object.\n     :param params: (optional) Dictionary, list of tuples or bytes to send\n         in the query string for the :class:`Request`.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#a4c18cd733f97b5659a29589432d8a39e7a0de87", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 1248 | Contributors (this commit): 53 | Commits (past 90d): 3 | Contributors (cumulative): 53 | DMM Complexity: None\n\nDIFF:\n@@ -16,7 +16,7 @@ from . import sessions\n def request(method, url, **kwargs):\n     \"\"\"Constructs and sends a :class:`Request <Request>`.\n \n-    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS`, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.\n+    :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.\n     :param url: URL for the new :class:`Request` object.\n     :param params: (optional) Dictionary, list of tuples or bytes to send\n         in the query string for the :class:`Request`.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9cdf29410778f31b88c48385c4a0fdf96fa10bd1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 11 | Lines Deleted: 11 | Files Changed: 7 | Hunks: 11 | Methods Changed: 9 | Complexity Δ (Sum/Max): -4/2 | Churn Δ: 22 | Churn Cumulative: 24541 | Contributors (this commit): 345 | Commits (past 90d): 10 | Contributors (cumulative): 549 | DMM Complexity: None\n\nDIFF:\n@@ -239,7 +239,7 @@ class HTTPDigestAuth(AuthBase):\n         \"\"\"\n \n         # If response is not 4xx, do not auth\n-        # See https://github.com/requests/requests/issues/3772\n+        # See https://github.com/psf/requests/issues/3772\n         if not 400 <= r.status_code < 500:\n             self._thread_local.num_401_calls = 1\n             return r\n\n@@ -12,7 +12,7 @@ import sys\n \n # Import encoding now, to avoid implicit import later.\n # Implicit import within threads may cause LookupError when standard library is in a ZIP,\n-# such as in Embedded Python. See https://github.com/requests/requests/issues/3578.\n+# such as in Embedded Python. See https://github.com/psf/requests/issues/3578.\n import encodings.idna\n \n from urllib3.fields import RequestField\n@@ -358,7 +358,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):\n         #: We're unable to blindly call unicode/str functions\n         #: as this will include the bytestring indicator (b'')\n         #: on python 3.x.\n-        #: https://github.com/requests/requests/pull/2238\n+        #: https://github.com/psf/requests/pull/2238\n         if isinstance(url, bytes):\n             url = url.decode('utf8')\n         else:\n\n@@ -192,9 +192,9 @@ class SessionRedirectMixin(object):\n \n             self.rebuild_method(prepared_request, resp)\n \n-            # https://github.com/requests/requests/issues/1084\n+            # https://github.com/psf/requests/issues/1084\n             if resp.status_code not in (codes.temporary_redirect, codes.permanent_redirect):\n-                # https://github.com/requests/requests/issues/3490\n+                # https://github.com/psf/requests/issues/3490\n                 purged_headers = ('Content-Length', 'Content-Type', 'Transfer-Encoding')\n                 for header in purged_headers:\n                     prepared_request.headers.pop(header, None)\n\n@@ -179,7 +179,7 @@ def get_netrc_auth(url, raise_errors=False):\n             except KeyError:\n                 # os.path.expanduser can fail when $HOME is undefined and\n                 # getpwuid fails. See https://bugs.python.org/issue20164 &\n-                # https://github.com/requests/requests/issues/1846\n+                # https://github.com/psf/requests/issues/1846\n                 return\n \n             if os.path.exists(loc):\n\n@@ -28,7 +28,7 @@ def test_digestauth_401_count_reset_on_redirect():\n     \"\"\"Ensure we correctly reset num_401_calls after a successful digest auth,\n     followed by a 302 redirect to another digest auth prompt.\n \n-    See https://github.com/requests/requests/issues/1979.\n+    See https://github.com/psf/requests/issues/1979.\n     \"\"\"\n     text_401 = (b'HTTP/1.1 401 UNAUTHORIZED\\r\\n'\n                 b'Content-Length: 0\\r\\n'\n@@ -138,7 +138,7 @@ def test_digestauth_401_only_sent_once():\n def test_digestauth_only_on_4xx():\n     \"\"\"Ensure we only send digestauth on 4xx challenges.\n \n-    See https://github.com/requests/requests/issues/3772.\n+    See https://github.com/psf/requests/issues/3772.\n     \"\"\"\n     text_200_chal = (b'HTTP/1.1 200 OK\\r\\n'\n                      b'Content-Length: 0\\r\\n'\n\n@@ -466,7 +466,7 @@ class TestRequests:\n     @pytest.mark.parametrize('key', ('User-agent', 'user-agent'))\n     def test_user_agent_transfers(self, httpbin, key):\n \n-        heads = {key: 'Mozilla/5.0 (github.com/requests/requests)'}\n+        heads = {key: 'Mozilla/5.0 (github.com/psf/requests)'}\n \n         r = requests.get(httpbin('user-agent'), headers=heads)\n         assert heads[key] in r.text\n@@ -2212,7 +2212,7 @@ class TestTimeout:\n             pass\n \n     def test_encoded_methods(self, httpbin):\n-        \"\"\"See: https://github.com/requests/requests/issues/2316\"\"\"\n+        \"\"\"See: https://github.com/psf/requests/issues/2316\"\"\"\n         r = requests.request(b'GET', httpbin('get'))\n         assert r.ok\n \n\n@@ -397,7 +397,7 @@ def test_get_auth_from_url(url, auth):\n         ),\n     ))\n def test_requote_uri_with_unquoted_percents(uri, expected):\n-    \"\"\"See: https://github.com/requests/requests/issues/2356\"\"\"\n+    \"\"\"See: https://github.com/psf/requests/issues/2356\"\"\"\n     assert requote_uri(uri) == expected\n \n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#bc81ee3af47571d6a6aeb23dc7af74e252f015ed", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 710 | Contributors (this commit): 32 | Commits (past 90d): 1 | Contributors (cumulative): 32 | DMM Complexity: None\n\nDIFF:\n@@ -95,6 +95,7 @@ setup(\n         'Programming Language :: Python :: 3.5',\n         'Programming Language :: Python :: 3.6',\n         'Programming Language :: Python :: 3.7',\n+        'Programming Language :: Python :: 3.8',\n         'Programming Language :: Python :: Implementation :: CPython',\n         'Programming Language :: Python :: Implementation :: PyPy'\n     ],\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#39b3dcf7d937570f8a5ecda57ac0aae7eeea3aba", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 3 | Churn Cumulative: 171 | Contributors (this commit): 17 | Commits (past 90d): 1 | Contributors (cumulative): 17 | DMM Complexity: None\n\nDIFF:\n@@ -4,6 +4,9 @@ r\"\"\"\n The ``codes`` object defines a mapping from common names for HTTP statuses\n to their numerical codes, accessible either as attributes or as dictionary\n items.\n+\n+Example::\n+\n     >>> import requests\n     >>> requests.codes['temporary_redirect']\n     307\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#09fd857eb1448a8234e39bc39e2c795d4c980bfb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 8 | Files Changed: 1 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 9 | Churn Cumulative: 3539 | Contributors (this commit): 101 | Commits (past 90d): 3 | Contributors (cumulative): 101 | DMM Complexity: 0.25\n\nDIFF:\n@@ -95,10 +95,6 @@ def merge_hooks(request_hooks, session_hooks, dict_class=OrderedDict):\n \n class SessionRedirectMixin(object):\n \n-    def __init__(self):\n-        #: A list of domains that will be excluded from auth stripping\n-        self.trusted_domains = []\n-\n     def get_redirect_target(self, resp):\n         \"\"\"Receives a Response. Returns a redirect URI or ``None``\"\"\"\n         # Due to the nature of how requests processes redirects this method will\n@@ -124,8 +120,7 @@ class SessionRedirectMixin(object):\n         \"\"\"Decide whether Authorization header should be removed when redirecting\"\"\"\n         old_parsed = urlparse(old_url)\n         new_parsed = urlparse(new_url)\n-        if (old_parsed.hostname != new_parsed.hostname\n-                and new_parsed.hostname not in self.trusted_domains):\n+        if old_parsed.hostname != new_parsed.hostname:\n             return True\n         # Special case: allow http -> https redirect when using the standard\n         # ports. This isn't specified by RFC 7235, but is kept to avoid\n@@ -419,8 +414,6 @@ class Session(SessionRedirectMixin):\n         self.mount('https://', HTTPAdapter())\n         self.mount('http://', HTTPAdapter())\n \n-        super().__init__()\n-\n     def __enter__(self):\n         return self\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#e08981ee46ebe923a8101ca8e005b3f3687a8fa4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 712 | Contributors (this commit): 32 | Commits (past 90d): 2 | Contributors (cumulative): 32 | DMM Complexity: None\n\nDIFF:\n@@ -108,6 +108,6 @@ setup(\n     },\n     project_urls={\n         'Documentation': 'http://docs.python-requests.org',\n-        'Source': 'https://github.com/kennethreitz/requests',\n+        'Source': 'https://github.com/psf/requests',\n     },\n )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d2590ee46c0641958b6d4792a206bd5171cb247d", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 4 | Lines Deleted: 4 | Files Changed: 4 | Hunks: 4 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 8 | Churn Cumulative: 2375 | Contributors (this commit): 48 | Commits (past 90d): 6 | Contributors (cumulative): 68 | DMM Complexity: None\n\nDIFF:\n@@ -381,6 +381,6 @@ epub_exclude_files = [\"search.html\"]\n # epub_use_index = True\n \n intersphinx_mapping = {\n-    \"python\": (\"https://docs.python.org/3/\", None),\n+    \"python\": (\"https://requests.readthedocs.io/en/master/\", None),\n     \"urllib3\": (\"https://urllib3.readthedocs.io/en/latest\", None),\n }\n\n@@ -34,7 +34,7 @@ Basic GET usage:\n    }\n \n The other HTTP methods are supported - see `requests.api`. Full documentation\n-is at <http://python-requests.org>.\n+is at <https://requests.readthedocs.io>.\n \n :copyright: (c) 2017 by Kenneth Reitz.\n :license: Apache 2.0, see LICENSE for more details.\n\n@@ -4,7 +4,7 @@\n \n __title__ = 'requests'\n __description__ = 'Python HTTP for Humans.'\n-__url__ = 'http://python-requests.org'\n+__url__ = 'https://requests.readthedocs.io'\n __version__ = '2.22.0'\n __build__ = 0x022200\n __author__ = 'Kenneth Reitz'\n\n@@ -107,7 +107,7 @@ setup(\n         'socks:sys_platform == \"win32\" and python_version == \"2.7\"': ['win_inet_pton'],\n     },\n     project_urls={\n-        'Documentation': 'http://docs.python-requests.org',\n+        'Documentation': 'https://requests.readthedocs.io',\n         'Source': 'https://github.com/psf/requests',\n     },\n )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#9b95b4e7b4df1865b058161f1492989868614535", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 178 | Contributors (this commit): 6 | Commits (past 90d): 1 | Contributors (cumulative): 6 | DMM Complexity: 1.0\n\nDIFF:\n@@ -96,6 +96,7 @@ class Server(threading.Thread):\n             handler_result = self.handler(sock)\n \n             self.handler_results.append(handler_result)\n+            sock.close()\n \n     def _accept_connection(self):\n         try:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#d5c4cac0f4cc2f558099a55686ddb2e0bdc2dbd1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 646 | Contributors (this commit): 11 | Commits (past 90d): 1 | Contributors (cumulative): 11 | DMM Complexity: None\n\nDIFF:\n@@ -381,6 +381,6 @@ epub_exclude_files = [\"search.html\"]\n # epub_use_index = True\n \n intersphinx_mapping = {\n-    \"python\": (\"https://requests.readthedocs.io/en/master/\", None),\n+    \"python\": (\"https://docs.python.org/3/\", None),\n     \"urllib3\": (\"https://urllib3.readthedocs.io/en/latest\", None),\n }\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "requests#c46f55bd48dabc02f033d252f8c64e2011f37361", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 2 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 720 | Contributors (this commit): 34 | Commits (past 90d): 1 | Contributors (cumulative): 34 | DMM Complexity: None\n\nDIFF:\n@@ -42,8 +42,8 @@ if sys.argv[-1] == 'publish':\n packages = ['requests']\n \n requires = [\n-    'chardet>=3.0.2,<3.1.0',\n-    'idna>=2.5,<2.9',\n+    'chardet>=3.0.2,<4',\n+    'idna>=2.5,<3',\n     'urllib3>=1.21.1,<1.26,!=1.25.0,!=1.25.1',\n     'certifi>=2017.4.17'\n \n@@ -102,7 +102,7 @@ setup(\n     cmdclass={'test': PyTest},\n     tests_require=test_requirements,\n     extras_require={\n-        'security': ['pyOpenSSL >= 0.14', 'cryptography>=1.3.4', 'idna>=2.0.0'],\n+        'security': ['pyOpenSSL >= 0.14', 'cryptography>=1.3.4'],\n         'socks': ['PySocks>=1.5.6, !=1.5.7'],\n         'socks:sys_platform == \"win32\" and python_version == \"2.7\"': ['win_inet_pton'],\n     },\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
