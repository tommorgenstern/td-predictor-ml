{"custom_id": "flask#ef434ea9985b756f13bed283dfa55828829e5e1f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 5 | Files Changed: 5 | Hunks: 5 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 10 | Churn Cumulative: 2947 | Contributors (this commit): 23 | Commits (past 90d): 6 | Contributors (cumulative): 35 | DMM Complexity: None\n\nDIFF:\n@@ -23,7 +23,7 @@ intersphinx_mapping = {\n     \"python\": (\"https://docs.python.org/3/\", None),\n     \"werkzeug\": (\"https://werkzeug.palletsprojects.com/\", None),\n     \"click\": (\"https://click.palletsprojects.com/\", None),\n-    \"jinja\": (\"http://jinja.pocoo.org/docs/\", None),\n+    \"jinja\": (\"https://jinja.palletsprojects.com/\", None),\n     \"itsdangerous\": (\"https://itsdangerous.palletsprojects.com/\", None),\n     \"sqlalchemy\": (\"https://docs.sqlalchemy.org/\", None),\n     \"wtforms\": (\"https://wtforms.readthedocs.io/en/stable/\", None),\n\n@@ -9,7 +9,7 @@ with io.open(\"README.rst\", \"rt\", encoding=\"utf8\") as f:\n setup(\n     name=\"js_example\",\n     version=\"1.0.0\",\n-    url=\"http://flask.pocoo.org/docs/patterns/jquery/\",\n+    url=\"https://flask.palletsprojects.com/patterns/jquery/\",\n     license=\"BSD\",\n     maintainer=\"Pallets team\",\n     maintainer_email=\"contact@palletsprojects.com\",\n\n@@ -9,7 +9,7 @@ with io.open(\"README.rst\", \"rt\", encoding=\"utf8\") as f:\n setup(\n     name=\"flaskr\",\n     version=\"1.0.0\",\n-    url=\"http://flask.pocoo.org/docs/tutorial/\",\n+    url=\"https://flask.palletsprojects.com/tutorial/\",\n     license=\"BSD\",\n     maintainer=\"Pallets team\",\n     maintainer_email=\"contact@palletsprojects.com\",\n\n@@ -164,7 +164,7 @@ def explain_template_loading_attempts(app, template, attempts):\n             'belongs to the blueprint \"%s\".' % blueprint\n         )\n         info.append(\"  Maybe you did not place a template in the right folder?\")\n-        info.append(\"  See http://flask.pocoo.org/docs/blueprints/#templates\")\n+        info.append(\"  See https://flask.palletsprojects.com/blueprints/#templates\")\n \n     app.logger.info(\"\\n\".join(info))\n \n\n@@ -426,7 +426,7 @@ def test_template_loader_debugging(test_apps, monkeypatch):\n             assert (\n                 \"looked up from an endpoint that belongs to \" 'the blueprint \"frontend\"'\n             ) in text\n-            assert \"See http://flask.pocoo.org/docs/blueprints/#templates\" in text\n+            assert \"See https://flask.palletsprojects.com/blueprints/#templates\" in text\n \n     with app.test_client() as c:\n         monkeypatch.setitem(app.config, \"EXPLAIN_TEMPLATE_LOADING\", True)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#38eb5d3b49d628785a470e2e773fc5ac82e3c8e4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 6 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 7 | Churn Cumulative: 192 | Contributors (this commit): 3 | Commits (past 90d): 1 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -549,12 +549,7 @@ class Flask(_PackageBoundObject):\n \n         #: a place where extensions can store application specific state.  For\n         #: example this is where an extension could store database engines and\n-        #: similar things.  For backwards compatibility extensions should register\n-        #: themselves like this::\n-        #:\n-        #:      if not hasattr(app, 'extensions'):\n-        #:          app.extensions = {}\n-        #:      app.extensions['extensionname'] = SomeObject()\n+        #: similar things.\n         #:\n         #: The key must match the name of the extension module. For example in\n         #: case of a \"Flask-Foo\" extension in `flask_foo`, the key would be\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#8d5234e4c729893c3ebd732839a8e7a01a51b7bc", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 108 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.2.dev\"\n+__version__ = \"1.2.0.dev0\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#63b40254e992c6c18d16ffade7aa8358d686a697", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 1 | Churn Cumulative: 290 | Contributors (this commit): 5 | Commits (past 90d): 1 | Contributors (cumulative): 5 | DMM Complexity: None\n\nDIFF:\n@@ -24,6 +24,7 @@ def test_explicit_instance_paths(modules_tmpdir):\n     assert app.instance_path == str(modules_tmpdir)\n \n \n+@pytest.mark.xfail(reason=\"TODO: weird interaction with tox\")\n def test_main_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(\"main_app.py\")\n     app.write('import flask\\n\\napp = flask.Flask(\"__main__\")')\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#85db0135cb302e2e17936fb4cf62c9f90c94e342", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 775 | Contributors (this commit): 30 | Commits (past 90d): 1 | Contributors (cumulative): 30 | DMM Complexity: None\n\nDIFF:\n@@ -71,7 +71,7 @@ setup(\n     zip_safe=False,\n     platforms='any',\n     install_requires=[\n-        'Werkzeug>=0.7',\n+        'Werkzeug>=0.7,<1.0',\n         'Jinja2>=2.4',\n         'itsdangerous>=0.21',\n         'click>=2.0',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#191710cbda616a53533d5e794a787f24c453ac5a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 362 | Contributors (this commit): 13 | Commits (past 90d): 1 | Contributors (cumulative): 13 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '0.12.5.dev'\n+__version__ = '0.12.5'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#79c71f24e4cb064852e2cbbfef78a0a051eb7ced", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 364 | Contributors (this commit): 13 | Commits (past 90d): 2 | Contributors (cumulative): 13 | DMM Complexity: None\n\nDIFF:\n@@ -10,7 +10,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-__version__ = '0.12.5'\n+__version__ = '0.12.6.dev'\n \n # utilities we import from Werkzeug and Jinja2 that are unused\n # in the module but are exported as public interface.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#900fa2f795615683234cc7e7b050a1e131983689", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 3 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 5 | Churn Cumulative: 4504 | Contributors (this commit): 39 | Commits (past 90d): 3 | Contributors (cumulative): 41 | DMM Complexity: 1.0\n\nDIFF:\n@@ -2078,9 +2078,9 @@ class Flask(_PackageBoundObject):\n         # the body must not be None\n         if rv is None:\n             raise TypeError(\n-                \"The view function did not return a valid response. The\"\n+                'The view function for \"{}\" did not return a valid response. The'\n                 \" function either returned None or ended without a return\"\n-                \" statement.\"\n+                \" statement.\".format(request.endpoint)\n             )\n \n         # make sure the body is an instance of the response class\n\n@@ -1221,6 +1221,7 @@ def test_response_type_errors():\n     with pytest.raises(TypeError) as e:\n         c.get(\"/none\")\n         assert \"returned None\" in str(e.value)\n+        assert \"from_none\" in str(e.value)\n \n     with pytest.raises(TypeError) as e:\n         c.get(\"/small_tuple\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d92b64aa275841b0c9aea3903aba72fbc4275d91", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 777 | Contributors (this commit): 30 | Commits (past 90d): 2 | Contributors (cumulative): 30 | DMM Complexity: None\n\nDIFF:\n@@ -50,7 +50,7 @@ setup(\n     include_package_data=True,\n     python_requires=\">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\",\n     install_requires=[\n-        'Werkzeug>=0.7,<1.0',\n+        'Werkzeug>=0.14',\n         'Jinja2>=2.4',\n         'itsdangerous>=0.21',\n         'click>=2.0',\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#5da342e4dd7dfcc16aa25928ea91d69c2d362f73", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 4347 | Contributors (this commit): 39 | Commits (past 90d): 3 | Contributors (cumulative): 42 | DMM Complexity: None\n\nDIFF:\n@@ -75,7 +75,7 @@ class _AppCtxGlobals(object):\n         set and return a default value. Like :meth:`dict.setdefault`.\n \n         :param name: Name of attribute to get.\n-        :param: default: Value to set and return if the attribute is not\n+        :param default: Value to set and return if the attribute is not\n             present.\n \n         .. versionadded:: 0.11\n\n@@ -1689,7 +1689,7 @@ def test_routing_redirect_debugging(app, client):\n         with pytest.raises(AssertionError) as e:\n             client.post(\"/foo\", data={})\n         assert \"http://localhost/foo/\" in str(e.value)\n-        assert (\"Make sure to directly send your POST-request to this URL\") in str(\n+        assert \"Make sure to directly send your POST-request to this URL\" in str(\n             e.value\n         )\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#bcde664f9a3f6ef3b3d33c6c4e7c3cb3acc2af30", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 9 | Lines Deleted: 7 | Files Changed: 2 | Hunks: 6 | Methods Changed: 3 | Complexity Δ (Sum/Max): 12/11 | Churn Δ: 16 | Churn Cumulative: 1502 | Contributors (this commit): 27 | Commits (past 90d): 4 | Contributors (cumulative): 28 | DMM Complexity: 0.0\n\nDIFF:\n@@ -713,10 +713,12 @@ class CertParamType(click.ParamType):\n \n             if value == \"adhoc\":\n                 try:\n-                    import OpenSSL  # noqa: F401\n+                    import cryptography  # noqa: F401\n                 except ImportError:\n                     raise click.BadParameter(\n-                        \"Using ad-hoc certificates requires pyOpenSSL.\", ctx, param\n+                        \"Using ad-hoc certificates requires the cryptography library.\",\n+                        ctx,\n+                        param,\n                     )\n \n                 return value\n@@ -743,7 +745,7 @@ def _validate_key(ctx, param, value):\n     if sys.version_info < (2, 7, 9):\n         is_context = cert and not isinstance(cert, (text_type, bytes))\n     else:\n-        is_context = isinstance(cert, ssl.SSLContext)\n+        is_context = ssl and isinstance(cert, ssl.SSLContext)\n \n     if value is not None:\n         if is_adhoc:\n\n@@ -566,14 +566,14 @@ def test_run_cert_path():\n \n \n def test_run_cert_adhoc(monkeypatch):\n-    monkeypatch.setitem(sys.modules, \"OpenSSL\", None)\n+    monkeypatch.setitem(sys.modules, \"cryptography\", None)\n \n-    # pyOpenSSL not installed\n+    # cryptography not installed\n     with pytest.raises(click.BadParameter):\n         run_command.make_context(\"run\", [\"--cert\", \"adhoc\"])\n \n-    # pyOpenSSL installed\n-    monkeypatch.setitem(sys.modules, \"OpenSSL\", types.ModuleType(\"OpenSSL\"))\n+    # cryptography installed\n+    monkeypatch.setitem(sys.modules, \"cryptography\", types.ModuleType(\"cryptography\"))\n     ctx = run_command.make_context(\"run\", [\"--cert\", \"adhoc\"])\n     assert ctx.params[\"cert\"] == \"adhoc\"\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d4076cf07c70d7fccf82aba5c5acae3f3fb99447", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 12 | Lines Deleted: 1 | Files Changed: 2 | Hunks: 2 | Methods Changed: 3 | Complexity Δ (Sum/Max): 0/2 | Churn Δ: 13 | Churn Cumulative: 4453 | Contributors (this commit): 39 | Commits (past 90d): 5 | Contributors (cumulative): 41 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1013,7 +1013,7 @@ class _PackageBoundObject(object):\n             return self._static_url_path\n \n         if self.static_folder is not None:\n-            basename = os.path.basename(self.static_folder)\n+            basename = os.path.basename(self.static_folder.rstrip(\"/\"))\n             return (\"/\" + basename).rstrip(\"/\")\n \n     @static_url_path.setter\n\n@@ -1425,6 +1425,17 @@ def test_static_url_empty_path_default(app):\n     rv.close()\n \n \n+def test_static_folder_with_ending_slash():\n+    app = flask.Flask(__name__, static_folder=\"static/\")\n+\n+    @app.route(\"/<path:path>\")\n+    def catch_all(path):\n+        return path\n+\n+    rv = app.test_client().get(\"/catch/all\")\n+    assert rv.data == b\"catch/all\"\n+\n+\n def test_static_route_with_host_matching():\n     app = flask.Flask(__name__, host_matching=True, static_host=\"example.com\")\n     c = app.test_client()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e6178fe489b7828acc2bb8fd4b56a70b11ab6c6a", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 4 | Churn Cumulative: 136 | Contributors (this commit): 3 | Commits (past 90d): 3 | Contributors (cumulative): 3 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1000,6 +1000,8 @@ class _PackageBoundObject(object):\n \n     @static_folder.setter\n     def static_folder(self, value):\n+        if value is not None:\n+            value = value.rstrip(\"/\\\\\")\n         self._static_folder = value\n \n     @property\n@@ -1013,7 +1015,7 @@ class _PackageBoundObject(object):\n             return self._static_url_path\n \n         if self.static_folder is not None:\n-            basename = os.path.basename(self.static_folder.rstrip(\"/\"))\n+            basename = os.path.basename(self.static_folder)\n             return (\"/\" + basename).rstrip(\"/\")\n \n     @static_url_path.setter\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#d5f88dafaf03a21aa4b6f0a273228fe9263a4a78", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 11 | Files Changed: 1 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 29 | Churn Cumulative: 225 | Contributors (this commit): 5 | Commits (past 90d): 2 | Contributors (cumulative): 5 | DMM Complexity: 0.0\n\nDIFF:\n@@ -960,17 +960,24 @@ class Flask(_PackageBoundObject):\n         if debug is not None:\n             self.debug = bool(debug)\n \n-        _host = \"127.0.0.1\"\n-        _port = 5000\n         server_name = self.config.get(\"SERVER_NAME\")\n-        sn_host, sn_port = None, None\n+        sn_host = sn_port = None\n \n         if server_name:\n             sn_host, _, sn_port = server_name.partition(\":\")\n \n-        host = host or sn_host or _host\n-        # pick the first value that's not None (0 is allowed)\n-        port = int(next((p for p in (port, sn_port) if p is not None), _port))\n+        if not host:\n+            if sn_host:\n+                host = sn_host\n+            else:\n+                host = \"127.0.0.1\"\n+\n+        if port or port == 0:\n+            port = int(port)\n+        elif sn_port:\n+            port = int(sn_port)\n+        else:\n+            port = 5000\n \n         options.setdefault(\"use_reloader\", self.debug)\n         options.setdefault(\"use_debugger\", self.debug)\n@@ -2146,11 +2153,11 @@ class Flask(_PackageBoundObject):\n             # If subdomain matching is disabled (the default), use the\n             # default subdomain in all cases. This should be the default\n             # in Werkzeug but it currently does not have that feature.\n-            subdomain = (\n-                (self.url_map.default_subdomain or None)\n-                if not self.subdomain_matching\n-                else None\n-            )\n+            if not self.subdomain_matching:\n+                subdomain = self.url_map.default_subdomain or None\n+            else:\n+                subdomain = None\n+\n             return self.url_map.bind_to_environ(\n                 request.environ,\n                 server_name=self.config[\"SERVER_NAME\"],\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#e047dd6a32dc57cd6e4fb5f064aceddeed979756", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 121 | Contributors (this commit): 4 | Commits (past 90d): 1 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -218,7 +218,7 @@ class Config(dict):\n             absolute path or relative to the config root path.\n         :param silent: Ignore the file if it doesn't exist.\n \n-        .. deprecated:: 1.2\n+        .. deprecated:: 2.0\n             Use :meth:`from_file` with :meth:`json.load` instead.\n \n         .. versionadded:: 0.11\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#4548e00dba81a5e60024d76b35bcfe2a7be8e675", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 6 | Churn Cumulative: 231 | Contributors (this commit): 6 | Commits (past 90d): 3 | Contributors (cumulative): 6 | DMM Complexity: None\n\nDIFF:\n@@ -170,9 +170,9 @@ class Flask(_PackageBoundObject):\n     :param static_url_path: can be used to specify a different path for the\n                             static files on the web.  Defaults to the name\n                             of the `static_folder` folder.\n-    :param static_folder: the folder with static files that should be served\n-                          at `static_url_path`.  Defaults to the ``'static'``\n-                          folder in the root path of the application.\n+    :param static_folder: The folder with static files that is served at\n+        ``static_url_path``. Relative to the application ``root_path``\n+        or an absolute path. Defaults to ``'static'``.\n     :param static_host: the host to use when adding the static route.\n         Defaults to None. Required when using ``host_matching=True``\n         with a ``static_folder`` configured.\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#4024a4a89c18a1048b7496cf223c0b8c1e63c485", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 17 | Files Changed: 2 | Hunks: 8 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 35 | Churn Cumulative: 280 | Contributors (this commit): 6 | Commits (past 90d): 5 | Contributors (cumulative): 7 | DMM Complexity: 1.0\n\nDIFF:\n@@ -1074,16 +1074,16 @@ class Flask(_PackageBoundObject):\n         we recommend replacing the :class:`session_interface`.\n \n         .. deprecated: 1.0\n-            Will be removed in 1.1. Use ``session_interface.open_session``\n-            instead.\n+            Will be removed in 2.0. Use\n+            ``session_interface.open_session`` instead.\n \n         :param request: an instance of :attr:`request_class`.\n         \"\"\"\n \n         warnings.warn(\n             DeprecationWarning(\n-                '\"open_session\" is deprecated and will be removed in 1.1. Use'\n-                ' \"session_interface.open_session\" instead.'\n+                '\"open_session\" is deprecated and will be removed in'\n+                ' 2.0. Use \"session_interface.open_session\" instead.'\n             )\n         )\n         return self.session_interface.open_session(self, request)\n@@ -1094,8 +1094,8 @@ class Flask(_PackageBoundObject):\n         method we recommend replacing the :class:`session_interface`.\n \n         .. deprecated: 1.0\n-            Will be removed in 1.1. Use ``session_interface.save_session``\n-            instead.\n+            Will be removed in 2.0. Use\n+            ``session_interface.save_session`` instead.\n \n         :param session: the session to be saved (a\n                         :class:`~werkzeug.contrib.securecookie.SecureCookie`\n@@ -1105,8 +1105,8 @@ class Flask(_PackageBoundObject):\n \n         warnings.warn(\n             DeprecationWarning(\n-                '\"save_session\" is deprecated and will be removed in 1.1. Use'\n-                ' \"session_interface.save_session\" instead.'\n+                '\"save_session\" is deprecated and will be removed in'\n+                ' 2.0. Use \"session_interface.save_session\" instead.'\n             )\n         )\n         return self.session_interface.save_session(self, session, response)\n@@ -1116,16 +1116,17 @@ class Flask(_PackageBoundObject):\n         this method we recommend replacing the :class:`session_interface`.\n \n         .. deprecated: 1.0\n-            Will be removed in 1.1. Use ``session_interface.make_null_session``\n-            instead.\n+            Will be removed in 2.0. Use\n+            ``session_interface.make_null_session`` instead.\n \n         .. versionadded:: 0.7\n         \"\"\"\n \n         warnings.warn(\n             DeprecationWarning(\n-                '\"make_null_session\" is deprecated and will be removed in 1.1. Use'\n-                ' \"session_interface.make_null_session\" instead.'\n+                '\"make_null_session\" is deprecated and will be removed'\n+                ' in 2.0. Use \"session_interface.make_null_session\"'\n+                \" instead.\"\n             )\n         )\n         return self.session_interface.make_null_session(self)\n\n@@ -99,14 +99,14 @@ def make_test_environ_builder(*args, **kwargs):\n     \"\"\"Create a :class:`flask.testing.EnvironBuilder`.\n \n     .. deprecated: 1.1\n-        Will be removed in 1.2. Construct ``flask.testing.EnvironBuilder``\n-        directly instead.\n+        Will be removed in 2.0. Construct\n+        ``flask.testing.EnvironBuilder`` directly instead.\n     \"\"\"\n     warnings.warn(\n         DeprecationWarning(\n-            '\"make_test_environ_builder()\" is deprecated and will be removed '\n-            'in 1.2. Construct \"flask.testing.EnvironBuilder\" directly '\n-            \"instead.\"\n+            '\"make_test_environ_builder()\" is deprecated and will be'\n+            ' removed in 2.0. Construct \"flask.testing.EnvironBuilder\"'\n+            \" directly instead.\"\n         )\n     )\n     return EnvironBuilder(*args, **kwargs)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#93dd1709d05a1cf0e886df6223377bdab3b077fb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 1 | Lines Deleted: 1 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 2 | Churn Cumulative: 110 | Contributors (this commit): 1 | Commits (past 90d): 2 | Contributors (cumulative): 1 | DMM Complexity: None\n\nDIFF:\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.2.dev\"\n+__version__ = \"1.1.2\"\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#7673835b3da50575a14213814ea1ccefa860260f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 6 | Lines Deleted: 8 | Files Changed: 2 | Hunks: 4 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/2 | Churn Δ: 14 | Churn Cumulative: 406 | Contributors (this commit): 8 | Commits (past 90d): 7 | Contributors (cumulative): 9 | DMM Complexity: None\n\nDIFF:\n@@ -191,11 +191,9 @@ class Flask(_PackageBoundObject):\n                                      for loading the config are assumed to\n                                      be relative to the instance path instead\n                                      of the application root.\n-    :param root_path: Flask by default will automatically calculate the path\n-                      to the root of the application.  In certain situations\n-                      this cannot be achieved (for instance if the package\n-                      is a Python 3 namespace package) and needs to be\n-                      manually defined.\n+    :param root_path: The path to the root of the application files.\n+        This should only be set manually when it can't be detected\n+        automatically, such as for namespace packages.\n     \"\"\"\n \n     #: The class that is used for request objects.  See :class:`~flask.Request`\n@@ -2026,11 +2024,11 @@ class Flask(_PackageBoundObject):\n             without returning, is not allowed. The following types are allowed\n             for ``view_rv``:\n \n-            ``str`` (``unicode`` in Python 2)\n+            ``str``\n                 A response object is created with the string encoded to UTF-8\n                 as the body.\n \n-            ``bytes`` (``str`` in Python 2)\n+            ``bytes``\n                 A response object is created with the bytes as the body.\n \n             ``dict``\n\n@@ -910,7 +910,7 @@ def _find_package_path(root_mod_name):\n \n         # In case the root module is a package we need to chop of the\n         # rightmost part. This needs to go through a helper function\n-        # because of python 3.3 namespace packages.\n+        # because of namespace packages.\n         if _matching_loader_thinks_module_is_package(loader, root_mod_name):\n             package_path = os.path.dirname(package_path)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#a0a61acdecd925cf2a1ffe5fb7acd27c1695f1d8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 5 | Lines Deleted: 12 | Files Changed: 3 | Hunks: 6 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 17 | Churn Cumulative: 1194 | Contributors (this commit): 32 | Commits (past 90d): 8 | Contributors (cumulative): 36 | DMM Complexity: None\n\nDIFF:\n@@ -34,15 +34,6 @@ setup(\n         \"License :: OSI Approved :: BSD License\",\n         \"Operating System :: OS Independent\",\n         \"Programming Language :: Python\",\n-        \"Programming Language :: Python :: 2\",\n-        \"Programming Language :: Python :: 2.7\",\n-        \"Programming Language :: Python :: 3\",\n-        \"Programming Language :: Python :: 3.5\",\n-        \"Programming Language :: Python :: 3.6\",\n-        \"Programming Language :: Python :: 3.7\",\n-        \"Programming Language :: Python :: 3.8\",\n-        \"Programming Language :: Python :: Implementation :: CPython\",\n-        \"Programming Language :: Python :: Implementation :: PyPy\",\n         \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n         \"Topic :: Internet :: WWW/HTTP :: WSGI :: Application\",\n         \"Topic :: Software Development :: Libraries :: Application Frameworks\",\n@@ -51,7 +42,7 @@ setup(\n     packages=find_packages(\"src\"),\n     package_dir={\"\": \"src\"},\n     include_package_data=True,\n-    python_requires=\">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\",\n+    python_requires=\">=3.6\",\n     install_requires=[\n         \"Werkzeug>=0.15\",\n         \"Jinja2>=2.10.1\",\n\n@@ -57,4 +57,4 @@ from .signals import template_rendered\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.2.0.dev\"\n+__version__ = \"2.0.0.dev\"\n\n@@ -24,7 +24,7 @@ def test_explicit_instance_paths(modules_tmpdir):\n     assert app.instance_path == str(modules_tmpdir)\n \n \n-@pytest.mark.xfail(reason=\"TODO: weird interaction with tox\")\n+@pytest.mark.xfail(reason=\"weird interaction with tox\")\n def test_main_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(\"main_app.py\")\n     app.write('import flask\\n\\napp = flask.Flask(\"__main__\")')\n@@ -36,6 +36,7 @@ def test_main_module_paths(modules_tmpdir, purge_module):\n     assert app.instance_path == os.path.join(here, \"instance\")\n \n \n+@pytest.mark.xfail(reason=\"weird interaction with tox\")\n def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.join(\"config_module_app.py\").write(\n         \"import os\\n\"\n@@ -50,6 +51,7 @@ def test_uninstalled_module_paths(modules_tmpdir, purge_module):\n     assert app.instance_path == str(modules_tmpdir.join(\"instance\"))\n \n \n+@pytest.mark.xfail(reason=\"weird interaction with tox\")\n def test_uninstalled_package_paths(modules_tmpdir, purge_module):\n     app = modules_tmpdir.mkdir(\"config_package_app\")\n     init = app.join(\"__init__.py\")\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#1263d3bd142e4964da123f4e59088aa2968ec7e5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 198 | Files Changed: 9 | Hunks: 15 | Methods Changed: 15 | Complexity Δ (Sum/Max): -16/3 | Churn Δ: 198 | Churn Cumulative: 1972 | Contributors (this commit): 24 | Commits (past 90d): 19 | Contributors (cumulative): 36 | DMM Complexity: 0.17708333333333334\n\nDIFF:\n@@ -17,7 +17,6 @@ from werkzeug.exceptions import abort\n from werkzeug.utils import redirect\n \n from . import json\n-from ._compat import json_available\n from .app import Flask\n from .app import Request\n from .app import Response\n\n@@ -113,33 +113,3 @@ except ImportError:\n     # https://www.python.org/dev/peps/pep-0519/#backwards-compatibility\n     def fspath(path):\n         return path.__fspath__() if hasattr(path, \"__fspath__\") else path\n-\n-\n-class _DeprecatedBool(object):\n-    def __init__(self, name, version, value):\n-        self.message = \"'{}' is deprecated and will be removed in version {}.\".format(\n-            name, version\n-        )\n-        self.value = value\n-\n-    def _warn(self):\n-        import warnings\n-\n-        warnings.warn(self.message, DeprecationWarning, stacklevel=2)\n-\n-    def __eq__(self, other):\n-        self._warn()\n-        return other == self.value\n-\n-    def __ne__(self, other):\n-        self._warn()\n-        return other != self.value\n-\n-    def __bool__(self):\n-        self._warn()\n-        return self.value\n-\n-    __nonzero__ = __bool__\n-\n-\n-json_available = _DeprecatedBool(\"flask.json_available\", \"2.0.0\", True)\n\n@@ -10,7 +10,6 @@\n \"\"\"\n import os\n import sys\n-import warnings\n from datetime import timedelta\n from functools import update_wrapper\n from itertools import chain\n@@ -1066,70 +1065,6 @@ class Flask(_PackageBoundObject):\n \n         return cls(self, **kwargs)\n \n-    def open_session(self, request):\n-        \"\"\"Creates or opens a new session.  Default implementation stores all\n-        session data in a signed cookie.  This requires that the\n-        :attr:`secret_key` is set.  Instead of overriding this method\n-        we recommend replacing the :class:`session_interface`.\n-\n-        .. deprecated: 1.0\n-            Will be removed in 2.0. Use\n-            ``session_interface.open_session`` instead.\n-\n-        :param request: an instance of :attr:`request_class`.\n-        \"\"\"\n-\n-        warnings.warn(\n-            DeprecationWarning(\n-                '\"open_session\" is deprecated and will be removed in'\n-                ' 2.0. Use \"session_interface.open_session\" instead.'\n-            )\n-        )\n-        return self.session_interface.open_session(self, request)\n-\n-    def save_session(self, session, response):\n-        \"\"\"Saves the session if it needs updates.  For the default\n-        implementation, check :meth:`open_session`.  Instead of overriding this\n-        method we recommend replacing the :class:`session_interface`.\n-\n-        .. deprecated: 1.0\n-            Will be removed in 2.0. Use\n-            ``session_interface.save_session`` instead.\n-\n-        :param session: the session to be saved (a\n-                        :class:`~werkzeug.contrib.securecookie.SecureCookie`\n-                        object)\n-        :param response: an instance of :attr:`response_class`\n-        \"\"\"\n-\n-        warnings.warn(\n-            DeprecationWarning(\n-                '\"save_session\" is deprecated and will be removed in'\n-                ' 2.0. Use \"session_interface.save_session\" instead.'\n-            )\n-        )\n-        return self.session_interface.save_session(self, session, response)\n-\n-    def make_null_session(self):\n-        \"\"\"Creates a new instance of a missing session.  Instead of overriding\n-        this method we recommend replacing the :class:`session_interface`.\n-\n-        .. deprecated: 1.0\n-            Will be removed in 2.0. Use\n-            ``session_interface.make_null_session`` instead.\n-\n-        .. versionadded:: 0.7\n-        \"\"\"\n-\n-        warnings.warn(\n-            DeprecationWarning(\n-                '\"make_null_session\" is deprecated and will be removed'\n-                ' in 2.0. Use \"session_interface.make_null_session\"'\n-                \" instead.\"\n-            )\n-        )\n-        return self.session_interface.make_null_session(self)\n-\n     @setupmethod\n     def register_blueprint(self, blueprint, **options):\n         \"\"\"Register a :class:`~flask.Blueprint` on the application. Keyword\n\n@@ -11,7 +11,6 @@\n import errno\n import os\n import types\n-import warnings\n \n from werkzeug.utils import import_string\n \n@@ -210,29 +209,6 @@ class Config(dict):\n \n         return self.from_mapping(obj)\n \n-    def from_json(self, filename, silent=False):\n-        \"\"\"Update the values in the config from a JSON file. The loaded\n-        data is passed to the :meth:`from_mapping` method.\n-\n-        :param filename: The path to the JSON file. This can be an\n-            absolute path or relative to the config root path.\n-        :param silent: Ignore the file if it doesn't exist.\n-\n-        .. deprecated:: 2.0\n-            Use :meth:`from_file` with :meth:`json.load` instead.\n-\n-        .. versionadded:: 0.11\n-        \"\"\"\n-        warnings.warn(\n-            \"'from_json' is deprecated and will be removed in 2.0.\"\n-            \" Use 'from_file(filename, load=json.load)' instead.\",\n-            DeprecationWarning,\n-            stacklevel=2,\n-        )\n-        from .json import load\n-\n-        return self.from_file(filename, load, silent=silent)\n-\n     def from_mapping(self, *mapping, **kwargs):\n         \"\"\"Updates the config like :meth:`update` ignoring items with non-upper\n         keys.\n\n@@ -10,7 +10,6 @@ from __future__ import absolute_import\n \n import logging\n import sys\n-import warnings\n \n from werkzeug.local import LocalProxy\n \n@@ -57,20 +56,6 @@ default_handler.setFormatter(\n )\n \n \n-def _has_config(logger):\n-    \"\"\"Decide if a logger has direct configuration applied by checking\n-    its properties against the defaults.\n-\n-    :param logger: The :class:`~logging.Logger` to inspect.\n-    \"\"\"\n-    return (\n-        logger.level != logging.NOTSET\n-        or logger.handlers\n-        or logger.filters\n-        or not logger.propagate\n-    )\n-\n-\n def create_logger(app):\n     \"\"\"Get the Flask app's logger and configure it if needed.\n \n@@ -86,20 +71,6 @@ def create_logger(app):\n     \"\"\"\n     logger = logging.getLogger(app.name)\n \n-    # 1.1.0 changes name of logger, warn if config is detected for old\n-    # name and not new name\n-    for old_name in (\"flask.app\", \"flask\"):\n-        old_logger = logging.getLogger(old_name)\n-\n-        if _has_config(old_logger) and not _has_config(logger):\n-            warnings.warn(\n-                \"'app.logger' is named '{name}' for this application,\"\n-                \" but configuration was found for '{old_name}', which\"\n-                \" no longer has an effect. The logging configuration\"\n-                \" should be moved to '{name}'.\".format(name=app.name, old_name=old_name)\n-            )\n-            break\n-\n     if app.debug and not logger.level:\n         logger.setLevel(logging.DEBUG)\n \n\n@@ -9,7 +9,6 @@\n     :copyright: 2010 Pallets\n     :license: BSD-3-Clause\n \"\"\"\n-import warnings\n from contextlib import contextmanager\n \n import werkzeug.test\n@@ -95,23 +94,6 @@ class EnvironBuilder(werkzeug.test.EnvironBuilder):\n         return json_dumps(obj, **kwargs)\n \n \n-def make_test_environ_builder(*args, **kwargs):\n-    \"\"\"Create a :class:`flask.testing.EnvironBuilder`.\n-\n-    .. deprecated: 1.1\n-        Will be removed in 2.0. Construct\n-        ``flask.testing.EnvironBuilder`` directly instead.\n-    \"\"\"\n-    warnings.warn(\n-        DeprecationWarning(\n-            '\"make_test_environ_builder()\" is deprecated and will be'\n-            ' removed in 2.0. Construct \"flask.testing.EnvironBuilder\"'\n-            \" directly instead.\"\n-        )\n-    )\n-    return EnvironBuilder(*args, **kwargs)\n-\n-\n class FlaskClient(Client):\n     \"\"\"Works like a regular Werkzeug test client but has some knowledge about\n     how Flask works to defer the cleanup of the request context stack to the\n\n@@ -1,12 +0,0 @@\n-import pytest\n-\n-from flask import json_available\n-\n-\n-def test_json_available():\n-    with pytest.deprecated_call() as rec:\n-        assert json_available\n-        assert json_available == True  # noqa E712\n-        assert json_available != False  # noqa E712\n-\n-    assert len(rec.list) == 3\n\n@@ -104,12 +104,3 @@ def test_log_view_exception(app, client):\n     err = stream.getvalue()\n     assert \"Exception on / [GET]\" in err\n     assert \"Exception: test\" in err\n-\n-\n-def test_warn_old_config(app, request):\n-    old_logger = logging.getLogger(\"flask.app\")\n-    old_logger.setLevel(logging.DEBUG)\n-    request.addfinalizer(lambda: old_logger.setLevel(logging.NOTSET))\n-\n-    with pytest.warns(UserWarning):\n-        assert app.logger.getEffectiveLevel() == logging.WARNING\n\n@@ -19,7 +19,6 @@ from flask.cli import ScriptInfo\n from flask.json import jsonify\n from flask.testing import EnvironBuilder\n from flask.testing import FlaskCliRunner\n-from flask.testing import make_test_environ_builder\n \n try:\n     import blinker\n@@ -121,15 +120,6 @@ def test_path_is_url(app):\n     assert eb.path == \"/\"\n \n \n-def test_make_test_environ_builder(app):\n-    with pytest.deprecated_call():\n-        eb = make_test_environ_builder(app, \"https://example.com/\")\n-    assert eb.url_scheme == \"https\"\n-    assert eb.host == \"example.com\"\n-    assert eb.script_root == \"\"\n-    assert eb.path == \"/\"\n-\n-\n def test_environbuilder_json_dumps(app):\n     \"\"\"EnvironBuilder.json_dumps() takes settings from the app.\"\"\"\n     app.config[\"JSON_AS_ASCII\"] = False\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "flask#662c245795c7cbb5dbd657a2d707c62c16770c18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 64 | Lines Deleted: 270 | Files Changed: 20 | Hunks: 82 | Methods Changed: 46 | Complexity Δ (Sum/Max): -24/0 | Churn Δ: 334 | Churn Cumulative: 12332 | Contributors (this commit): 82 | Commits (past 90d): 37 | Contributors (cumulative): 148 | DMM Complexity: 0.38181818181818183\n\nDIFF:\n@@ -1,115 +0,0 @@\n-# -*- coding: utf-8 -*-\n-\"\"\"\n-    flask._compat\n-    ~~~~~~~~~~~~~\n-\n-    Some py2/py3 compatibility support based on a stripped down\n-    version of six so we don't have to depend on a specific version\n-    of it.\n-\n-    :copyright: 2010 Pallets\n-    :license: BSD-3-Clause\n-\"\"\"\n-import sys\n-\n-PY2 = sys.version_info[0] == 2\n-_identity = lambda x: x\n-\n-try:  # Python 2\n-    text_type = unicode\n-    string_types = (str, unicode)\n-    integer_types = (int, long)\n-except NameError:  # Python 3\n-    text_type = str\n-    string_types = (str,)\n-    integer_types = (int,)\n-\n-if not PY2:\n-    iterkeys = lambda d: iter(d.keys())\n-    itervalues = lambda d: iter(d.values())\n-    iteritems = lambda d: iter(d.items())\n-\n-    from inspect import getfullargspec as getargspec\n-    from io import StringIO\n-    import collections.abc as collections_abc\n-\n-    def reraise(tp, value, tb=None):\n-        if value.__traceback__ is not tb:\n-            raise value.with_traceback(tb)\n-        raise value\n-\n-    implements_to_string = _identity\n-\n-else:\n-    iterkeys = lambda d: d.iterkeys()\n-    itervalues = lambda d: d.itervalues()\n-    iteritems = lambda d: d.iteritems()\n-\n-    from inspect import getargspec\n-    from cStringIO import StringIO\n-    import collections as collections_abc\n-\n-    exec(\"def reraise(tp, value, tb=None):\\n raise tp, value, tb\")\n-\n-    def implements_to_string(cls):\n-        cls.__unicode__ = cls.__str__\n-        cls.__str__ = lambda x: x.__unicode__().encode(\"utf-8\")\n-        return cls\n-\n-\n-def with_metaclass(meta, *bases):\n-    \"\"\"Create a base class with a metaclass.\"\"\"\n-    # This requires a bit of explanation: the basic idea is to make a\n-    # dummy metaclass for one level of class instantiation that replaces\n-    # itself with the actual metaclass.\n-    class metaclass(type):\n-        def __new__(metacls, name, this_bases, d):\n-            return meta(name, bases, d)\n-\n-    return type.__new__(metaclass, \"temporary_class\", (), {})\n-\n-\n-# Certain versions of pypy have a bug where clearing the exception stack\n-# breaks the __exit__ function in a very peculiar way.  The second level of\n-# exception blocks is necessary because pypy seems to forget to check if an\n-# exception happened until the next bytecode instruction?\n-#\n-# Relevant PyPy bugfix commit:\n-# https://bitbucket.org/pypy/pypy/commits/77ecf91c635a287e88e60d8ddb0f4e9df4003301\n-# According to ronan on #pypy IRC, it is released in PyPy2 2.3 and later\n-# versions.\n-#\n-# Ubuntu 14.04 has PyPy 2.2.1, which does exhibit this bug.\n-BROKEN_PYPY_CTXMGR_EXIT = False\n-if hasattr(sys, \"pypy_version_info\"):\n-\n-    class _Mgr(object):\n-        def __enter__(self):\n-            return self\n-\n-        def __exit__(self, *args):\n-            if hasattr(sys, \"exc_clear\"):\n-                # Python 3 (PyPy3) doesn't have exc_clear\n-                sys.exc_clear()\n-\n-    try:\n-        try:\n-            with _Mgr():\n-                raise AssertionError()\n-        except:  # noqa: B001\n-            # We intentionally use a bare except here. See the comment above\n-            # regarding a pypy bug as to why.\n-            raise\n-    except TypeError:\n-        BROKEN_PYPY_CTXMGR_EXIT = True\n-    except AssertionError:\n-        pass\n-\n-\n-try:\n-    from os import fspath\n-except ImportError:\n-    # Backwards compatibility as proposed in PEP 0519:\n-    # https://www.python.org/dev/peps/pep-0519/#backwards-compatibility\n-    def fspath(path):\n-        return path.__fspath__() if hasattr(path, \"__fspath__\") else path\n\n@@ -31,10 +31,6 @@ from werkzeug.wrappers import BaseResponse\n \n from . import cli\n from . import json\n-from ._compat import integer_types\n-from ._compat import reraise\n-from ._compat import string_types\n-from ._compat import text_type\n from .config import Config\n from .config import ConfigAttribute\n from .ctx import _AppCtxGlobals\n@@ -1179,10 +1175,10 @@ class Flask(_PackageBoundObject):\n         # a tuple of only ``GET`` as default.\n         if methods is None:\n             methods = getattr(view_func, \"methods\", None) or (\"GET\",)\n-        if isinstance(methods, string_types):\n+        if isinstance(methods, str):\n             raise TypeError(\n-                \"Allowed methods have to be iterables of strings, \"\n-                'for example: @app.route(..., methods=[\"POST\"])'\n+                \"Allowed methods must be a list of strings, for\"\n+                ' example: @app.route(..., methods=[\"POST\"])'\n             )\n         methods = set(item.upper() for item in methods)\n \n@@ -1278,7 +1274,7 @@ class Flask(_PackageBoundObject):\n         :param exc_class_or_code: Any exception class, or an HTTP status\n             code as an integer.\n         \"\"\"\n-        if isinstance(exc_class_or_code, integer_types):\n+        if isinstance(exc_class_or_code, int):\n             exc_class = default_exceptions[exc_class_or_code]\n         else:\n             exc_class = exc_class_or_code\n@@ -1727,13 +1723,6 @@ class Flask(_PackageBoundObject):\n \n         .. versionadded:: 0.7\n         \"\"\"\n-        exc_type, exc_value, tb = sys.exc_info()\n-        assert exc_value is e\n-        # ensure not to trash sys.exc_info() at that point in case someone\n-        # wants the traceback preserved in handle_http_exception.  Of course\n-        # we cannot prevent users from trashing it themselves in a custom\n-        # trap_http_exception method so that's their fault then.\n-\n         if isinstance(e, BadRequestKeyError):\n             if self.debug or self.config[\"TRAP_BAD_REQUEST_ERRORS\"]:\n                 e.show_exception = True\n@@ -1752,7 +1741,8 @@ class Flask(_PackageBoundObject):\n         handler = self._find_error_handler(e)\n \n         if handler is None:\n-            reraise(exc_type, exc_value, tb)\n+            raise\n+\n         return handler(e)\n \n     def handle_exception(self, e):\n@@ -1789,20 +1779,18 @@ class Flask(_PackageBoundObject):\n \n         .. versionadded:: 0.3\n         \"\"\"\n-        exc_type, exc_value, tb = sys.exc_info()\n+        exc_info = sys.exc_info()\n         got_request_exception.send(self, exception=e)\n \n         if self.propagate_exceptions:\n-            # if we want to repropagate the exception, we can attempt to\n-            # raise it with the whole traceback in case we can do that\n-            # (the function was actually called from the except part)\n-            # otherwise, we just raise the error again\n-            if exc_value is e:\n-                reraise(exc_type, exc_value, tb)\n-            else:\n+            # Re-raise if called with an active exception, otherwise\n+            # raise the passed in exception.\n+            if exc_info[1] is e:\n+                raise\n+\n             raise e\n \n-        self.log_exception((exc_type, exc_value, tb))\n+        self.log_exception(exc_info)\n         server_error = InternalServerError()\n         # TODO: pass as param when Werkzeug>=1.0.0 is required\n         # TODO: also remove note about this from docstring and docs\n@@ -2026,7 +2014,7 @@ class Flask(_PackageBoundObject):\n \n         # make sure the body is an instance of the response class\n         if not isinstance(rv, self.response_class):\n-            if isinstance(rv, (text_type, bytes, bytearray)):\n+            if isinstance(rv, (str, bytes, bytearray)):\n                 # let the response class set the status and headers instead of\n                 # waiting to do it manually, so that the class can handle any\n                 # special logic\n@@ -2040,13 +2028,12 @@ class Flask(_PackageBoundObject):\n                 try:\n                     rv = self.response_class.force_type(rv, request.environ)\n                 except TypeError as e:\n-                    new_error = TypeError(\n+                    raise TypeError(\n                         \"{e}\\nThe view function did not return a valid\"\n                         \" response. The return type must be a string, dict, tuple,\"\n                         \" Response instance, or WSGI callable, but it was a\"\n                         \" {rv.__class__.__name__}.\".format(e=e, rv=rv)\n-                    )\n-                    reraise(TypeError, new_error, sys.exc_info()[2])\n+                    ).with_traceback(sys.exc_info()[2])\n             else:\n                 raise TypeError(\n                     \"The view function did not return a valid\"\n@@ -2057,7 +2044,7 @@ class Flask(_PackageBoundObject):\n \n         # prefer the status if it was provided\n         if status is not None:\n-            if isinstance(status, (text_type, bytes, bytearray)):\n+            if isinstance(status, (str, bytes, bytearray)):\n                 rv.status = status\n             else:\n                 rv.status_code = status\n@@ -2121,23 +2108,24 @@ class Flask(_PackageBoundObject):\n             func(endpoint, values)\n \n     def handle_url_build_error(self, error, endpoint, values):\n-        \"\"\"Handle :class:`~werkzeug.routing.BuildError` on :meth:`url_for`.\n+        \"\"\"Handle :class:`~werkzeug.routing.BuildError` on\n+        :meth:`url_for`.\n         \"\"\"\n-        exc_type, exc_value, tb = sys.exc_info()\n         for handler in self.url_build_error_handlers:\n             try:\n                 rv = handler(error, endpoint, values)\n+            except BuildError as e:\n+                # make error available outside except block\n+                error = e\n+            else:\n                 if rv is not None:\n                     return rv\n-            except BuildError as e:\n-                # make error available outside except block (py3)\n-                error = e\n \n-        # At this point we want to reraise the exception.  If the error is\n-        # still the same one we can reraise it with the original traceback,\n-        # otherwise we raise it from here.\n-        if error is exc_value:\n-            reraise(exc_type, exc_value, tb)\n+        # Re-raise if called with an active exception, otherwise raise\n+        # the passed in exception.\n+        if error is sys.exc_info()[1]:\n+            raise\n+\n         raise error\n \n     def preprocess_request(self):\n\n@@ -25,10 +25,6 @@ from threading import Thread\n import click\n from werkzeug.utils import import_string\n \n-from ._compat import getargspec\n-from ._compat import itervalues\n-from ._compat import reraise\n-from ._compat import text_type\n from .globals import current_app\n from .helpers import get_debug_flag\n from .helpers import get_env\n@@ -63,7 +59,7 @@ def find_best_app(script_info, module):\n             return app\n \n     # Otherwise find the only object that is a Flask instance.\n-    matches = [v for v in itervalues(module.__dict__) if isinstance(v, Flask)]\n+    matches = [v for v in module.__dict__.values() if isinstance(v, Flask)]\n \n     if len(matches) == 1:\n         return matches[0]\n@@ -105,7 +101,7 @@ def call_factory(script_info, app_factory, arguments=()):\n     of arguments. Checks for the existence of a script_info argument and calls\n     the app_factory depending on that and the arguments provided.\n     \"\"\"\n-    args_spec = getargspec(app_factory)\n+    args_spec = inspect.getfullargspec(app_factory)\n     arg_names = args_spec.args\n     arg_defaults = args_spec.defaults\n \n@@ -241,7 +237,7 @@ def locate_app(script_info, module_name, app_name, raise_if_not_found=True):\n     except ImportError:\n         # Reraise the ImportError if it occurred within the imported module.\n         # Determine this by checking whether the trace has a depth > 1.\n-        if sys.exc_info()[-1].tb_next:\n+        if sys.exc_info()[2].tb_next:\n             raise NoAppException(\n                 'While importing \"{name}\", an ImportError was raised:'\n                 \"\\n\\n{tb}\".format(name=module_name, tb=traceback.format_exc())\n@@ -327,7 +323,7 @@ class DispatchingApp(object):\n         exc_info = self._bg_loading_exc_info\n         if exc_info is not None:\n             self._bg_loading_exc_info = None\n-            reraise(*exc_info)\n+            raise exc_info\n \n     def _load_unlocked(self):\n         __traceback_hide__ = True  # noqa: F841\n@@ -741,10 +737,6 @@ def _validate_key(ctx, param, value):\n     \"\"\"\n     cert = ctx.params.get(\"cert\")\n     is_adhoc = cert == \"adhoc\"\n-\n-    if sys.version_info < (2, 7, 9):\n-        is_context = cert and not isinstance(cert, (text_type, bytes))\n-    else:\n     is_context = ssl and isinstance(cert, ssl.SSLContext)\n \n     if value is not None:\n\n@@ -14,9 +14,6 @@ import types\n \n from werkzeug.utils import import_string\n \n-from ._compat import iteritems\n-from ._compat import string_types\n-\n \n class ConfigAttribute(object):\n     \"\"\"Makes an attribute forward to the config\"\"\"\n@@ -169,7 +166,7 @@ class Config(dict):\n \n         :param obj: an import name or object\n         \"\"\"\n-        if isinstance(obj, string_types):\n+        if isinstance(obj, str):\n             obj = import_string(obj)\n         for key in dir(obj):\n             if key.isupper():\n@@ -261,7 +258,7 @@ class Config(dict):\n         .. versionadded:: 0.11\n         \"\"\"\n         rv = {}\n-        for k, v in iteritems(self):\n+        for k, v in self.items():\n             if not k.startswith(namespace):\n                 continue\n             if trim_namespace:\n\n@@ -13,8 +13,6 @@ from functools import update_wrapper\n \n from werkzeug.exceptions import HTTPException\n \n-from ._compat import BROKEN_PYPY_CTXMGR_EXIT\n-from ._compat import reraise\n from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n from .signals import appcontext_popped\n@@ -248,9 +246,6 @@ class AppContext(object):\n     def __exit__(self, exc_type, exc_value, tb):\n         self.pop(exc_value)\n \n-        if BROKEN_PYPY_CTXMGR_EXIT and exc_type is not None:\n-            reraise(exc_type, exc_value, tb)\n-\n \n class RequestContext(object):\n     \"\"\"The request context contains all request relevant information.  It is\n@@ -463,9 +458,6 @@ class RequestContext(object):\n         # See flask.testing for how this works.\n         self.auto_pop(exc_value)\n \n-        if BROKEN_PYPY_CTXMGR_EXIT and exc_type is not None:\n-            reraise(exc_type, exc_value, tb)\n-\n     def __repr__(self):\n         return \"<%s '%s' [%s] of %s>\" % (\n             self.__class__.__name__,\n\n@@ -11,8 +11,6 @@\n import os\n from warnings import warn\n \n-from ._compat import implements_to_string\n-from ._compat import text_type\n from .app import Flask\n from .blueprints import Blueprint\n from .globals import _request_ctx_stack\n@@ -24,7 +22,6 @@ class UnexpectedUnicodeError(AssertionError, UnicodeError):\n     \"\"\"\n \n \n-@implements_to_string\n class DebugFilesKeyError(KeyError, AssertionError):\n     \"\"\"Raised from request.files during debugging.  The idea is that it can\n     provide a better error message than just a generic KeyError/BadRequest.\n@@ -110,13 +107,13 @@ def _dump_loader_info(loader):\n         if key.startswith(\"_\"):\n             continue\n         if isinstance(value, (tuple, list)):\n-            if not all(isinstance(x, (str, text_type)) for x in value):\n+            if not all(isinstance(x, str) for x in value):\n                 continue\n             yield \"%s:\" % key\n             for item in value:\n                 yield \"  - %s\" % item\n             continue\n-        elif not isinstance(value, (str, text_type, int, float, bool)):\n+        elif not isinstance(value, (str, int, float, bool)):\n             continue\n         yield \"%s: %r\" % (key, value)\n \n\n@@ -30,10 +30,6 @@ from werkzeug.routing import BuildError\n from werkzeug.urls import url_quote\n from werkzeug.wsgi import wrap_file\n \n-from ._compat import fspath\n-from ._compat import PY2\n-from ._compat import string_types\n-from ._compat import text_type\n from .globals import _app_ctx_stack\n from .globals import _request_ctx_stack\n from .globals import current_app\n@@ -576,9 +572,9 @@ def send_file(\n     fsize = None\n \n     if hasattr(filename_or_fp, \"__fspath__\"):\n-        filename_or_fp = fspath(filename_or_fp)\n+        filename_or_fp = os.fspath(filename_or_fp)\n \n-    if isinstance(filename_or_fp, string_types):\n+    if isinstance(filename_or_fp, str):\n         filename = filename_or_fp\n         if not os.path.isabs(filename):\n             filename = os.path.join(current_app.root_path, filename)\n@@ -608,7 +604,7 @@ def send_file(\n         if attachment_filename is None:\n             raise TypeError(\"filename unavailable, required for sending as attachment\")\n \n-        if not isinstance(attachment_filename, text_type):\n+        if not isinstance(attachment_filename, str):\n             attachment_filename = attachment_filename.decode(\"utf-8\")\n \n         try:\n@@ -618,7 +614,7 @@ def send_file(\n                 \"filename\": unicodedata.normalize(\"NFKD\", attachment_filename).encode(\n                     \"ascii\", \"ignore\"\n                 ),\n-                \"filename*\": \"UTF-8''%s\" % url_quote(attachment_filename, safe=b\"\"),\n+                \"filename*\": \"UTF-8''%s\" % url_quote(attachment_filename, safe=\"\"),\n             }\n         else:\n             filenames = {\"filename\": attachment_filename}\n@@ -678,7 +674,7 @@ def send_file(\n                     os.path.getsize(filename),\n                     adler32(\n                         filename.encode(\"utf-8\")\n-                        if isinstance(filename, text_type)\n+                        if isinstance(filename, str)\n                         else filename\n                     )\n                     & 0xFFFFFFFF,\n@@ -769,8 +765,8 @@ def send_from_directory(directory, filename, **options):\n     :param options: optional keyword arguments that are directly\n                     forwarded to :func:`send_file`.\n     \"\"\"\n-    filename = fspath(filename)\n-    directory = fspath(directory)\n+    filename = os.fspath(filename)\n+    directory = os.fspath(directory)\n     filename = safe_join(directory, filename)\n     if not os.path.isabs(filename):\n         filename = os.path.join(current_app.root_path, filename)\n@@ -1140,22 +1136,12 @@ def total_seconds(td):\n def is_ip(value):\n     \"\"\"Determine if the given string is an IP address.\n \n-    Python 2 on Windows doesn't provide ``inet_pton``, so this only\n-    checks IPv4 addresses in that environment.\n-\n     :param value: value to check\n     :type value: str\n \n     :return: True if string is an IP address\n     :rtype: bool\n     \"\"\"\n-    if PY2 and os.name == \"nt\":\n-        try:\n-            socket.inet_aton(value)\n-            return True\n-        except socket.error:\n-            return False\n-\n     for family in (socket.AF_INET, socket.AF_INET6):\n         try:\n             socket.inet_pton(family, value)\n\n@@ -16,14 +16,13 @@ from itsdangerous import json as _json\n from jinja2 import Markup\n from werkzeug.http import http_date\n \n-from .._compat import PY2\n-from .._compat import text_type\n from ..globals import current_app\n from ..globals import request\n \n try:\n     import dataclasses\n except ImportError:\n+    # Python < 3.7\n     dataclasses = None\n \n # Figure out if simplejson escapes slashes.  This behavior was changed\n@@ -96,7 +95,7 @@ class JSONEncoder(_json.JSONEncoder):\n         if dataclasses and dataclasses.is_dataclass(o):\n             return dataclasses.asdict(o)\n         if hasattr(o, \"__html__\"):\n-            return text_type(o.__html__())\n+            return str(o.__html__())\n         return _json.JSONEncoder.default(self, o)\n \n \n@@ -209,7 +208,7 @@ def dumps(obj, app=None, **kwargs):\n     _dump_arg_defaults(kwargs, app=app)\n     encoding = kwargs.pop(\"encoding\", None)\n     rv = _json.dumps(obj, **kwargs)\n-    if encoding is not None and isinstance(rv, text_type):\n+    if encoding is not None and isinstance(rv, str):\n         rv = rv.encode(encoding)\n     return rv\n \n@@ -256,7 +255,6 @@ def loads(s, app=None, **kwargs):\n def load(fp, app=None, **kwargs):\n     \"\"\"Like :func:`loads` but reads from a file object.\"\"\"\n     _load_arg_defaults(kwargs, app=app)\n-    if not PY2:\n     fp = _wrap_reader_for_text(fp, kwargs.pop(\"encoding\", None) or \"utf-8\")\n     return _json.load(fp, **kwargs)\n \n@@ -300,7 +298,7 @@ def htmlsafe_dumps(obj, **kwargs):\n \n def htmlsafe_dump(obj, fp, **kwargs):\n     \"\"\"Like :func:`htmlsafe_dumps` but writes into a file object.\"\"\"\n-    fp.write(text_type(htmlsafe_dumps(obj, **kwargs)))\n+    fp.write(str(htmlsafe_dumps(obj, **kwargs)))\n \n \n def jsonify(*args, **kwargs):\n\n@@ -50,8 +50,6 @@ from jinja2 import Markup\n from werkzeug.http import http_date\n from werkzeug.http import parse_date\n \n-from .._compat import iteritems\n-from .._compat import text_type\n from ..json import dumps\n from ..json import loads\n \n@@ -124,7 +122,7 @@ class PassDict(JSONTag):\n     def to_json(self, value):\n         # JSON objects may only have string keys, so don't bother tagging the\n         # key here.\n-        return dict((k, self.serializer.tag(v)) for k, v in iteritems(value))\n+        return dict((k, self.serializer.tag(v)) for k, v in value.items())\n \n     tag = to_json\n \n@@ -181,7 +179,7 @@ class TagMarkup(JSONTag):\n         return callable(getattr(value, \"__html__\", None))\n \n     def to_json(self, value):\n-        return text_type(value.__html__())\n+        return str(value.__html__())\n \n     def to_python(self, value):\n         return Markup(value)\n\n@@ -10,19 +10,19 @@\n \"\"\"\n import hashlib\n import warnings\n+from collections.abc import MutableMapping\n from datetime import datetime\n \n from itsdangerous import BadSignature\n from itsdangerous import URLSafeTimedSerializer\n from werkzeug.datastructures import CallbackDict\n \n-from ._compat import collections_abc\n from .helpers import is_ip\n from .helpers import total_seconds\n from .json.tag import TaggedJSONSerializer\n \n \n-class SessionMixin(collections_abc.MutableMapping):\n+class SessionMixin(MutableMapping):\n     \"\"\"Expands a basic dictionary with session attributes.\"\"\"\n \n     @property\n\n@@ -8,7 +8,6 @@\n     :copyright: 2010 Pallets\n     :license: BSD-3-Clause\n \"\"\"\n-from ._compat import with_metaclass\n from .globals import request\n \n \n@@ -135,7 +134,7 @@ class MethodViewType(type):\n                 cls.methods = methods\n \n \n-class MethodView(with_metaclass(MethodViewType, View)):\n+class MethodView(View, metaclass=MethodViewType):\n     \"\"\"A class-based view that dispatches request methods to the corresponding\n     class methods. For example, if you implement a ``get`` method, it will be\n     used to handle ``GET`` requests. ::\n\n@@ -24,7 +24,6 @@ from werkzeug.http import parse_date\n from werkzeug.routing import BuildError\n \n import flask\n-from flask._compat import text_type\n \n \n def test_options_work(app, client):\n@@ -413,7 +412,7 @@ def test_session_expiration(app, client):\n \n     @app.route(\"/test\")\n     def test():\n-        return text_type(flask.session.permanent)\n+        return str(flask.session.permanent)\n \n     rv = client.get(\"/\")\n     assert \"set-cookie\" in rv.headers\n\n@@ -15,7 +15,6 @@ from jinja2 import TemplateNotFound\n from werkzeug.http import parse_cache_control_header\n \n import flask\n-from flask._compat import text_type\n \n \n def test_blueprint_specific_error_handling(app, client):\n@@ -150,7 +149,7 @@ def test_blueprint_url_defaults(app, client):\n \n     @bp.route(\"/bar\")\n     def bar(bar):\n-        return text_type(bar)\n+        return str(bar)\n \n     app.register_blueprint(bp, url_prefix=\"/1\", url_defaults={\"bar\": 23})\n     app.register_blueprint(bp, url_prefix=\"/2\", url_defaults={\"bar\": 19})\n\n@@ -14,7 +14,6 @@ from datetime import timedelta\n import pytest\n \n import flask\n-from flask._compat import PY2\n \n \n # config keys used for the TestConfig\n@@ -198,6 +197,4 @@ def test_from_pyfile_weird_encoding(tmpdir, encoding):\n     app = flask.Flask(__name__)\n     app.config.from_pyfile(str(f))\n     value = app.config[\"TEST_VALUE\"]\n-    if PY2:\n-        value = value.decode(encoding)\n     assert value == u\"föö\"\n\n@@ -24,9 +24,6 @@ from werkzeug.http import parse_options_header\n \n import flask\n from flask import json\n-from flask._compat import PY2\n-from flask._compat import StringIO\n-from flask._compat import text_type\n from flask.helpers import get_debug_flag\n from flask.helpers import get_env\n \n@@ -116,7 +113,7 @@ class TestJSON(object):\n     def test_json_bad_requests(self, app, client):\n         @app.route(\"/json\", methods=[\"POST\"])\n         def return_json():\n-            return flask.jsonify(foo=text_type(flask.request.get_json()))\n+            return flask.jsonify(foo=str(flask.request.get_json()))\n \n         rv = client.post(\"/json\", data=\"malformed\", content_type=\"application/json\")\n         assert rv.status_code == 400\n@@ -140,7 +137,7 @@ class TestJSON(object):\n \n     def test_json_dump_to_file(self, app, app_ctx):\n         test_data = {\"name\": \"Flask\"}\n-        out = StringIO()\n+        out = io.StringIO()\n \n         flask.json.dump(test_data, out)\n         out.seek(0)\n@@ -254,7 +251,7 @@ class TestJSON(object):\n         @app.route(\"/add\", methods=[\"POST\"])\n         def add():\n             json = flask.request.get_json()\n-            return text_type(json[\"a\"] + json[\"b\"])\n+            return str(json[\"a\"] + json[\"b\"])\n \n         rv = client.post(\n             \"/add\",\n@@ -267,7 +264,7 @@ class TestJSON(object):\n         render = flask.render_template_string\n         rv = flask.json.htmlsafe_dumps(\"</script>\")\n         assert rv == u'\"\\\\u003c/script\\\\u003e\"'\n-        assert type(rv) == text_type\n+        assert type(rv) is str\n         rv = render('{{ \"</script>\"|tojson }}')\n         assert rv == '\"\\\\u003c/script\\\\u003e\"'\n         rv = render('{{ \"<\\0/script>\"|tojson }}')\n@@ -447,7 +444,7 @@ class TestJSON(object):\n             assert lines == sorted_by_str\n \n \n-class PyStringIO(object):\n+class PyBytesIO(object):\n     def __init__(self, *args, **kwargs):\n         self._io = io.BytesIO(*args, **kwargs)\n \n@@ -503,11 +500,7 @@ class TestSendfile(object):\n         [\n             lambda app: open(os.path.join(app.static_folder, \"index.html\"), \"rb\"),\n             lambda app: io.BytesIO(b\"Test\"),\n-            pytest.param(\n-                lambda app: StringIO(\"Test\"),\n-                marks=pytest.mark.skipif(not PY2, reason=\"Python 2 only\"),\n-            ),\n-            lambda app: PyStringIO(b\"Test\"),\n+            lambda app: PyBytesIO(b\"Test\"),\n         ],\n     )\n     @pytest.mark.usefixtures(\"req_ctx\")\n@@ -525,10 +518,7 @@ class TestSendfile(object):\n         \"opener\",\n         [\n             lambda app: io.StringIO(u\"Test\"),\n-            pytest.param(\n             lambda app: open(os.path.join(app.static_folder, \"index.html\")),\n-                marks=pytest.mark.skipif(PY2, reason=\"Python 3 only\"),\n-            ),\n         ],\n     )\n     @pytest.mark.usefixtures(\"req_ctx\")\n\n@@ -12,7 +12,6 @@ import sys\n import pytest\n \n import flask\n-from flask._compat import PY2\n \n \n def test_explicit_instance_paths(modules_tmpdir):\n@@ -128,19 +127,3 @@ def test_egg_installed_paths(install_egg, modules_tmpdir, modules_tmpdir_prefix)\n     finally:\n         if \"site_egg\" in sys.modules:\n             del sys.modules[\"site_egg\"]\n-\n-\n-@pytest.mark.skipif(not PY2, reason=\"This only works under Python 2.\")\n-def test_meta_path_loader_without_is_package(request, modules_tmpdir):\n-    app = modules_tmpdir.join(\"unimportable.py\")\n-    app.write(\"import flask\\napp = flask.Flask(__name__)\")\n-\n-    class Loader(object):\n-        def find_module(self, name, path=None):\n-            return self\n-\n-    sys.meta_path.append(Loader())\n-    request.addfinalizer(sys.meta_path.pop)\n-\n-    with pytest.raises(AttributeError):\n-        import unimportable  # noqa: F401\n\n@@ -8,10 +8,10 @@ tests.test_logging\n \"\"\"\n import logging\n import sys\n+from io import StringIO\n \n import pytest\n \n-from flask._compat import StringIO\n from flask.logging import default_handler\n from flask.logging import has_level_handler\n from flask.logging import wsgi_errors_stream\n\n@@ -1,6 +0,0 @@\n-import io\n-\n-\n-def test_changelog_utf8_compatible():\n-    with io.open(\"CHANGES.rst\", encoding=\"UTF-8\") as f:\n-        f.read()\n\n@@ -9,8 +9,9 @@\n     :copyright: 2010 Pallets\n     :license: BSD-3-Clause\n \"\"\"\n+from io import StringIO\n+\n import flask\n-from flask._compat import StringIO\n \n \n def test_suppressed_exception_logging():\n\n@@ -14,7 +14,6 @@ import werkzeug\n \n import flask\n from flask import appcontext_popped\n-from flask._compat import text_type\n from flask.cli import ScriptInfo\n from flask.json import jsonify\n from flask.testing import EnvironBuilder\n@@ -184,7 +183,7 @@ def test_redirect_keep_session(app, client, app_ctx):\n def test_session_transactions(app, client):\n     @app.route(\"/\")\n     def index():\n-        return text_type(flask.session[\"foo\"])\n+        return str(flask.session[\"foo\"])\n \n     with client:\n         with client.session_transaction() as sess:\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
