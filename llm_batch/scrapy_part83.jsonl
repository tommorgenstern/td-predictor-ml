{"custom_id": "scrapy#e8960bf616b8ab915998acf9d556b86a84eae2cb", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 57 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 6 | Complexity Δ (Sum/Max): 13/13 | Churn Δ: 57 | Churn Cumulative: 57 | Contributors (this commit): 1 | Commits (past 90d): 1 | Contributors (cumulative): 1 | DMM Complexity: 1.0\n\nDIFF:\n@@ -0,0 +1,57 @@\n+import sys\n+import os\n+\n+from scrapy.xlib.pydispatch import dispatcher\n+from scrapy.contrib.exporter import XmlItemExporter\n+from scrapy.command import ScrapyCommand\n+from scrapy.core.manager import scrapymanager\n+from scrapy.core import signals\n+\n+def _import_file(filepath):\n+    abspath = os.path.abspath(filepath)\n+    dirname, file = os.path.split(abspath)\n+    fname, fext = os.path.splitext(file)\n+    if fext != '.py':\n+        raise ValueError(\"Only Python files supported: %s\" % abspath)\n+    if dirname:\n+        sys.path = [dirname] + sys.path\n+    try:\n+        module = __import__(fname, {}, {}, [''])\n+    finally:\n+        if dirname:\n+            sys.path.pop(0)\n+    return module\n+\n+\n+class Command(ScrapyCommand):\n+\n+    requires_project = False\n+\n+    def syntax(self):\n+        return \"[options] <spider_file>\"\n+\n+    def short_desc(self):\n+        return \"Run a spider\"\n+\n+    def long_desc(self):\n+        return \"Run the spider defined in the given file. The file must be a \" \\\n+            \"Python module which defines a SPIDER variable with a instance of \" \\\n+            \"the spider to run.\"\n+\n+    def add_options(self, parser):\n+        super(Command, self).add_options(parser)\n+        parser.add_option(\"--output\", dest=\"output\", metavar=\"FILE\",\n+            help=\"store scraped items to FILE in XML format\")\n+\n+    def run(self, args, opts):\n+        if len(args) != 1:\n+            return False\n+        if opts.output:\n+            file = open(opts.output, 'w+b')\n+            exporter = XmlItemExporter(file)\n+            dispatcher.connect(exporter.export_item, signal=signals.item_passed)\n+            exporter.start_exporting()\n+        module = _import_file(args[0])\n+        scrapymanager.runonce(module.SPIDER)\n+        if opts.output:\n+            exporter.finish_exporting()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#56b292e057d4a923b3af9e739758946d30782e17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 13 | Lines Deleted: 0 | Files Changed: 2 | Hunks: 2 | Methods Changed: 2 | Complexity Δ (Sum/Max): 3/2 | Churn Δ: 13 | Churn Cumulative: 884 | Contributors (this commit): 3 | Commits (past 90d): 22 | Contributors (cumulative): 6 | DMM Complexity: 1.0\n\nDIFF:\n@@ -95,6 +95,10 @@ class XmlItemExporter(BaseItemExporter):\n \n     def _export_xml_field(self, name, serialized_value):\n         self.xg.startElement(name, {})\n+        if hasattr(serialized_value, '__iter__'):\n+            for value in serialized_value:\n+                self._export_xml_field('value', value)\n+        else:\n             self.xg.characters(serialized_value)\n         self.xg.endElement(name)\n \n\n@@ -137,6 +137,15 @@ class XmlItemExporterTest(BaseItemExporterTest):\n         expected_value = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<items><item><age>22</age><name>John\\xc2\\xa3</name></item></items>'\n         self.assertEqual(self.output.getvalue(), expected_value)\n \n+    def test_multivalued_fields(self):\n+        output = StringIO()\n+        item = TestItem(name=[u'John\\xa3', u'Doe'])\n+        ie = XmlItemExporter(output)\n+        ie.start_exporting()\n+        ie.export_item(item)\n+        ie.finish_exporting()\n+        expected_value = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n<items><item><name><value>John\\xc2\\xa3</value><value>Doe</value></name></item></items>'\n+        self.assertEqual(output.getvalue(), expected_value)\n \n class JsonLinesItemExporterTest(BaseItemExporterTest):\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#66ff3b3013833e6b76596c388558de19c50238b9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 3 | Files Changed: 1 | Hunks: 3 | Methods Changed: 4 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 6 | Churn Cumulative: 104 | Contributors (this commit): 4 | Commits (past 90d): 7 | Contributors (cumulative): 4 | DMM Complexity: None\n\nDIFF:\n@@ -5,7 +5,7 @@ Helper functions for dealing with Twisted deferreds\n from twisted.internet import defer, reactor, task\n from twisted.python import failure\n \n-def defer_failed(_failure):\n+def defer_fail(_failure):\n     \"\"\"Same as twisted.internet.defer.fail, but delay calling errback until\n     next reactor loop\n     \"\"\"\n@@ -25,7 +25,7 @@ def defer_result(result):\n     if isinstance(result, defer.Deferred):\n         return result\n     elif isinstance(result, failure.Failure):\n-        return defer_failed(result)\n+        return defer_fail(result)\n     else:\n         return defer_succeed(result)\n \n@@ -36,7 +36,7 @@ def mustbe_deferred(f, *args, **kw):\n     try:\n         result = f(*args, **kw)\n     except:\n-        return defer_failed(failure.Failure())\n+        return defer_fail(failure.Failure())\n     else:\n         return defer_result(result)\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#02e228ad760a9a35d697aac7c70e38b3353eb242", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 16 | Lines Deleted: 8 | Files Changed: 1 | Hunks: 4 | Methods Changed: 6 | Complexity Δ (Sum/Max): 2/2 | Churn Δ: 24 | Churn Cumulative: 1176 | Contributors (this commit): 4 | Commits (past 90d): 51 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -60,9 +60,10 @@ class ExecutionEngine(object):\n         if not self.running:\n             return\n         self.running = False\n-        for spider in self.open_spiders:\n-            reactor.addSystemEventTrigger('before', 'shutdown', \\\n-                self.close_spider, spider, reason='shutdown')\n+        def before_shutdown():\n+            dfd = self._close_all_spiders()\n+            return dfd.addBoth(lambda _: self._finish_stopping_engine())\n+        reactor.addSystemEventTrigger('before', 'shutdown', before_shutdown)\n         if self._mainloop_task.running:\n             self._mainloop_task.stop()\n         try:\n@@ -284,10 +285,15 @@ class ExecutionEngine(object):\n             return self._finish_closing_spider_if_idle(spider)\n         return defer.succeed(None)\n \n+    def _close_all_spiders(self):\n+        dfds = [self.close_spider(s, reason='shutdown') for s in self.open_spiders]\n+        dlist = defer.DeferredList(dfds)\n+        return dlist\n+\n     def _finish_closing_spider_if_idle(self, spider):\n         \"\"\"Call _finish_closing_spider if domain is idle\"\"\"\n         if self.spider_is_idle(spider) or self.killed:\n-            self._finish_closing_spider(spider)\n+            return self._finish_closing_spider(spider)\n         else:\n             dfd = defer.Deferred()\n             dfd.addCallback(self._finish_closing_spider_if_idle)\n@@ -304,10 +310,12 @@ class ExecutionEngine(object):\n         send_catch_log(signal=signals.domain_closed, sender=self.__class__, \\\n             domain=domain, spider=spider, reason=reason)\n         stats.close_domain(domain, reason=reason)\n-        spiders.close_spider(spider)\n-        log.msg(\"Domain closed (%s)\" % reason, domain=domain) \n-        self._mainloop()\n-        if not self.open_spiders:\n+        dfd = defer.maybeDeferred(spiders.close_spider, spider)\n+        dfd.addBoth(log.msg, \"Domain closed (%s)\" % reason, domain=domain)\n+        reactor.callLater(0, self._mainloop)\n+        return dfd\n+\n+    def _finish_stopping_engine(self):\n         send_catch_log(signal=signals.engine_stopped, sender=self.__class__)\n \n scrapyengine = ExecutionEngine()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#e8514445dce11a253f97855fd214d64aa8249170", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 12 | Files Changed: 1 | Hunks: 3 | Methods Changed: 1 | Complexity Δ (Sum/Max): -1/0 | Churn Δ: 14 | Churn Cumulative: 394 | Contributors (this commit): 2 | Commits (past 90d): 11 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -173,23 +173,13 @@ class ImagesPipeline(MediaPipeline):\n         modification was made long time ago, so a reprocessing is recommended to\n         refresh it in case of change.\n \n-    IMAGES_EXPIRES setting controls the maximun days since an image was modified\n-    to consider it uptodate.\n-\n-    THUMBS is a tuple of tuples, each sub-tuple is a pair of thumb_id string\n-    and a compatible python image library size (a tuple).\n-    See thumbnail method at http://www.pythonware.com/library/pil/handbook/image.htm\n-\n-    Downloaded images are skipped if sizes aren't greater than MIN_WIDTH and\n-    MIN_HEIGHT limit. A proper log messages will be printed.\n-\n     \"\"\"\n \n     MEDIA_NAME = 'image'\n     MIN_WIDTH = settings.getint('IMAGES_MIN_WIDTH', 0)\n     MIN_HEIGHT = settings.getint('IMAGES_MIN_HEIGHT', 0)\n     EXPIRES = settings.getint('IMAGES_EXPIRES', 90)\n-    THUMBS = settings['IMAGES_THUMBS']\n+    THUMBS = settings.get('IMAGES_THUMBS', {})\n     STORE_SCHEMES = {\n             '': FSImagesStore,\n             'file': FSImagesStore,\n@@ -297,7 +287,7 @@ class ImagesPipeline(MediaPipeline):\n         image, buf = self.convert_image(orig_image)\n         yield key, image, buf\n \n-        for thumb_id, size in self.THUMBS.iteritems() or []:\n+        for thumb_id, size in self.THUMBS.iteritems():\n             thumb_key = self.thumb_key(request.url, thumb_id)\n             thumb_image, thumb_buf = self.convert_image(image, size)\n             yield thumb_key, thumb_image, thumb_buf\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#132557dd140fb873c6169d2c3364a5edf8186119", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 18 | Lines Deleted: 6 | Files Changed: 5 | Hunks: 10 | Methods Changed: 2 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 24 | Churn Cumulative: 268 | Contributors (this commit): 3 | Commits (past 90d): 21 | Contributors (cumulative): 10 | DMM Complexity: 1.0\n\nDIFF:\n@@ -49,7 +49,12 @@ copyright = u'2008-2009, Insophia'\n # built documents.\n #\n # The short X.Y version.\n-version = '0.7.0'\n+try:\n+    import scrapy\n+    version = scrapy.__version__\n+except ImportError:\n+    version = ''\n+\n # The full version, including alpha/beta/rc tags.\n release = version\n \n\n@@ -3,7 +3,8 @@ Scrapy - a screen scraping framework written in Python\n \"\"\"\n \n # IMPORTANT: remember to also update the version in docs/conf.py\n-__version__ = \"0.7.0\"\n+version_info = (0, 7, 0, 'candidate', 0)\n+__version__ = \"0.7.0-rc1\"\n \n import sys, os\n \n\n@@ -3,10 +3,13 @@ import os\n from subprocess import Popen, PIPE\n import unittest\n \n+import scrapy\n+\n class CmdlineTest(unittest.TestCase):\n \n     def setUp(self):\n         self.env = os.environ.copy()\n+        self.env['PYTHONPATH'] = os.path.dirname(scrapy.__path__[0])\n         self.env.pop('SCRAPY_SETTINGS_DISABLED', None)\n         self.env['SCRAPY_SETTINGS_MODULE'] = 'scrapy.tests.test_cmdline.settings'\n \n\n@@ -1,11 +1,13 @@\n import sys\n import os\n import subprocess\n-from os.path import exists, join\n+from os.path import exists, join, dirname\n from shutil import rmtree\n from tempfile import mkdtemp\n import unittest\n \n+import scrapy\n+\n \n class ProjectTest(unittest.TestCase):\n     project_name = 'testproject'\n@@ -16,6 +18,7 @@ class ProjectTest(unittest.TestCase):\n         self.proj_path = join(self.temp_path, self.project_name)\n         self.proj_mod_path = join(self.proj_path, self.project_name)\n         self.env = os.environ.copy()\n+        self.env['PYTHONPATH'] = dirname(scrapy.__path__[0])\n \n     def tearDown(self):\n         rmtree(self.temp_path)\n\n@@ -81,14 +81,14 @@ if u'SVN' in version:\n     version = ' '.join(version.split(' ')[:-1])\n \n setup(\n-    name = 'Scrapy',\n+    name = 'scrapy',\n     version = version,\n     url = 'http://scrapy.org',\n-    download_url = \"http://scrapy.org/releases/scrapy-0.7.0.tar.gz\",\n     description = 'A high-level Python Screen Scraping framework',\n     long_description = 'Scrapy is a high level scraping and web crawling framework for writing spiders to crawl and parse web pages for all kinds of purposes, from information retrieval to monitoring or testing web sites.',\n     author = 'Scrapy developers',\n-    author_email = '',\n+    maintainer = 'Pablo Hoffman',\n+    maintainer_email = 'pablo@pablohoffman.com',\n     license = 'BSD',\n     packages = packages,\n     cmdclass = cmdclasses,\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#6e10914454f12711d6ede6a4e923a6fd9ed101c9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 14 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 14 | Churn Cumulative: 40 | Contributors (this commit): 3 | Commits (past 90d): 5 | Contributors (cumulative): 3 | DMM Complexity: None\n\nDIFF:\n@@ -94,4 +94,18 @@ setup(\n     cmdclass = cmdclasses,\n     data_files = data_files,\n     scripts = ['bin/scrapy-ctl.py'],\n+    classifiers = [\n+        'Programming Language :: Python',\n+        'Programming Language :: Python :: 2.5',\n+        'Programming Language :: Python :: 2.6',\n+        'Programming Language :: Python :: 2.7',\n+        'License :: OSI Approved :: BSD License',\n+        'Operating System :: OS Independent',\n+        'Development Status :: 5 - Production/Stable',\n+        'Intended Audience :: Developers',\n+        'Environment :: Console',\n+        'Topic :: Software Development :: Libraries :: Application Frameworks',\n+        'Topic :: Software Development :: Libraries :: Python Modules',\n+        'Topic :: Internet :: WWW/HTTP',\n+    ]\n )\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#48c3fb3aceeb6b303b598015cff2991c945abc4c", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 28 | Files Changed: 1 | Hunks: 3 | Methods Changed: 4 | Complexity Δ (Sum/Max): -2/0 | Churn Δ: 30 | Churn Cumulative: 149 | Contributors (this commit): 2 | Commits (past 90d): 6 | Contributors (cumulative): 2 | DMM Complexity: 0.0\n\nDIFF:\n@@ -269,41 +269,15 @@ class FormRequestTest(RequestTest):\n         response = Response(\"http://www.example.com/lala.html\", body=respbody)\n         self.assertRaises(IndexError, self.request_class.from_response, response, formnumber=1)\n \n-# XXX: XmlRpcRequest doesn't respect original Request API. is this expected?\n+class XmlRpcRequestTest(RequestTest):\n \n-class XmlRpcRequestTest(unittest.TestCase):\n-\n-    def test_basic(self):\n+    def test_xmlrpc_basic(self):\n         r = XmlRpcRequest('http://scrapytest.org/rpc2', methodname='login', params=('username', 'password'))\n         self.assertEqual(r.headers['Content-Type'], 'text/xml')\n         self.assertEqual(r.body, \"<?xml version='1.0'?>\\n<methodCall>\\n<methodName>login</methodName>\\n<params>\\n<param>\\n<value><string>username</string></value>\\n</param>\\n<param>\\n<value><string>password</string></value>\\n</param>\\n</params>\\n</methodCall>\\n\")\n         self.assertEqual(r.method, 'POST')\n         self.assertTrue(r.dont_filter, True)\n \n-    def test_copy(self):\n-        \"\"\"Test XmlRpcRequest copy\"\"\"\n-\n-        def somecallback():\n-            pass\n-\n-        r1 = XmlRpcRequest(\"http://www.example.com\", callback=somecallback,\n-                methodname='login', params=('username', 'password'))\n-        r1.meta['foo'] = 'bar'\n-        r2 = r1.copy()\n-\n-        assert r1.deferred is not r2.deferred\n-\n-        # make sure meta dict is shallow copied\n-        assert r1.meta is not r2.meta, \"meta must be a shallow copy, not identical\"\n-        self.assertEqual(r1.meta, r2.meta)\n-\n-        # make sure headers attribute is shallow copied\n-        assert r1.headers is not r2.headers, \"headers must be a shallow copy, not identical\"\n-        self.assertEqual(r1.headers, r2.headers)\n-        self.assertEqual(r1.encoding, r2.encoding)\n-        self.assertEqual(r1.dont_filter, r2.dont_filter)\n-        self.assertEqual(r1.body, r2.body)\n-\n \n if __name__ == \"__main__\":\n     unittest.main()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#1b28858bf9c447fbd9af95c72487a5ff15b4e063", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 43 | Lines Deleted: 15 | Files Changed: 2 | Hunks: 17 | Methods Changed: 6 | Complexity Δ (Sum/Max): 5/4 | Churn Δ: 58 | Churn Cumulative: 215 | Contributors (this commit): 2 | Commits (past 90d): 10 | Contributors (cumulative): 4 | DMM Complexity: 0.08333333333333333\n\nDIFF:\n@@ -4,10 +4,13 @@ This module implements the XmlRpcRequest class which is a more convenient class\n \n See documentation in docs/topics/request-response.rst\n \"\"\"\n-\n import xmlrpclib\n \n from scrapy.http.request import Request\n+from scrapy.utils.python import get_func_args\n+\n+\n+DUMPS_ARGS = get_func_args(xmlrpclib.dumps)\n \n \n class XmlRpcRequest(Request):\n@@ -15,10 +18,10 @@ class XmlRpcRequest(Request):\n     __slots__ = ()\n \n     def __init__(self, *args, **kwargs):\n-        if 'body' not in kwargs:\n-            params = kwargs.pop('params')\n-            methodname = kwargs.pop('methodname')\n-            kwargs['body'] = xmlrpclib.dumps(params, methodname)\n+        encoding = kwargs.get('encoding', None)\n+        if 'body' not in kwargs and 'params' in kwargs:\n+            kw = dict((k, kwargs.pop(k)) for k in DUMPS_ARGS if k in kwargs)\n+            kwargs['body'] = xmlrpclib.dumps(**kw)\n \n         # spec defines that requests must use POST method\n         kwargs.setdefault('method', 'POST')\n@@ -26,5 +29,9 @@ class XmlRpcRequest(Request):\n         # xmlrpc query multiples times over the same url\n         kwargs.setdefault('dont_filter', True)\n \n+        # restore encoding\n+        if encoding is not None:\n+            kwargs['encoding'] = encoding\n+\n         super(XmlRpcRequest, self).__init__(*args, **kwargs)\n         self.headers.setdefault('Content-Type', 'text/xml')\n\n@@ -1,14 +1,19 @@\n-import unittest\n import cgi\n import weakref\n+import unittest\n+import xmlrpclib\n from cStringIO import StringIO\n from urlparse import urlparse\n \n from scrapy.http import Request, FormRequest, XmlRpcRequest, Headers, Response\n \n+\n class RequestTest(unittest.TestCase):\n \n     request_class = Request\n+    default_method = 'GET'\n+    default_headers = {}\n+    default_meta = {}\n \n     def test_init(self):\n         # Request requires url in the constructor\n@@ -21,14 +26,14 @@ class RequestTest(unittest.TestCase):\n         r = self.request_class(\"http://www.example.com\")\n         assert isinstance(r.url, str)\n         self.assertEqual(r.url, \"http://www.example.com\")\n-        self.assertEqual(r.method, \"GET\")\n+        self.assertEqual(r.method, self.default_method)\n \n         r.url = \"http://www.example.com/other\"\n         assert isinstance(r.url, str)\n \n         assert isinstance(r.headers, Headers)\n-        self.assertEqual(r.headers, {})\n-        self.assertEqual(r.meta, {})\n+        self.assertEqual(r.headers, self.default_headers)\n+        self.assertEqual(r.meta, self.default_meta)\n \n         meta = {\"lala\": \"lolo\"}\n         headers = {\"caca\": \"coco\"}\n@@ -149,13 +154,13 @@ class RequestTest(unittest.TestCase):\n \n     def test_replace(self):\n         \"\"\"Test Request.replace() method\"\"\"\n-        hdrs = Headers({\"key\": \"value\"})\n-        r1 = self.request_class(\"http://www.example.com\")\n+        r1 = self.request_class(\"http://www.example.com\", method='GET')\n+        hdrs = Headers(dict(r1.headers, key='value'))\n         r2 = r1.replace(method=\"POST\", body=\"New body\", headers=hdrs)\n         self.assertEqual(r1.url, r2.url)\n         self.assertEqual((r1.method, r2.method), (\"GET\", \"POST\"))\n         self.assertEqual((r1.body, r2.body), ('', \"New body\"))\n-        self.assertEqual((r1.headers, r2.headers), ({}, hdrs))\n+        self.assertEqual((r1.headers, r2.headers), (self.default_headers, hdrs))\n \n         # Empty attributes (which may fail if not compared properly)\n         r3 = self.request_class(\"http://www.example.com\", meta={'a': 1}, dont_filter=True)\n@@ -269,15 +274,31 @@ class FormRequestTest(RequestTest):\n         response = Response(\"http://www.example.com/lala.html\", body=respbody)\n         self.assertRaises(IndexError, self.request_class.from_response, response, formnumber=1)\n \n+\n class XmlRpcRequestTest(RequestTest):\n \n-    def test_xmlrpc_basic(self):\n-        r = XmlRpcRequest('http://scrapytest.org/rpc2', methodname='login', params=('username', 'password'))\n+    request_class = XmlRpcRequest\n+    default_method = 'POST'\n+    default_headers = {'Content-Type': ['text/xml']}\n+\n+    def _test_request(self, **kwargs):\n+        r = self.request_class('http://scrapytest.org/rpc2', **kwargs)\n         self.assertEqual(r.headers['Content-Type'], 'text/xml')\n-        self.assertEqual(r.body, \"<?xml version='1.0'?>\\n<methodCall>\\n<methodName>login</methodName>\\n<params>\\n<param>\\n<value><string>username</string></value>\\n</param>\\n<param>\\n<value><string>password</string></value>\\n</param>\\n</params>\\n</methodCall>\\n\")\n+        self.assertEqual(r.body, xmlrpclib.dumps(**kwargs))\n         self.assertEqual(r.method, 'POST')\n+        self.assertEqual(r.encoding, kwargs.get('encoding', 'utf-8'))\n         self.assertTrue(r.dont_filter, True)\n \n+    def test_xmlrpc_dumps(self):\n+        self._test_request(params=('value',))\n+        self._test_request(params=('username', 'password'), methodname='login')\n+        self._test_request(params=('response', ), methodresponse='login')\n+        self._test_request(params=(u'pas\\xa3',), encoding='utf-8')\n+        self._test_request(params=(u'pas\\xa3',), encoding='latin')\n+        self._test_request(params=(None,), allow_none=1)\n+        self.assertRaises(TypeError, self._test_request)\n+        self.assertRaises(TypeError, self._test_request, params=(None,))\n+\n \n if __name__ == \"__main__\":\n     unittest.main()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#12ebcfd6c4100be970a9e140c52221305f38eae3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 16 | Contributors (this commit): 2 | Commits (past 90d): 5 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -3,8 +3,8 @@ Scrapy - a screen scraping framework written in Python\n \"\"\"\n \n # IMPORTANT: remember to also update the version in docs/conf.py\n-version_info = (0, 7, 0, 'candidate', 0)\n-__version__ = \"0.7.0-rc1\"\n+version_info = (0, 8, 0, '', 0)\n+__version__ = \"0.8.0-dev\"\n \n import sys, os\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#6467c7055df3a37c3db6096906df783d05c91700", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 35 | Lines Deleted: 6 | Files Changed: 4 | Hunks: 7 | Methods Changed: 5 | Complexity Δ (Sum/Max): 1/2 | Churn Δ: 41 | Churn Cumulative: 489 | Contributors (this commit): 3 | Commits (past 90d): 26 | Contributors (cumulative): 8 | DMM Complexity: 1.0\n\nDIFF:\n@@ -8,6 +8,7 @@ See documentation in docs/topics/spiders.rst\n import copy\n \n from scrapy.http import Request\n+from scrapy.utils.spider import iterate_spider_output\n from scrapy.contrib.spiders.init import InitSpider\n from scrapy.conf import settings\n \n@@ -116,7 +117,7 @@ class CrawlSpider(InitSpider):\n         if callback:\n             cb_res = callback(response, **cb_kwargs) or ()\n             cb_res = self.process_results(response, cb_res)\n-            res.extend(cb_res)\n+            res.extend(iterate_spider_output(cb_res))\n         return res\n \n     def _compile_rules(self):\n\n@@ -5,7 +5,8 @@ from twisted.python.failure import Failure\n from twisted.internet import defer\n \n from scrapy.utils.defer import defer_result, defer_succeed, parallel\n-from scrapy.utils.misc import load_object, arg_to_iter\n+from scrapy.utils.spider import iterate_spider_output\n+from scrapy.utils.misc import load_object\n from scrapy.utils.signal import send_catch_log\n from scrapy.core.exceptions import IgnoreRequest, DropItem\n from scrapy.core import signals\n@@ -16,6 +17,7 @@ from scrapy import log\n from scrapy.stats import stats\n from scrapy.conf import settings\n \n+\n class SpiderInfo(object):\n     \"\"\"Object for holding data of the responses being scraped\"\"\"\n \n@@ -128,10 +130,7 @@ class Scraper(object):\n \n     def call_spider(self, result, request, spider):\n         defer_result(result).chainDeferred(request.deferred)\n-        return request.deferred.addCallback(self._iterable_spider_output)\n-\n-    def _iterable_spider_output(self, result):\n-        return [result] if isinstance(result, BaseItem) else arg_to_iter(result)\n+        return request.deferred.addCallback(iterate_spider_output)\n \n     def handle_spider_error(self, _failure, request, spider, propagated_failure=None):\n         referer = request.headers.get('Referer', None)\n\n@@ -0,0 +1,22 @@\n+import unittest\n+from scrapy.http import Request\n+from scrapy.item import BaseItem\n+from scrapy.utils.spider import iterate_spider_output\n+\n+\n+class UtilsSpidersTestCase(unittest.TestCase):\n+\n+    def test_iterate_spider_output(self):\n+        i = BaseItem()\n+        r = Request('http://scrapytest.org')\n+        o = object()\n+\n+        self.assertEqual(list(iterate_spider_output(i)), [i])\n+        self.assertEqual(list(iterate_spider_output(r)), [r])\n+        self.assertEqual(list(iterate_spider_output(o)), [o])\n+        self.assertEqual(list(iterate_spider_output([r, i, o])), [r, i, o])\n+\n+\n+if __name__ == \"__main__\":\n+    unittest.main()\n+\n\n@@ -0,0 +1,7 @@\n+from scrapy.item import BaseItem\n+from scrapy.utils.misc import  arg_to_iter\n+\n+\n+def iterate_spider_output(result):\n+    return [result] if isinstance(result, BaseItem) else arg_to_iter(result)\n+\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#dfd35c528004476e1ea534561835bcc167338c72", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 10 | Lines Deleted: 4 | Files Changed: 1 | Hunks: 4 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 14 | Churn Cumulative: 17 | Contributors (this commit): 2 | Commits (past 90d): 2 | Contributors (cumulative): 2 | DMM Complexity: 1.0\n\nDIFF:\n@@ -21,8 +21,11 @@ class ResponseTypes(object):\n         'application/rss+xml': 'scrapy.http.XmlResponse',\n         'application/xhtml+xml': 'scrapy.http.HtmlResponse',\n         'application/xml': 'scrapy.http.XmlResponse',\n+        'application/json': 'scrapy.http.TextResponse',\n+        'application/javascript': 'scrapy.http.TextResponse',\n+        'application/x-javascript': 'scrapy.http.TextResponse',\n         'text/xml': 'scrapy.http.XmlResponse',\n-        'text': 'scrapy.http.TextResponse',\n+        'text/*': 'scrapy.http.TextResponse',\n     }\n \n     def __init__(self):\n@@ -35,10 +38,13 @@ class ResponseTypes(object):\n \n     def from_mimetype(self, mimetype):\n         \"\"\"Return the most appropiate Response class for the given mimetype\"\"\"\n-        if mimetype is not None:\n-            return self.classes.get(mimetype, self.classes.get(mimetype.split('/')[0], Response))\n-        else:\n+        if mimetype is None:\n             return Response\n+        elif mimetype in self.classes:\n+            return self.classes[mimetype]\n+        else:\n+            basetype = \"%s/*\" % mimetype.split('/')[0]\n+            return self.classes.get(basetype, Response)\n \n     def from_content_type(self, content_type):\n         \"\"\"Return the most appropiate Response class from an HTTP Content-Type\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#1f9e0f10eb9da31a0f86a3713b29441b2bfe9e63", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 15 | Lines Deleted: 16 | Files Changed: 2 | Hunks: 8 | Methods Changed: 3 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 31 | Churn Cumulative: 527 | Contributors (this commit): 2 | Commits (past 90d): 20 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -22,7 +22,7 @@ from scrapy.stats import stats\n from scrapy.utils.misc import md5sum\n from scrapy.core import signals\n from scrapy.core.engine import scrapyengine\n-from scrapy.core.exceptions import DropItem, NotConfigured\n+from scrapy.core.exceptions import DropItem, NotConfigured, IgnoreRequest\n from scrapy.spider import BaseSpider\n from scrapy.contrib.pipeline.media import MediaPipeline\n from scrapy.http import Request\n@@ -202,16 +202,14 @@ class ImagesPipeline(MediaPipeline):\n         referer = request.headers.get('Referer')\n \n         if response.status != 200:\n-            msg = 'Image (http-error): Error downloading image from %s referred in <%s>' \\\n-                    % (request, referer)\n-            log.msg(msg, level=log.WARNING, domain=info.domain)\n-            raise ImageException(msg)\n+            log.msg('Image (http-error): Error downloading image from %s referred in <%s>' \\\n+                    % (request, referer), level=log.WARNING, domain=info.domain)\n+            raise ImageException\n \n         if not response.body:\n-            msg = 'Image (empty-content): Empty image from %s referred in <%s>: no-content' \\\n-                    % (request, referer)\n-            log.msg(msg, level=log.WARNING, domain=info.domain)\n-            raise ImageException(msg)\n+            log.msg('Image (empty-content): Empty image from %s referred in <%s>: no-content' \\\n+                    % (request, referer), level=log.WARNING, domain=info.domain)\n+            raise ImageException\n \n         status = 'cached' if 'cached' in response.flags else 'downloaded'\n         msg = 'Image (%s): Downloaded image from %s referred in <%s>' % \\\n@@ -224,19 +222,20 @@ class ImagesPipeline(MediaPipeline):\n             checksum = self.image_downloaded(response, request, info)\n         except ImageException, ex:\n             log.msg(str(ex), level=log.WARNING, domain=info.domain)\n-            raise ex\n-        except Exception, ex:\n-            log.msg(str(ex), level=log.WARNING, domain=info.domain)\n-            raise ex\n+            raise\n+        except Exception:\n+            log.err(domain=info.domain)\n+            raise ImageException\n \n         return {'url': request.url, 'path': key, 'checksum': checksum}\n \n     def media_failed(self, failure, request, info):\n+        if not isinstance(failure.value, IgnoreRequest):\n             referer = request.headers.get('Referer')\n-        msg = 'Image (unknow-error): Error downloading %s from %s referred in <%s>: %s' \\\n+            msg = 'Image (unknown-error): Error downloading %s from %s referred in <%s>: %s' \\\n                     % (self.MEDIA_NAME, request, referer, str(failure))\n             log.msg(msg, level=log.WARNING, domain=info.domain)\n-        raise ImageException(msg)\n+        raise ImageException\n \n     def media_to_download(self, request, info):\n         def _onsuccess(result):\n\n@@ -44,7 +44,7 @@ class MediaPipeline(object):\n                     errbackArgs=(item, request, info),)\n             dlist.append(dfd)\n \n-        return DeferredList(dlist).addCallback(self.item_completed, item, info)\n+        return DeferredList(dlist, consumeErrors=1).addCallback(self.item_completed, item, info)\n \n     def _enqueue(self, request, info):\n         wad = request.deferred or Deferred()\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#e0ccb2cceb97adda9ffd7da971e2fb18fb5a300f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 3 | Lines Deleted: 0 | Files Changed: 1 | Hunks: 1 | Methods Changed: 1 | Complexity Δ (Sum/Max): 1/1 | Churn Δ: 3 | Churn Cumulative: 1179 | Contributors (this commit): 4 | Commits (past 90d): 26 | Contributors (cumulative): 4 | DMM Complexity: 1.0\n\nDIFF:\n@@ -228,6 +228,9 @@ class ExecutionEngine(object):\n             self.next_request(spider)\n             return _\n \n+        if spider not in self.downloader.sites:\n+            return defer.fail(Failure(IgnoreRequest())).addBoth(_on_complete)\n+\n         dwld = mustbe_deferred(self.downloader.fetch, request, spider)\n         dwld.addCallbacks(_on_success, _on_error)\n         dwld.addBoth(_on_complete)\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#2be739964d903f6b7aa455d20ae8badaf842c1c6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 2 | Lines Deleted: 2 | Files Changed: 1 | Hunks: 1 | Methods Changed: 0 | Complexity Δ (Sum/Max): 0/0 | Churn Δ: 4 | Churn Cumulative: 20 | Contributors (this commit): 2 | Commits (past 90d): 6 | Contributors (cumulative): 2 | DMM Complexity: None\n\nDIFF:\n@@ -3,8 +3,8 @@ Scrapy - a screen scraping framework written in Python\n \"\"\"\n \n # IMPORTANT: remember to also update the version in docs/conf.py\n-version_info = (0, 7, 0, 'candidate', 0)\n-__version__ = \"0.7.0-rc1\"\n+version_info = (0, 7, 0, 'final', 0)\n+__version__ = \"0.7\"\n \n import sys, os\n \n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
{"custom_id": "scrapy#4a371a6cd3818f8c7e63072d456dfb329ed84f6f", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "user", "content": "You are a senior reviewer.\n\nCommit Summary:\nLines Added: 0 | Lines Deleted: 2281 | Files Changed: 4 | Hunks: 4 | Methods Changed: 72 | Complexity Δ (Sum/Max): -3/0 | Churn Δ: 2281 | Churn Cumulative: 2283 | Contributors (this commit): 2 | Commits (past 90d): 5 | Contributors (cumulative): 8 | DMM Complexity: 0.28076923076923077\n\nDIFF:\n@@ -1,24 +0,0 @@\n-from twisted.trial import unittest\n-\n-class SpidermonkeyTest(unittest.TestCase):\n-\n-    def setUp(self):\n-        try:\n-            from scrapy.xlib.spidermonkey import Runtime\n-            r = Runtime()\n-            self.cx = r.new_context()\n-        except ImportError:\n-            raise unittest.SkipTest(\"Spidermonkey C library not available\")\n-\n-    def test_spidermonkey(self):\n-        \"\"\"Spidermonkey basic functionality tests\"\"\"\n-\n-        self.cx.eval_script(\"var item0={'price':50}\")\n-        self.cx.eval_script(\"var item1={'price':20}\")\n-        self.assertEqual(self.cx.eval_script(\"item0\"), {'price': 50})\n-        self.assertEqual(self.cx.eval_script(\"item1\"), {'price': 20})\n-        self.cx.eval_script(\"var itemArray=new Array(item0, item1)\")\n-        self.assertEqual(self.cx.eval_script(\"itemArray\"), [{'price': 50}, {'price':20}])\n-\n-if __name__ == \"__main__\":\n-    unittest.main()\n\n@@ -1 +0,0 @@\n-from spidermonkey import *\n\\ No newline at end of file\n\n@@ -1,2 +0,0 @@\n-#defines order in which spidermonkey bin library will be searched\n-try_libs = [\"libmozjs.so.0d\", \"libjs.so\", \"libjs.so.0\"]\n\\ No newline at end of file\n\n@@ -1,2254 +0,0 @@\n-# this is a ctypes-based python wrapper for mozilla spidermonkey\n-\n-# ************************************************************************\n-# This is an alpha release.  It has many known faults, and interfaces will\n-# change.\n-\n-# Note that code listed with JavaScript error messages can be the WRONG\n-# CODE!  Don't take it seriously.\n-# ************************************************************************\n-\n-# spidermonkey 0.0.2a: Python / JavaScript bridge.\n-# Copyright (C) 2003  John J. Lee <jjl@pobox.com>\n-# Copyright (C) 2006  Leonard Ritter <paniq@paniq.org>\n-\n-# Partly derived from Spidermonkey.xs, Copyright (C) 2001, Claes\n-#  Jacobsson, All Rights Reserved (Perl Artistic License).\n-# Partly derived from PerlConnect (part of spidermonkey) Copyright (C)\n-#  1998 Netscape Communications Corporation (GPL).\n-#\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n-\n-\n-# Security constraints:\n-#  Can't add attributes to Python objects.\n-#  *Can* add JS properties to JS proxies of Python objects, as long as it\n-#   won't hide a Python attribute of the same name.\n-#  Can't assign to Python methods.\n-#  Can't access any Python attribute starting with \"_\".\n-#  Also, bound Python objects can of course implement their own\n-#   protection, as the Window class does.\n-\n-# XXX\n-# Does JS expect some exceptions on reading a non-existent property?\n-#  Currently, this code has the effect of returning undef in that case,\n-#  which seems odd.  Look in O'Reilly book / spidermonkey code.\n-# Exception propagation.  IIRC, I'm waiting for except * to be fixed in\n-#  Pyrex.\n-# Code listings on JS errors are wrong.\n-# Review code\n-#  Replace Object with Py_INCREF and just keeping python object in JS\n-#   object (need to think first, though, to check this will work).\n-#  API call return values and bad function arguments!\n-#  Memory management.\n-#   Check strcpy's, malloc's / free's / Destroy*'s.\n-#   Look for and fix any memory leaks.\n-#  To prevent people crashing module, would be nice to make some things\n-#   private.  Ask on Pyrex list.\n-#  Make use of JS API security model?\n-#  GC issues (see spidermonkey GC tips page).\n-#  Threading issues (see GC tips again).\n-\n-from ctypes import *\n-\n-# predefines\n-size_t = c_ulong\n-_IO_FILE = c_ulong\n-__ssize_t = c_int\n-ssize_t = c_uint\n-\n-JSWord = c_long\n-jsword = JSWord\n-jsval = jsword\n-\n-class JSObject(Structure):\n-\t_fields_ = [\n-\t]\n-class ObjectJSVALUnion(Union):\n-\t_fields_ = [\n-\t\t('jsval', jsval),\n-\t\t('obj', POINTER(JSObject)),\n-\t]\n-\n-def OBJECT_TO_JSVAL(obj):\n-\tobjectJSVALUnion = ObjectJSVALUnion()\n-\tobjectJSVALUnion.obj = obj\n-\treturn objectJSVALUnion.jsval\n-\n-# defines\n-EOF = (-1)\n-FILENAME_MAX = 4096\n-FOPEN_MAX = 16\n-def JS_BIT(n):\n-\treturn 1 << n\n-def JS_BITMASK(n):\n-\treturn JS_BIT(n) - 1\n-def JSVAL_SETTAG(v,t):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn v | t\n-def BOOLEAN_TO_JSVAL(b):\n-\treturn JSVAL_SETTAG(b << JSVAL_TAGBITS, JSVAL_BOOLEAN)\n-def JSVAL_INT_POW2(n):\n-\treturn 1 << n\n-def INT_TO_JSVAL(i):\n-\treturn (i << 1) | JSVAL_INT\n-def JSVAL_IS_PRIMITIVE(v):\n-\treturn ((not JSVAL_IS_OBJECT(v)) or JSVAL_IS_NULL(v))\n-def JSVAL_IS_OBJECT(v):\n-\treturn (JSVAL_TAG(v) == JSVAL_OBJECT)\n-def JSVAL_IS_INT(v):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn ((v & JSVAL_INT) and (v != JSVAL_VOID))\n-def JSVAL_TO_INT(v):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn v >> 1\n-def JSVAL_IS_DOUBLE(v):\n-\treturn (JSVAL_TAG(v) == JSVAL_DOUBLE)\n-def JSVAL_TO_DOUBLE(v):\n-\treturn cast(JSVAL_TO_GCTHING(v),POINTER(jsdouble))\n-def JSVAL_IS_BOOLEAN(v):\n-\treturn (JSVAL_TAG(v) == JSVAL_BOOLEAN)\n-def JSVAL_TO_BOOLEAN(v):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn v >> JSVAL_TAGBITS\n-def JSVAL_IS_STRING(v):\n-\treturn JSVAL_TAG(v) == JSVAL_STRING\n-def JSVAL_TO_STRING(v):\n-\treturn cast(JSVAL_TO_GCTHING(v),POINTER(JSString))\n-def STRING_TO_JSVAL(str):\n-\treturn JSVAL_SETTAG(cast(addressof(str),POINTER(jsval)).contents, JSVAL_STRING)\n-def DOUBLE_TO_JSVAL(dp):\n-\treturn JSVAL_SETTAG(cast(addressof(dp),POINTER(jsval)).contents, JSVAL_DOUBLE)\n-def JSVAL_TO_GCTHING(v):\n-\treturn cast(JSVAL_CLRTAG(v),c_void_p)\n-def JSVAL_CLRTAG(v):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn v & (~JSVAL_TAGMASK)\n-def JSVAL_TAG(v):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn v & JSVAL_TAGMASK\n-def JSVAL_IS_NULL(v):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn v == JSVAL_NULL\n-def JSVAL_IS_VOID(v):\n-\tif type(v) == c_long:\n-\t\tv = v.value\n-\treturn v == JSVAL_VOID\n-def JSVAL_TO_OBJECT(v):\n-\treturn cast(JSVAL_TO_GCTHING(v), POINTER(JSObject))\n-JSCLASS_HAS_PRIVATE = (1<<0)\n-JSCLASS_NEW_ENUMERATE = (1<<1)\n-JSCLASS_NEW_RESOLVE = (1<<2)\n-JSCLASS_NEW_RESOLVE_GETS_START = (1<<5)\n-JSCLASS_NO_OPTIONAL_MEMBERS = 0,0,0,0,0,0,0,0\n-JSCLASS_PRIVATE_IS_NSISUPPORTS = (1<<3)\n-JSCLASS_RESERVED_SLOTS_WIDTH = 8\n-JSCLASS_RESERVED_SLOTS_MASK = JS_BITMASK(JSCLASS_RESERVED_SLOTS_WIDTH)\n-JSCLASS_RESERVED_SLOTS_SHIFT = 8\n-JSCLASS_SHARE_ALL_PROPERTIES = (1<<4)\n-JSFUN_BOUND_METHOD = 0x40\n-JSFUN_FLAGS_MASK = 0xf8\n-JSFUN_HEAVYWEIGHT = 0x80\n-JSFUN_LAMBDA = 0x08\n-JSOPTION_COMPILE_N_GO = JS_BIT(4)\n-JSOPTION_PRIVATE_IS_NSISUPPORTS = JS_BIT(3)\n-JSOPTION_STRICT = JS_BIT(0)\n-JSOPTION_VAROBJFIX = JS_BIT(2)\n-JSOPTION_WERROR = JS_BIT(1)\n-JSPROP_ENUMERATE = 0x01\n-JSPROP_EXPORTED = 0x08\n-JSPROP_GETTER = 0x10\n-JSPROP_INDEX = 0x80\n-JSPROP_PERMANENT = 0x04\n-JSPROP_READONLY = 0x02\n-JSPROP_SETTER = 0x20\n-JSPROP_SHARED = 0x40\n-JSREG_FOLD = 0x01\n-JSREG_GLOB = 0x02\n-JSREG_MULTILINE = 0x04\n-JSREPORT_ERROR = 0x0\n-JSREPORT_EXCEPTION = 0x2\n-JSREPORT_STRICT = 0x4\n-JSREPORT_WARNING = 0x1\n-JSRESOLVE_ASSIGNING = 0x02\n-JSRESOLVE_QUALIFIED = 0x01\n-JSVAL_TAGBITS = 3\n-JSVAL_ALIGN = JS_BIT(JSVAL_TAGBITS)\n-JSVAL_BOOLEAN = 0x6\n-JSVAL_DOUBLE = 0x2\n-JS_FALSE = 0\n-JSVAL_FALSE = BOOLEAN_TO_JSVAL(JS_FALSE)\n-JSVAL_INT = 0x1\n-JSVAL_INT_BITS = 31\n-JSVAL_INT_MAX = (JSVAL_INT_POW2(30) - 1)\n-JSVAL_INT_MIN = (1 - JSVAL_INT_POW2(30))\n-JSVAL_NULL = 0\n-JSVAL_OBJECT = 0x0\n-JSVAL_ONE = INT_TO_JSVAL(1)\n-JSVAL_STRING = 0x4\n-JSVAL_TAGMASK = JS_BITMASK(JSVAL_TAGBITS)\n-JS_TRUE = 1\n-JSVAL_TRUE = BOOLEAN_TO_JSVAL(JS_TRUE)\n-JSVAL_VOID = INT_TO_JSVAL(0 - JSVAL_INT_POW2(30))\n-JSVAL_ZERO = INT_TO_JSVAL(0)\n-JS_DONT_PRETTY_PRINT = (0x8000)\n-JS_MAP_GCROOT_NEXT = 0\n-JS_MAP_GCROOT_REMOVE = 2\n-JS_MAP_GCROOT_STOP = 1\n-SEEK_CUR = 1\n-SEEK_END = 2\n-SEEK_SET = 0\n-TMP_MAX = 238328\n-\n-# using file \"/usr/include/smjs/jslong.h\"\n-# using file \"/usr/include/smjs/jscompat.h\"\n-# using file \"/usr/include/smjs/jspubtd.h\"\n-# using file \"/usr/include/smjs/jsapi.h\"\n-JSUintn = c_uint\n-\n-uintN = JSUintn\n-\n-class JSErrorFormatString(Structure):\n-\t_fields_ = [\n-\t\t('format', c_char_p),\n-\t\t('argCount', uintN),\n-\t]\n-\n-JSErrorFormatString = JSErrorFormatString\n-\n-class JSContext(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSContext = JSContext\n-\n-JSIntn = c_int\n-\n-JSBool = JSIntn\n-\n-JSInt32 = c_int\n-\n-int32 = JSInt32\n-\n-jsrefcount = int32\n-\n-class JSPrincipals(Structure):\n-\t_fields_ = [\n-\t\t('codebase', c_char_p),\n-\t\t('getPrincipalArray', CFUNCTYPE(c_void_p,POINTER(JSContext),POINTER('JSPrincipals'))),\n-\t\t('globalPrivilegesEnabled', CFUNCTYPE(JSBool,POINTER(JSContext),POINTER('JSPrincipals'))),\n-\t\t('refcount', jsrefcount),\n-\t\t('destroy', CFUNCTYPE(None,POINTER(JSContext),POINTER('JSPrincipals'))),\n-\t]\n-\n-JSPrincipals = JSPrincipals\n-\n-jsid = jsword\n-\n-class JSProperty(Structure):\n-\t_fields_ = [\n-\t\t('id', jsid),\n-\t]\n-\n-JSProperty = JSProperty\n-\n-class JSObjectMap(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSObjectMap = JSObjectMap\n-\n-class JSXDRState(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSXDRState = JSXDRState\n-\n-class JSObjectOps(Structure):\n-\t_fields_ = []\n-\n-JSUint32 = c_uint\n-\n-uint32 = JSUint32\n-\n-JSObject = JSObject\n-\n-JSPropertyOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval))\n-\n-JSEnumerateOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject))\n-\n-JSResolveOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long)\n-\n-# enumeration JSType\n-JSTYPE_VOID = 0\n-JSTYPE_OBJECT = 1\n-JSTYPE_FUNCTION = 2\n-JSTYPE_STRING = 3\n-JSTYPE_NUMBER = 4\n-JSTYPE_BOOLEAN = 5\n-JSTYPE_LIMIT = 6\n-\n-JSConvertOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_int,POINTER(jsval))\n-\n-JSFinalizeOp = CFUNCTYPE(None,POINTER(JSContext),POINTER(JSObject))\n-\n-class JSClass(Structure):\n-\t_fields_ = []\n-\n-JSGetObjectOps = CFUNCTYPE(POINTER(JSObjectOps),POINTER(JSContext),POINTER(JSClass))\n-\n-# enumeration JSAccessMode\n-JSACC_PROTO = 0\n-JSACC_PARENT = 1\n-JSACC_IMPORT = 2\n-JSACC_WATCH = 3\n-JSACC_READ = 4\n-JSACC_WRITE = 8\n-JSACC_LIMIT = 9\n-\n-JSCheckAccessOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,c_int,POINTER(jsval))\n-\n-JSNative = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_uint,POINTER(jsval),POINTER(jsval))\n-\n-JSXDRObjectOp = CFUNCTYPE(JSBool,POINTER(JSXDRState),POINTER(POINTER(JSObject)))\n-\n-JSHasInstanceOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(JSBool))\n-\n-JSMarkOp = CFUNCTYPE(uint32,POINTER(JSContext),POINTER(JSObject),c_void_p)\n-\n-class JSClass(Structure):\n-\t_fields_ = [\n-\t\t('name', c_char_p),\n-\t\t('flags', uint32),\n-\t\t('addProperty', JSPropertyOp),\n-\t\t('delProperty', JSPropertyOp),\n-\t\t('getProperty', JSPropertyOp),\n-\t\t('setProperty', JSPropertyOp),\n-\t\t('enumerate', JSEnumerateOp),\n-\t\t('resolve', JSResolveOp),\n-\t\t('convert', JSConvertOp),\n-\t\t('finalize', JSFinalizeOp),\n-\t\t('getObjectOps', JSGetObjectOps),\n-\t\t('checkAccess', JSCheckAccessOp),\n-\t\t('call', JSNative),\n-\t\t('construct', JSNative),\n-\t\t('xdrObject', JSXDRObjectOp),\n-\t\t('hasInstance', JSHasInstanceOp),\n-\t\t('mark', JSMarkOp),\n-\t\t('spare', jsword),\n-\t]\n-\n-JSClass = JSClass\n-\n-JSNewObjectMapOp = CFUNCTYPE(POINTER(JSObjectMap),POINTER(JSContext),c_int,POINTER(JSObjectOps),POINTER(JSClass),POINTER(JSObject))\n-\n-JSObjectMapOp = CFUNCTYPE(None,POINTER(JSContext),POINTER(JSObjectMap))\n-\n-JSLookupPropOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(POINTER(JSObject)),POINTER(POINTER(JSProperty)))\n-\n-JSDefinePropOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,c_long,CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),c_uint,POINTER(POINTER(JSProperty)))\n-\n-JSPropertyIdOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval))\n-\n-JSAttributesOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(JSProperty),POINTER(uintN))\n-\n-# enumeration JSIterateOp\n-JSENUMERATE_INIT = 0\n-JSENUMERATE_NEXT = 1\n-JSENUMERATE_DESTROY = 2\n-\n-JSNewEnumerateOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_int,POINTER(jsval),POINTER(jsid))\n-\n-JSCheckAccessIdOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,c_int,POINTER(jsval),POINTER(uintN))\n-\n-JSObjectOp = CFUNCTYPE(POINTER(JSObject),POINTER(JSContext),POINTER(JSObject))\n-\n-JSPropertyRefOp = CFUNCTYPE(None,POINTER(JSContext),POINTER(JSObject),POINTER(JSProperty))\n-\n-JSSetObjectSlotOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_uint,POINTER(JSObject))\n-\n-JSGetRequiredSlotOp = CFUNCTYPE(jsval,POINTER(JSContext),POINTER(JSObject),c_uint)\n-\n-JSSetRequiredSlotOp = CFUNCTYPE(None,POINTER(JSContext),POINTER(JSObject),c_uint,c_long)\n-\n-class JSObjectOps(Structure):\n-\t_fields_ = [\n-\t\t('newObjectMap', JSNewObjectMapOp),\n-\t\t('destroyObjectMap', JSObjectMapOp),\n-\t\t('lookupProperty', JSLookupPropOp),\n-\t\t('defineProperty', JSDefinePropOp),\n-\t\t('getProperty', JSPropertyIdOp),\n-\t\t('setProperty', JSPropertyIdOp),\n-\t\t('getAttributes', JSAttributesOp),\n-\t\t('setAttributes', JSAttributesOp),\n-\t\t('deleteProperty', JSPropertyIdOp),\n-\t\t('defaultValue', JSConvertOp),\n-\t\t('enumerate', JSNewEnumerateOp),\n-\t\t('checkAccess', JSCheckAccessIdOp),\n-\t\t('thisObject', JSObjectOp),\n-\t\t('dropProperty', JSPropertyRefOp),\n-\t\t('call', JSNative),\n-\t\t('construct', JSNative),\n-\t\t('xdrObject', JSXDRObjectOp),\n-\t\t('hasInstance', JSHasInstanceOp),\n-\t\t('setProto', JSSetObjectSlotOp),\n-\t\t('setParent', JSSetObjectSlotOp),\n-\t\t('mark', JSMarkOp),\n-\t\t('clear', JSFinalizeOp),\n-\t\t('getRequiredSlot', JSGetRequiredSlotOp),\n-\t\t('setRequiredSlot', JSSetRequiredSlotOp),\n-\t]\n-\n-JSObjectOps = JSObjectOps\n-\n-JSUint16 = c_ushort\n-\n-uint16 = JSUint16\n-\n-jschar = uint16\n-\n-class JSErrorReport(Structure):\n-\t_fields_ = [\n-\t\t('filename', c_char_p),\n-\t\t('lineno', uintN),\n-\t\t('linebuf', c_char_p),\n-\t\t('tokenptr', c_char_p),\n-\t\t('uclinebuf', POINTER(jschar)),\n-\t\t('uctokenptr', POINTER(jschar)),\n-\t\t('flags', uintN),\n-\t\t('errorNumber', uintN),\n-\t\t('ucmessage', POINTER(jschar)),\n-\t\t('messageArgs', POINTER(POINTER(jschar))),\n-\t]\n-\n-class JSString(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSString = JSString\n-\n-JSLocaleToUpperCase = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSString),POINTER(jsval))\n-\n-JSLocaleToLowerCase = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSString),POINTER(jsval))\n-\n-JSLocaleCompare = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSString),POINTER(JSString),POINTER(jsval))\n-\n-class JSLocaleCallbacks(Structure):\n-\t_fields_ = [\n-\t\t('localeToUpperCase', JSLocaleToUpperCase),\n-\t\t('localeToLowerCase', JSLocaleToLowerCase),\n-\t\t('localeCompare', JSLocaleCompare),\n-\t]\n-\n-JSUint8 = c_ubyte\n-\n-uint8 = JSUint8\n-\n-class JSFunctionSpec(Structure):\n-\t_fields_ = [\n-\t\t('name', c_char_p),\n-\t\t('call', JSNative),\n-\t\t('nargs', uint8),\n-\t\t('flags', uint8),\n-\t\t('extra', uint16),\n-\t]\n-\n-JSInt8 = c_char\n-\n-int8 = JSInt8\n-\n-class JSPropertySpec(Structure):\n-\t_fields_ = [\n-\t\t('name', c_char_p),\n-\t\t('tinyid', int8),\n-\t\t('flags', uint8),\n-\t\t('getter', JSPropertyOp),\n-\t\t('setter', JSPropertyOp),\n-\t]\n-\n-JSFloat64 = c_double\n-\n-float64 = JSFloat64\n-\n-jsdouble = float64\n-\n-class JSConstDoubleSpec(Structure):\n-\t_fields_ = [\n-\t\t('dval', jsdouble),\n-\t\t('name', c_char_p),\n-\t\t('flags', uint8),\n-\t\t('spare', uint8*3),\n-\t]\n-\n-jsint = int32\n-\n-class JSIdArray(Structure):\n-\t_fields_ = [\n-\t\t('length', jsint),\n-\t\t('vector', jsid*1),\n-\t]\n-\n-intN = JSIntn\n-\n-JSErrorReport = JSErrorReport\n-\n-class JSScript(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSScript = JSScript\n-\n-# enumeration JSGCStatus\n-JSGC_BEGIN = 0\n-JSGC_END = 1\n-JSGC_MARK_END = 2\n-JSGC_FINALIZE_END = 3\n-\n-JSConstDoubleSpec = JSConstDoubleSpec\n-\n-JSPropertySpec = JSPropertySpec\n-\n-jsuint = uint32\n-\n-JSIdArray = JSIdArray\n-\n-class JSRuntime(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSRuntime = JSRuntime\n-\n-JSFunctionSpec = JSFunctionSpec\n-\n-class JSFunction(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSFunction = JSFunction\n-\n-JSLocaleCallbacks = JSLocaleCallbacks\n-\n-class JSExceptionState(Structure):\n-\t_fields_ = [\n-\t]\n-\n-JSExceptionState = JSExceptionState\n-\n-JSInt64 = c_longlong\n-\n-from sm_settings import try_libs\n-for lib in try_libs:\n-    try:\n-        libsmjs = CDLL(lib)\n-        break\n-    except OSError:\n-        if lib == try_libs[-1]:\n-            raise ImportError(\"The spidermonkey C library is not installed\")\n-\n-JSLL_MaxInt = libsmjs.JSLL_MaxInt\n-JSLL_MaxInt.restype = JSInt64\n-JSLL_MaxInt.argtypes = []\n-\n-JSLL_MinInt = libsmjs.JSLL_MinInt\n-JSLL_MinInt.restype = JSInt64\n-JSLL_MinInt.argtypes = []\n-\n-JSLL_Zero = libsmjs.JSLL_Zero\n-JSLL_Zero.restype = JSInt64\n-JSLL_Zero.argtypes = []\n-\n-JSUword = c_ulong\n-\n-jsuword = JSUword\n-\n-float32 = c_float\n-\n-# enumeration Js-1.7.0.tar.gzSVersion\n-JSVERSION_1_0 = 100\n-JSVERSION_1_1 = 110\n-JSVERSION_1_2 = 120\n-JSVERSION_1_3 = 130\n-JSVERSION_1_4 = 140\n-JSVERSION_ECMA_3 = 148\n-JSVERSION_1_5 = 150\n-JSVERSION_DEFAULT = 0\n-JSVERSION_UNKNOWN = -1\n-\n-JSVersion = c_int\n-\n-JSType = c_int\n-\n-JSAccessMode = c_int\n-\n-JSIterateOp = c_int\n-\n-JSTaskState = JSRuntime\n-\n-JSNewResolveOp = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,c_uint,POINTER(POINTER(JSObject)))\n-\n-JSStringFinalizeOp = CFUNCTYPE(None,POINTER(JSContext),POINTER(JSString))\n-\n-JSGCStatus = c_int\n-\n-JSGCCallback = CFUNCTYPE(JSBool,POINTER(JSContext),c_int)\n-\n-JSBranchCallback = CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSScript))\n-\n-JSErrorReporter = CFUNCTYPE(None,POINTER(JSContext),c_char_p,POINTER(JSErrorReport))\n-\n-JSErrorCallback = CFUNCTYPE(POINTER(JSErrorFormatString),c_void_p,c_char_p,c_uint)\n-\n-JSPrincipalsTranscoder = CFUNCTYPE(JSBool,POINTER(JSXDRState),POINTER(POINTER(JSPrincipals)))\n-\n-JSObjectPrincipalsFinder = CFUNCTYPE(POINTER(JSPrincipals),POINTER(JSContext),POINTER(JSObject))\n-\n-int64 = JSInt64\n-\n-JS_Now = libsmjs.JS_Now\n-JS_Now.restype = int64\n-JS_Now.argtypes = []\n-\n-JS_GetNaNValue = libsmjs.JS_GetNaNValue\n-JS_GetNaNValue.restype = jsval\n-JS_GetNaNValue.argtypes = [POINTER(JSContext)]\n-\n-JS_GetNegativeInfinityValue = libsmjs.JS_GetNegativeInfinityValue\n-JS_GetNegativeInfinityValue.restype = jsval\n-JS_GetNegativeInfinityValue.argtypes = [POINTER(JSContext)]\n-\n-JS_GetPositiveInfinityValue = libsmjs.JS_GetPositiveInfinityValue\n-JS_GetPositiveInfinityValue.restype = jsval\n-JS_GetPositiveInfinityValue.argtypes = [POINTER(JSContext)]\n-\n-JS_GetEmptyStringValue = libsmjs.JS_GetEmptyStringValue\n-JS_GetEmptyStringValue.restype = jsval\n-JS_GetEmptyStringValue.argtypes = [POINTER(JSContext)]\n-\n-JS_ConvertArguments = libsmjs.JS_ConvertArguments\n-JS_ConvertArguments.restype = JSBool\n-JS_ConvertArguments.argtypes = [POINTER(JSContext),c_uint,POINTER(jsval),c_char_p]\n-\n-JS_PushArguments = libsmjs.JS_PushArguments\n-JS_PushArguments.restype = POINTER(jsval)\n-JS_PushArguments.argtypes = [POINTER(JSContext),POINTER(c_void_p),c_char_p]\n-\n-JS_PopArguments = libsmjs.JS_PopArguments\n-JS_PopArguments.restype = None\n-JS_PopArguments.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_ConvertValue = libsmjs.JS_ConvertValue\n-JS_ConvertValue.restype = JSBool\n-JS_ConvertValue.argtypes = [POINTER(JSContext),c_long,c_int,POINTER(jsval)]\n-\n-JS_ValueToObject = libsmjs.JS_ValueToObject\n-JS_ValueToObject.restype = JSBool\n-JS_ValueToObject.argtypes = [POINTER(JSContext),c_long,POINTER(POINTER(JSObject))]\n-\n-JS_ValueToFunction = libsmjs.JS_ValueToFunction\n-JS_ValueToFunction.restype = POINTER(JSFunction)\n-JS_ValueToFunction.argtypes = [POINTER(JSContext),c_long]\n-\n-JS_ValueToConstructor = libsmjs.JS_ValueToConstructor\n-JS_ValueToConstructor.restype = POINTER(JSFunction)\n-JS_ValueToConstructor.argtypes = [POINTER(JSContext),c_long]\n-\n-JS_ValueToString = libsmjs.JS_ValueToString\n-JS_ValueToString.restype = POINTER(JSString)\n-JS_ValueToString.argtypes = [POINTER(JSContext),c_long]\n-\n-JS_ValueToNumber = libsmjs.JS_ValueToNumber\n-JS_ValueToNumber.restype = JSBool\n-JS_ValueToNumber.argtypes = [POINTER(JSContext),c_long,POINTER(jsdouble)]\n-\n-JS_ValueToECMAInt32 = libsmjs.JS_ValueToECMAInt32\n-JS_ValueToECMAInt32.restype = JSBool\n-JS_ValueToECMAInt32.argtypes = [POINTER(JSContext),c_long,POINTER(int32)]\n-\n-JS_ValueToECMAUint32 = libsmjs.JS_ValueToECMAUint32\n-JS_ValueToECMAUint32.restype = JSBool\n-JS_ValueToECMAUint32.argtypes = [POINTER(JSContext),c_long,POINTER(uint32)]\n-\n-JS_ValueToInt32 = libsmjs.JS_ValueToInt32\n-JS_ValueToInt32.restype = JSBool\n-JS_ValueToInt32.argtypes = [POINTER(JSContext),c_long,POINTER(int32)]\n-\n-JS_ValueToUint16 = libsmjs.JS_ValueToUint16\n-JS_ValueToUint16.restype = JSBool\n-JS_ValueToUint16.argtypes = [POINTER(JSContext),c_long,POINTER(uint16)]\n-\n-JS_ValueToBoolean = libsmjs.JS_ValueToBoolean\n-JS_ValueToBoolean.restype = JSBool\n-JS_ValueToBoolean.argtypes = [POINTER(JSContext),c_long,POINTER(JSBool)]\n-\n-JS_TypeOfValue = libsmjs.JS_TypeOfValue\n-JS_TypeOfValue.restype = JSType\n-JS_TypeOfValue.argtypes = [POINTER(JSContext),c_long]\n-\n-JS_GetTypeName = libsmjs.JS_GetTypeName\n-JS_GetTypeName.restype = c_char_p\n-JS_GetTypeName.argtypes = [POINTER(JSContext),c_int]\n-\n-JS_Init = libsmjs.JS_Init\n-JS_Init.restype = POINTER(JSRuntime)\n-JS_Init.argtypes = [c_uint]\n-\n-JS_Finish = libsmjs.JS_Finish\n-JS_Finish.restype = None\n-JS_Finish.argtypes = [POINTER(JSRuntime)]\n-\n-JS_ShutDown = libsmjs.JS_ShutDown\n-JS_ShutDown.restype = None\n-JS_ShutDown.argtypes = []\n-\n-JS_GetRuntimePrivate = libsmjs.JS_GetRuntimePrivate\n-JS_GetRuntimePrivate.restype = c_void_p\n-JS_GetRuntimePrivate.argtypes = [POINTER(JSRuntime)]\n-\n-JS_SetRuntimePrivate = libsmjs.JS_SetRuntimePrivate\n-JS_SetRuntimePrivate.restype = None\n-JS_SetRuntimePrivate.argtypes = [POINTER(JSRuntime),c_void_p]\n-\n-JS_Lock = libsmjs.JS_Lock\n-JS_Lock.restype = None\n-JS_Lock.argtypes = [POINTER(JSRuntime)]\n-\n-JS_Unlock = libsmjs.JS_Unlock\n-JS_Unlock.restype = None\n-JS_Unlock.argtypes = [POINTER(JSRuntime)]\n-\n-JS_NewContext = libsmjs.JS_NewContext\n-JS_NewContext.restype = POINTER(JSContext)\n-JS_NewContext.argtypes = [POINTER(JSRuntime),c_uint]\n-\n-JS_DestroyContext = libsmjs.JS_DestroyContext\n-JS_DestroyContext.restype = None\n-JS_DestroyContext.argtypes = [POINTER(JSContext)]\n-\n-JS_DestroyContextNoGC = libsmjs.JS_DestroyContextNoGC\n-JS_DestroyContextNoGC.restype = None\n-JS_DestroyContextNoGC.argtypes = [POINTER(JSContext)]\n-\n-JS_DestroyContextMaybeGC = libsmjs.JS_DestroyContextMaybeGC\n-JS_DestroyContextMaybeGC.restype = None\n-JS_DestroyContextMaybeGC.argtypes = [POINTER(JSContext)]\n-\n-JS_GetContextPrivate = libsmjs.JS_GetContextPrivate\n-JS_GetContextPrivate.restype = c_void_p\n-JS_GetContextPrivate.argtypes = [POINTER(JSContext)]\n-\n-JS_SetContextPrivate = libsmjs.JS_SetContextPrivate\n-JS_SetContextPrivate.restype = None\n-JS_SetContextPrivate.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_GetRuntime = libsmjs.JS_GetRuntime\n-JS_GetRuntime.restype = POINTER(JSRuntime)\n-JS_GetRuntime.argtypes = [POINTER(JSContext)]\n-\n-JS_ContextIterator = libsmjs.JS_ContextIterator\n-JS_ContextIterator.restype = POINTER(JSContext)\n-JS_ContextIterator.argtypes = [POINTER(JSRuntime),POINTER(POINTER(JSContext))]\n-\n-JS_GetVersion = libsmjs.JS_GetVersion\n-JS_GetVersion.restype = JSVersion\n-JS_GetVersion.argtypes = [POINTER(JSContext)]\n-\n-JS_SetVersion = libsmjs.JS_SetVersion\n-JS_SetVersion.restype = JSVersion\n-JS_SetVersion.argtypes = [POINTER(JSContext),c_int]\n-\n-JS_VersionToString = libsmjs.JS_VersionToString\n-JS_VersionToString.restype = c_char_p\n-JS_VersionToString.argtypes = [c_int]\n-\n-JS_StringToVersion = libsmjs.JS_StringToVersion\n-JS_StringToVersion.restype = JSVersion\n-JS_StringToVersion.argtypes = [c_char_p]\n-\n-JS_GetOptions = libsmjs.JS_GetOptions\n-JS_GetOptions.restype = uint32\n-JS_GetOptions.argtypes = [POINTER(JSContext)]\n-\n-JS_SetOptions = libsmjs.JS_SetOptions\n-JS_SetOptions.restype = uint32\n-JS_SetOptions.argtypes = [POINTER(JSContext),c_uint]\n-\n-JS_ToggleOptions = libsmjs.JS_ToggleOptions\n-JS_ToggleOptions.restype = uint32\n-JS_ToggleOptions.argtypes = [POINTER(JSContext),c_uint]\n-\n-JS_GetImplementationVersion = libsmjs.JS_GetImplementationVersion\n-JS_GetImplementationVersion.restype = c_char_p\n-JS_GetImplementationVersion.argtypes = []\n-\n-JS_GetGlobalObject = libsmjs.JS_GetGlobalObject\n-JS_GetGlobalObject.restype = POINTER(JSObject)\n-JS_GetGlobalObject.argtypes = [POINTER(JSContext)]\n-\n-JS_SetGlobalObject = libsmjs.JS_SetGlobalObject\n-JS_SetGlobalObject.restype = None\n-JS_SetGlobalObject.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_InitStandardClasses = libsmjs.JS_InitStandardClasses\n-JS_InitStandardClasses.restype = JSBool\n-JS_InitStandardClasses.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_ResolveStandardClass = libsmjs.JS_ResolveStandardClass\n-JS_ResolveStandardClass.restype = JSBool\n-JS_ResolveStandardClass.argtypes = [POINTER(JSContext),POINTER(JSObject),c_long,POINTER(JSBool)]\n-\n-JS_EnumerateStandardClasses = libsmjs.JS_EnumerateStandardClasses\n-JS_EnumerateStandardClasses.restype = JSBool\n-JS_EnumerateStandardClasses.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_GetScopeChain = libsmjs.JS_GetScopeChain\n-JS_GetScopeChain.restype = POINTER(JSObject)\n-JS_GetScopeChain.argtypes = [POINTER(JSContext)]\n-\n-JS_malloc = libsmjs.JS_malloc\n-JS_malloc.restype = c_void_p\n-JS_malloc.argtypes = [POINTER(JSContext),c_uint]\n-\n-JS_realloc = libsmjs.JS_realloc\n-JS_realloc.restype = c_void_p\n-JS_realloc.argtypes = [POINTER(JSContext),c_void_p,c_uint]\n-\n-JS_free = libsmjs.JS_free\n-JS_free.restype = None\n-JS_free.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_strdup = libsmjs.JS_strdup\n-JS_strdup.restype = c_char_p\n-JS_strdup.argtypes = [POINTER(JSContext),c_char_p]\n-\n-JS_NewDouble = libsmjs.JS_NewDouble\n-JS_NewDouble.restype = POINTER(jsdouble)\n-JS_NewDouble.argtypes = [POINTER(JSContext),c_double]\n-\n-JS_NewDoubleValue = libsmjs.JS_NewDoubleValue\n-JS_NewDoubleValue.restype = JSBool\n-JS_NewDoubleValue.argtypes = [POINTER(JSContext),c_double,POINTER(jsval)]\n-\n-JS_NewNumberValue = libsmjs.JS_NewNumberValue\n-JS_NewNumberValue.restype = JSBool\n-JS_NewNumberValue.argtypes = [POINTER(JSContext),c_double,POINTER(jsval)]\n-\n-JS_AddRoot = libsmjs.JS_AddRoot\n-JS_AddRoot.restype = JSBool\n-JS_AddRoot.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_AddNamedRoot = libsmjs.JS_AddNamedRoot\n-JS_AddNamedRoot.restype = JSBool\n-JS_AddNamedRoot.argtypes = [POINTER(JSContext),c_void_p,c_char_p]\n-\n-JS_AddNamedRootRT = libsmjs.JS_AddNamedRootRT\n-JS_AddNamedRootRT.restype = JSBool\n-JS_AddNamedRootRT.argtypes = [POINTER(JSRuntime),c_void_p,c_char_p]\n-\n-JS_RemoveRoot = libsmjs.JS_RemoveRoot\n-JS_RemoveRoot.restype = JSBool\n-JS_RemoveRoot.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_RemoveRootRT = libsmjs.JS_RemoveRootRT\n-JS_RemoveRootRT.restype = JSBool\n-JS_RemoveRootRT.argtypes = [POINTER(JSRuntime),c_void_p]\n-\n-JS_ClearNewbornRoots = libsmjs.JS_ClearNewbornRoots\n-JS_ClearNewbornRoots.restype = None\n-JS_ClearNewbornRoots.argtypes = [POINTER(JSContext)]\n-\n-JSGCRootMapFun = CFUNCTYPE(intN,c_void_p,c_char_p,c_void_p)\n-\n-JS_MapGCRoots = libsmjs.JS_MapGCRoots\n-JS_MapGCRoots.restype = uint32\n-JS_MapGCRoots.argtypes = [POINTER(JSRuntime),CFUNCTYPE(intN,c_void_p,c_char_p,c_void_p),c_void_p]\n-\n-JS_LockGCThing = libsmjs.JS_LockGCThing\n-JS_LockGCThing.restype = JSBool\n-JS_LockGCThing.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_LockGCThingRT = libsmjs.JS_LockGCThingRT\n-JS_LockGCThingRT.restype = JSBool\n-JS_LockGCThingRT.argtypes = [POINTER(JSRuntime),c_void_p]\n-\n-JS_UnlockGCThing = libsmjs.JS_UnlockGCThing\n-JS_UnlockGCThing.restype = JSBool\n-JS_UnlockGCThing.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_UnlockGCThingRT = libsmjs.JS_UnlockGCThingRT\n-JS_UnlockGCThingRT.restype = JSBool\n-JS_UnlockGCThingRT.argtypes = [POINTER(JSRuntime),c_void_p]\n-\n-JS_MarkGCThing = libsmjs.JS_MarkGCThing\n-JS_MarkGCThing.restype = None\n-JS_MarkGCThing.argtypes = [POINTER(JSContext),c_void_p,c_char_p,c_void_p]\n-\n-JS_GC = libsmjs.JS_GC\n-JS_GC.restype = None\n-JS_GC.argtypes = [POINTER(JSContext)]\n-\n-JS_MaybeGC = libsmjs.JS_MaybeGC\n-JS_MaybeGC.restype = None\n-JS_MaybeGC.argtypes = [POINTER(JSContext)]\n-\n-JS_SetGCCallback = libsmjs.JS_SetGCCallback\n-JS_SetGCCallback.restype = JSGCCallback\n-JS_SetGCCallback.argtypes = [POINTER(JSContext),CFUNCTYPE(JSBool,POINTER(JSContext),c_int)]\n-\n-JS_SetGCCallbackRT = libsmjs.JS_SetGCCallbackRT\n-JS_SetGCCallbackRT.restype = JSGCCallback\n-JS_SetGCCallbackRT.argtypes = [POINTER(JSRuntime),CFUNCTYPE(JSBool,POINTER(JSContext),c_int)]\n-\n-JS_IsAboutToBeFinalized = libsmjs.JS_IsAboutToBeFinalized\n-JS_IsAboutToBeFinalized.restype = JSBool\n-JS_IsAboutToBeFinalized.argtypes = [POINTER(JSContext),c_void_p]\n-\n-JS_AddExternalStringFinalizer = libsmjs.JS_AddExternalStringFinalizer\n-JS_AddExternalStringFinalizer.restype = intN\n-JS_AddExternalStringFinalizer.argtypes = [CFUNCTYPE(None,POINTER(JSContext),POINTER(JSString))]\n-\n-JS_RemoveExternalStringFinalizer = libsmjs.JS_RemoveExternalStringFinalizer\n-JS_RemoveExternalStringFinalizer.restype = intN\n-JS_RemoveExternalStringFinalizer.argtypes = [CFUNCTYPE(None,POINTER(JSContext),POINTER(JSString))]\n-\n-JS_NewExternalString = libsmjs.JS_NewExternalString\n-JS_NewExternalString.restype = POINTER(JSString)\n-JS_NewExternalString.argtypes = [POINTER(JSContext),POINTER(jschar),c_uint,c_int]\n-\n-JS_GetExternalStringGCType = libsmjs.JS_GetExternalStringGCType\n-JS_GetExternalStringGCType.restype = intN\n-JS_GetExternalStringGCType.argtypes = [POINTER(JSRuntime),POINTER(JSString)]\n-\n-JS_SetThreadStackLimit = libsmjs.JS_SetThreadStackLimit\n-JS_SetThreadStackLimit.restype = None\n-JS_SetThreadStackLimit.argtypes = [POINTER(JSContext),c_ulong]\n-\n-JS_DestroyIdArray = libsmjs.JS_DestroyIdArray\n-JS_DestroyIdArray.restype = None\n-JS_DestroyIdArray.argtypes = [POINTER(JSContext),POINTER(JSIdArray)]\n-\n-JS_ValueToId = libsmjs.JS_ValueToId\n-JS_ValueToId.restype = JSBool\n-JS_ValueToId.argtypes = [POINTER(JSContext),c_long,POINTER(jsid)]\n-\n-JS_IdToValue = libsmjs.JS_IdToValue\n-JS_IdToValue.restype = JSBool\n-JS_IdToValue.argtypes = [POINTER(JSContext),c_long,POINTER(jsval)]\n-\n-JS_PropertyStub = JSPropertyOp(libsmjs.JS_PropertyStub)\n-#JS_PropertyStub.restype = JSBool\n-#JS_PropertyStub.argtypes = [POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)]\n-\n-JS_EnumerateStub = JSEnumerateOp(libsmjs.JS_EnumerateStub)\n-#JS_EnumerateStub.restype = JSBool\n-#JS_EnumerateStub.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_ResolveStub = JSResolveOp(libsmjs.JS_ResolveStub)\n-#JS_ResolveStub.restype = JSBool\n-#JS_ResolveStub.argtypes = [POINTER(JSContext),POINTER(JSObject),c_long]\n-\n-JS_ConvertStub = JSConvertOp(libsmjs.JS_ConvertStub)\n-#JS_ConvertStub.restype = JSBool\n-#JS_ConvertStub.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int,POINTER(jsval)]\n-\n-JS_FinalizeStub = JSFinalizeOp(libsmjs.JS_FinalizeStub)\n-#JS_FinalizeStub.restype = None\n-#JS_FinalizeStub.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_InitClass = libsmjs.JS_InitClass\n-JS_InitClass.restype = POINTER(JSObject)\n-JS_InitClass.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSObject),POINTER(JSClass),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_uint,POINTER(jsval),POINTER(jsval)),c_uint,POINTER(JSPropertySpec),POINTER(JSFunctionSpec),POINTER(JSPropertySpec),POINTER(JSFunctionSpec)]\n-\n-JS_GetClass = libsmjs.JS_GetClass\n-JS_GetClass.restype = POINTER(JSClass)\n-JS_GetClass.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-#JS_GetClass.argtypes = [POINTER(JSObject)]\n-\n-JS_InstanceOf = libsmjs.JS_InstanceOf\n-JS_InstanceOf.restype = JSBool\n-JS_InstanceOf.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSClass),POINTER(jsval)]\n-\n-JS_GetPrivate = libsmjs.JS_GetPrivate\n-JS_GetPrivate.restype = c_void_p\n-JS_GetPrivate.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_SetPrivate = libsmjs.JS_SetPrivate\n-JS_SetPrivate.restype = JSBool\n-JS_SetPrivate.argtypes = [POINTER(JSContext),POINTER(JSObject),c_void_p]\n-\n-JS_GetInstancePrivate = libsmjs.JS_GetInstancePrivate\n-JS_GetInstancePrivate.restype = c_void_p\n-JS_GetInstancePrivate.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSClass),POINTER(jsval)]\n-\n-JS_GetPrototype = libsmjs.JS_GetPrototype\n-JS_GetPrototype.restype = POINTER(JSObject)\n-JS_GetPrototype.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_SetPrototype = libsmjs.JS_SetPrototype\n-JS_SetPrototype.restype = JSBool\n-JS_SetPrototype.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSObject)]\n-\n-JS_GetParent = libsmjs.JS_GetParent\n-JS_GetParent.restype = POINTER(JSObject)\n-JS_GetParent.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_SetParent = libsmjs.JS_SetParent\n-JS_SetParent.restype = JSBool\n-JS_SetParent.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSObject)]\n-\n-JS_GetConstructor = libsmjs.JS_GetConstructor\n-JS_GetConstructor.restype = POINTER(JSObject)\n-JS_GetConstructor.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_GetObjectId = libsmjs.JS_GetObjectId\n-JS_GetObjectId.restype = JSBool\n-JS_GetObjectId.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jsid)]\n-\n-JS_NewObject = libsmjs.JS_NewObject\n-JS_NewObject.restype = POINTER(JSObject)\n-JS_NewObject.argtypes = [POINTER(JSContext),POINTER(JSClass),POINTER(JSObject),POINTER(JSObject)]\n-\n-JS_SealObject = libsmjs.JS_SealObject\n-JS_SealObject.restype = JSBool\n-JS_SealObject.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int]\n-\n-JS_ConstructObject = libsmjs.JS_ConstructObject\n-JS_ConstructObject.restype = POINTER(JSObject)\n-JS_ConstructObject.argtypes = [POINTER(JSContext),POINTER(JSClass),POINTER(JSObject),POINTER(JSObject)]\n-\n-JS_ConstructObjectWithArguments = libsmjs.JS_ConstructObjectWithArguments\n-JS_ConstructObjectWithArguments.restype = POINTER(JSObject)\n-JS_ConstructObjectWithArguments.argtypes = [POINTER(JSContext),POINTER(JSClass),POINTER(JSObject),POINTER(JSObject),c_uint,POINTER(jsval)]\n-\n-JS_DefineObject = libsmjs.JS_DefineObject\n-JS_DefineObject.restype = POINTER(JSObject)\n-JS_DefineObject.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(JSClass),POINTER(JSObject),c_uint]\n-\n-JS_DefineConstDoubles = libsmjs.JS_DefineConstDoubles\n-JS_DefineConstDoubles.restype = JSBool\n-JS_DefineConstDoubles.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSConstDoubleSpec)]\n-\n-JS_DefineProperties = libsmjs.JS_DefineProperties\n-JS_DefineProperties.restype = JSBool\n-JS_DefineProperties.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSPropertySpec)]\n-\n-JS_DefineProperty = libsmjs.JS_DefineProperty\n-JS_DefineProperty.restype = JSBool\n-#JS_DefineProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_long,CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),c_uint]\n-JS_DefineProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_long,c_void_p,c_void_p,c_uint]\n-\n-JS_GetPropertyAttributes = libsmjs.JS_GetPropertyAttributes\n-JS_GetPropertyAttributes.restype = JSBool\n-JS_GetPropertyAttributes.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(uintN),POINTER(JSBool)]\n-\n-JS_SetPropertyAttributes = libsmjs.JS_SetPropertyAttributes\n-JS_SetPropertyAttributes.restype = JSBool\n-JS_SetPropertyAttributes.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_uint,POINTER(JSBool)]\n-\n-JS_DefinePropertyWithTinyId = libsmjs.JS_DefinePropertyWithTinyId\n-JS_DefinePropertyWithTinyId.restype = JSBool\n-JS_DefinePropertyWithTinyId.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_char,c_long,CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),c_uint]\n-\n-JS_AliasProperty = libsmjs.JS_AliasProperty\n-JS_AliasProperty.restype = JSBool\n-JS_AliasProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_char_p]\n-\n-JS_LookupProperty = libsmjs.JS_LookupProperty\n-JS_LookupProperty.restype = JSBool\n-JS_LookupProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(jsval)]\n-\n-JS_GetProperty = libsmjs.JS_GetProperty\n-JS_GetProperty.restype = JSBool\n-JS_GetProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(jsval)]\n-\n-JS_SetProperty = libsmjs.JS_SetProperty\n-JS_SetProperty.restype = JSBool\n-JS_SetProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(jsval)]\n-\n-JS_DeleteProperty = libsmjs.JS_DeleteProperty\n-JS_DeleteProperty.restype = JSBool\n-JS_DeleteProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p]\n-\n-JS_DeleteProperty2 = libsmjs.JS_DeleteProperty2\n-JS_DeleteProperty2.restype = JSBool\n-JS_DeleteProperty2.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(jsval)]\n-\n-JS_DefineUCProperty = libsmjs.JS_DefineUCProperty\n-JS_DefineUCProperty.restype = JSBool\n-JS_DefineUCProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,c_long,CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),c_uint]\n-\n-JS_GetUCPropertyAttributes = libsmjs.JS_GetUCPropertyAttributes\n-JS_GetUCPropertyAttributes.restype = JSBool\n-JS_GetUCPropertyAttributes.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,POINTER(uintN),POINTER(JSBool)]\n-\n-JS_SetUCPropertyAttributes = libsmjs.JS_SetUCPropertyAttributes\n-JS_SetUCPropertyAttributes.restype = JSBool\n-JS_SetUCPropertyAttributes.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,c_uint,POINTER(JSBool)]\n-\n-JS_DefineUCPropertyWithTinyId = libsmjs.JS_DefineUCPropertyWithTinyId\n-JS_DefineUCPropertyWithTinyId.restype = JSBool\n-JS_DefineUCPropertyWithTinyId.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,c_char,c_long,CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,POINTER(jsval)),c_uint]\n-\n-JS_LookupUCProperty = libsmjs.JS_LookupUCProperty\n-JS_LookupUCProperty.restype = JSBool\n-JS_LookupUCProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,POINTER(jsval)]\n-\n-JS_GetUCProperty = libsmjs.JS_GetUCProperty\n-JS_GetUCProperty.restype = JSBool\n-JS_GetUCProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,POINTER(jsval)]\n-\n-JS_SetUCProperty = libsmjs.JS_SetUCProperty\n-JS_SetUCProperty.restype = JSBool\n-JS_SetUCProperty.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,POINTER(jsval)]\n-\n-JS_DeleteUCProperty2 = libsmjs.JS_DeleteUCProperty2\n-JS_DeleteUCProperty2.restype = JSBool\n-JS_DeleteUCProperty2.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,POINTER(jsval)]\n-\n-JS_NewArrayObject = libsmjs.JS_NewArrayObject\n-JS_NewArrayObject.restype = POINTER(JSObject)\n-JS_NewArrayObject.argtypes = [POINTER(JSContext),c_int,POINTER(jsval)]\n-\n-JS_IsArrayObject = libsmjs.JS_IsArrayObject\n-JS_IsArrayObject.restype = JSBool\n-JS_IsArrayObject.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_GetArrayLength = libsmjs.JS_GetArrayLength\n-JS_GetArrayLength.restype = JSBool\n-JS_GetArrayLength.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jsuint)]\n-\n-JS_SetArrayLength = libsmjs.JS_SetArrayLength\n-JS_SetArrayLength.restype = JSBool\n-JS_SetArrayLength.argtypes = [POINTER(JSContext),POINTER(JSObject),c_uint]\n-\n-JS_HasArrayLength = libsmjs.JS_HasArrayLength\n-JS_HasArrayLength.restype = JSBool\n-JS_HasArrayLength.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jsuint)]\n-\n-JS_DefineElement = libsmjs.JS_DefineElement\n-JS_DefineElement.restype = JSBool\n-#JS_DefineElement.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int,c_long,JSPropertyOp,JSPropertyOp,c_uint]\n-JS_DefineElement.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int,c_long,c_void_p,c_void_p,c_uint]\n-\n-JS_AliasElement = libsmjs.JS_AliasElement\n-JS_AliasElement.restype = JSBool\n-JS_AliasElement.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_int]\n-\n-JS_LookupElement = libsmjs.JS_LookupElement\n-JS_LookupElement.restype = JSBool\n-JS_LookupElement.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int,POINTER(jsval)]\n-\n-JS_GetElement = libsmjs.JS_GetElement\n-JS_GetElement.restype = JSBool\n-JS_GetElement.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int,POINTER(jsval)]\n-\n-JS_SetElement = libsmjs.JS_SetElement\n-JS_SetElement.restype = JSBool\n-JS_SetElement.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int,POINTER(jsval)]\n-\n-JS_DeleteElement = libsmjs.JS_DeleteElement\n-JS_DeleteElement.restype = JSBool\n-JS_DeleteElement.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int]\n-\n-JS_DeleteElement2 = libsmjs.JS_DeleteElement2\n-JS_DeleteElement2.restype = JSBool\n-JS_DeleteElement2.argtypes = [POINTER(JSContext),POINTER(JSObject),c_int,POINTER(jsval)]\n-\n-JS_ClearScope = libsmjs.JS_ClearScope\n-JS_ClearScope.restype = None\n-JS_ClearScope.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_Enumerate = libsmjs.JS_Enumerate\n-JS_Enumerate.restype = POINTER(JSIdArray)\n-JS_Enumerate.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_CheckAccess = libsmjs.JS_CheckAccess\n-JS_CheckAccess.restype = JSBool\n-JS_CheckAccess.argtypes = [POINTER(JSContext),POINTER(JSObject),c_long,c_int,POINTER(jsval),POINTER(uintN)]\n-\n-JS_SetCheckObjectAccessCallback = libsmjs.JS_SetCheckObjectAccessCallback\n-JS_SetCheckObjectAccessCallback.restype = JSCheckAccessOp\n-JS_SetCheckObjectAccessCallback.argtypes = [POINTER(JSRuntime),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_long,c_int,POINTER(jsval))]\n-\n-JS_GetReservedSlot = libsmjs.JS_GetReservedSlot\n-JS_GetReservedSlot.restype = JSBool\n-JS_GetReservedSlot.argtypes = [POINTER(JSContext),POINTER(JSObject),c_uint,POINTER(jsval)]\n-\n-JS_SetReservedSlot = libsmjs.JS_SetReservedSlot\n-JS_SetReservedSlot.restype = JSBool\n-JS_SetReservedSlot.argtypes = [POINTER(JSContext),POINTER(JSObject),c_uint,c_long]\n-\n-JS_SetPrincipalsTranscoder = libsmjs.JS_SetPrincipalsTranscoder\n-JS_SetPrincipalsTranscoder.restype = JSPrincipalsTranscoder\n-JS_SetPrincipalsTranscoder.argtypes = [POINTER(JSRuntime),CFUNCTYPE(JSBool,POINTER(JSXDRState),POINTER(POINTER(JSPrincipals)))]\n-\n-JS_SetObjectPrincipalsFinder = libsmjs.JS_SetObjectPrincipalsFinder\n-JS_SetObjectPrincipalsFinder.restype = JSObjectPrincipalsFinder\n-JS_SetObjectPrincipalsFinder.argtypes = [POINTER(JSContext),CFUNCTYPE(POINTER(JSPrincipals),POINTER(JSContext),POINTER(JSObject))]\n-\n-JS_NewFunction = libsmjs.JS_NewFunction\n-JS_NewFunction.restype = POINTER(JSFunction)\n-JS_NewFunction.argtypes = [POINTER(JSContext),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_uint,POINTER(jsval),POINTER(jsval)),c_uint,c_uint,POINTER(JSObject),c_char_p]\n-\n-JS_GetFunctionObject = libsmjs.JS_GetFunctionObject\n-JS_GetFunctionObject.restype = POINTER(JSObject)\n-JS_GetFunctionObject.argtypes = [POINTER(JSFunction)]\n-\n-JS_GetFunctionName = libsmjs.JS_GetFunctionName\n-JS_GetFunctionName.restype = c_char_p\n-JS_GetFunctionName.argtypes = [POINTER(JSFunction)]\n-\n-JS_GetFunctionId = libsmjs.JS_GetFunctionId\n-JS_GetFunctionId.restype = POINTER(JSString)\n-JS_GetFunctionId.argtypes = [POINTER(JSFunction)]\n-\n-JS_GetFunctionFlags = libsmjs.JS_GetFunctionFlags\n-JS_GetFunctionFlags.restype = uintN\n-JS_GetFunctionFlags.argtypes = [POINTER(JSFunction)]\n-\n-JS_ObjectIsFunction = libsmjs.JS_ObjectIsFunction\n-JS_ObjectIsFunction.restype = JSBool\n-JS_ObjectIsFunction.argtypes = [POINTER(JSContext),POINTER(JSObject)]\n-\n-JS_DefineFunctions = libsmjs.JS_DefineFunctions\n-JS_DefineFunctions.restype = JSBool\n-JS_DefineFunctions.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSFunctionSpec)]\n-\n-JS_DefineFunction = libsmjs.JS_DefineFunction\n-JS_DefineFunction.restype = POINTER(JSFunction)\n-JS_DefineFunction.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSObject),c_uint,POINTER(jsval),POINTER(jsval)),c_uint,c_uint]\n-\n-JS_CloneFunctionObject = libsmjs.JS_CloneFunctionObject\n-JS_CloneFunctionObject.restype = POINTER(JSObject)\n-JS_CloneFunctionObject.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSObject)]\n-\n-JS_BufferIsCompilableUnit = libsmjs.JS_BufferIsCompilableUnit\n-JS_BufferIsCompilableUnit.restype = JSBool\n-JS_BufferIsCompilableUnit.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_uint]\n-\n-JS_CompileScript = libsmjs.JS_CompileScript\n-JS_CompileScript.restype = POINTER(JSScript)\n-JS_CompileScript.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_uint,c_char_p,c_uint]\n-\n-JS_CompileScriptForPrincipals = libsmjs.JS_CompileScriptForPrincipals\n-JS_CompileScriptForPrincipals.restype = POINTER(JSScript)\n-JS_CompileScriptForPrincipals.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSPrincipals),c_char_p,c_uint,c_char_p,c_uint]\n-\n-JS_CompileUCScript = libsmjs.JS_CompileUCScript\n-JS_CompileUCScript.restype = POINTER(JSScript)\n-JS_CompileUCScript.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,c_char_p,c_uint]\n-\n-JS_CompileUCScriptForPrincipals = libsmjs.JS_CompileUCScriptForPrincipals\n-JS_CompileUCScriptForPrincipals.restype = POINTER(JSScript)\n-JS_CompileUCScriptForPrincipals.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSPrincipals),POINTER(jschar),c_uint,c_char_p,c_uint]\n-\n-JS_CompileFile = libsmjs.JS_CompileFile\n-JS_CompileFile.restype = POINTER(JSScript)\n-JS_CompileFile.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p]\n-\n-class _IO_marker(Structure):\n-\t_fields_ = [\n-\t\t('_next', c_void_p),\n-\t\t('_sbuf', POINTER(_IO_FILE)),\n-\t\t('_pos', c_int),\n-\t]\n-\n-t__off_t = c_long\n-\n-_IO_lock_t = None\n-\n-t__quad_t = c_longlong\n-\n-t__off64_t = t__quad_t\n-\n-class _IO_FILE(Structure):\n-\t_fields_ = [\n-\t\t('_flags', c_int),\n-\t\t('_IO_read_ptr', c_char_p),\n-\t\t('_IO_read_end', c_char_p),\n-\t\t('_IO_read_base', c_char_p),\n-\t\t('_IO_write_base', c_char_p),\n-\t\t('_IO_write_ptr', c_char_p),\n-\t\t('_IO_write_end', c_char_p),\n-\t\t('_IO_buf_base', c_char_p),\n-\t\t('_IO_buf_end', c_char_p),\n-\t\t('_IO_save_base', c_char_p),\n-\t\t('_IO_backup_base', c_char_p),\n-\t\t('_IO_save_end', c_char_p),\n-\t\t('_markers', POINTER(_IO_marker)),\n-\t\t('_chain', c_void_p),\n-\t\t('_fileno', c_int),\n-\t\t('_flags2', c_int),\n-\t\t('_old_offset', t__off_t),\n-\t\t('_cur_column', c_ushort),\n-\t\t('_vtable_offset', c_char),\n-\t\t('_shortbuf', c_char*1),\n-\t\t('_lock', POINTER(_IO_lock_t)),\n-\t\t('_offset', t__off64_t),\n-\t\t('__pad1', c_void_p),\n-\t\t('__pad2', c_void_p),\n-\t\t('_mode', c_int),\n-\t\t('_unused2', c_char*52),\n-\t]\n-\n-FILE = _IO_FILE\n-\n-JS_CompileFileHandle = libsmjs.JS_CompileFileHandle\n-JS_CompileFileHandle.restype = POINTER(JSScript)\n-JS_CompileFileHandle.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(FILE)]\n-\n-JS_CompileFileHandleForPrincipals = libsmjs.JS_CompileFileHandleForPrincipals\n-JS_CompileFileHandleForPrincipals.restype = POINTER(JSScript)\n-JS_CompileFileHandleForPrincipals.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,POINTER(FILE),POINTER(JSPrincipals)]\n-\n-JS_NewScriptObject = libsmjs.JS_NewScriptObject\n-JS_NewScriptObject.restype = POINTER(JSObject)\n-JS_NewScriptObject.argtypes = [POINTER(JSContext),POINTER(JSScript)]\n-\n-JS_GetScriptObject = libsmjs.JS_GetScriptObject\n-JS_GetScriptObject.restype = POINTER(JSObject)\n-JS_GetScriptObject.argtypes = [POINTER(JSScript)]\n-\n-JS_DestroyScript = libsmjs.JS_DestroyScript\n-JS_DestroyScript.restype = None\n-JS_DestroyScript.argtypes = [POINTER(JSContext),POINTER(JSScript)]\n-\n-JS_CompileFunction = libsmjs.JS_CompileFunction\n-JS_CompileFunction.restype = POINTER(JSFunction)\n-JS_CompileFunction.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_uint,POINTER(c_char_p),c_char_p,c_uint,c_char_p,c_uint]\n-\n-JS_CompileFunctionForPrincipals = libsmjs.JS_CompileFunctionForPrincipals\n-JS_CompileFunctionForPrincipals.restype = POINTER(JSFunction)\n-JS_CompileFunctionForPrincipals.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSPrincipals),c_char_p,c_uint,POINTER(c_char_p),c_char_p,c_uint,c_char_p,c_uint]\n-\n-JS_CompileUCFunction = libsmjs.JS_CompileUCFunction\n-JS_CompileUCFunction.restype = POINTER(JSFunction)\n-JS_CompileUCFunction.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_uint,POINTER(c_char_p),POINTER(jschar),c_uint,c_char_p,c_uint]\n-\n-JS_CompileUCFunctionForPrincipals = libsmjs.JS_CompileUCFunctionForPrincipals\n-JS_CompileUCFunctionForPrincipals.restype = POINTER(JSFunction)\n-JS_CompileUCFunctionForPrincipals.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSPrincipals),c_char_p,c_uint,POINTER(c_char_p),POINTER(jschar),c_uint,c_char_p,c_uint]\n-\n-JS_DecompileScript = libsmjs.JS_DecompileScript\n-JS_DecompileScript.restype = POINTER(JSString)\n-JS_DecompileScript.argtypes = [POINTER(JSContext),POINTER(JSScript),c_char_p,c_uint]\n-\n-JS_DecompileFunction = libsmjs.JS_DecompileFunction\n-JS_DecompileFunction.restype = POINTER(JSString)\n-JS_DecompileFunction.argtypes = [POINTER(JSContext),POINTER(JSFunction),c_uint]\n-\n-JS_DecompileFunctionBody = libsmjs.JS_DecompileFunctionBody\n-JS_DecompileFunctionBody.restype = POINTER(JSString)\n-JS_DecompileFunctionBody.argtypes = [POINTER(JSContext),POINTER(JSFunction),c_uint]\n-\n-JS_ExecuteScript = libsmjs.JS_ExecuteScript\n-JS_ExecuteScript.restype = JSBool\n-JS_ExecuteScript.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSScript),POINTER(jsval)]\n-\n-# enumeration JSExecPart\n-JSEXEC_PROLOG = 0\n-JSEXEC_MAIN = 1\n-\n-JSExecPart = c_int\n-\n-JS_ExecuteScriptPart = libsmjs.JS_ExecuteScriptPart\n-JS_ExecuteScriptPart.restype = JSBool\n-JS_ExecuteScriptPart.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSScript),c_int,POINTER(jsval)]\n-\n-JS_EvaluateScript = libsmjs.JS_EvaluateScript\n-JS_EvaluateScript.restype = JSBool\n-JS_EvaluateScript.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_uint,c_char_p,c_uint,POINTER(jsval)]\n-\n-JS_EvaluateScriptForPrincipals = libsmjs.JS_EvaluateScriptForPrincipals\n-JS_EvaluateScriptForPrincipals.restype = JSBool\n-JS_EvaluateScriptForPrincipals.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSPrincipals),c_char_p,c_uint,c_char_p,c_uint,POINTER(jsval)]\n-\n-JS_EvaluateUCScript = libsmjs.JS_EvaluateUCScript\n-JS_EvaluateUCScript.restype = JSBool\n-JS_EvaluateUCScript.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(jschar),c_uint,c_char_p,c_uint,POINTER(jsval)]\n-\n-JS_EvaluateUCScriptForPrincipals = libsmjs.JS_EvaluateUCScriptForPrincipals\n-JS_EvaluateUCScriptForPrincipals.restype = JSBool\n-JS_EvaluateUCScriptForPrincipals.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSPrincipals),POINTER(jschar),c_uint,c_char_p,c_uint,POINTER(jsval)]\n-\n-JS_CallFunction = libsmjs.JS_CallFunction\n-JS_CallFunction.restype = JSBool\n-JS_CallFunction.argtypes = [POINTER(JSContext),POINTER(JSObject),POINTER(JSFunction),c_uint,POINTER(jsval),POINTER(jsval)]\n-\n-JS_CallFunctionName = libsmjs.JS_CallFunctionName\n-JS_CallFunctionName.restype = JSBool\n-JS_CallFunctionName.argtypes = [POINTER(JSContext),POINTER(JSObject),c_char_p,c_uint,POINTER(jsval),POINTER(jsval)]\n-\n-JS_CallFunctionValue = libsmjs.JS_CallFunctionValue\n-JS_CallFunctionValue.restype = JSBool\n-JS_CallFunctionValue.argtypes = [POINTER(JSContext),POINTER(JSObject),c_long,c_uint,POINTER(jsval),POINTER(jsval)]\n-\n-JS_SetBranchCallback = libsmjs.JS_SetBranchCallback\n-JS_SetBranchCallback.restype = JSBranchCallback\n-JS_SetBranchCallback.argtypes = [POINTER(JSContext),CFUNCTYPE(JSBool,POINTER(JSContext),POINTER(JSScript))]\n-\n-JS_IsRunning = libsmjs.JS_IsRunning\n-JS_IsRunning.restype = JSBool\n-JS_IsRunning.argtypes = [POINTER(JSContext)]\n-\n-JS_IsConstructing = libsmjs.JS_IsConstructing\n-JS_IsConstructing.restype = JSBool\n-JS_IsConstructing.argtypes = [POINTER(JSContext)]\n-\n-JS_IsAssigning = libsmjs.JS_IsAssigning\n-JS_IsAssigning.restype = JSBool\n-JS_IsAssigning.argtypes = [POINTER(JSContext)]\n-\n-JS_SetCallReturnValue2 = libsmjs.JS_SetCallReturnValue2\n-JS_SetCallReturnValue2.restype = None\n-JS_SetCallReturnValue2.argtypes = [POINTER(JSContext),c_long]\n-\n-JS_NewString = libsmjs.JS_NewString\n-JS_NewString.restype = POINTER(JSString)\n-JS_NewString.argtypes = [POINTER(JSContext),c_char_p,c_uint]\n-\n-JS_NewStringCopyN = libsmjs.JS_NewStringCopyN\n-JS_NewStringCopyN.restype = POINTER(JSString)\n-JS_NewStringCopyN.argtypes = [POINTER(JSContext),c_char_p,c_uint]\n-\n-JS_NewStringCopyZ = libsmjs.JS_NewStringCopyZ\n-JS_NewStringCopyZ.restype = POINTER(JSString)\n-JS_NewStringCopyZ.argtypes = [POINTER(JSContext),c_char_p]\n-\n-JS_InternString = libsmjs.JS_InternString\n-JS_InternString.restype = POINTER(JSString)\n-JS_InternString.argtypes = [POINTER(JSContext),c_char_p]\n-\n-JS_NewUCString = libsmjs.JS_NewUCString\n-JS_NewUCString.restype = POINTER(JSString)\n-JS_NewUCString.argtypes = [POINTER(JSContext),POINTER(jschar),c_uint]\n-\n-JS_NewUCStringCopyN = libsmjs.JS_NewUCStringCopyN\n-JS_NewUCStringCopyN.restype = POINTER(JSString)\n-JS_NewUCStringCopyN.argtypes = [POINTER(JSContext),POINTER(jschar),c_uint]\n-\n-JS_NewUCStringCopyZ = libsmjs.JS_NewUCStringCopyZ\n-JS_NewUCStringCopyZ.restype = POINTER(JSString)\n-JS_NewUCStringCopyZ.argtypes = [POINTER(JSContext),POINTER(jschar)]\n-\n-JS_InternUCStringN = libsmjs.JS_InternUCStringN\n-JS_InternUCStringN.restype = POINTER(JSString)\n-JS_InternUCStringN.argtypes = [POINTER(JSContext),POINTER(jschar),c_uint]\n-\n-JS_InternUCString = libsmjs.JS_InternUCString\n-JS_InternUCString.restype = POINTER(JSString)\n-JS_InternUCString.argtypes = [POINTER(JSContext),POINTER(jschar)]\n-\n-JS_GetStringBytes = libsmjs.JS_GetStringBytes\n-JS_GetStringBytes.restype = c_char_p\n-JS_GetStringBytes.argtypes = [POINTER(JSString)]\n-\n-JS_GetStringChars = libsmjs.JS_GetStringChars\n-JS_GetStringChars.restype = POINTER(jschar)\n-JS_GetStringChars.argtypes = [POINTER(JSString)]\n-\n-JS_GetStringLength = libsmjs.JS_GetStringLength\n-JS_GetStringLength.restype = size_t\n-JS_GetStringLength.argtypes = [POINTER(JSString)]\n-\n-JS_CompareStrings = libsmjs.JS_CompareStrings\n-JS_CompareStrings.restype = intN\n-JS_CompareStrings.argtypes = [POINTER(JSString),POINTER(JSString)]\n-\n-JS_NewGrowableString = libsmjs.JS_NewGrowableString\n-JS_NewGrowableString.restype = POINTER(JSString)\n-JS_NewGrowableString.argtypes = [POINTER(JSContext),POINTER(jschar),c_uint]\n-\n-JS_NewDependentString = libsmjs.JS_NewDependentString\n-JS_NewDependentString.restype = POINTER(JSString)\n-JS_NewDependentString.argtypes = [POINTER(JSContext),POINTER(JSString),c_uint,c_uint]\n-\n-JS_ConcatStrings = libsmjs.JS_ConcatStrings\n-JS_ConcatStrings.restype = POINTER(JSString)\n-JS_ConcatStrings.argtypes = [POINTER(JSContext),POINTER(JSString),POINTER(JSString)]\n-\n-JS_UndependString = libsmjs.JS_UndependString\n-JS_UndependString.restype = POINTER(jschar)\n-JS_UndependString.argtypes = [POINTER(JSContext),POINTER(JSString)]\n-\n-JS_MakeStringImmutable = libsmjs.JS_MakeStringImmutable\n-JS_MakeStringImmutable.restype = JSBool\n-JS_MakeStringImmutable.argtypes = [POINTER(JSContext),POINTER(JSString)]\n-\n-JS_SetLocaleCallbacks = libsmjs.JS_SetLocaleCallbacks\n-JS_SetLocaleCallbacks.restype = None\n-JS_SetLocaleCallbacks.argtypes = [POINTER(JSContext),POINTER(JSLocaleCallbacks)]\n-\n-JS_GetLocaleCallbacks = libsmjs.JS_GetLocaleCallbacks\n-JS_GetLocaleCallbacks.restype = POINTER(JSLocaleCallbacks)\n-JS_GetLocaleCallbacks.argtypes = [POINTER(JSContext)]\n-\n-JS_ReportError = libsmjs.JS_ReportError\n-JS_ReportError.restype = None\n-JS_ReportError.argtypes = [POINTER(JSContext),c_char_p]\n-\n-JS_ReportErrorNumber = libsmjs.JS_ReportErrorNumber\n-JS_ReportErrorNumber.restype = None\n-JS_ReportErrorNumber.argtypes = [POINTER(JSContext),CFUNCTYPE(POINTER(JSErrorFormatString),c_void_p,c_char_p,c_uint),c_void_p,c_uint]\n-\n-JS_ReportErrorNumberUC = libsmjs.JS_ReportErrorNumberUC\n-JS_ReportErrorNumberUC.restype = None\n-JS_ReportErrorNumberUC.argtypes = [POINTER(JSContext),CFUNCTYPE(POINTER(JSErrorFormatString),c_void_p,c_char_p,c_uint),c_void_p,c_uint]\n-\n-JS_ReportWarning = libsmjs.JS_ReportWarning\n-JS_ReportWarning.restype = JSBool\n-JS_ReportWarning.argtypes = [POINTER(JSContext),c_char_p]\n-\n-JS_ReportErrorFlagsAndNumber = libsmjs.JS_ReportErrorFlagsAndNumber\n-JS_ReportErrorFlagsAndNumber.restype = JSBool\n-JS_ReportErrorFlagsAndNumber.argtypes = [POINTER(JSContext),c_uint,CFUNCTYPE(POINTER(JSErrorFormatString),c_void_p,c_char_p,c_uint),c_void_p,c_uint]\n-\n-JS_ReportErrorFlagsAndNumberUC = libsmjs.JS_ReportErrorFlagsAndNumberUC\n-JS_ReportErrorFlagsAndNumberUC.restype = JSBool\n-JS_ReportErrorFlagsAndNumberUC.argtypes = [POINTER(JSContext),c_uint,CFUNCTYPE(POINTER(JSErrorFormatString),c_void_p,c_char_p,c_uint),c_void_p,c_uint]\n-\n-JS_ReportOutOfMemory = libsmjs.JS_ReportOutOfMemory\n-JS_ReportOutOfMemory.restype = None\n-JS_ReportOutOfMemory.argtypes = [POINTER(JSContext)]\n-\n-JS_SetErrorReporter = libsmjs.JS_SetErrorReporter\n-JS_SetErrorReporter.restype = JSErrorReporter\n-JS_SetErrorReporter.argtypes = [POINTER(JSContext),CFUNCTYPE(None,POINTER(JSContext),c_char_p,POINTER(JSErrorReport))]\n-\n-JS_NewRegExpObject = libsmjs.JS_NewRegExpObject\n-JS_NewRegExpObject.restype = POINTER(JSObject)\n-JS_NewRegExpObject.argtypes = [POINTER(JSContext),c_char_p,c_uint,c_uint]\n-\n-JS_NewUCRegExpObject = libsmjs.JS_NewUCRegExpObject\n-JS_NewUCRegExpObject.restype = POINTER(JSObject)\n-JS_NewUCRegExpObject.argtypes = [POINTER(JSContext),POINTER(jschar),c_uint,c_uint]\n-\n-JS_SetRegExpInput = libsmjs.JS_SetRegExpInput\n-JS_SetRegExpInput.restype = None\n-JS_SetRegExpInput.argtypes = [POINTER(JSContext),POINTER(JSString),c_int]\n-\n-JS_ClearRegExpStatics = libsmjs.JS_ClearRegExpStatics\n-JS_ClearRegExpStatics.restype = None\n-JS_ClearRegExpStatics.argtypes = [POINTER(JSContext)]\n-\n-JS_ClearRegExpRoots = libsmjs.JS_ClearRegExpRoots\n-JS_ClearRegExpRoots.restype = None\n-JS_ClearRegExpRoots.argtypes = [POINTER(JSContext)]\n-\n-JS_IsExceptionPending = libsmjs.JS_IsExceptionPending\n-JS_IsExceptionPending.restype = JSBool\n-JS_IsExceptionPending.argtypes = [POINTER(JSContext)]\n-\n-JS_GetPendingException = libsmjs.JS_GetPendingException\n-JS_GetPendingException.restype = JSBool\n-JS_GetPendingException.argtypes = [POINTER(JSContext),POINTER(jsval)]\n-\n-JS_SetPendingException = libsmjs.JS_SetPendingException\n-JS_SetPendingException.restype = None\n-JS_SetPendingException.argtypes = [POINTER(JSContext),c_long]\n-\n-JS_ClearPendingException = libsmjs.JS_ClearPendingException\n-JS_ClearPendingException.restype = None\n-JS_ClearPendingException.argtypes = [POINTER(JSContext)]\n-\n-JS_SaveExceptionState = libsmjs.JS_SaveExceptionState\n-JS_SaveExceptionState.restype = POINTER(JSExceptionState)\n-JS_SaveExceptionState.argtypes = [POINTER(JSContext)]\n-\n-JS_RestoreExceptionState = libsmjs.JS_RestoreExceptionState\n-JS_RestoreExceptionState.restype = None\n-JS_RestoreExceptionState.argtypes = [POINTER(JSContext),POINTER(JSExceptionState)]\n-\n-JS_DropExceptionState = libsmjs.JS_DropExceptionState\n-JS_DropExceptionState.restype = None\n-JS_DropExceptionState.argtypes = [POINTER(JSContext),POINTER(JSExceptionState)]\n-\n-JS_ErrorFromException = libsmjs.JS_ErrorFromException\n-JS_ErrorFromException.restype = POINTER(JSErrorReport)\n-JS_ErrorFromException.argtypes = [POINTER(JSContext),c_long]\n-\n-JSACC_TYPEMASK = (JSACC_WRITE - 1)\n-JSLL_MAXINT = JSLL_MaxInt()\n-JSLL_MININT = JSLL_MinInt()\n-JSLL_ZERO = JSLL_Zero()\n-\n-_tabs = 0\n-\n-def _log_call(func, *args, **kargs):\n-\tglobal _tabs\n-\t_tabs += 1\n-\ttry:\n-\t\tprint '\\t'*_tabs + 'CALL {',func,args,kargs,'}'\n-\t\tr = func(*args,**kargs)\n-\t\tprint '\\t'*_tabs + \"RETURNED\",r\n-\tfinally:\n-\t\t_tabs += 0\n-\treturn r\n-\n-def log_call(func):\n-\treturn lambda *args, **kargs: _log_call(func,*args,**kargs)\n-\n-class JSError(Exception):\n-\tpass\n-\n-def dict_from_JShash(context, hash):\n-\t#~ cdef JSIdArray *prop_arr\n-\t#~ cdef int i\n-\t#~ cdef jsval jskey\n-\t#~ cdef jsval jsvalue\n-\t#~ cdef JSObject *obj\n-\n-\t\n-\tcx = context.cx\n-\n-\tprop_arr = JS_Enumerate(cx, hash).contents\n-\n-\tjskey = jsval()\n-\tjsvalue = jsval()\n-\n-\td = {}\n-\t\n-\tfor i in range(prop_arr.length):\n-\t\tvector = cast(addressof(prop_arr.vector),POINTER(c_long))\n-\t\tJS_IdToValue(cx, (vector)[i], byref(jskey))\n-\n-\t\tif JSVAL_IS_STRING(jskey):\n-\t\t\tkey = JS_GetStringBytes(JSVAL_TO_STRING(jskey))\n-\t\t\tJS_GetProperty(cx, hash, key, byref(jsvalue))\n-\t\telif JSVAL_IS_INT(jskey):\n-\t\t\tkey = JSVAL_TO_INT(jskey)\n-\t\t\tJS_GetElement(cx, hash, key, byref(jsvalue))\n-\t\telse:\n-\t\t\tassert False, \"can't happen\"\n-\n-\t\tif JSVAL_IS_PRIMITIVE(jsvalue):\n-\t\t\td[key] = Py_from_JSprimitive(jsvalue)\n-\t\telse:\n-\t\t\tif JSVAL_IS_OBJECT(jsvalue):\n-\t\t\t\tobj = JSVAL_TO_OBJECT(jsvalue)\n-\t\t\t\tif JS_IsArrayObject(cx, obj):\n-\t\t\t\t\td[key] = list_from_JSarray(context, obj)\n-\t\t\t\telse:\n-\t\t\t\t\td[key] = dict_from_JShash(context, obj)\n-\n-\tJS_DestroyIdArray(cx, prop_arr)\n-\n-\treturn d\n-\n-def list_from_JSarray(context, array):\n-\t#~ cdef int nr_elems, i\n-\t#~ cdef jsval elem\n-\t#~ cdef JSObject *jsobj\n-\n-\tnr_elems = c_uint()\t\n-\telem = jsval()\n-\n-\tcx = context.cx\n-\tJS_GetArrayLength(cx, array, byref(nr_elems))\n-\tnr_elems = nr_elems.value\n-\n-\tl = [None]*nr_elems\n-\n-\tfor i in range(nr_elems):\n-\t\tJS_GetElement(cx, array, i, byref(elem))\n-\n-\t\tif JSVAL_IS_PRIMITIVE(elem):\n-\t\t\tl[i] = Py_from_JSprimitive(elem)\n-\t\telif JSVAL_IS_OBJECT(elem):\n-\t\t\tjsobj = JSVAL_TO_OBJECT(elem)\n-\t\t\tif JS_IsArrayObject(cx, jsobj):\n-\t\t\t\tl[i] = list_from_JSarray(context, jsobj)\n-\t\t\telse:\n-\t\t\t\tl[i] = dict_from_JShash(context, jsobj)\n-\n-\treturn l\n-\n-def Py_from_JSprimitive(v):\n-\t# JS_NULL is null, JS_VOID is undefined\n-\tif JSVAL_IS_NULL(v) or JSVAL_IS_VOID(v):\n-\t\treturn None\n-\telif JSVAL_IS_INT(v):\n-\t\treturn JSVAL_TO_INT(v)\n-\telif JSVAL_IS_DOUBLE(v):\n-\t\treturn JSVAL_TO_DOUBLE(v)[0]\n-\telif JSVAL_IS_STRING(v):\n-\t\treturn JS_GetStringBytes(JSVAL_TO_STRING(v))\n-\telif JSVAL_IS_BOOLEAN(v):\n-\t\treturn bool(JSVAL_TO_BOOLEAN(v))\n-\telse:\n-\t\traise SystemError(\"unknown primitive type\")\n-\n-def Py_from_JS(context, v):\n-\t# Convert JavaScript value to equivalent Python value.\n-\t#~ cdef JSObject *object\n-\t#~ cdef ProxyObject proxy_obj\n-\t#~ cdef Context context\n-\n-\tif JSVAL_IS_PRIMITIVE(v):\n-\t\treturn Py_from_JSprimitive(v)\n-\telse:\n-\t\tif JSVAL_IS_OBJECT(v):\n-\t\t\tobject = JSVAL_TO_OBJECT(v)\n-\n-\t\t\tif JS_IsArrayObject(context.cx, object):\n-\t\t\t\treturn list_from_JSarray(context, object)\n-\t\t\telse:\n-\t\t\t\ttry:\n-\t\t\t\t\tproxy_obj = context.get_object(object)\n-\t\t\t\texcept ValueError:\n-\t\t\t\t\treturn dict_from_JShash(context, object)\n-\t\t\t\telse:\n-\t\t\t\t\treturn proxy_obj.obj\n-\n-def isinteger(x):\n-\treturn bool(compat_isinstance(x, (IntType, LongType)))\n-\n-def isfloat(x):\n-\treturn bool(compat_isinstance(x, FloatType))\n-\n-def isstringlike(x):\n-\treturn bool(compat_isinstance(x, StringTypes))\n-\n-def issequence(x):\n-\treturn bool(compat_isinstance(x, (ListType, TupleType)))\n-\n-def ismapping(x):\n-\treturn bool(compat_isinstance(x, DictType))\n-\n-def js_classname(pobj):\n-\t# class or instance?\n-\ttry:\n-\t\tklass = pobj.__class__\n-\texcept AttributeError:\n-\t\tklass = pobj\n-\n-\ttry:\n-\t\tname = klass.js_name\n-\texcept AttributeError:\n-\t\tname = klass.__name__\n-\n-\tif not isstringlike(name):\n-\t\traise AttributeError(\"%s js_name attribute is not string-like\" % klass)\n-\treturn name\n-\n-def JS_from_Py(context, parent, py_obj):\n-\t# Convert Python value to equivalent JavaScript value.\n-\t#~ cdef JSObject *jsobj\n-\t#~ cdef JSString *s\n-\n-\t#~ cdef jsval elem\n-\t#~ cdef jsval rval\n-\n-\t#~ cdef int i\n-\t#~ cdef int nr_elems\n-\t#~ cdef jsval *elems\n-\t#~ cdef JSObject *arr_obj\n-\n-\t#~ cdef Context context\n-\t#~ cdef ProxyClass proxy_class\n-\t#~ cdef ProxyObject proxy_obj\n-\n-\trval = jsval()\n-\tcx = context.cx\n-\n-\tif py_obj is None:\n-\t\treturn JSVAL_VOID\n-\telif isinteger(py_obj):\n-\t\treturn INT_TO_JSVAL(py_obj)\n-\telif isfloat(py_obj):\n-\t\td = JS_NewDouble(cx, py_obj)\n-\t\tif d == None:\n-\t\t\traise SystemError(\"can't create new double\")\n-\t\treturn DOUBLE_TO_JSVAL(d)\n-\telif isstringlike(py_obj):\n-\t\ts = JS_NewStringCopyN(cx, py_obj, len(py_obj))\n-\t\tif s == None:\n-\t\t\traise SystemError(\"can't create new string\")\n-\t\treturn STRING_TO_JSVAL(s)\n-\telif ismapping(py_obj):\n-\t\tjsobj = JS_NewObject(cx, None, None, None)\n-\n-\t\tif jsobj == None:\n-\t\t\traise SystemError(\"can't create new object\")\n-\t\telse:\n-\t\t\t# assign properties\n-\t\t\tfor key, value in py_obj.iteritems():\n-\t\t\t\telem = JS_from_Py(context, parent, value)\n-\t\t\t\tok = JS_DefineProperty(cx, jsobj, key, elem, None, None, JSPROP_ENUMERATE)\n-\t\t\t\tif not ok:\n-\t\t\t\t\traise SystemError(\"can't define property\")\n-\n-\t\t\treturn OBJECT_TO_JSVAL(jsobj)\n-\n-\telif issequence(py_obj):\n-\t\tarr_obj = JS_NewArrayObject(cx, 0, None)\n-\n-\t\tif arr_obj == None:\n-\t\t\traise SystemError(\"can't create new array object\")\n-\t\telse:\n-\t\t\tfor i in range(len(py_obj)):\n-\t\t\t\telem = JS_from_Py(context, parent, py_obj[i])\n-\t\t\t\tok = JS_DefineElement(cx, arr_obj, i, elem, None, None, JSPROP_ENUMERATE)\n-\t\t\t\tif not ok:\n-\t\t\t\t\traise SystemError(\"can't define element\")\n-\n-\t\treturn OBJECT_TO_JSVAL(arr_obj)\n-\telif compat_isinstance(py_obj, MethodType):\n-\t\t# XXX leak? -- calls JS_DefineFunction every time a method\n-\t\t#  is called\n-\t\treturn context.new_method(py_obj)\n-\telif compat_isinstance(py_obj, (FunctionType, LambdaType)):\n-\t\t# XXX implement me?\n-\t\treturn JSVAL_VOID\n-\telse:\n-\t\t# If we get here, py_obj is probably a Python class or a class instance.\n-\t\t# XXXX could problems be caused if some weird object such a module or\n-\t\t#  regexp or code object were, eg., returned by a Python function?\n-\t\t\n-\t\t# is object already bound to a JS proxy?...\n-\t\ttry:\n-\t\t\tproxy_obj = context.get_object_from_py(py_obj)\n-\t\texcept ValueError:\n-\t\t\t# ...no, so create and register a new JS proxy\n-\t\t\tproxy_class = context.get_class(js_classname(py_obj))\n-\t\t\t# XXXX I have *no idea* if using globj as the proto here is\n-\t\t\t#  correct!  If I don't put globj in here, JS does a get_property\n-\t\t\t#  on an object that hasn't been registered with the Context --\n-\t\t\t#  dunno why.\t\t\t\n-\t\t\tjsobj = proxy_class.new_object(parent=parent,py_obj = py_obj) # JS_NewObject(cx, proxy_class.jsc, context.globj, parent)\n-\t\t\tif jsobj == None:\n-\t\t\t\traise SystemError(\"couldn't look up or create new object\")\t\t\t\n-\t\telse:\n-\t\t\t# ...yes, use existing proxy\n-\t\t\tjsobj = proxy_obj.jsobj\n-\t\treturn OBJECT_TO_JSVAL(jsobj)\n-\n-class Runtime:\n-\t\n-\tdef __init__(self, memsize = (8*1024*1024), max_context = 32):\n-\n-\t\tself.rt = JS_Init(memsize)\n-\t\tself._cxs = []\n-                self._max_context = max_context\n-\n-\tdef __dealloc__(self):\n-\t\tJS_Finish(self.rt)\n-\t\t\n-\tdef new_context(self, globj = None, stacksize = 8192):\n-\t\tcontext = Context(globj, self, stacksize)\n-\t\tself._cxs.append(context)\n-                if len(self._cxs) > self._max_context:\n-                    old_cx = self._cxs.pop(0)\n-                    old_cx.alive = False\n-                    JS_DestroyContext(old_cx.cx)\n-\t\tcontext.initialize()\n-\t\treturn context\n-\n-import sys, inspect\n-\n-class ProxyObject:\n-\tdef __init__(self, obj, jsobj = None):\n-\t\tself.obj = obj\n-\t\tself.jsobj = jsobj\n-\n-def compat_isinstance(obj, tuple_or_obj):\n-\tif type(tuple_or_obj) == TupleType:\n-\t\tfor otherobj in tuple_or_obj:\n-\t\t\tif isinstance(obj, otherobj):\n-\t\t\t\treturn True\n-\t\treturn False\n-\treturn isinstance(obj, tuple_or_obj)\n-\n-from types import *\n-\n-class ProxyClass:\n-\tdef __init__(self, context, classobject, bind_constructor, is_global, flags):\n-\t\tself.context = context\n-\t\tname = js_classname(classobject)\n-\t\tself.classobject = classobject\n-\t\tself.jsclass = JSClass()\n-\t\tself.jsclass.name = name\n-\t\tself.jsclass.flags = flags\n-\t\tself.jsclass.addProperty = JS_PropertyStub\n-\t\tself.jsclass.delProperty = JS_PropertyStub\n-\t\tself.jsclass.getProperty = self.context._get_property\n-\t\tself.jsclass.setProperty = self.context._set_property\n-\t\tself.jsclass.enumerate = JS_EnumerateStub\n-\t\tif is_global:\n-\t\t\tself._resolve_global = JSResolveOp(self.resolve_global)\n-\t\t\tself.jsclass.resolve = self._resolve_global\n-\t\telse:\n-\t\t\tself.jsclass.resolve = JS_ResolveStub\n-\t\tself.jsclass.convert = JS_ConvertStub\n-\t\tself.jsclass.finalize = JS_FinalizeStub\n-\t\t\n-\t\tif bind_constructor:\n-\t\t\tself._constructor_cb = JSNative(self.constructor_cb)\n-\t\t\tres = JS_InitClass(context.cx, context._global, None, self.jsclass, self._constructor_cb, 0, None, None, None, None)\n-\t\t\tassert res, \"couldn't initialise JavaScript proxy class\"\n-\t\t\t\n-\tdef resolve_global(self, cx, obj, id):\n-\t\t#~ cdef Context context\n-\t\t#~ cdef ProxyObject proxy_obj\n-\t\t#~ cdef object thing\n-\t\t#~ cdef object key\n-\n-\t\ttry:\t\t\t\n-\t\t\tproxy_obj = self.context.get_object(obj)\n-\t\t\tthing = proxy_obj.obj\n-\t\t\tkey = Py_from_JS(self.context, id)\n-\t\t\tif type(key) == str and hasattr(thing, key):\n-\t\t\t\tattr = getattr(thing, key)\n-\t\t\t\tif compat_isinstance(attr, MethodType):\n-\t\t\t\t\tself.context.bind_callable(key, attr)\n-\t\t\t\telse:\n-\t\t\t\t\tself.context.bind_attribute(key, thing, key)\n-\t\t\treturn JS_TRUE\n-\t\texcept:\n-\t\t\treturn self.context.report()\n-\t\treturn JS_FALSE\n-\t\t\t\t\n-\tdef constructor_cb(self, cx, obj, argc, argv, rval):\n-\t\t#~ cdef ProxyClass proxy_class\n-\t\t#~ cdef Context context\n-\t\t#~ cdef char *fname\n-\t\t#~ cdef JSFunction *func\n-\t\t#~ cdef int arg\n-\t\t#~ cdef ProxyObject object\n-\t\tfunc = JS_ValueToFunction(cx, argv[-2])\n-\t\tif not func:\n-\t\t\tmsg = \"couldn't get JS constructor\"\n-\t\t\tJS_ReportError(cx, msg)\n-\t\t\treturn JS_FALSE\n-\t\tfname = JS_GetFunctionName(func)\n-\t\ttry:\n-\t\t\targs = []\n-\t\t\tfor arg in range(argc):\n-\t\t\t\targs.append(Py_from_JS(cx, argv[arg]))\n-\t\t\tif hasattr(self.classobject, \"js_constructor\"):\n-\t\t\t\tpy_rval = self.classobject.js_constructor[0](self.context, *args)\n-\t\t\telse:\n-\t\t\t\tpy_rval = self.classobject(*args)\n-\t\t\tself.context.register_object(py_rval, obj)\n-\t\texcept:\n-\t\t\tself.context.report()\n-\n-\t\treturn JS_TRUE\n-\n-\tdef new_object(self, parent = None, py_obj = None):\n-\t\tproto = self.context._global\n-\t\tjsobj = JS_NewObject(self.context.cx, byref(self.jsclass), proto, parent)\n-\t\tif py_obj:\n-\t\t\tself.context.register_object(py_obj, jsobj)\n-\t\treturn jsobj\n-\n-stderr = sys.stderr\n-\n-class DestroyedContext(Exception):\n-    def __str__(self):\n-        return \"Context Memory has been released previously by Runtime Class sanity checks.\"\n-\n-class Context:\n-\tcx = None\n-\t\n-\tclass global_class:\n-\t\tjs_name = 'global'\n-\t\t\n-\t_global = None\n-\t\n-\tdef __init__(self, globj, runtime, stacksize):\n-\t\tself.cx = JS_NewContext(runtime.rt, stacksize)\n-                self.alive = True\n-\t\tself.classes = []\n-\t\tself.objects = []\n-\t\tself.funcs = []\n-\t\t#self.runtime = runtime\n-\t\tself._get_property = JSPropertyOp(self.get_property)\n-\t\tself._set_property = JSPropertyOp(self.set_property)\n-\t\tself._bound_method_cb = JSNative(self.bound_method_cb)\n-\t\tif not globj:\n-\t\t\tglobj = self.global_class()\n-\t\tglobal_class = self.bind_class(globj.__class__, bind_constructor = False, is_global = True)\n-\t\tself._global = global_class.new_object(py_obj = globj)\n-\t\tassert self._global\n-\t\t\n-\tdef get_object_from_py(self, py_obj):\n-\t\tfor proxy_obj in self.objects:\n-\t\t\tif proxy_obj.obj == py_obj:\n-\t\t\t\treturn proxy_obj\n-\t\traise ValueError, py_obj\n-\t\t\n-\tdef get_object(self, jsobj):\n-\t\tfor proxy_obj in self.objects:\n-\t\t\tif addressof(proxy_obj.jsobj.contents) == addressof(jsobj.contents):\n-\t\t\t\treturn proxy_obj\n-\t\traise ValueError, jsobj.contents\n-\t\t\n-\tdef get_class(self, name):\n-\t\t#cdef ProxyClass cl\n-\t\tfor cl in self.classes:\n-\t\t\tif cl.jsclass.name == name:\n-\t\t\t\treturn cl\n-\t\traise ValueError(\"no class named '%s' is bound\" % name)\n-\t\t\n-\tdef get_global(self, name):\n-\t\t\"\"\"Only works with undotted names.  Use eval_script for anything\n-\t\telse.\"\"\"\n-\t\t# XXXX probably best to get rid of this -- eval_script does the job\n-\t\t#cdef jsval jsv\n-\t\tif not isstringlike(name):\n-\t\t\traise TypeError(\"name must be string-like\")\n-\t\tjsv = jsval()\n-\t\tif not JS_GetProperty(self.cx, self._global, name, byref(jsv)):\n-\t\t\traise SystemError(\"can't get JavaScript property\")\n-\t\tval = Py_from_JS(self, jsv)\n-\t\tif val is None:\n-\t\t\traise ValueError(\"no global named '%s'\" % name)\n-\t\t\t##         # XXXX why does this hang??\n-\t\t\t##             raise AttributeError(\"%s instance has no attribute '%s'\" %\n-\t\t\t##                                  (self.__class__.__name__, name))\n-\t\telse:\n-\t\t\treturn val\n-\n-\tdef register_object(self, obj, jsobj):\t\t\n-\t\tself.objects.append(ProxyObject(obj, jsobj))\n-\t\t\n-\tdef report(self):\n-\t\timport traceback\n-\t\tself.report_error(traceback.format_exc())\n-\t\t\n-\tdef report_error(self, msg, *args):\n-\t\tJS_ReportError(self.cx, msg, *args)\n-\t\t\n-\tdef error_reporter(self, cx, text, er):\n-\t\tprint >> stderr, text\n-\t\t\n-\t#def __del__(self):\n-\t\t#JS_DestroyContext(self.cx)\n-\n-\tdef new_method(self, py_method):\n-\t\t#~ cdef JSFunction *method\n-\t\t#~ cdef JSObject *method_obj\n-\n-\t\t# Method (hence its func_name attribute) will go away only when the\n-\t\t# context is GC'd by Python, because the Python function object is\n-\t\t# stored in Context extension type instance.  XXX erm, no it isn't:\n-\t\t# the class instance is kept in the ProxyClass, but the instance's\n-\t\t# function is not.  Hmm...  XXX also, JS objects exist in runtime,\n-\t\t# not in context!\n-\t\tmethod = JS_NewFunction(self.cx, self._bound_method_cb, 0, 0, None, py_method.func_name)\n-\t\tmethod_obj = JS_GetFunctionObject(method)\n-\t\treturn OBJECT_TO_JSVAL(method_obj)\n-\t\t\n-\tdef get_property(self, cx, obj, id, vp):\t\t\n-\t\t#~ cdef Context context\n-\t\t#~ cdef ProxyObject proxy_obj\n-\t\t#~ cdef object thing\n-\t\t#~ cdef object key\n-\n-\t\ttry:\n-\t\t\tkey = Py_from_JS(self, id)\n-\t\t\tproxy_obj = self.get_object(obj)\n-\t\t\tthing = proxy_obj.obj\n-\t\t\tif type(key) == IntType:\n-\t\t\t\ttry:\n-\t\t\t\t\tattr = thing[key]\n-\t\t\t\texcept:\n-\t\t\t\t\tpass\n-\t\t\t\telse:\n-\t\t\t\t\tvp[0] = JS_from_Py(self, obj, attr)\n-\t\t\telif type(key) == StringType:\n-\t\t\t\tif not key.startswith(\"_\"):\n-\t\t\t\t\ttry:\n-\t\t\t\t\t\tattr = getattr(thing, key)\n-\t\t\t\t\texcept:\n-\t\t\t\t\t\tpass\n-\t\t\t\t\telse:\n-\t\t\t\t\t\tvp[0] = JS_from_Py(self, obj, attr)\n-\t\t\telse:\n-\t\t\t\t#in original version: assert False\n-                                return JS_FALSE\n-\t\t\treturn JS_TRUE\n-\t\texcept:\n-\t\t\tself.report()\n-\t\treturn JS_FALSE\n-\t\t\n-\tdef set_property(self, cx, obj, id, vp):\n-\t\t#~ cdef Context context\n-\t\t#~ cdef ProxyObject proxy_obj\n-\t\t#~ cdef object thing\n-\t\t#~ cdef object key\n-\t\t#~ cdef object value\n-\t\t#~ cdef object attr\n-\n-\t\ttry:\n-\t\t\tproxy_obj = self.get_object(obj)\n-\n-\t\t\tthing = proxy_obj.obj\n-\t\t\tkey = Py_from_JS(self, id)\n-\t\t\tvalue = Py_from_JS(self, vp[0])\n-\t\t\tif type(key) == IntType:\n-\t\t\t\ttry:\n-\t\t\t\t\tthing[key] = value\n-\t\t\t\texcept:\n-\t\t\t\t\tpass\n-\t\t\telif type(key) == StringType:\n-\t\t\t\tif hasattr(thing, key) and not key.startswith(\"_\"):\n-\t\t\t\t\tattr = getattr(thing, key)\n-\t\t\t\t\tif not callable(attr):\n-\t\t\t\t\t\ttry:\n-\t\t\t\t\t\t\tsetattr(thing, key, value)\n-\t\t\t\t\t\texcept:\n-\t\t\t\t\t\t\tpass\n-\t\t\telse:\n-\t\t\t\tassert False\n-\t\t\treturn JS_TRUE\n-\t\texcept:\n-\t\t\treturn self.report()\n-\n-\t\treturn JS_FALSE\n-\t\t\n-\tdef bound_method_cb(self, cx, obj, argc, argv, rval):\n-\t\t#~ cdef Context context\n-\t\t#~ cdef JSFunction *func\n-\t\t#~ cdef int arg\n-\t\t#~ cdef JSClass *jsclass\n-\t\t#~ cdef ProxyObject proxy_obj\n-\n-\t\tfunc = JS_ValueToFunction(cx, argv[-2])\n-\t\tmethod_name = JS_GetFunctionName(func)\n-\t\tjsclass = JS_GetClass(self.cx, obj)\n-\n-\t\ttry:\n-\t\t\tproxy_obj = self.get_object(obj)\n-\n-\t\t\tpy_args = []\n-\t\t\tfor arg in range(argc):\n-\t\t\t\tpy_args.append(Py_from_JS(self, argv[arg]))\n-\t\t\tmeth = getattr(proxy_obj.obj, method_name)\n-\t\t\tpy_rval = meth(*py_args)\n-\t\t\trval[0] = JS_from_Py(self, obj, py_rval)\n-\t\texcept:\n-\t\t\treturn self.report()\n-\t\treturn JS_TRUE\n-\n-\tdef get_callback_fn(self, name):\n-\t\tfor cbname, fn in self.funcs:\n-\t\t\tif cbname == name:\n-\t\t\t\treturn fn\n-\t\traise ValueError(\"no callback function named '%s' is bound\" % name)\n-\t\t\t\n-\tdef function_cb(self, cx, obj, argc, argv, rval):\n-\t\t#~ cdef JSFunction *jsfunc\n-\t\t#~ cdef int i\n-\t\t#~ cdef char *name\n-\n-\t\t# XXX is this argv[-2] documented anywhere??\n-\t\tjsfunc = JS_ValueToFunction(cx, argv[-2])\n-\t\tif not jsfunc:\n-\t\t\treturn JS_FALSE\n-\t\tname = JS_GetFunctionName(jsfunc)\n-\t\tif not name:\n-\t\t\treturn JS_FALSE\n-\n-\t\ttry:\n-\t\t\tcallback = self.get_callback_fn(name)\n-\t\t\targs = []\n-\t\t\tfor i in range(argc):\n-\t\t\t\targs.append(Py_from_JS(self, argv[i]))\n-\t\t\tpyrval = callback(*args)\n-\n-\t\t\t# XXX shouldn't NULL be the JSObject if it's a Python class instance?\n-\t\t\trval[0] = JS_from_Py(self, None, pyrval)\n-\t\texcept:\n-\t\t\treturn self.report()\n-\n-\t\treturn JS_TRUE\n-\t\t\n-\tdef bind_callable(self, name, function):\n-\t\tif not callable(function):\n-\t\t\traise ValueError(\"not a callable object\")\n-\t\tself._function_cb = JSNative(self.function_cb)\n-\t\tself.funcs.append((name, function))\n-\t\tJS_DefineFunction(self.cx, self._global, name, self._function_cb, 0, 0)\n-\n-\tdef bind_attribute(self, name, obj, attr_name):\n-\t\t#cdef jsval initial_value\n-\t\tif not isstringlike(name):\n-\t\t\traise TypeError(\"name must be string-like\")\n-\t\tif not isstringlike(attr_name):\n-\t\t\traise TypeError(\"name must be string-like\")\n-\t\tinitial_value = JS_from_Py(self, None, getattr(obj, name))\n-\t\tJS_DefineProperty(self.cx, self._global, name, initial_value, cast(self._get_property,c_void_p), cast(self._set_property,c_void_p), 0)\n-\n-\tdef bind_class(self, classobject, bind_constructor = True, is_global = False, flags = 0):\n-\t\tif not inspect.isclass(classobject): raise TypeError(\"klass must be a class\")\n-\t\tif not isinteger(flags): raise TypeError(\"flags must be an integer\")\n-\t\t\n-\t\tproxy_class = ProxyClass(self, classobject, bind_constructor, is_global, flags)\n-\t\tself.classes.append(proxy_class)\n-\t\treturn proxy_class\n-\t\t\n-\tdef bind_object(self, name, obj):\n-\t\t#~ cdef JSObject *jsobj\n-\t\t#~ cdef ProxyClass proxy_class\n-\n-\t\tif not isstringlike(name):\n-\t\t\traise TypeError(\"name must be string-like\")\n-\n-\t\tproxy_class = self.get_class(js_classname(obj))\n-\t\tjsobj = JS_DefineObject(self.cx, self._global, name, proxy_class.jsclass, None, JSPROP_READONLY)\n-\t\tif jsobj:\n-\t\t\tself.register_object(obj, jsobj)\n-\t\telse:\n-\t\t\traise ValueError(\"failed to bind Python object %s\" % obj)\n-\n-\tdef initialize(self):\n-\t\tJS_InitStandardClasses(self.cx, self._global)\n-\t\tself._error_reporter = JSErrorReporter(self.error_reporter)\n-\t\tJS_SetErrorReporter(self.cx, self._error_reporter)\n-\t\t\t\n-\tdef eval_script(self, script):\n-\t\tif not isstringlike(script):\n-\t\t\traise TypeError(\"name must be string-like\")\n-\t\tif not self.alive:\n-                    raise DestroyedContext\n-\t\trval = jsval()\n-\t\tif not JS_EvaluateScript(self.cx, self._global, script, len(script), 'Python', 0, byref(rval)):\n-\t\t\traise JSError, \"Failed to execute script.\"\n-\t\t\n-\t\tretval = Py_from_JS(self, rval)\n-\t\tJS_MaybeGC(self.cx)\n-\t\treturn retval\n-\n-if __name__ == '__main__':\n-\trt = Runtime()\n-\tcx = rt.new_context()\n-\n-\tclass foo:\n-\t\tdef test(self):\n-\t\t\treturn 1.0\n-\n-\tcx.bind_class(foo, bind_constructor=True)\n-\tf = cx.eval_script(\"\"\"var f = new foo();\n-\tf.test(); // script return value\n-\t\"\"\")\n-\tprint f\n\n\nQuestion: Does this commit introduce technical debt? Answer yes or no."}], "max_tokens": 1, "temperature": 0}}
